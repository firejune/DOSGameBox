// var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}
var ENVIRONMENT_IS_NODE = false; // typeof process === "object" && typeof require === "function";
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
if (ENVIRONMENT_IS_NODE) {
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    if (!ret && filename !== nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function readBinary(filename) {
    return Module['read'](filename, true);
  };
  Module['load'] = function load(f) {
    globalEval(read(f));
  };
  if (process['argv'].length > 1) {
    Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
  } else {
    Module['thisProgram'] = "unknown-program";
  }
  Module['arguments'] = process['argv'].slice(2);
  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }
  process['on']('uncaughtException', (function(ex) {
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  }));
} else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr !== 'undefined') Module['printErr'] = printErr;
  if (typeof read !== 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() {
      throw "no read() available (jsc?)";
    };
  }
  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };
  if (typeof scriptArgs !== 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments !== 'undefined') {
    Module['arguments'] = arguments;
  }
  this['Module'] = Module;
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest;
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (typeof arguments !== 'undefined') {
    Module['arguments'] = arguments;
  }
  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = TRY_USE_DUMP && typeof dump !== 'undefined' ? (function(x) {
      dump(x);
    }) : (function(x) {});
  }
  if (ENVIRONMENT_IS_WEB) {
    window['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
} else {
  throw "Unknown runtime environment. Where are we?";
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = (function() {});
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = "./this.program";
}
Module.print = Module['print'];
Module.printErr = Module['printErr'];
Module['preRun'] = [];
Module['postRun'] = [];
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}

var Runtime = {
  setTempRet0: (function(value) {
    tempRet0 = value;
  }),
  getTempRet0: (function() {
    return tempRet0;
  }),
  stackSave: (function() {
    return STACKTOP;
  }),
  stackRestore: (function(stackTop) {
    STACKTOP = stackTop;
  }),
  getNativeTypeSize: (function(type) {
    switch (type) {
      case 'i1':
      case 'i8':
        return 1;
      case 'i16':
        return 2;
      case 'i32':
        return 4;
      case 'i64':
        return 8;
      case 'float':
        return 4;
      case 'double':
        return 8;
      default:
        {
          if (type[type.length - 1] === '*') {
            return Runtime.QUANTUM_SIZE;
          } else if (type[0] === 'i') {
            var bits = parseInt(type.substr(1));
            assert(bits % 8 === 0);
            return bits / 8;
          } else {
            return 0;
          }
        }
    }
  }),
  getNativeFieldSize: (function(type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  }),
  STACK_ALIGN: 16,
  getAlignSize: (function(type, size, vararg) {
    if (!vararg && (type === 'i64' || type === 'double')) return 8;
    if (!type) return Math.min(size, 8);
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  }),
  dynCall: (function(sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  }),
  functionPointers: [],
  addFunction: (function(func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2 * (1 + i);
      }
    }
    throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
  }),
  removeFunction: (function(index) {
    Runtime.functionPointers[(index - 2) / 2] = null;
  }),
  getAsmConst: (function(code, numArgs) {
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i);
    }
    var source = Pointer_stringify(code);
    if (source[0] === '"') {
      if (source.indexOf('"', 1) === source.length - 1) {
        source = source.substr(1, source.length - 2);
      } else {
        abort('invalid EM_ASM input |' + source + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    try {
      var evalled = eval('(function(Module, FS) { return function(' + args.join(',') + '){ ' + source + ' } })')(Module, typeof FS !== 'undefined' ? FS : null);
    } catch (e) {
      Module.printErr('error in executing inline EM_ASM code: ' + e + ' on: \n\n' + source + '\n\nwith args |' + args + '| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)');
      throw e;
    }
    return Runtime.asmConstCache[code] = evalled;
  }),
  warnOnce: (function(text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  }),
  funcWrappers: {},
  getFuncWrapper: (function(func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  }),
  getCompilerSetting: (function(name) {
    throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
  }),
  stackAlloc: (function(size) {
    var ret = STACKTOP;
    STACKTOP = STACKTOP + size | 0;
    STACKTOP = STACKTOP + 15 & -16;
    return ret;
  }),
  staticAlloc: (function(size) {
    var ret = STATICTOP;
    STATICTOP = STATICTOP + size | 0;
    STATICTOP = STATICTOP + 15 & -16;
    return ret;
  }),
  dynamicAlloc: (function(size) {
    var ret = DYNAMICTOP;
    DYNAMICTOP = DYNAMICTOP + size | 0;
    DYNAMICTOP = DYNAMICTOP + 15 & -16;
    if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();
    return ret;
  }),
  alignMemory: (function(size, quantum) {
    var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);
    return ret;
  }),
  makeBigInt: (function(low, high, unsigned) {
    var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * +4294967296 : +(low >>> 0) + +(high | 0) * +4294967296;
    return ret;
  }),
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
};
Module['Runtime'] = Runtime;
var __THREW__ = 0;
var ABORT = false;
var EXITSTATUS = 0;
var undef = 0;
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;

function getCFunc(ident) {
  var func = Module['_' + ident];
  if (!func) {
    try {
      func = eval('_' + ident);
    } catch (e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
var cwrap, ccall;
((function() {
  var JSfuncs = {
    'stackSave': (function() {
      Runtime.stackSave();
    }),
    'stackRestore': (function() {
      Runtime.stackRestore();
    }),
    'arrayToC': (function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    }),
    'stringToC': (function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) {
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    })
  };
  var toC = {
    'string': JSfuncs['stringToC'],
    'array': JSfuncs['arrayToC']
  };
  ccall = function ccallFunc(ident, returnType, argTypes, args) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) Runtime.stackRestore(stack);
    return ret;
  };
  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;

  function parseJSFunc(jsfunc) {
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {
      arguments: parsed[0],
      body: parsed[1],
      returnValue: parsed[2]
    };
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    var numericArgs = argTypes.every((function(type) {
      return type === "number";
    }));
    var numericRet = returnType !== 'string';
    if (numericRet && numericArgs) {
      return cfunc;
    }
    var argNames = argTypes.map((function(x, i) {
      return '$' + i;
    }));
    var funcstr = '(function(' + argNames.join(',') + ') {';
    var nargs = argTypes.length;
    if (!numericArgs) {
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i],
          type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC'];
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ";";
      }
    }
    var cfuncname = parseJSFunc((function() {
      return cfunc;
    })).returnValue;
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) {
      var strgfy = parseJSFunc((function() {
        return Pointer_stringify;
      })).returnValue;
      funcstr += 'ret = ' + strgfy + "(ret);";
    }
    if (!numericArgs) {
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ";";
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
}))();
Module['cwrap'] = cwrap;
Module['ccall'] = ccall;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length - 1) === '*') type = 'i32';
  switch (type) {
    case 'i1':
      HEAP8[ptr >> 0] = value;
      break;
    case 'i8':
      HEAP8[ptr >> 0] = value;
      break;
    case 'i16':
      HEAP16[ptr >> 1] = value;
      break;
    case 'i32':
      HEAP32[ptr >> 2] = value;
      break;
    case 'i64':
      tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
      break;
    case 'float':
      HEAPF32[ptr >> 2] = value;
      break;
    case 'double':
      HEAPF64[ptr >> 3] = value;
      break;
    default:
      abort('invalid type for setValue: ' + type);
  }
}
Module['setValue'] = setValue;

function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length - 1) === '*') type = 'i32';
  switch (type) {
    case 'i1':
      return HEAP8[ptr >> 0];
    case 'i8':
      return HEAP8[ptr >> 0];
    case 'i16':
      return HEAP16[ptr >> 1];
    case 'i32':
      return HEAP32[ptr >> 2];
    case 'i64':
      return HEAP32[ptr >> 2];
    case 'float':
      return HEAPF32[ptr >> 2];
    case 'double':
      return HEAPF64[ptr >> 3];
    default:
      abort('invalid type for setValue: ' + type);
  }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0;
var ALLOC_STACK = 1;
var ALLOC_STATIC = 2;
var ALLOC_DYNAMIC = 3;
var ALLOC_NONE = 4;
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator === ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret,
      stop;
    assert((ret & 3) === 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[ptr >> 2] = 0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[ptr++ >> 0] = 0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0,
    type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    if (type === 'i64') type = 'i32';
    setValue(ret + i, curr, type);
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, length) {
  if (length === 0 || !ptr) return '';
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[ptr + i >> 0];
    hasUtf |= t;
    if (t === 0 && !length) break;
    i++;
    if (length && i === length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (hasUtf < 128) {
    var MAX_CHUNK = 1024;
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[ptr++ >> 0];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;
  var str = '';
  while (1) {
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 128)) {
      str += String.fromCharCode(u0);
      continue;
    }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 224) === 192) {
      str += String.fromCharCode((u0 & 31) << 6 | u1);
      continue;
    }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 240) === 224) {
      u0 = (u0 & 15) << 12 | u1 << 6 | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 248) === 240) {
        u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 252) === 248) {
          u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
        }
      }
    }
    if (u0 < 65536) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 65536;
      str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) return 0;
  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1;
  for (var i = 0; i < str.length; ++i) {
    var u = str.charCodeAt(i);
    if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
    if (u <= 127) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 2047) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 192 | u >> 6;
      outU8Array[outIdx++] = 128 | u & 63;
    } else if (u <= 65535) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 224 | u >> 12;
      outU8Array[outIdx++] = 128 | u >> 6 & 63;
      outU8Array[outIdx++] = 128 | u & 63;
    } else if (u <= 2097151) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 240 | u >> 18;
      outU8Array[outIdx++] = 128 | u >> 12 & 63;
      outU8Array[outIdx++] = 128 | u >> 6 & 63;
      outU8Array[outIdx++] = 128 | u & 63;
    } else if (u <= 67108863) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 248 | u >> 24;
      outU8Array[outIdx++] = 128 | u >> 18 & 63;
      outU8Array[outIdx++] = 128 | u >> 12 & 63;
      outU8Array[outIdx++] = 128 | u >> 6 & 63;
      outU8Array[outIdx++] = 128 | u & 63;
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 252 | u >> 30;
      outU8Array[outIdx++] = 128 | u >> 24 & 63;
      outU8Array[outIdx++] = 128 | u >> 18 & 63;
      outU8Array[outIdx++] = 128 | u >> 12 & 63;
      outU8Array[outIdx++] = 128 | u >> 6 & 63;
      outU8Array[outIdx++] = 128 | u & 63;
    }
  }
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    var u = str.charCodeAt(i);
    if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
    if (u <= 127) {
      ++len;
    } else if (u <= 2047) {
      len += 2;
    } else if (u <= 65535) {
      len += 3;
    } else if (u <= 2097151) {
      len += 4;
    } else if (u <= 67108863) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

function UTF16ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var codeUnit = HEAP16[ptr + i * 2 >> 1];
    if (codeUnit === 0) return str;
    ++i;
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 2147483647;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2;
  var startPtr = outPtr;
  var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    var codeUnit = str.charCodeAt(i);
    HEAP16[outPtr >> 1] = codeUnit;
    outPtr += 2;
  }
  HEAP16[outPtr >> 1] = 0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

function lengthBytesUTF16(str) {
  return str.length * 2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var utf32 = HEAP32[ptr + i * 4 >> 2];
    if (utf32 === 0) return str;
    ++i;
    if (utf32 >= 65536) {
      var ch = utf32 - 65536;
      str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 2147483647;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 55296 && codeUnit <= 57343) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;
    }
    HEAP32[outPtr >> 2] = codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  HEAP32[outPtr >> 2] = 0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 55296 && codeUnit <= 57343) ++i;
    len += 4;
  }
  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
    } catch (e) {} finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;

  function dump(x) {
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print(pre + '^');
  }

  function parseNested() {
    i++;
    if (func[i] === 'K') i++;
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') {
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next + 1;
        continue;
      }
      if (func[i] === 'C') {
        parts.push(parts[parts.length - 1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) {
        i--;
        break;
      }
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++;
    return parts;
  }

  function parse(rawList, limit, allowVoid) {
    limit = limit || Infinity;
    var ret = '',
      list = [];

    function flushList() {
      return '(' + list.join(', ') + ")";
    }
    var name;
    if (func[i] === 'N') {
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      if (func[i] === 'K' || first && func[i] === 'L') i++;
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + ">";
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P':
            list.push(parse(true, 1, true)[0] + '*');
            break;
          case 'R':
            list.push(parse(true, 1, true)[0] + '&');
            break;
          case 'L':
            {
              i++;
              var end = func.indexOf('E', i);
              var size = end - i;list.push(func.substr(i, size));i += size + 2;
              break;
            }
          case 'A':
            {
              var size = parseInt(func.substr(i));i += size.toString().length;
              if (func[i] !== '_') throw '?';i++;list.push(parse(true, 1, true)[0] + ' [' + size + ']');
              break;
            }
          case 'E':
            break paramLoop;
          default:
            ret += '?' + c;
            break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = [];
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    if (func === 'Object._main' || func === '_main') {
      return "main()";
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func;
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n':
        return 'operator new()';
      case 'd':
        return "operator delete()";
    }
    parsed = parse();
  } catch (e) {
    parsed += "?";
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, (function(x) {
    var y = demangle(x);
    return x === y ? x : x + ' [' + y + "]";
  }));
}

function jsStackTrace() {
  var err = new Error;
  if (!err.stack) {
    try {
      throw new Error(0);
    } catch (e) {
      err = e;
    }
    if (!err.stack) {
      return "(no stack trace available)";
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;
var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  return x + 4095 & -4096;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0,
  STATICTOP = 0,
  staticSealed = false;
var STACK_BASE = 0,
  STACKTOP = 0,
  STACK_MAX = 0;
var DYNAMIC_BASE = 0,
  DYNAMICTOP = 0;

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 134217728;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
var totalMemory = 64 * 1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {
  if (totalMemory < 16 * 1024 * 1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16 * 1024 * 1024;
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec');
  TOTAL_MEMORY = totalMemory;
}
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1))['subarray'] && !!(new Int32Array(1))['set'], 'JS engine does not provide full typed array support');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while (callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback === 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATPRERUN__ = [];
var __ATINIT__ = [];
var __ATMAIN__ = [];
var __ATEXIT__ = [];
var __ATPOSTRUN__ = [];
var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  if (Module['preRun']) {
    if (typeof Module['preRun'] === 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  if (Module['postRun']) {
    if (typeof Module['postRun'] === 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 255) {
      chr &= 255;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[buffer + i >> 0] = chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[buffer++ >> 0] = array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[buffer++ >> 0] = str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[buffer >> 0] = 0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2 * Math.abs(1 << bits - 1) + value : Math.pow(2, bits) + value;
}

function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << bits - 1) : Math.pow(2, bits - 1);
  if (value >= half && (bits <= 32 || value > half)) {
    value = -2 * half + value;
  }
  return value;
}
if (!Math['imul'] || Math['imul'](4294967295, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah = a >>> 16;
  var al = a & 65535;
  var bh = b >>> 16;
  var bl = b & 65535;
  return al * bl + (ah * bl + al * bh << 16) | 0;
};
Math.imul = Math['imul'];
if (!Math['clz32']) Math['clz32'] = (function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & 1 << 31 - i) return i;
  }
  return 32;
});
Math.clz32 = Math['clz32'];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null;

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies === 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback();
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module['preloadedImages'] = {};
Module['preloadedAudios'] = {};
var memoryInitializer = null;
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 30042320;
__ATINIT__.push({
  func: (function() {
    __GLOBAL__sub_I_drives_cpp();
  })
}, {
  func: (function() {
    __GLOBAL__sub_I_dos_memory_cpp();
  })
}, {
  func: (function() {
    __GLOBAL__sub_I_dos_misc_cpp();
  })
}, {
  func: (function() {
    __GLOBAL__sub_I_shell_misc_cpp();
  })
}, {
  func: (function() {
    __GLOBAL__sub_I_shell_cpp();
  })
}, {
  func: (function() {
    __GLOBAL__sub_I_programs_cpp();
  })
}, {
  func: (function() {
    __GLOBAL__sub_I_messages_cpp();
  })
}, {
  func: (function() {
    __GLOBAL__sub_I_setup_cpp();
  })
}, {
  func: (function() {
    __GLOBAL__sub_I_sdl_mapper_cpp();
  })
}, {
  func: (function() {
    __GLOBAL__sub_I_cpu_cpp();
  })
}, {
  func: (function() {
    __GLOBAL__sub_I_vga_memory_cpp();
  })
}, {
  func: (function() {
    __GLOBAL__sub_I_hardware_cpp();
  })
}, {
  func: (function() {
    __GLOBAL__sub_I_iostream_cpp();
  })
});
allocate([97, 114, 99, 104, 105, 118, 101, 46, 122, 105, 112, 0, 0, 0, 0, 0, 101, 120, 116, 114, 97, 99, 116, 45, 122, 105, 112, 58, 32, 117, 110, 97, 98, 108, 101, 32, 116, 111, 32, 99, 114, 101, 97, 116, 101, 32, 96, 97, 114, 99, 104, 105, 118, 101, 46, 122, 105, 112, 96, 10, 0, 0, 0, 0, 101, 120, 116, 114, 97, 99, 116, 45, 122, 105, 112, 58, 32, 99, 97, 110, 39, 116, 32, 111, 112, 101, 110, 32, 122, 105, 112, 32, 97, 114, 99, 104, 105, 118, 101, 32, 39, 97, 114, 99, 104, 105, 118, 101, 46, 122, 105, 112, 39, 58, 32, 37, 115, 10, 0, 0, 101, 120, 116, 114, 97, 99, 116, 105, 110, 103, 58, 32, 39, 37, 115, 39, 44, 32, 0, 0, 0, 0, 0, 0, 115, 105, 122, 101, 58, 32, 37, 108, 108, 117, 44, 32, 0, 0, 0, 0, 109, 116, 105, 109, 101, 58, 32, 37, 117, 10, 0, 0, 0, 0, 0, 0, 98, 111, 101, 115, 101, 44, 32, 98, 111, 101, 115, 101, 10, 0, 0, 0, 70, 105, 108, 101, 91, 37, 115, 93, 32, 76, 105, 110, 101, 91, 37, 100, 93, 10, 0, 0, 0, 0, 0, 0, 47, 104, 111, 109, 101, 47, 99, 97, 105, 105, 105, 121, 99, 117, 107, 47, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 47, 101, 109, 45, 100, 111, 115, 98, 111, 120, 47, 106, 115, 45, 100, 111, 115, 47, 97, 112, 105, 47, 101, 120, 116, 114, 97, 99, 116, 46, 99, 0, 0, 0, 0, 0, 0, 0, 101, 120, 116, 114, 97, 99, 116, 45, 122, 105, 112, 58, 32, 99, 97, 110, 39, 116, 32, 99, 108, 111, 115, 101, 32, 122, 105, 112, 32, 39, 97, 114, 99, 104, 105, 118, 101, 46, 122, 105, 112, 39, 10, 0, 0, 0, 0, 0, 101, 120, 116, 114, 97, 99, 116, 45, 122, 105, 112, 58, 32, 117, 110, 97, 98, 108, 101, 32, 116, 111, 32, 100, 101, 108, 101, 116, 101, 32, 39, 97, 114, 99, 104, 105, 118, 101, 46, 122, 105, 112, 39, 10, 0, 0, 0, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 11, 0, 13, 0, 15, 0, 17, 0, 19, 0, 23, 0, 27, 0, 31, 0, 35, 0, 43, 0, 51, 0, 59, 0, 67, 0, 83, 0, 99, 0, 115, 0, 131, 0, 163, 0, 195, 0, 227, 0, 2, 1, 0, 0, 0, 0, 0, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 17, 0, 17, 0, 17, 0, 17, 0, 18, 0, 18, 0, 18, 0, 18, 0, 19, 0, 19, 0, 19, 0, 19, 0, 20, 0, 20, 0, 20, 0, 20, 0, 21, 0, 21, 0, 21, 0, 21, 0, 16, 0, 72, 0, 78, 0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 7, 0, 9, 0, 13, 0, 17, 0, 25, 0, 33, 0, 49, 0, 65, 0, 97, 0, 129, 0, 193, 0, 1, 1, 129, 1, 1, 2, 1, 3, 1, 4, 1, 6, 1, 8, 1, 12, 1, 16, 1, 24, 1, 32, 1, 48, 1, 64, 1, 96, 0, 0, 0, 0, 16, 0, 16, 0, 16, 0, 16, 0, 17, 0, 17, 0, 18, 0, 18, 0, 19, 0, 19, 0, 20, 0, 20, 0, 21, 0, 21, 0, 22, 0, 22, 0, 23, 0, 23, 0, 24, 0, 24, 0, 25, 0, 25, 0, 26, 0, 26, 0, 27, 0, 27, 0, 28, 0, 28, 0, 29, 0, 29, 0, 64, 0, 64, 0, 0, 1, 2, 3, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 16, 17, 18, 18, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 200, 5, 0, 0, 192, 10, 0, 0, 1, 1, 0, 0, 30, 1, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 72, 10, 0, 0, 176, 11, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 12, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 12, 0, 8, 0, 140, 0, 8, 0, 76, 0, 8, 0, 204, 0, 8, 0, 44, 0, 8, 0, 172, 0, 8, 0, 108, 0, 8, 0, 236, 0, 8, 0, 28, 0, 8, 0, 156, 0, 8, 0, 92, 0, 8, 0, 220, 0, 8, 0, 60, 0, 8, 0, 188, 0, 8, 0, 124, 0, 8, 0, 252, 0, 8, 0, 2, 0, 8, 0, 130, 0, 8, 0, 66, 0, 8, 0, 194, 0, 8, 0, 34, 0, 8, 0, 162, 0, 8, 0, 98, 0, 8, 0, 226, 0, 8, 0, 18, 0, 8, 0, 146, 0, 8, 0, 82, 0, 8, 0, 210, 0, 8, 0, 50, 0, 8, 0, 178, 0, 8, 0, 114, 0, 8, 0, 242, 0, 8, 0, 10, 0, 8, 0, 138, 0, 8, 0, 74, 0, 8, 0, 202, 0, 8, 0, 42, 0, 8, 0, 170, 0, 8, 0, 106, 0, 8, 0, 234, 0, 8, 0, 26, 0, 8, 0, 154, 0, 8, 0, 90, 0, 8, 0, 218, 0, 8, 0, 58, 0, 8, 0, 186, 0, 8, 0, 122, 0, 8, 0, 250, 0, 8, 0, 6, 0, 8, 0, 134, 0, 8, 0, 70, 0, 8, 0, 198, 0, 8, 0, 38, 0, 8, 0, 166, 0, 8, 0, 102, 0, 8, 0, 230, 0, 8, 0, 22, 0, 8, 0, 150, 0, 8, 0, 86, 0, 8, 0, 214, 0, 8, 0, 54, 0, 8, 0, 182, 0, 8, 0, 118, 0, 8, 0, 246, 0, 8, 0, 14, 0, 8, 0, 142, 0, 8, 0, 78, 0, 8, 0, 206, 0, 8, 0, 46, 0, 8, 0, 174, 0, 8, 0, 110, 0, 8, 0, 238, 0, 8, 0, 30, 0, 8, 0, 158, 0, 8, 0, 94, 0, 8, 0, 222, 0, 8, 0, 62, 0, 8, 0, 190, 0, 8, 0, 126, 0, 8, 0, 254, 0, 8, 0, 1, 0, 8, 0, 129, 0, 8, 0, 65, 0, 8, 0, 193, 0, 8, 0, 33, 0, 8, 0, 161, 0, 8, 0, 97, 0, 8, 0, 225, 0, 8, 0, 17, 0, 8, 0, 145, 0, 8, 0, 81, 0, 8, 0, 209, 0, 8, 0, 49, 0, 8, 0, 177, 0, 8, 0, 113, 0, 8, 0, 241, 0, 8, 0, 9, 0, 8, 0, 137, 0, 8, 0, 73, 0, 8, 0, 201, 0, 8, 0, 41, 0, 8, 0, 169, 0, 8, 0, 105, 0, 8, 0, 233, 0, 8, 0, 25, 0, 8, 0, 153, 0, 8, 0, 89, 0, 8, 0, 217, 0, 8, 0, 57, 0, 8, 0, 185, 0, 8, 0, 121, 0, 8, 0, 249, 0, 8, 0, 5, 0, 8, 0, 133, 0, 8, 0, 69, 0, 8, 0, 197, 0, 8, 0, 37, 0, 8, 0, 165, 0, 8, 0, 101, 0, 8, 0, 229, 0, 8, 0, 21, 0, 8, 0, 149, 0, 8, 0, 85, 0, 8, 0, 213, 0, 8, 0, 53, 0, 8, 0, 181, 0, 8, 0, 117, 0, 8, 0, 245, 0, 8, 0, 13, 0, 8, 0, 141, 0, 8, 0, 77, 0, 8, 0, 205, 0, 8, 0, 45, 0, 8, 0, 173, 0, 8, 0, 109, 0, 8, 0, 237, 0, 8, 0, 29, 0, 8, 0, 157, 0, 8, 0, 93, 0, 8, 0, 221, 0, 8, 0, 61, 0, 8, 0, 189, 0, 8, 0, 125, 0, 8, 0, 253, 0, 8, 0, 19, 0, 9, 0, 19, 1, 9, 0, 147, 0, 9, 0, 147, 1, 9, 0, 83, 0, 9, 0, 83, 1, 9, 0, 211, 0, 9, 0, 211, 1, 9, 0, 51, 0, 9, 0, 51, 1, 9, 0, 179, 0, 9, 0, 179, 1, 9, 0, 115, 0, 9, 0, 115, 1, 9, 0, 243, 0, 9, 0, 243, 1, 9, 0, 11, 0, 9, 0, 11, 1, 9, 0, 139, 0, 9, 0, 139, 1, 9, 0, 75, 0, 9, 0, 75, 1, 9, 0, 203, 0, 9, 0, 203, 1, 9, 0, 43, 0, 9, 0, 43, 1, 9, 0, 171, 0, 9, 0, 171, 1, 9, 0, 107, 0, 9, 0, 107, 1, 9, 0, 235, 0, 9, 0, 235, 1, 9, 0, 27, 0, 9, 0, 27, 1, 9, 0, 155, 0, 9, 0, 155, 1, 9, 0, 91, 0, 9, 0, 91, 1, 9, 0, 219, 0, 9, 0, 219, 1, 9, 0, 59, 0, 9, 0, 59, 1, 9, 0, 187, 0, 9, 0, 187, 1, 9, 0, 123, 0, 9, 0, 123, 1, 9, 0, 251, 0, 9, 0, 251, 1, 9, 0, 7, 0, 9, 0, 7, 1, 9, 0, 135, 0, 9, 0, 135, 1, 9, 0, 71, 0, 9, 0, 71, 1, 9, 0, 199, 0, 9, 0, 199, 1, 9, 0, 39, 0, 9, 0, 39, 1, 9, 0, 167, 0, 9, 0, 167, 1, 9, 0, 103, 0, 9, 0, 103, 1, 9, 0, 231, 0, 9, 0, 231, 1, 9, 0, 23, 0, 9, 0, 23, 1, 9, 0, 151, 0, 9, 0, 151, 1, 9, 0, 87, 0, 9, 0, 87, 1, 9, 0, 215, 0, 9, 0, 215, 1, 9, 0, 55, 0, 9, 0, 55, 1, 9, 0, 183, 0, 9, 0, 183, 1, 9, 0, 119, 0, 9, 0, 119, 1, 9, 0, 247, 0, 9, 0, 247, 1, 9, 0, 15, 0, 9, 0, 15, 1, 9, 0, 143, 0, 9, 0, 143, 1, 9, 0, 79, 0, 9, 0, 79, 1, 9, 0, 207, 0, 9, 0, 207, 1, 9, 0, 47, 0, 9, 0, 47, 1, 9, 0, 175, 0, 9, 0, 175, 1, 9, 0, 111, 0, 9, 0, 111, 1, 9, 0, 239, 0, 9, 0, 239, 1, 9, 0, 31, 0, 9, 0, 31, 1, 9, 0, 159, 0, 9, 0, 159, 1, 9, 0, 95, 0, 9, 0, 95, 1, 9, 0, 223, 0, 9, 0, 223, 1, 9, 0, 63, 0, 9, 0, 63, 1, 9, 0, 191, 0, 9, 0, 191, 1, 9, 0, 127, 0, 9, 0, 127, 1, 9, 0, 255, 0, 9, 0, 255, 1, 9, 0, 0, 0, 7, 0, 64, 0, 7, 0, 32, 0, 7, 0, 96, 0, 7, 0, 16, 0, 7, 0, 80, 0, 7, 0, 48, 0, 7, 0, 112, 0, 7, 0, 8, 0, 7, 0, 72, 0, 7, 0, 40, 0, 7, 0, 104, 0, 7, 0, 24, 0, 7, 0, 88, 0, 7, 0, 56, 0, 7, 0, 120, 0, 7, 0, 4, 0, 7, 0, 68, 0, 7, 0, 36, 0, 7, 0, 100, 0, 7, 0, 20, 0, 7, 0, 84, 0, 7, 0, 52, 0, 7, 0, 116, 0, 7, 0, 3, 0, 8, 0, 131, 0, 8, 0, 67, 0, 8, 0, 195, 0, 8, 0, 35, 0, 8, 0, 163, 0, 8, 0, 99, 0, 8, 0, 227, 0, 8, 0, 0, 0, 5, 0, 16, 0, 5, 0, 8, 0, 5, 0, 24, 0, 5, 0, 4, 0, 5, 0, 20, 0, 5, 0, 12, 0, 5, 0, 28, 0, 5, 0, 2, 0, 5, 0, 18, 0, 5, 0, 10, 0, 5, 0, 26, 0, 5, 0, 6, 0, 5, 0, 22, 0, 5, 0, 14, 0, 5, 0, 30, 0, 5, 0, 1, 0, 5, 0, 17, 0, 5, 0, 9, 0, 5, 0, 25, 0, 5, 0, 5, 0, 5, 0, 21, 0, 5, 0, 13, 0, 5, 0, 29, 0, 5, 0, 3, 0, 5, 0, 19, 0, 5, 0, 11, 0, 5, 0, 27, 0, 5, 0, 7, 0, 5, 0, 23, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 10, 0, 0, 0, 12, 0, 0, 0, 14, 0, 0, 0, 16, 0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 28, 0, 0, 0, 32, 0, 0, 0, 40, 0, 0, 0, 48, 0, 0, 0, 56, 0, 0, 0, 64, 0, 0, 0, 80, 0, 0, 0, 96, 0, 0, 0, 112, 0, 0, 0, 128, 0, 0, 0, 160, 0, 0, 0, 192, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 6, 0, 0, 0, 8, 0, 0, 0, 12, 0, 0, 0, 16, 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 48, 0, 0, 0, 64, 0, 0, 0, 96, 0, 0, 0, 128, 0, 0, 0, 192, 0, 0, 0, 0, 1, 0, 0, 128, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 6, 0, 0, 0, 8, 0, 0, 0, 12, 0, 0, 0, 16, 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 48, 0, 0, 0, 64, 0, 0, 0, 96, 0, 0, 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 110, 101, 101, 100, 32, 100, 105, 99, 116, 105, 111, 110, 97, 114, 121, 0, 115, 116, 114, 101, 97, 109, 32, 101, 110, 100, 0, 0, 0, 0, 0, 0, 102, 105, 108, 101, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 115, 116, 114, 101, 97, 109, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 100, 97, 116, 97, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 105, 110, 115, 117, 102, 102, 105, 99, 105, 101, 110, 116, 32, 109, 101, 109, 111, 114, 121, 0, 0, 0, 0, 0, 98, 117, 102, 102, 101, 114, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 105, 110, 99, 111, 109, 112, 97, 116, 105, 98, 108, 101, 32, 118, 101, 114, 115, 105, 111, 110, 0, 0, 0, 0, 8, 13, 0, 0, 24, 13, 0, 0, 40, 41, 202, 1, 40, 13, 0, 0, 56, 13, 0, 0, 72, 13, 0, 0, 88, 13, 0, 0, 112, 13, 0, 0, 128, 13, 0, 0, 40, 41, 202, 1, 16, 0, 17, 0, 18, 0, 0, 0, 8, 0, 7, 0, 9, 0, 6, 0, 10, 0, 5, 0, 11, 0, 4, 0, 12, 0, 3, 0, 13, 0, 2, 0, 14, 0, 1, 0, 15, 0, 0, 0, 105, 110, 99, 111, 114, 114, 101, 99, 116, 32, 104, 101, 97, 100, 101, 114, 32, 99, 104, 101, 99, 107, 0, 0, 117, 110, 107, 110, 111, 119, 110, 32, 99, 111, 109, 112, 114, 101, 115, 115, 105, 111, 110, 32, 109, 101, 116, 104, 111, 100, 0, 0, 0, 0, 0, 0, 105, 110, 118, 97, 108, 105, 100, 32, 119, 105, 110, 100, 111, 119, 32, 115, 105, 122, 101, 0, 0, 0, 0, 0, 117, 110, 107, 110, 111, 119, 110, 32, 104, 101, 97, 100, 101, 114, 32, 102, 108, 97, 103, 115, 32, 115, 101, 116, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 97, 100, 101, 114, 32, 99, 114, 99, 32, 109, 105, 115, 109, 97, 116, 99, 104, 0, 0, 0, 0, 0, 105, 110, 118, 97, 108, 105, 100, 32, 98, 108, 111, 99, 107, 32, 116, 121, 112, 101, 0, 0, 0, 0, 0, 0, 105, 110, 118, 97, 108, 105, 100, 32, 115, 116, 111, 114, 101, 100, 32, 98, 108, 111, 99, 107, 32, 108, 101, 110, 103, 116, 104, 115, 0, 0, 0, 0, 116, 111, 111, 32, 109, 97, 110, 121, 32, 108, 101, 110, 103, 116, 104, 32, 111, 114, 32, 100, 105, 115, 116, 97, 110, 99, 101, 32, 115, 121, 109, 98, 111, 108, 115, 0, 0, 0, 0, 0, 105, 110, 118, 97, 108, 105, 100, 32, 99, 111, 100, 101, 32, 108, 101, 110, 103, 116, 104, 115, 32, 115, 101, 116, 0, 0, 0, 0, 0, 0, 0, 0, 105, 110, 118, 97, 108, 105, 100, 32, 98, 105, 116, 32, 108, 101, 110, 103, 116, 104, 32, 114, 101, 112, 101, 97, 116, 0, 0, 0, 0, 0, 0, 0, 105, 110, 118, 97, 108, 105, 100, 32, 99, 111, 100, 101, 32, 45, 45, 32, 109, 105, 115, 115, 105, 110, 103, 32, 101, 110, 100, 45, 111, 102, 45, 98, 108, 111, 99, 107, 0, 0, 0, 0, 105, 110, 118, 97, 108, 105, 100, 32, 108, 105, 116, 101, 114, 97, 108, 47, 108, 101, 110, 103, 116, 104, 115, 32, 115, 101, 116, 0, 0, 0, 0, 0, 105, 110, 118, 97, 108, 105, 100, 32, 100, 105, 115, 116, 97, 110, 99, 101, 115, 32, 115, 101, 116, 0, 0, 0, 105, 110, 118, 97, 108, 105, 100, 32, 108, 105, 116, 101, 114, 97, 108, 47, 108, 101, 110, 103, 116, 104, 32, 99, 111, 100, 101, 0, 0, 0, 0, 0, 105, 110, 118, 97, 108, 105, 100, 32, 100, 105, 115, 116, 97, 110, 99, 101, 32, 99, 111, 100, 101, 0, 0, 0, 105, 110, 118, 97, 108, 105, 100, 32, 100, 105, 115, 116, 97, 110, 99, 101, 32, 116, 111, 111, 32, 102, 97, 114, 32, 98, 97, 99, 107, 0, 0, 0, 105, 110, 99, 111, 114, 114, 101, 99, 116, 32, 100, 97, 116, 97, 32, 99, 104, 101, 99, 107, 0, 0, 0, 0, 105, 110, 99, 111, 114, 114, 101, 99, 116, 32, 108, 101, 110, 103, 116, 104, 32, 99, 104, 101, 99, 107, 0, 0, 96, 7, 0, 0, 0, 8, 80, 0, 0, 8, 16, 0, 20, 8, 115, 0, 18, 7, 31, 0, 0, 8, 112, 0, 0, 8, 48, 0, 0, 9, 192, 0, 16, 7, 10, 0, 0, 8, 96, 0, 0, 8, 32, 0, 0, 9, 160, 0, 0, 8, 0, 0, 0, 8, 128, 0, 0, 8, 64, 0, 0, 9, 224, 0, 16, 7, 6, 0, 0, 8, 88, 0, 0, 8, 24, 0, 0, 9, 144, 0, 19, 7, 59, 0, 0, 8, 120, 0, 0, 8, 56, 0, 0, 9, 208, 0, 17, 7, 17, 0, 0, 8, 104, 0, 0, 8, 40, 0, 0, 9, 176, 0, 0, 8, 8, 0, 0, 8, 136, 0, 0, 8, 72, 0, 0, 9, 240, 0, 16, 7, 4, 0, 0, 8, 84, 0, 0, 8, 20, 0, 21, 8, 227, 0, 19, 7, 43, 0, 0, 8, 116, 0, 0, 8, 52, 0, 0, 9, 200, 0, 17, 7, 13, 0, 0, 8, 100, 0, 0, 8, 36, 0, 0, 9, 168, 0, 0, 8, 4, 0, 0, 8, 132, 0, 0, 8, 68, 0, 0, 9, 232, 0, 16, 7, 8, 0, 0, 8, 92, 0, 0, 8, 28, 0, 0, 9, 152, 0, 20, 7, 83, 0, 0, 8, 124, 0, 0, 8, 60, 0, 0, 9, 216, 0, 18, 7, 23, 0, 0, 8, 108, 0, 0, 8, 44, 0, 0, 9, 184, 0, 0, 8, 12, 0, 0, 8, 140, 0, 0, 8, 76, 0, 0, 9, 248, 0, 16, 7, 3, 0, 0, 8, 82, 0, 0, 8, 18, 0, 21, 8, 163, 0, 19, 7, 35, 0, 0, 8, 114, 0, 0, 8, 50, 0, 0, 9, 196, 0, 17, 7, 11, 0, 0, 8, 98, 0, 0, 8, 34, 0, 0, 9, 164, 0, 0, 8, 2, 0, 0, 8, 130, 0, 0, 8, 66, 0, 0, 9, 228, 0, 16, 7, 7, 0, 0, 8, 90, 0, 0, 8, 26, 0, 0, 9, 148, 0, 20, 7, 67, 0, 0, 8, 122, 0, 0, 8, 58, 0, 0, 9, 212, 0, 18, 7, 19, 0, 0, 8, 106, 0, 0, 8, 42, 0, 0, 9, 180, 0, 0, 8, 10, 0, 0, 8, 138, 0, 0, 8, 74, 0, 0, 9, 244, 0, 16, 7, 5, 0, 0, 8, 86, 0, 0, 8, 22, 0, 64, 8, 0, 0, 19, 7, 51, 0, 0, 8, 118, 0, 0, 8, 54, 0, 0, 9, 204, 0, 17, 7, 15, 0, 0, 8, 102, 0, 0, 8, 38, 0, 0, 9, 172, 0, 0, 8, 6, 0, 0, 8, 134, 0, 0, 8, 70, 0, 0, 9, 236, 0, 16, 7, 9, 0, 0, 8, 94, 0, 0, 8, 30, 0, 0, 9, 156, 0, 20, 7, 99, 0, 0, 8, 126, 0, 0, 8, 62, 0, 0, 9, 220, 0, 18, 7, 27, 0, 0, 8, 110, 0, 0, 8, 46, 0, 0, 9, 188, 0, 0, 8, 14, 0, 0, 8, 142, 0, 0, 8, 78, 0, 0, 9, 252, 0, 96, 7, 0, 0, 0, 8, 81, 0, 0, 8, 17, 0, 21, 8, 131, 0, 18, 7, 31, 0, 0, 8, 113, 0, 0, 8, 49, 0, 0, 9, 194, 0, 16, 7, 10, 0, 0, 8, 97, 0, 0, 8, 33, 0, 0, 9, 162, 0, 0, 8, 1, 0, 0, 8, 129, 0, 0, 8, 65, 0, 0, 9, 226, 0, 16, 7, 6, 0, 0, 8, 89, 0, 0, 8, 25, 0, 0, 9, 146, 0, 19, 7, 59, 0, 0, 8, 121, 0, 0, 8, 57, 0, 0, 9, 210, 0, 17, 7, 17, 0, 0, 8, 105, 0, 0, 8, 41, 0, 0, 9, 178, 0, 0, 8, 9, 0, 0, 8, 137, 0, 0, 8, 73, 0, 0, 9, 242, 0, 16, 7, 4, 0, 0, 8, 85, 0, 0, 8, 21, 0, 16, 8, 2, 1, 19, 7, 43, 0, 0, 8, 117, 0, 0, 8, 53, 0, 0, 9, 202, 0, 17, 7, 13, 0, 0, 8, 101, 0, 0, 8, 37, 0, 0, 9, 170, 0, 0, 8, 5, 0, 0, 8, 133, 0, 0, 8, 69, 0, 0, 9, 234, 0, 16, 7, 8, 0, 0, 8, 93, 0, 0, 8, 29, 0, 0, 9, 154, 0, 20, 7, 83, 0, 0, 8, 125, 0, 0, 8, 61, 0, 0, 9, 218, 0, 18, 7, 23, 0, 0, 8, 109, 0, 0, 8, 45, 0, 0, 9, 186, 0, 0, 8, 13, 0, 0, 8, 141, 0, 0, 8, 77, 0, 0, 9, 250, 0, 16, 7, 3, 0, 0, 8, 83, 0, 0, 8, 19, 0, 21, 8, 195, 0, 19, 7, 35, 0, 0, 8, 115, 0, 0, 8, 51, 0, 0, 9, 198, 0, 17, 7, 11, 0, 0, 8, 99, 0, 0, 8, 35, 0, 0, 9, 166, 0, 0, 8, 3, 0, 0, 8, 131, 0, 0, 8, 67, 0, 0, 9, 230, 0, 16, 7, 7, 0, 0, 8, 91, 0, 0, 8, 27, 0, 0, 9, 150, 0, 20, 7, 67, 0, 0, 8, 123, 0, 0, 8, 59, 0, 0, 9, 214, 0, 18, 7, 19, 0, 0, 8, 107, 0, 0, 8, 43, 0, 0, 9, 182, 0, 0, 8, 11, 0, 0, 8, 139, 0, 0, 8, 75, 0, 0, 9, 246, 0, 16, 7, 5, 0, 0, 8, 87, 0, 0, 8, 23, 0, 64, 8, 0, 0, 19, 7, 51, 0, 0, 8, 119, 0, 0, 8, 55, 0, 0, 9, 206, 0, 17, 7, 15, 0, 0, 8, 103, 0, 0, 8, 39, 0, 0, 9, 174, 0, 0, 8, 7, 0, 0, 8, 135, 0, 0, 8, 71, 0, 0, 9, 238, 0, 16, 7, 9, 0, 0, 8, 95, 0, 0, 8, 31, 0, 0, 9, 158, 0, 20, 7, 99, 0, 0, 8, 127, 0, 0, 8, 63, 0, 0, 9, 222, 0, 18, 7, 27, 0, 0, 8, 111, 0, 0, 8, 47, 0, 0, 9, 190, 0, 0, 8, 15, 0, 0, 8, 143, 0, 0, 8, 79, 0, 0, 9, 254, 0, 96, 7, 0, 0, 0, 8, 80, 0, 0, 8, 16, 0, 20, 8, 115, 0, 18, 7, 31, 0, 0, 8, 112, 0, 0, 8, 48, 0, 0, 9, 193, 0, 16, 7, 10, 0, 0, 8, 96, 0, 0, 8, 32, 0, 0, 9, 161, 0, 0, 8, 0, 0, 0, 8, 128, 0, 0, 8, 64, 0, 0, 9, 225, 0, 16, 7, 6, 0, 0, 8, 88, 0, 0, 8, 24, 0, 0, 9, 145, 0, 19, 7, 59, 0, 0, 8, 120, 0, 0, 8, 56, 0, 0, 9, 209, 0, 17, 7, 17, 0, 0, 8, 104, 0, 0, 8, 40, 0, 0, 9, 177, 0, 0, 8, 8, 0, 0, 8, 136, 0, 0, 8, 72, 0, 0, 9, 241, 0, 16, 7, 4, 0, 0, 8, 84, 0, 0, 8, 20, 0, 21, 8, 227, 0, 19, 7, 43, 0, 0, 8, 116, 0, 0, 8, 52, 0, 0, 9, 201, 0, 17, 7, 13, 0, 0, 8, 100, 0, 0, 8, 36, 0, 0, 9, 169, 0, 0, 8, 4, 0, 0, 8, 132, 0, 0, 8, 68, 0, 0, 9, 233, 0, 16, 7, 8, 0, 0, 8, 92, 0, 0, 8, 28, 0, 0, 9, 153, 0, 20, 7, 83, 0, 0, 8, 124, 0, 0, 8, 60, 0, 0, 9, 217, 0, 18, 7, 23, 0, 0, 8, 108, 0, 0, 8, 44, 0, 0, 9, 185, 0, 0, 8, 12, 0, 0, 8, 140, 0, 0, 8, 76, 0, 0, 9, 249, 0, 16, 7, 3, 0, 0, 8, 82, 0, 0, 8, 18, 0, 21, 8, 163, 0, 19, 7, 35, 0, 0, 8, 114, 0, 0, 8, 50, 0, 0, 9, 197, 0, 17, 7, 11, 0, 0, 8, 98, 0, 0, 8, 34, 0, 0, 9, 165, 0, 0, 8, 2, 0, 0, 8, 130, 0, 0, 8, 66, 0, 0, 9, 229, 0, 16, 7, 7, 0, 0, 8, 90, 0, 0, 8, 26, 0, 0, 9, 149, 0, 20, 7, 67, 0, 0, 8, 122, 0, 0, 8, 58, 0, 0, 9, 213, 0, 18, 7, 19, 0, 0, 8, 106, 0, 0, 8, 42, 0, 0, 9, 181, 0, 0, 8, 10, 0, 0, 8, 138, 0, 0, 8, 74, 0, 0, 9, 245, 0, 16, 7, 5, 0, 0, 8, 86, 0, 0, 8, 22, 0, 64, 8, 0, 0, 19, 7, 51, 0, 0, 8, 118, 0, 0, 8, 54, 0, 0, 9, 205, 0, 17, 7, 15, 0, 0, 8, 102, 0, 0, 8, 38, 0, 0, 9, 173, 0, 0, 8, 6, 0, 0, 8, 134, 0, 0, 8, 70, 0, 0, 9, 237, 0, 16, 7, 9, 0, 0, 8, 94, 0, 0, 8, 30, 0, 0, 9, 157, 0, 20, 7, 99, 0, 0, 8, 126, 0, 0, 8, 62, 0, 0, 9, 221, 0, 18, 7, 27, 0, 0, 8, 110, 0, 0, 8, 46, 0, 0, 9, 189, 0, 0, 8, 14, 0, 0, 8, 142, 0, 0, 8, 78, 0, 0, 9, 253, 0, 96, 7, 0, 0, 0, 8, 81, 0, 0, 8, 17, 0, 21, 8, 131, 0, 18, 7, 31, 0, 0, 8, 113, 0, 0, 8, 49, 0, 0, 9, 195, 0, 16, 7, 10, 0, 0, 8, 97, 0, 0, 8, 33, 0, 0, 9, 163, 0, 0, 8, 1, 0, 0, 8, 129, 0, 0, 8, 65, 0, 0, 9, 227, 0, 16, 7, 6, 0, 0, 8, 89, 0, 0, 8, 25, 0, 0, 9, 147, 0, 19, 7, 59, 0, 0, 8, 121, 0, 0, 8, 57, 0, 0, 9, 211, 0, 17, 7, 17, 0, 0, 8, 105, 0, 0, 8, 41, 0, 0, 9, 179, 0, 0, 8, 9, 0, 0, 8, 137, 0, 0, 8, 73, 0, 0, 9, 243, 0, 16, 7, 4, 0, 0, 8, 85, 0, 0, 8, 21, 0, 16, 8, 2, 1, 19, 7, 43, 0, 0, 8, 117, 0, 0, 8, 53, 0, 0, 9, 203, 0, 17, 7, 13, 0, 0, 8, 101, 0, 0, 8, 37, 0, 0, 9, 171, 0, 0, 8, 5, 0, 0, 8, 133, 0, 0, 8, 69, 0, 0, 9, 235, 0, 16, 7, 8, 0, 0, 8, 93, 0, 0, 8, 29, 0, 0, 9, 155, 0, 20, 7, 83, 0, 0, 8, 125, 0, 0, 8, 61, 0, 0, 9, 219, 0, 18, 7, 23, 0, 0, 8, 109, 0, 0, 8, 45, 0, 0, 9, 187, 0, 0, 8, 13, 0, 0, 8, 141, 0, 0, 8, 77, 0, 0, 9, 251, 0, 16, 7, 3, 0, 0, 8, 83, 0, 0, 8, 19, 0, 21, 8, 195, 0, 19, 7, 35, 0, 0, 8, 115, 0, 0, 8, 51, 0, 0, 9, 199, 0, 17, 7, 11, 0, 0, 8, 99, 0, 0, 8, 35, 0, 0, 9, 167, 0, 0, 8, 3, 0, 0, 8, 131, 0, 0, 8, 67, 0, 0, 9, 231, 0, 16, 7, 7, 0, 0, 8, 91, 0, 0, 8, 27, 0, 0, 9, 151, 0, 20, 7, 67, 0, 0, 8, 123, 0, 0, 8, 59, 0, 0, 9, 215, 0, 18, 7, 19, 0, 0, 8, 107, 0, 0, 8, 43, 0, 0, 9, 183, 0, 0, 8, 11, 0, 0, 8, 139, 0, 0, 8, 75, 0, 0, 9, 247, 0, 16, 7, 5, 0, 0, 8, 87, 0, 0, 8, 23, 0, 64, 8, 0, 0, 19, 7, 51, 0, 0, 8, 119, 0, 0, 8, 55, 0, 0, 9, 207, 0, 17, 7, 15, 0, 0, 8, 103, 0, 0, 8, 39, 0, 0, 9, 175, 0, 0, 8, 7, 0, 0, 8, 135, 0, 0, 8, 71, 0, 0, 9, 239, 0, 16, 7, 9, 0, 0, 8, 95, 0, 0, 8, 31, 0, 0, 9, 159, 0, 20, 7, 99, 0, 0, 8, 127, 0, 0, 8, 63, 0, 0, 9, 223, 0, 18, 7, 27, 0, 0, 8, 111, 0, 0, 8, 47, 0, 0, 9, 191, 0, 0, 8, 15, 0, 0, 8, 143, 0, 0, 8, 79, 0, 0, 9, 255, 0, 16, 5, 1, 0, 23, 5, 1, 1, 19, 5, 17, 0, 27, 5, 1, 16, 17, 5, 5, 0, 25, 5, 1, 4, 21, 5, 65, 0, 29, 5, 1, 64, 16, 5, 3, 0, 24, 5, 1, 2, 20, 5, 33, 0, 28, 5, 1, 32, 18, 5, 9, 0, 26, 5, 1, 8, 22, 5, 129, 0, 64, 5, 0, 0, 16, 5, 2, 0, 23, 5, 129, 1, 19, 5, 25, 0, 27, 5, 1, 24, 17, 5, 7, 0, 25, 5, 1, 6, 21, 5, 97, 0, 29, 5, 1, 96, 16, 5, 4, 0, 24, 5, 1, 3, 20, 5, 49, 0, 28, 5, 1, 48, 18, 5, 13, 0, 26, 5, 1, 12, 22, 5, 193, 0, 64, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 4, 0, 8, 0, 4, 0, 2, 0, 0, 0, 4, 0, 5, 0, 16, 0, 8, 0, 2, 0, 0, 0, 4, 0, 6, 0, 32, 0, 32, 0, 2, 0, 0, 0, 4, 0, 4, 0, 16, 0, 16, 0, 3, 0, 0, 0, 8, 0, 16, 0, 32, 0, 32, 0, 3, 0, 0, 0, 8, 0, 16, 0, 128, 0, 128, 0, 3, 0, 0, 0, 8, 0, 32, 0, 128, 0, 0, 1, 3, 0, 0, 0, 32, 0, 128, 0, 2, 1, 0, 4, 3, 0, 0, 0, 32, 0, 2, 1, 2, 1, 0, 16, 3, 0, 0, 0, 0, 0, 0, 0, 150, 48, 7, 119, 44, 97, 14, 238, 186, 81, 9, 153, 25, 196, 109, 7, 143, 244, 106, 112, 53, 165, 99, 233, 163, 149, 100, 158, 50, 136, 219, 14, 164, 184, 220, 121, 30, 233, 213, 224, 136, 217, 210, 151, 43, 76, 182, 9, 189, 124, 177, 126, 7, 45, 184, 231, 145, 29, 191, 144, 100, 16, 183, 29, 242, 32, 176, 106, 72, 113, 185, 243, 222, 65, 190, 132, 125, 212, 218, 26, 235, 228, 221, 109, 81, 181, 212, 244, 199, 133, 211, 131, 86, 152, 108, 19, 192, 168, 107, 100, 122, 249, 98, 253, 236, 201, 101, 138, 79, 92, 1, 20, 217, 108, 6, 99, 99, 61, 15, 250, 245, 13, 8, 141, 200, 32, 110, 59, 94, 16, 105, 76, 228, 65, 96, 213, 114, 113, 103, 162, 209, 228, 3, 60, 71, 212, 4, 75, 253, 133, 13, 210, 107, 181, 10, 165, 250, 168, 181, 53, 108, 152, 178, 66, 214, 201, 187, 219, 64, 249, 188, 172, 227, 108, 216, 50, 117, 92, 223, 69, 207, 13, 214, 220, 89, 61, 209, 171, 172, 48, 217, 38, 58, 0, 222, 81, 128, 81, 215, 200, 22, 97, 208, 191, 181, 244, 180, 33, 35, 196, 179, 86, 153, 149, 186, 207, 15, 165, 189, 184, 158, 184, 2, 40, 8, 136, 5, 95, 178, 217, 12, 198, 36, 233, 11, 177, 135, 124, 111, 47, 17, 76, 104, 88, 171, 29, 97, 193, 61, 45, 102, 182, 144, 65, 220, 118, 6, 113, 219, 1, 188, 32, 210, 152, 42, 16, 213, 239, 137, 133, 177, 113, 31, 181, 182, 6, 165, 228, 191, 159, 51, 212, 184, 232, 162, 201, 7, 120, 52, 249, 0, 15, 142, 168, 9, 150, 24, 152, 14, 225, 187, 13, 106, 127, 45, 61, 109, 8, 151, 108, 100, 145, 1, 92, 99, 230, 244, 81, 107, 107, 98, 97, 108, 28, 216, 48, 101, 133, 78, 0, 98, 242, 237, 149, 6, 108, 123, 165, 1, 27, 193, 244, 8, 130, 87, 196, 15, 245, 198, 217, 176, 101, 80, 233, 183, 18, 234, 184, 190, 139, 124, 136, 185, 252, 223, 29, 221, 98, 73, 45, 218, 21, 243, 124, 211, 140, 101, 76, 212, 251, 88, 97, 178, 77, 206, 81, 181, 58, 116, 0, 188, 163, 226, 48, 187, 212, 65, 165, 223, 74, 215, 149, 216, 61, 109, 196, 209, 164, 251, 244, 214, 211, 106, 233, 105, 67, 252, 217, 110, 52, 70, 136, 103, 173, 208, 184, 96, 218, 115, 45, 4, 68, 229, 29, 3, 51, 95, 76, 10, 170, 201, 124, 13, 221, 60, 113, 5, 80, 170, 65, 2, 39, 16, 16, 11, 190, 134, 32, 12, 201, 37, 181, 104, 87, 179, 133, 111, 32, 9, 212, 102, 185, 159, 228, 97, 206, 14, 249, 222, 94, 152, 201, 217, 41, 34, 152, 208, 176, 180, 168, 215, 199, 23, 61, 179, 89, 129, 13, 180, 46, 59, 92, 189, 183, 173, 108, 186, 192, 32, 131, 184, 237, 182, 179, 191, 154, 12, 226, 182, 3, 154, 210, 177, 116, 57, 71, 213, 234, 175, 119, 210, 157, 21, 38, 219, 4, 131, 22, 220, 115, 18, 11, 99, 227, 132, 59, 100, 148, 62, 106, 109, 13, 168, 90, 106, 122, 11, 207, 14, 228, 157, 255, 9, 147, 39, 174, 0, 10, 177, 158, 7, 125, 68, 147, 15, 240, 210, 163, 8, 135, 104, 242, 1, 30, 254, 194, 6, 105, 93, 87, 98, 247, 203, 103, 101, 128, 113, 54, 108, 25, 231, 6, 107, 110, 118, 27, 212, 254, 224, 43, 211, 137, 90, 122, 218, 16, 204, 74, 221, 103, 111, 223, 185, 249, 249, 239, 190, 142, 67, 190, 183, 23, 213, 142, 176, 96, 232, 163, 214, 214, 126, 147, 209, 161, 196, 194, 216, 56, 82, 242, 223, 79, 241, 103, 187, 209, 103, 87, 188, 166, 221, 6, 181, 63, 75, 54, 178, 72, 218, 43, 13, 216, 76, 27, 10, 175, 246, 74, 3, 54, 96, 122, 4, 65, 195, 239, 96, 223, 85, 223, 103, 168, 239, 142, 110, 49, 121, 190, 105, 70, 140, 179, 97, 203, 26, 131, 102, 188, 160, 210, 111, 37, 54, 226, 104, 82, 149, 119, 12, 204, 3, 71, 11, 187, 185, 22, 2, 34, 47, 38, 5, 85, 190, 59, 186, 197, 40, 11, 189, 178, 146, 90, 180, 43, 4, 106, 179, 92, 167, 255, 215, 194, 49, 207, 208, 181, 139, 158, 217, 44, 29, 174, 222, 91, 176, 194, 100, 155, 38, 242, 99, 236, 156, 163, 106, 117, 10, 147, 109, 2, 169, 6, 9, 156, 63, 54, 14, 235, 133, 103, 7, 114, 19, 87, 0, 5, 130, 74, 191, 149, 20, 122, 184, 226, 174, 43, 177, 123, 56, 27, 182, 12, 155, 142, 210, 146, 13, 190, 213, 229, 183, 239, 220, 124, 33, 223, 219, 11, 212, 210, 211, 134, 66, 226, 212, 241, 248, 179, 221, 104, 110, 131, 218, 31, 205, 22, 190, 129, 91, 38, 185, 246, 225, 119, 176, 111, 119, 71, 183, 24, 230, 90, 8, 136, 112, 106, 15, 255, 202, 59, 6, 102, 92, 11, 1, 17, 255, 158, 101, 143, 105, 174, 98, 248, 211, 255, 107, 97, 69, 207, 108, 22, 120, 226, 10, 160, 238, 210, 13, 215, 84, 131, 4, 78, 194, 179, 3, 57, 97, 38, 103, 167, 247, 22, 96, 208, 77, 71, 105, 73, 219, 119, 110, 62, 74, 106, 209, 174, 220, 90, 214, 217, 102, 11, 223, 64, 240, 59, 216, 55, 83, 174, 188, 169, 197, 158, 187, 222, 127, 207, 178, 71, 233, 255, 181, 48, 28, 242, 189, 189, 138, 194, 186, 202, 48, 147, 179, 83, 166, 163, 180, 36, 5, 54, 208, 186, 147, 6, 215, 205, 41, 87, 222, 84, 191, 103, 217, 35, 46, 122, 102, 179, 184, 74, 97, 196, 2, 27, 104, 93, 148, 43, 111, 42, 55, 190, 11, 180, 161, 142, 12, 195, 27, 223, 5, 90, 141, 239, 2, 45, 0, 0, 0, 0, 65, 49, 27, 25, 130, 98, 54, 50, 195, 83, 45, 43, 4, 197, 108, 100, 69, 244, 119, 125, 134, 167, 90, 86, 199, 150, 65, 79, 8, 138, 217, 200, 73, 187, 194, 209, 138, 232, 239, 250, 203, 217, 244, 227, 12, 79, 181, 172, 77, 126, 174, 181, 142, 45, 131, 158, 207, 28, 152, 135, 81, 18, 194, 74, 16, 35, 217, 83, 211, 112, 244, 120, 146, 65, 239, 97, 85, 215, 174, 46, 20, 230, 181, 55, 215, 181, 152, 28, 150, 132, 131, 5, 89, 152, 27, 130, 24, 169, 0, 155, 219, 250, 45, 176, 154, 203, 54, 169, 93, 93, 119, 230, 28, 108, 108, 255, 223, 63, 65, 212, 158, 14, 90, 205, 162, 36, 132, 149, 227, 21, 159, 140, 32, 70, 178, 167, 97, 119, 169, 190, 166, 225, 232, 241, 231, 208, 243, 232, 36, 131, 222, 195, 101, 178, 197, 218, 170, 174, 93, 93, 235, 159, 70, 68, 40, 204, 107, 111, 105, 253, 112, 118, 174, 107, 49, 57, 239, 90, 42, 32, 44, 9, 7, 11, 109, 56, 28, 18, 243, 54, 70, 223, 178, 7, 93, 198, 113, 84, 112, 237, 48, 101, 107, 244, 247, 243, 42, 187, 182, 194, 49, 162, 117, 145, 28, 137, 52, 160, 7, 144, 251, 188, 159, 23, 186, 141, 132, 14, 121, 222, 169, 37, 56, 239, 178, 60, 255, 121, 243, 115, 190, 72, 232, 106, 125, 27, 197, 65, 60, 42, 222, 88, 5, 79, 121, 240, 68, 126, 98, 233, 135, 45, 79, 194, 198, 28, 84, 219, 1, 138, 21, 148, 64, 187, 14, 141, 131, 232, 35, 166, 194, 217, 56, 191, 13, 197, 160, 56, 76, 244, 187, 33, 143, 167, 150, 10, 206, 150, 141, 19, 9, 0, 204, 92, 72, 49, 215, 69, 139, 98, 250, 110, 202, 83, 225, 119, 84, 93, 187, 186, 21, 108, 160, 163, 214, 63, 141, 136, 151, 14, 150, 145, 80, 152, 215, 222, 17, 169, 204, 199, 210, 250, 225, 236, 147, 203, 250, 245, 92, 215, 98, 114, 29, 230, 121, 107, 222, 181, 84, 64, 159, 132, 79, 89, 88, 18, 14, 22, 25, 35, 21, 15, 218, 112, 56, 36, 155, 65, 35, 61, 167, 107, 253, 101, 230, 90, 230, 124, 37, 9, 203, 87, 100, 56, 208, 78, 163, 174, 145, 1, 226, 159, 138, 24, 33, 204, 167, 51, 96, 253, 188, 42, 175, 225, 36, 173, 238, 208, 63, 180, 45, 131, 18, 159, 108, 178, 9, 134, 171, 36, 72, 201, 234, 21, 83, 208, 41, 70, 126, 251, 104, 119, 101, 226, 246, 121, 63, 47, 183, 72, 36, 54, 116, 27, 9, 29, 53, 42, 18, 4, 242, 188, 83, 75, 179, 141, 72, 82, 112, 222, 101, 121, 49, 239, 126, 96, 254, 243, 230, 231, 191, 194, 253, 254, 124, 145, 208, 213, 61, 160, 203, 204, 250, 54, 138, 131, 187, 7, 145, 154, 120, 84, 188, 177, 57, 101, 167, 168, 75, 152, 131, 59, 10, 169, 152, 34, 201, 250, 181, 9, 136, 203, 174, 16, 79, 93, 239, 95, 14, 108, 244, 70, 205, 63, 217, 109, 140, 14, 194, 116, 67, 18, 90, 243, 2, 35, 65, 234, 193, 112, 108, 193, 128, 65, 119, 216, 71, 215, 54, 151, 6, 230, 45, 142, 197, 181, 0, 165, 132, 132, 27, 188, 26, 138, 65, 113, 91, 187, 90, 104, 152, 232, 119, 67, 217, 217, 108, 90, 30, 79, 45, 21, 95, 126, 54, 12, 156, 45, 27, 39, 221, 28, 0, 62, 18, 0, 152, 185, 83, 49, 131, 160, 144, 98, 174, 139, 209, 83, 181, 146, 22, 197, 244, 221, 87, 244, 239, 196, 148, 167, 194, 239, 213, 150, 217, 246, 233, 188, 7, 174, 168, 141, 28, 183, 107, 222, 49, 156, 42, 239, 42, 133, 237, 121, 107, 202, 172, 72, 112, 211, 111, 27, 93, 248, 46, 42, 70, 225, 225, 54, 222, 102, 160, 7, 197, 127, 99, 84, 232, 84, 34, 101, 243, 77, 229, 243, 178, 2, 164, 194, 169, 27, 103, 145, 132, 48, 38, 160, 159, 41, 184, 174, 197, 228, 249, 159, 222, 253, 58, 204, 243, 214, 123, 253, 232, 207, 188, 107, 169, 128, 253, 90, 178, 153, 62, 9, 159, 178, 127, 56, 132, 171, 176, 36, 28, 44, 241, 21, 7, 53, 50, 70, 42, 30, 115, 119, 49, 7, 180, 225, 112, 72, 245, 208, 107, 81, 54, 131, 70, 122, 119, 178, 93, 99, 78, 215, 250, 203, 15, 230, 225, 210, 204, 181, 204, 249, 141, 132, 215, 224, 74, 18, 150, 175, 11, 35, 141, 182, 200, 112, 160, 157, 137, 65, 187, 132, 70, 93, 35, 3, 7, 108, 56, 26, 196, 63, 21, 49, 133, 14, 14, 40, 66, 152, 79, 103, 3, 169, 84, 126, 192, 250, 121, 85, 129, 203, 98, 76, 31, 197, 56, 129, 94, 244, 35, 152, 157, 167, 14, 179, 220, 150, 21, 170, 27, 0, 84, 229, 90, 49, 79, 252, 153, 98, 98, 215, 216, 83, 121, 206, 23, 79, 225, 73, 86, 126, 250, 80, 149, 45, 215, 123, 212, 28, 204, 98, 19, 138, 141, 45, 82, 187, 150, 52, 145, 232, 187, 31, 208, 217, 160, 6, 236, 243, 126, 94, 173, 194, 101, 71, 110, 145, 72, 108, 47, 160, 83, 117, 232, 54, 18, 58, 169, 7, 9, 35, 106, 84, 36, 8, 43, 101, 63, 17, 228, 121, 167, 150, 165, 72, 188, 143, 102, 27, 145, 164, 39, 42, 138, 189, 224, 188, 203, 242, 161, 141, 208, 235, 98, 222, 253, 192, 35, 239, 230, 217, 189, 225, 188, 20, 252, 208, 167, 13, 63, 131, 138, 38, 126, 178, 145, 63, 185, 36, 208, 112, 248, 21, 203, 105, 59, 70, 230, 66, 122, 119, 253, 91, 181, 107, 101, 220, 244, 90, 126, 197, 55, 9, 83, 238, 118, 56, 72, 247, 177, 174, 9, 184, 240, 159, 18, 161, 51, 204, 63, 138, 114, 253, 36, 147, 0, 0, 0, 0, 55, 106, 194, 1, 110, 212, 132, 3, 89, 190, 70, 2, 220, 168, 9, 7, 235, 194, 203, 6, 178, 124, 141, 4, 133, 22, 79, 5, 184, 81, 19, 14, 143, 59, 209, 15, 214, 133, 151, 13, 225, 239, 85, 12, 100, 249, 26, 9, 83, 147, 216, 8, 10, 45, 158, 10, 61, 71, 92, 11, 112, 163, 38, 28, 71, 201, 228, 29, 30, 119, 162, 31, 41, 29, 96, 30, 172, 11, 47, 27, 155, 97, 237, 26, 194, 223, 171, 24, 245, 181, 105, 25, 200, 242, 53, 18, 255, 152, 247, 19, 166, 38, 177, 17, 145, 76, 115, 16, 20, 90, 60, 21, 35, 48, 254, 20, 122, 142, 184, 22, 77, 228, 122, 23, 224, 70, 77, 56, 215, 44, 143, 57, 142, 146, 201, 59, 185, 248, 11, 58, 60, 238, 68, 63, 11, 132, 134, 62, 82, 58, 192, 60, 101, 80, 2, 61, 88, 23, 94, 54, 111, 125, 156, 55, 54, 195, 218, 53, 1, 169, 24, 52, 132, 191, 87, 49, 179, 213, 149, 48, 234, 107, 211, 50, 221, 1, 17, 51, 144, 229, 107, 36, 167, 143, 169, 37, 254, 49, 239, 39, 201, 91, 45, 38, 76, 77, 98, 35, 123, 39, 160, 34, 34, 153, 230, 32, 21, 243, 36, 33, 40, 180, 120, 42, 31, 222, 186, 43, 70, 96, 252, 41, 113, 10, 62, 40, 244, 28, 113, 45, 195, 118, 179, 44, 154, 200, 245, 46, 173, 162, 55, 47, 192, 141, 154, 112, 247, 231, 88, 113, 174, 89, 30, 115, 153, 51, 220, 114, 28, 37, 147, 119, 43, 79, 81, 118, 114, 241, 23, 116, 69, 155, 213, 117, 120, 220, 137, 126, 79, 182, 75, 127, 22, 8, 13, 125, 33, 98, 207, 124, 164, 116, 128, 121, 147, 30, 66, 120, 202, 160, 4, 122, 253, 202, 198, 123, 176, 46, 188, 108, 135, 68, 126, 109, 222, 250, 56, 111, 233, 144, 250, 110, 108, 134, 181, 107, 91, 236, 119, 106, 2, 82, 49, 104, 53, 56, 243, 105, 8, 127, 175, 98, 63, 21, 109, 99, 102, 171, 43, 97, 81, 193, 233, 96, 212, 215, 166, 101, 227, 189, 100, 100, 186, 3, 34, 102, 141, 105, 224, 103, 32, 203, 215, 72, 23, 161, 21, 73, 78, 31, 83, 75, 121, 117, 145, 74, 252, 99, 222, 79, 203, 9, 28, 78, 146, 183, 90, 76, 165, 221, 152, 77, 152, 154, 196, 70, 175, 240, 6, 71, 246, 78, 64, 69, 193, 36, 130, 68, 68, 50, 205, 65, 115, 88, 15, 64, 42, 230, 73, 66, 29, 140, 139, 67, 80, 104, 241, 84, 103, 2, 51, 85, 62, 188, 117, 87, 9, 214, 183, 86, 140, 192, 248, 83, 187, 170, 58, 82, 226, 20, 124, 80, 213, 126, 190, 81, 232, 57, 226, 90, 223, 83, 32, 91, 134, 237, 102, 89, 177, 135, 164, 88, 52, 145, 235, 93, 3, 251, 41, 92, 90, 69, 111, 94, 109, 47, 173, 95, 128, 27, 53, 225, 183, 113, 247, 224, 238, 207, 177, 226, 217, 165, 115, 227, 92, 179, 60, 230, 107, 217, 254, 231, 50, 103, 184, 229, 5, 13, 122, 228, 56, 74, 38, 239, 15, 32, 228, 238, 86, 158, 162, 236, 97, 244, 96, 237, 228, 226, 47, 232, 211, 136, 237, 233, 138, 54, 171, 235, 189, 92, 105, 234, 240, 184, 19, 253, 199, 210, 209, 252, 158, 108, 151, 254, 169, 6, 85, 255, 44, 16, 26, 250, 27, 122, 216, 251, 66, 196, 158, 249, 117, 174, 92, 248, 72, 233, 0, 243, 127, 131, 194, 242, 38, 61, 132, 240, 17, 87, 70, 241, 148, 65, 9, 244, 163, 43, 203, 245, 250, 149, 141, 247, 205, 255, 79, 246, 96, 93, 120, 217, 87, 55, 186, 216, 14, 137, 252, 218, 57, 227, 62, 219, 188, 245, 113, 222, 139, 159, 179, 223, 210, 33, 245, 221, 229, 75, 55, 220, 216, 12, 107, 215, 239, 102, 169, 214, 182, 216, 239, 212, 129, 178, 45, 213, 4, 164, 98, 208, 51, 206, 160, 209, 106, 112, 230, 211, 93, 26, 36, 210, 16, 254, 94, 197, 39, 148, 156, 196, 126, 42, 218, 198, 73, 64, 24, 199, 204, 86, 87, 194, 251, 60, 149, 195, 162, 130, 211, 193, 149, 232, 17, 192, 168, 175, 77, 203, 159, 197, 143, 202, 198, 123, 201, 200, 241, 17, 11, 201, 116, 7, 68, 204, 67, 109, 134, 205, 26, 211, 192, 207, 45, 185, 2, 206, 64, 150, 175, 145, 119, 252, 109, 144, 46, 66, 43, 146, 25, 40, 233, 147, 156, 62, 166, 150, 171, 84, 100, 151, 242, 234, 34, 149, 197, 128, 224, 148, 248, 199, 188, 159, 207, 173, 126, 158, 150, 19, 56, 156, 161, 121, 250, 157, 36, 111, 181, 152, 19, 5, 119, 153, 74, 187, 49, 155, 125, 209, 243, 154, 48, 53, 137, 141, 7, 95, 75, 140, 94, 225, 13, 142, 105, 139, 207, 143, 236, 157, 128, 138, 219, 247, 66, 139, 130, 73, 4, 137, 181, 35, 198, 136, 136, 100, 154, 131, 191, 14, 88, 130, 230, 176, 30, 128, 209, 218, 220, 129, 84, 204, 147, 132, 99, 166, 81, 133, 58, 24, 23, 135, 13, 114, 213, 134, 160, 208, 226, 169, 151, 186, 32, 168, 206, 4, 102, 170, 249, 110, 164, 171, 124, 120, 235, 174, 75, 18, 41, 175, 18, 172, 111, 173, 37, 198, 173, 172, 24, 129, 241, 167, 47, 235, 51, 166, 118, 85, 117, 164, 65, 63, 183, 165, 196, 41, 248, 160, 243, 67, 58, 161, 170, 253, 124, 163, 157, 151, 190, 162, 208, 115, 196, 181, 231, 25, 6, 180, 190, 167, 64, 182, 137, 205, 130, 183, 12, 219, 205, 178, 59, 177, 15, 179, 98, 15, 73, 177, 85, 101, 139, 176, 104, 34, 215, 187, 95, 72, 21, 186, 6, 246, 83, 184, 49, 156, 145, 185, 180, 138, 222, 188, 131, 224, 28, 189, 218, 94, 90, 191, 237, 52, 152, 190, 0, 0, 0, 0, 101, 103, 188, 184, 139, 200, 9, 170, 238, 175, 181, 18, 87, 151, 98, 143, 50, 240, 222, 55, 220, 95, 107, 37, 185, 56, 215, 157, 239, 40, 180, 197, 138, 79, 8, 125, 100, 224, 189, 111, 1, 135, 1, 215, 184, 191, 214, 74, 221, 216, 106, 242, 51, 119, 223, 224, 86, 16, 99, 88, 159, 87, 25, 80, 250, 48, 165, 232, 20, 159, 16, 250, 113, 248, 172, 66, 200, 192, 123, 223, 173, 167, 199, 103, 67, 8, 114, 117, 38, 111, 206, 205, 112, 127, 173, 149, 21, 24, 17, 45, 251, 183, 164, 63, 158, 208, 24, 135, 39, 232, 207, 26, 66, 143, 115, 162, 172, 32, 198, 176, 201, 71, 122, 8, 62, 175, 50, 160, 91, 200, 142, 24, 181, 103, 59, 10, 208, 0, 135, 178, 105, 56, 80, 47, 12, 95, 236, 151, 226, 240, 89, 133, 135, 151, 229, 61, 209, 135, 134, 101, 180, 224, 58, 221, 90, 79, 143, 207, 63, 40, 51, 119, 134, 16, 228, 234, 227, 119, 88, 82, 13, 216, 237, 64, 104, 191, 81, 248, 161, 248, 43, 240, 196, 159, 151, 72, 42, 48, 34, 90, 79, 87, 158, 226, 246, 111, 73, 127, 147, 8, 245, 199, 125, 167, 64, 213, 24, 192, 252, 109, 78, 208, 159, 53, 43, 183, 35, 141, 197, 24, 150, 159, 160, 127, 42, 39, 25, 71, 253, 186, 124, 32, 65, 2, 146, 143, 244, 16, 247, 232, 72, 168, 61, 88, 20, 155, 88, 63, 168, 35, 182, 144, 29, 49, 211, 247, 161, 137, 106, 207, 118, 20, 15, 168, 202, 172, 225, 7, 127, 190, 132, 96, 195, 6, 210, 112, 160, 94, 183, 23, 28, 230, 89, 184, 169, 244, 60, 223, 21, 76, 133, 231, 194, 209, 224, 128, 126, 105, 14, 47, 203, 123, 107, 72, 119, 195, 162, 15, 13, 203, 199, 104, 177, 115, 41, 199, 4, 97, 76, 160, 184, 217, 245, 152, 111, 68, 144, 255, 211, 252, 126, 80, 102, 238, 27, 55, 218, 86, 77, 39, 185, 14, 40, 64, 5, 182, 198, 239, 176, 164, 163, 136, 12, 28, 26, 176, 219, 129, 127, 215, 103, 57, 145, 120, 210, 43, 244, 31, 110, 147, 3, 247, 38, 59, 102, 144, 154, 131, 136, 63, 47, 145, 237, 88, 147, 41, 84, 96, 68, 180, 49, 7, 248, 12, 223, 168, 77, 30, 186, 207, 241, 166, 236, 223, 146, 254, 137, 184, 46, 70, 103, 23, 155, 84, 2, 112, 39, 236, 187, 72, 240, 113, 222, 47, 76, 201, 48, 128, 249, 219, 85, 231, 69, 99, 156, 160, 63, 107, 249, 199, 131, 211, 23, 104, 54, 193, 114, 15, 138, 121, 203, 55, 93, 228, 174, 80, 225, 92, 64, 255, 84, 78, 37, 152, 232, 246, 115, 136, 139, 174, 22, 239, 55, 22, 248, 64, 130, 4, 157, 39, 62, 188, 36, 31, 233, 33, 65, 120, 85, 153, 175, 215, 224, 139, 202, 176, 92, 51, 59, 182, 89, 237, 94, 209, 229, 85, 176, 126, 80, 71, 213, 25, 236, 255, 108, 33, 59, 98, 9, 70, 135, 218, 231, 233, 50, 200, 130, 142, 142, 112, 212, 158, 237, 40, 177, 249, 81, 144, 95, 86, 228, 130, 58, 49, 88, 58, 131, 9, 143, 167, 230, 110, 51, 31, 8, 193, 134, 13, 109, 166, 58, 181, 164, 225, 64, 189, 193, 134, 252, 5, 47, 41, 73, 23, 74, 78, 245, 175, 243, 118, 34, 50, 150, 17, 158, 138, 120, 190, 43, 152, 29, 217, 151, 32, 75, 201, 244, 120, 46, 174, 72, 192, 192, 1, 253, 210, 165, 102, 65, 106, 28, 94, 150, 247, 121, 57, 42, 79, 151, 150, 159, 93, 242, 241, 35, 229, 5, 25, 107, 77, 96, 126, 215, 245, 142, 209, 98, 231, 235, 182, 222, 95, 82, 142, 9, 194, 55, 233, 181, 122, 217, 70, 0, 104, 188, 33, 188, 208, 234, 49, 223, 136, 143, 86, 99, 48, 97, 249, 214, 34, 4, 158, 106, 154, 189, 166, 189, 7, 216, 193, 1, 191, 54, 110, 180, 173, 83, 9, 8, 21, 154, 78, 114, 29, 255, 41, 206, 165, 17, 134, 123, 183, 116, 225, 199, 15, 205, 217, 16, 146, 168, 190, 172, 42, 70, 17, 25, 56, 35, 118, 165, 128, 117, 102, 198, 216, 16, 1, 122, 96, 254, 174, 207, 114, 155, 201, 115, 202, 34, 241, 164, 87, 71, 150, 24, 239, 169, 57, 173, 253, 204, 94, 17, 69, 6, 238, 77, 118, 99, 137, 241, 206, 141, 38, 68, 220, 232, 65, 248, 100, 81, 121, 47, 249, 52, 30, 147, 65], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE);
allocate([218, 177, 38, 83, 191, 214, 154, 235, 233, 198, 249, 179, 140, 161, 69, 11, 98, 14, 240, 25, 7, 105, 76, 161, 190, 81, 155, 60, 219, 54, 39, 132, 53, 153, 146, 150, 80, 254, 46, 46, 153, 185, 84, 38, 252, 222, 232, 158, 18, 113, 93, 140, 119, 22, 225, 52, 206, 46, 54, 169, 171, 73, 138, 17, 69, 230, 63, 3, 32, 129, 131, 187, 118, 145, 224, 227, 19, 246, 92, 91, 253, 89, 233, 73, 152, 62, 85, 241, 33, 6, 130, 108, 68, 97, 62, 212, 170, 206, 139, 198, 207, 169, 55, 126, 56, 65, 127, 214, 93, 38, 195, 110, 179, 137, 118, 124, 214, 238, 202, 196, 111, 214, 29, 89, 10, 177, 161, 225, 228, 30, 20, 243, 129, 121, 168, 75, 215, 105, 203, 19, 178, 14, 119, 171, 92, 161, 194, 185, 57, 198, 126, 1, 128, 254, 169, 156, 229, 153, 21, 36, 11, 54, 160, 54, 110, 81, 28, 142, 167, 22, 102, 134, 194, 113, 218, 62, 44, 222, 111, 44, 73, 185, 211, 148, 240, 129, 4, 9, 149, 230, 184, 177, 123, 73, 13, 163, 30, 46, 177, 27, 72, 62, 210, 67, 45, 89, 110, 251, 195, 246, 219, 233, 166, 145, 103, 81, 31, 169, 176, 204, 122, 206, 12, 116, 148, 97, 185, 102, 241, 6, 5, 222, 0, 0, 0, 0, 119, 7, 48, 150, 238, 14, 97, 44, 153, 9, 81, 186, 7, 109, 196, 25, 112, 106, 244, 143, 233, 99, 165, 53, 158, 100, 149, 163, 14, 219, 136, 50, 121, 220, 184, 164, 224, 213, 233, 30, 151, 210, 217, 136, 9, 182, 76, 43, 126, 177, 124, 189, 231, 184, 45, 7, 144, 191, 29, 145, 29, 183, 16, 100, 106, 176, 32, 242, 243, 185, 113, 72, 132, 190, 65, 222, 26, 218, 212, 125, 109, 221, 228, 235, 244, 212, 181, 81, 131, 211, 133, 199, 19, 108, 152, 86, 100, 107, 168, 192, 253, 98, 249, 122, 138, 101, 201, 236, 20, 1, 92, 79, 99, 6, 108, 217, 250, 15, 61, 99, 141, 8, 13, 245, 59, 110, 32, 200, 76, 105, 16, 94, 213, 96, 65, 228, 162, 103, 113, 114, 60, 3, 228, 209, 75, 4, 212, 71, 210, 13, 133, 253, 165, 10, 181, 107, 53, 181, 168, 250, 66, 178, 152, 108, 219, 187, 201, 214, 172, 188, 249, 64, 50, 216, 108, 227, 69, 223, 92, 117, 220, 214, 13, 207, 171, 209, 61, 89, 38, 217, 48, 172, 81, 222, 0, 58, 200, 215, 81, 128, 191, 208, 97, 22, 33, 180, 244, 181, 86, 179, 196, 35, 207, 186, 149, 153, 184, 189, 165, 15, 40, 2, 184, 158, 95, 5, 136, 8, 198, 12, 217, 178, 177, 11, 233, 36, 47, 111, 124, 135, 88, 104, 76, 17, 193, 97, 29, 171, 182, 102, 45, 61, 118, 220, 65, 144, 1, 219, 113, 6, 152, 210, 32, 188, 239, 213, 16, 42, 113, 177, 133, 137, 6, 182, 181, 31, 159, 191, 228, 165, 232, 184, 212, 51, 120, 7, 201, 162, 15, 0, 249, 52, 150, 9, 168, 142, 225, 14, 152, 24, 127, 106, 13, 187, 8, 109, 61, 45, 145, 100, 108, 151, 230, 99, 92, 1, 107, 107, 81, 244, 28, 108, 97, 98, 133, 101, 48, 216, 242, 98, 0, 78, 108, 6, 149, 237, 27, 1, 165, 123, 130, 8, 244, 193, 245, 15, 196, 87, 101, 176, 217, 198, 18, 183, 233, 80, 139, 190, 184, 234, 252, 185, 136, 124, 98, 221, 29, 223, 21, 218, 45, 73, 140, 211, 124, 243, 251, 212, 76, 101, 77, 178, 97, 88, 58, 181, 81, 206, 163, 188, 0, 116, 212, 187, 48, 226, 74, 223, 165, 65, 61, 216, 149, 215, 164, 209, 196, 109, 211, 214, 244, 251, 67, 105, 233, 106, 52, 110, 217, 252, 173, 103, 136, 70, 218, 96, 184, 208, 68, 4, 45, 115, 51, 3, 29, 229, 170, 10, 76, 95, 221, 13, 124, 201, 80, 5, 113, 60, 39, 2, 65, 170, 190, 11, 16, 16, 201, 12, 32, 134, 87, 104, 181, 37, 32, 111, 133, 179, 185, 102, 212, 9, 206, 97, 228, 159, 94, 222, 249, 14, 41, 217, 201, 152, 176, 208, 152, 34, 199, 215, 168, 180, 89, 179, 61, 23, 46, 180, 13, 129, 183, 189, 92, 59, 192, 186, 108, 173, 237, 184, 131, 32, 154, 191, 179, 182, 3, 182, 226, 12, 116, 177, 210, 154, 234, 213, 71, 57, 157, 210, 119, 175, 4, 219, 38, 21, 115, 220, 22, 131, 227, 99, 11, 18, 148, 100, 59, 132, 13, 109, 106, 62, 122, 106, 90, 168, 228, 14, 207, 11, 147, 9, 255, 157, 10, 0, 174, 39, 125, 7, 158, 177, 240, 15, 147, 68, 135, 8, 163, 210, 30, 1, 242, 104, 105, 6, 194, 254, 247, 98, 87, 93, 128, 101, 103, 203, 25, 108, 54, 113, 110, 107, 6, 231, 254, 212, 27, 118, 137, 211, 43, 224, 16, 218, 122, 90, 103, 221, 74, 204, 249, 185, 223, 111, 142, 190, 239, 249, 23, 183, 190, 67, 96, 176, 142, 213, 214, 214, 163, 232, 161, 209, 147, 126, 56, 216, 194, 196, 79, 223, 242, 82, 209, 187, 103, 241, 166, 188, 87, 103, 63, 181, 6, 221, 72, 178, 54, 75, 216, 13, 43, 218, 175, 10, 27, 76, 54, 3, 74, 246, 65, 4, 122, 96, 223, 96, 239, 195, 168, 103, 223, 85, 49, 110, 142, 239, 70, 105, 190, 121, 203, 97, 179, 140, 188, 102, 131, 26, 37, 111, 210, 160, 82, 104, 226, 54, 204, 12, 119, 149, 187, 11, 71, 3, 34, 2, 22, 185, 85, 5, 38, 47, 197, 186, 59, 190, 178, 189, 11, 40, 43, 180, 90, 146, 92, 179, 106, 4, 194, 215, 255, 167, 181, 208, 207, 49, 44, 217, 158, 139, 91, 222, 174, 29, 155, 100, 194, 176, 236, 99, 242, 38, 117, 106, 163, 156, 2, 109, 147, 10, 156, 9, 6, 169, 235, 14, 54, 63, 114, 7, 103, 133, 5, 0, 87, 19, 149, 191, 74, 130, 226, 184, 122, 20, 123, 177, 43, 174, 12, 182, 27, 56, 146, 210, 142, 155, 229, 213, 190, 13, 124, 220, 239, 183, 11, 219, 223, 33, 134, 211, 210, 212, 241, 212, 226, 66, 104, 221, 179, 248, 31, 218, 131, 110, 129, 190, 22, 205, 246, 185, 38, 91, 111, 176, 119, 225, 24, 183, 71, 119, 136, 8, 90, 230, 255, 15, 106, 112, 102, 6, 59, 202, 17, 1, 11, 92, 143, 101, 158, 255, 248, 98, 174, 105, 97, 107, 255, 211, 22, 108, 207, 69, 160, 10, 226, 120, 215, 13, 210, 238, 78, 4, 131, 84, 57, 3, 179, 194, 167, 103, 38, 97, 208, 96, 22, 247, 73, 105, 71, 77, 62, 110, 119, 219, 174, 209, 106, 74, 217, 214, 90, 220, 64, 223, 11, 102, 55, 216, 59, 240, 169, 188, 174, 83, 222, 187, 158, 197, 71, 178, 207, 127, 48, 181, 255, 233, 189, 189, 242, 28, 202, 186, 194, 138, 83, 179, 147, 48, 36, 180, 163, 166, 186, 208, 54, 5, 205, 215, 6, 147, 84, 222, 87, 41, 35, 217, 103, 191, 179, 102, 122, 46, 196, 97, 74, 184, 93, 104, 27, 2, 42, 111, 43, 148, 180, 11, 190, 55, 195, 12, 142, 161, 90, 5, 223, 27, 45, 2, 239, 141, 0, 0, 0, 0, 25, 27, 49, 65, 50, 54, 98, 130, 43, 45, 83, 195, 100, 108, 197, 4, 125, 119, 244, 69, 86, 90, 167, 134, 79, 65, 150, 199, 200, 217, 138, 8, 209, 194, 187, 73, 250, 239, 232, 138, 227, 244, 217, 203, 172, 181, 79, 12, 181, 174, 126, 77, 158, 131, 45, 142, 135, 152, 28, 207, 74, 194, 18, 81, 83, 217, 35, 16, 120, 244, 112, 211, 97, 239, 65, 146, 46, 174, 215, 85, 55, 181, 230, 20, 28, 152, 181, 215, 5, 131, 132, 150, 130, 27, 152, 89, 155, 0, 169, 24, 176, 45, 250, 219, 169, 54, 203, 154, 230, 119, 93, 93, 255, 108, 108, 28, 212, 65, 63, 223, 205, 90, 14, 158, 149, 132, 36, 162, 140, 159, 21, 227, 167, 178, 70, 32, 190, 169, 119, 97, 241, 232, 225, 166, 232, 243, 208, 231, 195, 222, 131, 36, 218, 197, 178, 101, 93, 93, 174, 170, 68, 70, 159, 235, 111, 107, 204, 40, 118, 112, 253, 105, 57, 49, 107, 174, 32, 42, 90, 239, 11, 7, 9, 44, 18, 28, 56, 109, 223, 70, 54, 243, 198, 93, 7, 178, 237, 112, 84, 113, 244, 107, 101, 48, 187, 42, 243, 247, 162, 49, 194, 182, 137, 28, 145, 117, 144, 7, 160, 52, 23, 159, 188, 251, 14, 132, 141, 186, 37, 169, 222, 121, 60, 178, 239, 56, 115, 243, 121, 255, 106, 232, 72, 190, 65, 197, 27, 125, 88, 222, 42, 60, 240, 121, 79, 5, 233, 98, 126, 68, 194, 79, 45, 135, 219, 84, 28, 198, 148, 21, 138, 1, 141, 14, 187, 64, 166, 35, 232, 131, 191, 56, 217, 194, 56, 160, 197, 13, 33, 187, 244, 76, 10, 150, 167, 143, 19, 141, 150, 206, 92, 204, 0, 9, 69, 215, 49, 72, 110, 250, 98, 139, 119, 225, 83, 202, 186, 187, 93, 84, 163, 160, 108, 21, 136, 141, 63, 214, 145, 150, 14, 151, 222, 215, 152, 80, 199, 204, 169, 17, 236, 225, 250, 210, 245, 250, 203, 147, 114, 98, 215, 92, 107, 121, 230, 29, 64, 84, 181, 222, 89, 79, 132, 159, 22, 14, 18, 88, 15, 21, 35, 25, 36, 56, 112, 218, 61, 35, 65, 155, 101, 253, 107, 167, 124, 230, 90, 230, 87, 203, 9, 37, 78, 208, 56, 100, 1, 145, 174, 163, 24, 138, 159, 226, 51, 167, 204, 33, 42, 188, 253, 96, 173, 36, 225, 175, 180, 63, 208, 238, 159, 18, 131, 45, 134, 9, 178, 108, 201, 72, 36, 171, 208, 83, 21, 234, 251, 126, 70, 41, 226, 101, 119, 104, 47, 63, 121, 246, 54, 36, 72, 183, 29, 9, 27, 116, 4, 18, 42, 53, 75, 83, 188, 242, 82, 72, 141, 179, 121, 101, 222, 112, 96, 126, 239, 49, 231, 230, 243, 254, 254, 253, 194, 191, 213, 208, 145, 124, 204, 203, 160, 61, 131, 138, 54, 250, 154, 145, 7, 187, 177, 188, 84, 120, 168, 167, 101, 57, 59, 131, 152, 75, 34, 152, 169, 10, 9, 181, 250, 201, 16, 174, 203, 136, 95, 239, 93, 79, 70, 244, 108, 14, 109, 217, 63, 205, 116, 194, 14, 140, 243, 90, 18, 67, 234, 65, 35, 2, 193, 108, 112, 193, 216, 119, 65, 128, 151, 54, 215, 71, 142, 45, 230, 6, 165, 0, 181, 197, 188, 27, 132, 132, 113, 65, 138, 26, 104, 90, 187, 91, 67, 119, 232, 152, 90, 108, 217, 217, 21, 45, 79, 30, 12, 54, 126, 95, 39, 27, 45, 156, 62, 0, 28, 221, 185, 152, 0, 18, 160, 131, 49, 83, 139, 174, 98, 144, 146, 181, 83, 209, 221, 244, 197, 22, 196, 239, 244, 87, 239, 194, 167, 148, 246, 217, 150, 213, 174, 7, 188, 233, 183, 28, 141, 168, 156, 49, 222, 107, 133, 42, 239, 42, 202, 107, 121, 237, 211, 112, 72, 172, 248, 93, 27, 111, 225, 70, 42, 46, 102, 222, 54, 225, 127, 197, 7, 160, 84, 232, 84, 99, 77, 243, 101, 34, 2, 178, 243, 229, 27, 169, 194, 164, 48, 132, 145, 103, 41, 159, 160, 38, 228, 197, 174, 184, 253, 222, 159, 249, 214, 243, 204, 58, 207, 232, 253, 123, 128, 169, 107, 188, 153, 178, 90, 253, 178, 159, 9, 62, 171, 132, 56, 127, 44, 28, 36, 176, 53, 7, 21, 241, 30, 42, 70, 50, 7, 49, 119, 115, 72, 112, 225, 180, 81, 107, 208, 245, 122, 70, 131, 54, 99, 93, 178, 119, 203, 250, 215, 78, 210, 225, 230, 15, 249, 204, 181, 204, 224, 215, 132, 141, 175, 150, 18, 74, 182, 141, 35, 11, 157, 160, 112, 200, 132, 187, 65, 137, 3, 35, 93, 70, 26, 56, 108, 7, 49, 21, 63, 196, 40, 14, 14, 133, 103, 79, 152, 66, 126, 84, 169, 3, 85, 121, 250, 192, 76, 98, 203, 129, 129, 56, 197, 31, 152, 35, 244, 94, 179, 14, 167, 157, 170, 21, 150, 220, 229, 84, 0, 27, 252, 79, 49, 90, 215, 98, 98, 153, 206, 121, 83, 216, 73, 225, 79, 23, 80, 250, 126, 86, 123, 215, 45, 149, 98, 204, 28, 212, 45, 141, 138, 19, 52, 150, 187, 82, 31, 187, 232, 145, 6, 160, 217, 208, 94, 126, 243, 236, 71, 101, 194, 173, 108, 72, 145, 110, 117, 83, 160, 47, 58, 18, 54, 232, 35, 9, 7, 169, 8, 36, 84, 106, 17, 63, 101, 43, 150, 167, 121, 228, 143, 188, 72, 165, 164, 145, 27, 102, 189, 138, 42, 39, 242, 203, 188, 224, 235, 208, 141, 161, 192, 253, 222, 98, 217, 230, 239, 35, 20, 188, 225, 189, 13, 167, 208, 252, 38, 138, 131, 63, 63, 145, 178, 126, 112, 208, 36, 185, 105, 203, 21, 248, 66, 230, 70, 59, 91, 253, 119, 122, 220, 101, 107, 181, 197, 126, 90, 244, 238, 83, 9, 55, 247, 72, 56, 118, 184, 9, 174, 177, 161, 18, 159, 240, 138, 63, 204, 51, 147, 36, 253, 114, 0, 0, 0, 0, 1, 194, 106, 55, 3, 132, 212, 110, 2, 70, 190, 89, 7, 9, 168, 220, 6, 203, 194, 235, 4, 141, 124, 178, 5, 79, 22, 133, 14, 19, 81, 184, 15, 209, 59, 143, 13, 151, 133, 214, 12, 85, 239, 225, 9, 26, 249, 100, 8, 216, 147, 83, 10, 158, 45, 10, 11, 92, 71, 61, 28, 38, 163, 112, 29, 228, 201, 71, 31, 162, 119, 30, 30, 96, 29, 41, 27, 47, 11, 172, 26, 237, 97, 155, 24, 171, 223, 194, 25, 105, 181, 245, 18, 53, 242, 200, 19, 247, 152, 255, 17, 177, 38, 166, 16, 115, 76, 145, 21, 60, 90, 20, 20, 254, 48, 35, 22, 184, 142, 122, 23, 122, 228, 77, 56, 77, 70, 224, 57, 143, 44, 215, 59, 201, 146, 142, 58, 11, 248, 185, 63, 68, 238, 60, 62, 134, 132, 11, 60, 192, 58, 82, 61, 2, 80, 101, 54, 94, 23, 88, 55, 156, 125, 111, 53, 218, 195, 54, 52, 24, 169, 1, 49, 87, 191, 132, 48, 149, 213, 179, 50, 211, 107, 234, 51, 17, 1, 221, 36, 107, 229, 144, 37, 169, 143, 167, 39, 239, 49, 254, 38, 45, 91, 201, 35, 98, 77, 76, 34, 160, 39, 123, 32, 230, 153, 34, 33, 36, 243, 21, 42, 120, 180, 40, 43, 186, 222, 31, 41, 252, 96, 70, 40, 62, 10, 113, 45, 113, 28, 244, 44, 179, 118, 195, 46, 245, 200, 154, 47, 55, 162, 173, 112, 154, 141, 192, 113, 88, 231, 247, 115, 30, 89, 174, 114, 220, 51, 153, 119, 147, 37, 28, 118, 81, 79, 43, 116, 23, 241, 114, 117, 213, 155, 69, 126, 137, 220, 120, 127, 75, 182, 79, 125, 13, 8, 22, 124, 207, 98, 33, 121, 128, 116, 164, 120, 66, 30, 147, 122, 4, 160, 202, 123, 198, 202, 253, 108, 188, 46, 176, 109, 126, 68, 135, 111, 56, 250, 222, 110, 250, 144, 233, 107, 181, 134, 108, 106, 119, 236, 91, 104, 49, 82, 2, 105, 243, 56, 53, 98, 175, 127, 8, 99, 109, 21, 63, 97, 43, 171, 102, 96, 233, 193, 81, 101, 166, 215, 212, 100, 100, 189, 227, 102, 34, 3, 186, 103, 224, 105, 141, 72, 215, 203, 32, 73, 21, 161, 23, 75, 83, 31, 78, 74, 145, 117, 121, 79, 222, 99, 252, 78, 28, 9, 203, 76, 90, 183, 146, 77, 152, 221, 165, 70, 196, 154, 152, 71, 6, 240, 175, 69, 64, 78, 246, 68, 130, 36, 193, 65, 205, 50, 68, 64, 15, 88, 115, 66, 73, 230, 42, 67, 139, 140, 29, 84, 241, 104, 80, 85, 51, 2, 103, 87, 117, 188, 62, 86, 183, 214, 9, 83, 248, 192, 140, 82, 58, 170, 187, 80, 124, 20, 226, 81, 190, 126, 213, 90, 226, 57, 232, 91, 32, 83, 223, 89, 102, 237, 134, 88, 164, 135, 177, 93, 235, 145, 52, 92, 41, 251, 3, 94, 111, 69, 90, 95, 173, 47, 109, 225, 53, 27, 128, 224, 247, 113, 183, 226, 177, 207, 238, 227, 115, 165, 217, 230, 60, 179, 92, 231, 254, 217, 107, 229, 184, 103, 50, 228, 122, 13, 5, 239, 38, 74, 56, 238, 228, 32, 15, 236, 162, 158, 86, 237, 96, 244, 97, 232, 47, 226, 228, 233, 237, 136, 211, 235, 171, 54, 138, 234, 105, 92, 189, 253, 19, 184, 240, 252, 209, 210, 199, 254, 151, 108, 158, 255, 85, 6, 169, 250, 26, 16, 44, 251, 216, 122, 27, 249, 158, 196, 66, 248, 92, 174, 117, 243, 0, 233, 72, 242, 194, 131, 127, 240, 132, 61, 38, 241, 70, 87, 17, 244, 9, 65, 148, 245, 203, 43, 163, 247, 141, 149, 250, 246, 79, 255, 205, 217, 120, 93, 96, 216, 186, 55, 87, 218, 252, 137, 14, 219, 62, 227, 57, 222, 113, 245, 188, 223, 179, 159, 139, 221, 245, 33, 210, 220, 55, 75, 229, 215, 107, 12, 216, 214, 169, 102, 239, 212, 239, 216, 182, 213, 45, 178, 129, 208, 98, 164, 4, 209, 160, 206, 51, 211, 230, 112, 106, 210, 36, 26, 93, 197, 94, 254, 16, 196, 156, 148, 39, 198, 218, 42, 126, 199, 24, 64, 73, 194, 87, 86, 204, 195, 149, 60, 251, 193, 211, 130, 162, 192, 17, 232, 149, 203, 77, 175, 168, 202, 143, 197, 159, 200, 201, 123, 198, 201, 11, 17, 241, 204, 68, 7, 116, 205, 134, 109, 67, 207, 192, 211, 26, 206, 2, 185, 45, 145, 175, 150, 64, 144, 109, 252, 119, 146, 43, 66, 46, 147, 233, 40, 25, 150, 166, 62, 156, 151, 100, 84, 171, 149, 34, 234, 242, 148, 224, 128, 197, 159, 188, 199, 248, 158, 126, 173, 207, 156, 56, 19, 150, 157, 250, 121, 161, 152, 181, 111, 36, 153, 119, 5, 19, 155, 49, 187, 74, 154, 243, 209, 125, 141, 137, 53, 48, 140, 75, 95, 7, 142, 13, 225, 94, 143, 207, 139, 105, 138, 128, 157, 236, 139, 66, 247, 219, 137, 4, 73, 130, 136, 198, 35, 181, 131, 154, 100, 136, 130, 88, 14, 191, 128, 30, 176, 230, 129, 220, 218, 209, 132, 147, 204, 84, 133, 81, 166, 99, 135, 23, 24, 58, 134, 213, 114, 13, 169, 226, 208, 160, 168, 32, 186, 151, 170, 102, 4, 206, 171, 164, 110, 249, 174, 235, 120, 124, 175, 41, 18, 75, 173, 111, 172, 18, 172, 173, 198, 37, 167, 241, 129, 24, 166, 51, 235, 47, 164, 117, 85, 118, 165, 183, 63, 65, 160, 248, 41, 196, 161, 58, 67, 243, 163, 124, 253, 170, 162, 190, 151, 157, 181, 196, 115, 208, 180, 6, 25, 231, 182, 64, 167, 190, 183, 130, 205, 137, 178, 205, 219, 12, 179, 15, 177, 59, 177, 73, 15, 98, 176, 139, 101, 85, 187, 215, 34, 104, 186, 21, 72, 95, 184, 83, 246, 6, 185, 145, 156, 49, 188, 222, 138, 180, 189, 28, 224, 131, 191, 90, 94, 218, 190, 152, 52, 237, 0, 0, 0, 0, 184, 188, 103, 101, 170, 9, 200, 139, 18, 181, 175, 238, 143, 98, 151, 87, 55, 222, 240, 50, 37, 107, 95, 220, 157, 215, 56, 185, 197, 180, 40, 239, 125, 8, 79, 138, 111, 189, 224, 100, 215, 1, 135, 1, 74, 214, 191, 184, 242, 106, 216, 221, 224, 223, 119, 51, 88, 99, 16, 86, 80, 25, 87, 159, 232, 165, 48, 250, 250, 16, 159, 20, 66, 172, 248, 113, 223, 123, 192, 200, 103, 199, 167, 173, 117, 114, 8, 67, 205, 206, 111, 38, 149, 173, 127, 112, 45, 17, 24, 21, 63, 164, 183, 251, 135, 24, 208, 158, 26, 207, 232, 39, 162, 115, 143, 66, 176, 198, 32, 172, 8, 122, 71, 201, 160, 50, 175, 62, 24, 142, 200, 91, 10, 59, 103, 181, 178, 135, 0, 208, 47, 80, 56, 105, 151, 236, 95, 12, 133, 89, 240, 226, 61, 229, 151, 135, 101, 134, 135, 209, 221, 58, 224, 180, 207, 143, 79, 90, 119, 51, 40, 63, 234, 228, 16, 134, 82, 88, 119, 227, 64, 237, 216, 13, 248, 81, 191, 104, 240, 43, 248, 161, 72, 151, 159, 196, 90, 34, 48, 42, 226, 158, 87, 79, 127, 73, 111, 246, 199, 245, 8, 147, 213, 64, 167, 125, 109, 252, 192, 24, 53, 159, 208, 78, 141, 35, 183, 43, 159, 150, 24, 197, 39, 42, 127, 160, 186, 253, 71, 25, 2, 65, 32, 124, 16, 244, 143, 146, 168, 72, 232, 247, 155, 20, 88, 61, 35, 168, 63, 88, 49, 29, 144, 182, 137, 161, 247, 211, 20, 118, 207, 106, 172, 202, 168, 15, 190, 127, 7, 225, 6, 195, 96, 132, 94, 160, 112, 210, 230, 28, 23, 183, 244, 169, 184, 89, 76, 21, 223, 60, 209, 194, 231, 133, 105, 126, 128, 224, 123, 203, 47, 14, 195, 119, 72, 107, 203, 13, 15, 162, 115, 177, 104, 199, 97, 4, 199, 41, 217, 184, 160, 76, 68, 111, 152, 245, 252, 211, 255, 144, 238, 102, 80, 126, 86, 218, 55, 27, 14, 185, 39, 77, 182, 5, 64, 40, 164, 176, 239, 198, 28, 12, 136, 163, 129, 219, 176, 26, 57, 103, 215, 127, 43, 210, 120, 145, 147, 110, 31, 244, 59, 38, 247, 3, 131, 154, 144, 102, 145, 47, 63, 136, 41, 147, 88, 237, 180, 68, 96, 84, 12, 248, 7, 49, 30, 77, 168, 223, 166, 241, 207, 186, 254, 146, 223, 236, 70, 46, 184, 137, 84, 155, 23, 103, 236, 39, 112, 2, 113, 240, 72, 187, 201, 76, 47, 222, 219, 249, 128, 48, 99, 69, 231, 85, 107, 63, 160, 156, 211, 131, 199, 249, 193, 54, 104, 23, 121, 138, 15, 114, 228, 93, 55, 203, 92, 225, 80, 174, 78, 84, 255, 64, 246, 232, 152, 37, 174, 139, 136, 115, 22, 55, 239, 22, 4, 130, 64, 248, 188, 62, 39, 157, 33, 233, 31, 36, 153, 85, 120, 65, 139, 224, 215, 175, 51, 92, 176, 202, 237, 89, 182, 59, 85, 229, 209, 94, 71, 80, 126, 176, 255, 236, 25, 213, 98, 59, 33, 108, 218, 135, 70, 9, 200, 50, 233, 231, 112, 142, 142, 130, 40, 237, 158, 212, 144, 81, 249, 177, 130, 228, 86, 95, 58, 88, 49, 58, 167, 143, 9, 131, 31, 51, 110, 230, 13, 134, 193, 8, 181, 58, 166, 109, 189, 64, 225, 164, 5, 252, 134, 193, 23, 73, 41, 47, 175, 245, 78, 74, 50, 34, 118, 243, 138, 158, 17, 150, 152, 43, 190, 120, 32, 151, 217, 29, 120, 244, 201, 75, 192, 72, 174, 46, 210, 253, 1, 192, 106, 65, 102, 165, 247, 150, 94, 28, 79, 42, 57, 121, 93, 159, 150, 151, 229, 35, 241, 242, 77, 107, 25, 5, 245, 215, 126, 96, 231, 98, 209, 142, 95, 222, 182, 235, 194, 9, 142, 82, 122, 181, 233, 55, 104, 0, 70, 217, 208, 188, 33, 188, 136, 223, 49, 234, 48, 99, 86, 143, 34, 214, 249, 97, 154, 106, 158, 4, 7, 189, 166, 189, 191, 1, 193, 216, 173, 180, 110, 54, 21, 8, 9, 83, 29, 114, 78, 154, 165, 206, 41, 255, 183, 123, 134, 17, 15, 199, 225, 116, 146, 16, 217, 205, 42, 172, 190, 168, 56, 25, 17, 70, 128, 165, 118, 35, 216, 198, 102, 117, 96, 122, 1, 16, 114, 207, 174, 254, 202, 115, 201, 155, 87, 164, 241, 34, 239, 24, 150, 71, 253, 173, 57, 169, 69, 17, 94, 204, 118, 77, 238, 6, 206, 241, 137, 99, 220, 68, 38, 141, 100, 248, 65, 232, 249, 47, 121, 81, 65, 147, 30, 52, 83, 38, 177, 218, 235, 154, 214, 191, 179, 249, 198, 233, 11, 69, 161, 140, 25, 240, 14, 98, 161, 76, 105, 7, 60, 155, 81, 190, 132, 39, 54, 219, 150, 146, 153, 53, 46, 46, 254, 80, 38, 84, 185, 153, 158, 232, 222, 252, 140, 93, 113, 18, 52, 225, 22, 119, 169, 54, 46, 206, 17, 138, 73, 171, 3, 63, 230, 69, 187, 131, 129, 32, 227, 224, 145, 118, 91, 92, 246, 19, 73, 233, 89, 253, 241, 85, 62, 152, 108, 130, 6, 33, 212, 62, 97, 68, 198, 139, 206, 170, 126, 55, 169, 207, 214, 127, 65, 56, 110, 195, 38, 93, 124, 118, 137, 179, 196, 202, 238, 214, 89, 29, 214, 111, 225, 161, 177, 10, 243, 20, 30, 228, 75, 168, 121, 129, 19, 203, 105, 215, 171, 119, 14, 178, 185, 194, 161, 92, 1, 126, 198, 57, 156, 169, 254, 128, 36, 21, 153, 229, 54, 160, 54, 11, 142, 28, 81, 110, 134, 102, 22, 167, 62, 218, 113, 194, 44, 111, 222, 44, 148, 211, 185, 73, 9, 4, 129, 240, 177, 184, 230, 149, 163, 13, 73, 123, 27, 177, 46, 30, 67, 210, 62, 72, 251, 110, 89, 45, 233, 219, 246, 195, 81, 103, 145, 166, 204, 176, 169, 31, 116, 12, 206, 122, 102, 185, 97, 148, 222, 5, 6, 241, 80, 75, 3, 4, 0, 0, 0, 0, 80, 75, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 46, 50, 46, 56, 0, 0, 0, 7, 32, 58, 38, 59, 38, 101, 38, 102, 38, 99, 38, 96, 38, 34, 32, 216, 37, 203, 37, 217, 37, 66, 38, 64, 38, 106, 38, 107, 38, 60, 38, 186, 37, 196, 37, 149, 33, 60, 32, 182, 0, 167, 0, 172, 37, 168, 33, 145, 33, 147, 33, 146, 33, 144, 33, 31, 34, 148, 33, 178, 37, 188, 37, 32, 0, 33, 0, 34, 0, 35, 0, 36, 0, 37, 0, 38, 0, 39, 0, 40, 0, 41, 0, 42, 0, 43, 0, 44, 0, 45, 0, 46, 0, 47, 0, 48, 0, 49, 0, 50, 0, 51, 0, 52, 0, 53, 0, 54, 0, 55, 0, 56, 0, 57, 0, 58, 0, 59, 0, 60, 0, 61, 0, 62, 0, 63, 0, 64, 0, 65, 0, 66, 0, 67, 0, 68, 0, 69, 0, 70, 0, 71, 0, 72, 0, 73, 0, 74, 0, 75, 0, 76, 0, 77, 0, 78, 0, 79, 0, 80, 0, 81, 0, 82, 0, 83, 0, 84, 0, 85, 0, 86, 0, 87, 0, 88, 0, 89, 0, 90, 0, 91, 0, 92, 0, 93, 0, 94, 0, 95, 0, 96, 0, 97, 0, 98, 0, 99, 0, 100, 0, 101, 0, 102, 0, 103, 0, 104, 0, 105, 0, 106, 0, 107, 0, 108, 0, 109, 0, 110, 0, 111, 0, 112, 0, 113, 0, 114, 0, 115, 0, 116, 0, 117, 0, 118, 0, 119, 0, 120, 0, 121, 0, 122, 0, 123, 0, 124, 0, 125, 0, 126, 0, 2, 35, 199, 0, 252, 0, 233, 0, 226, 0, 228, 0, 224, 0, 229, 0, 231, 0, 234, 0, 235, 0, 232, 0, 239, 0, 238, 0, 236, 0, 196, 0, 197, 0, 201, 0, 230, 0, 198, 0, 244, 0, 246, 0, 242, 0, 251, 0, 249, 0, 255, 0, 214, 0, 220, 0, 162, 0, 163, 0, 165, 0, 167, 32, 146, 1, 225, 0, 237, 0, 243, 0, 250, 0, 241, 0, 209, 0, 170, 0, 186, 0, 191, 0, 16, 35, 172, 0, 189, 0, 188, 0, 161, 0, 171, 0, 187, 0, 145, 37, 146, 37, 147, 37, 2, 37, 36, 37, 97, 37, 98, 37, 86, 37, 85, 37, 99, 37, 81, 37, 87, 37, 93, 37, 92, 37, 91, 37, 16, 37, 20, 37, 52, 37, 44, 37, 28, 37, 0, 37, 60, 37, 94, 37, 95, 37, 90, 37, 84, 37, 105, 37, 102, 37, 96, 37, 80, 37, 108, 37, 103, 37, 104, 37, 100, 37, 101, 37, 89, 37, 88, 37, 82, 37, 83, 37, 107, 37, 106, 37, 24, 37, 12, 37, 136, 37, 132, 37, 140, 37, 144, 37, 128, 37, 177, 3, 223, 0, 147, 3, 192, 3, 163, 3, 195, 3, 181, 0, 196, 3, 166, 3, 152, 3, 169, 3, 180, 3, 30, 34, 198, 3, 181, 3, 41, 34, 97, 34, 177, 0, 101, 34, 100, 34, 32, 35, 33, 35, 247, 0, 72, 34, 176, 0, 25, 34, 183, 0, 26, 34, 127, 32, 178, 0, 160, 37, 160, 0, 80, 75, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 75, 6, 7, 0, 0, 0, 0, 80, 75, 6, 6, 0, 0, 0, 0, 84, 79, 82, 82, 69, 78, 84, 90, 73, 80, 80, 69, 68, 45, 0, 0, 84, 79, 82, 82, 69, 78, 84, 90, 73, 80, 80, 69, 68, 45, 88, 88, 88, 88, 88, 88, 88, 88, 0, 0, 37, 115, 47, 46, 122, 105, 112, 46, 88, 88, 88, 88, 88, 88, 0, 0, 37, 115, 46, 88, 88, 88, 88, 88, 88, 0, 0, 0, 0, 0, 0, 0, 114, 43, 98, 0, 0, 0, 0, 0, 37, 48, 56, 108, 88, 0, 0, 0, 78, 111, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 0, 0, 77, 117, 108, 116, 105, 45, 100, 105, 115, 107, 32, 122, 105, 112, 32, 97, 114, 99, 104, 105, 118, 101, 115, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 0, 0, 82, 101, 110, 97, 109, 105, 110, 103, 32, 116, 101, 109, 112, 111, 114, 97, 114, 121, 32, 102, 105, 108, 101, 32, 102, 97, 105, 108, 101, 100, 0, 0, 67, 108, 111, 115, 105, 110, 103, 32, 122, 105, 112, 32, 97, 114, 99, 104, 105, 118, 101, 32, 102, 97, 105, 108, 101, 100, 0, 0, 0, 0, 0, 0, 83, 101, 101, 107, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 82, 101, 97, 100, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 87, 114, 105, 116, 101, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 67, 82, 67, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 0, 67, 111, 110, 116, 97, 105, 110, 105, 110, 103, 32, 122, 105, 112, 32, 97, 114, 99, 104, 105, 118, 101, 32, 119, 97, 115, 32, 99, 108, 111, 115, 101, 100, 0, 0, 0, 0, 0, 0, 0, 78, 111, 32, 115, 117, 99, 104, 32, 102, 105, 108, 101, 0, 0, 0, 0, 70, 105, 108, 101, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 0, 0, 0, 0, 0, 67, 97, 110, 39, 116, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 0, 70, 97, 105, 108, 117, 114, 101, 32, 116, 111, 32, 99, 114, 101, 97, 116, 101, 32, 116, 101, 109, 112, 111, 114, 97, 114, 121, 32, 102, 105, 108, 101, 0, 0, 0, 0, 0, 0, 0, 0, 90, 108, 105, 98, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 77, 97, 108, 108, 111, 99, 32, 102, 97, 105, 108, 117, 114, 101, 0, 0, 69, 110, 116, 114, 121, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 99, 104, 97, 110, 103, 101, 100, 0, 0, 67, 111, 109, 112, 114, 101, 115, 115, 105, 111, 110, 32, 109, 101, 116, 104, 111, 100, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 80, 114, 101, 109, 97, 116, 117, 114, 101, 32, 69, 79, 70, 0, 0, 0, 73, 110, 118, 97, 108, 105, 100, 32, 97, 114, 103, 117, 109, 101, 110, 116, 0, 0, 0, 0, 0, 0, 0, 0, 78, 111, 116, 32, 97, 32, 122, 105, 112, 32, 97, 114, 99, 104, 105, 118, 101, 0, 0, 0, 0, 0, 0, 0, 73, 110, 116, 101, 114, 110, 97, 108, 32, 101, 114, 114, 111, 114, 0, 0, 90, 105, 112, 32, 97, 114, 99, 104, 105, 118, 101, 32, 105, 110, 99, 111, 110, 115, 105, 115, 116, 101, 110, 116, 0, 0, 0, 0, 0, 0, 0, 0, 67, 97, 110, 39, 116, 32, 114, 101, 109, 111, 118, 101, 32, 102, 105, 108, 101, 0, 0, 0, 0, 0, 0, 0, 69, 110, 116, 114, 121, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 100, 101, 108, 101, 116, 101, 100, 0, 0, 69, 110, 99, 114, 121, 112, 116, 105, 111, 110, 32, 109, 101, 116, 104, 111, 100, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 82, 101, 97, 100, 45, 111, 110, 108, 121, 32, 97, 114, 99, 104, 105, 118, 101, 0, 0, 0, 0, 0, 0, 0, 78, 111, 32, 112, 97, 115, 115, 119, 111, 114, 100, 32, 112, 114, 111, 118, 105, 100, 101, 100, 0, 0, 0, 0, 87, 114, 111, 110, 103, 32, 112, 97, 115, 115, 119, 111, 114, 100, 32, 112, 114, 111, 118, 105, 100, 101, 100, 0, 184, 59, 0, 0, 200, 59, 0, 0, 240, 59, 0, 0, 16, 60, 0, 0, 48, 60, 0, 0, 64, 60, 0, 0, 80, 60, 0, 0, 96, 60, 0, 0, 112, 60, 0, 0, 152, 60, 0, 0, 168, 60, 0, 0, 192, 60, 0, 0, 208, 60, 0, 0, 248, 60, 0, 0, 8, 61, 0, 0, 24, 61, 0, 0, 48, 61, 0, 0, 88, 61, 0, 0, 104, 61, 0, 0, 128, 61, 0, 0, 152, 61, 0, 0, 168, 61, 0, 0, 200, 61, 0, 0, 224, 61, 0, 0, 248, 61, 0, 0, 24, 62, 0, 0, 48, 62, 0, 0, 72, 62, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 110, 107, 110, 111, 119, 110, 32, 101, 114, 114, 111, 114, 32, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 37, 115, 37, 115, 37, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 109, 117, 108, 97, 116, 105, 111, 110, 32, 97, 98, 111, 114, 116, 101, 100, 32, 100, 117, 101, 32, 116, 111, 32, 110, 101, 115, 116, 101, 100, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 32, 116, 105, 109, 101, 111, 117, 116, 46, 0, 0, 0, 0, 0, 0, 52, 52, 49, 48, 48, 0, 0, 0, 52, 56, 48, 48, 48, 0, 0, 0, 51, 50, 48, 48, 48, 0, 0, 0, 50, 50, 48, 53, 48, 0, 0, 0, 49, 54, 48, 48, 48, 0, 0, 0, 49, 49, 48, 50, 53, 0, 0, 0, 56, 48, 48, 48, 0, 0, 0, 0, 52, 57, 55, 49, 54, 0, 0, 0, 248, 63, 0, 0, 0, 64, 0, 0, 8, 64, 0, 0, 16, 64, 0, 0, 24, 64, 0, 0, 32, 64, 0, 0, 40, 64, 0, 0, 48, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 63, 0, 0, 48, 64, 0, 0, 0, 64, 0, 0, 8, 64, 0, 0, 16, 64, 0, 0, 24, 64, 0, 0, 32, 64, 0, 0, 40, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 48, 0, 0, 0, 0, 0, 50, 52, 48, 0, 0, 0, 0, 0, 50, 54, 48, 0, 0, 0, 0, 0, 50, 56, 48, 0, 0, 0, 0, 0, 50, 97, 48, 0, 0, 0, 0, 0, 50, 99, 48, 0, 0, 0, 0, 0, 50, 101, 48, 0, 0, 0, 0, 0, 51, 48, 48, 0, 0, 0, 0, 0, 136, 64, 0, 0, 144, 64, 0, 0, 152, 64, 0, 0, 160, 64, 0, 0, 168, 64, 0, 0, 176, 64, 0, 0, 184, 64, 0, 0, 192, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 48, 0, 0, 0, 0, 0, 0, 49, 49, 0, 0, 0, 0, 0, 0, 49, 50, 0, 0, 0, 0, 0, 0, 200, 62, 7, 0, 184, 62, 7, 0, 168, 62, 7, 0, 216, 62, 7, 0, 240, 64, 0, 0, 248, 64, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 152, 62, 7, 0, 184, 62, 7, 0, 224, 62, 7, 0, 168, 62, 7, 0, 192, 62, 7, 0, 200, 62, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 64, 0, 0, 136, 64, 0, 0, 152, 64, 0, 0, 160, 64, 0, 0, 168, 64, 0, 0, 176, 64, 0, 0, 184, 64, 0, 0, 192, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 62, 7, 0, 168, 62, 7, 0, 200, 62, 7, 0, 216, 62, 7, 0, 240, 64, 0, 0, 248, 64, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 168, 62, 7, 0, 224, 62, 7, 0, 152, 62, 7, 0, 184, 62, 7, 0, 192, 62, 7, 0, 200, 62, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 114, 99, 117, 108, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 99, 103, 97, 0, 0, 0, 0, 0, 112, 99, 106, 114, 0, 0, 0, 0, 101, 103, 97, 0, 0, 0, 0, 0, 118, 103, 97, 111, 110, 108, 121, 0, 115, 118, 103, 97, 95, 115, 51, 0, 115, 118, 103, 97, 95, 101, 116, 51, 48, 48, 48, 0, 0, 0, 0, 0, 115, 118, 103, 97, 95, 101, 116, 52, 48, 48, 48, 0, 0, 0, 0, 0, 115, 118, 103, 97, 95, 112, 97, 114, 97, 100, 105, 115, 101, 0, 0, 0, 118, 101, 115, 97, 95, 110, 111, 108, 102, 98, 0, 0, 0, 0, 0, 0, 118, 101, 115, 97, 95, 111, 108, 100, 118, 98, 101, 0, 0, 0, 0, 0, 176, 65, 0, 0, 192, 65, 0, 0, 248, 92, 158, 1, 200, 65, 0, 0, 208, 65, 0, 0, 216, 65, 0, 0, 224, 65, 0, 0, 232, 65, 0, 0, 248, 65, 0, 0, 8, 66, 0, 0, 24, 66, 0, 0, 40, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 101, 108, 101, 99, 116, 32, 97, 110, 111, 116, 104, 101, 114, 32, 108, 97, 110, 103, 117, 97, 103, 101, 32, 102, 105, 108, 101, 46, 0, 0, 0, 109, 97, 99, 104, 105, 110, 101, 0, 84, 104, 101, 32, 116, 121, 112, 101, 32, 111, 102, 32, 109, 97, 99, 104, 105, 110, 101, 32, 116, 114, 105, 101, 115, 32, 116, 111, 32, 101, 109, 117, 108, 97, 116, 101, 46, 0, 0, 0, 99, 97, 112, 116, 117, 114, 101, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 119, 104, 101, 114, 101, 32, 116, 104, 105, 110, 103, 115, 32, 108, 105, 107, 101, 32, 119, 97, 118, 101, 44, 32, 109, 105, 100, 105, 44, 32, 115, 99, 114, 101, 101, 110, 115, 104, 111, 116, 32, 103, 101, 116, 32, 99, 97, 112, 116, 117, 114, 101, 100, 46, 0, 0, 0, 0, 0, 0, 0, 0, 65, 109, 111, 117, 110, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 32, 68, 79, 83, 66, 111, 120, 32, 104, 97, 115, 32, 105, 110, 32, 109, 101, 103, 97, 98, 121, 116, 101, 115, 46, 10, 32, 32, 84, 104, 105, 115, 32, 118, 97, 108, 117, 101, 32, 105, 115, 32, 98, 101, 115, 116, 32, 108, 101, 102, 116, 32, 97, 116, 32, 105, 116, 115, 32, 100, 101, 102, 97, 117, 108, 116, 32, 116, 111, 32, 97, 118, 111, 105, 100, 32, 112, 114, 111, 98, 108, 101, 109, 115, 32, 119, 105, 116, 104, 32, 115, 111, 109, 101, 32, 103, 97, 109, 101, 115, 44, 10, 32, 32, 116, 104, 111, 117, 103, 104, 32, 102, 101, 119, 32, 103, 97, 109, 101, 115, 32, 109, 105, 103, 104, 116, 32, 114, 101, 113, 117, 105, 114, 101, 32, 97, 32, 104, 105, 103, 104, 101, 114, 32, 118, 97, 108, 117, 101, 46, 10, 32, 32, 84, 104, 101, 114, 101, 32, 105, 115, 32, 103, 101, 110, 101, 114, 97, 108, 108, 121, 32, 110, 111, 32, 115, 112, 101, 101, 100, 32, 97, 100, 118, 97, 110, 116, 97, 103, 101, 32, 119, 104, 101, 110, 32, 114, 97, 105, 115, 105, 110, 103, 32, 116, 104, 105, 115, 32, 118, 97, 108, 117, 101, 46, 0, 114, 101, 110, 100, 101, 114, 0, 0, 72, 111, 119, 32, 109, 97, 110, 121, 32, 102, 114, 97, 109, 101, 115, 32, 68, 79, 83, 66, 111, 120, 32, 115, 107, 105, 112, 115, 32, 98, 101, 102, 111, 114, 101, 32, 100, 114, 97, 119, 105, 110, 103, 32, 111, 110, 101, 46, 0, 0, 0, 0, 0, 0, 0, 0, 68, 111, 32, 97, 115, 112, 101, 99, 116, 32, 99, 111, 114, 114, 101, 99, 116, 105, 111, 110, 44, 32, 105, 102, 32, 121, 111, 117, 114, 32, 111, 117, 116, 112, 117, 116, 32, 109, 101, 116, 104, 111, 100, 32, 100, 111, 101, 115, 110, 39, 116, 32, 115, 117, 112, 112, 111, 114, 116, 32, 115, 99, 97, 108, 105, 110, 103, 32, 116, 104, 105, 115, 32, 99, 97, 110, 32, 115, 108, 111, 119, 32, 116, 104, 105, 110, 103, 115, 32, 100, 111, 119, 110, 33, 46, 0, 83, 99, 97, 108, 101, 114, 32, 117, 115, 101, 100, 32, 116, 111, 32, 101, 110, 108, 97, 114, 103, 101, 47, 101, 110, 104, 97, 110, 99, 101, 32, 108, 111, 119, 32, 114, 101, 115, 111, 108, 117, 116, 105, 111, 110, 32, 109, 111, 100, 101, 115, 46, 10, 32, 32, 73, 102, 32, 39, 102, 111, 114, 99, 101, 100, 39, 32, 105, 115, 32, 97, 112, 112, 101, 110, 100, 101, 100, 44, 32, 116, 104, 101, 110, 32, 116, 104, 101, 32, 115, 99, 97, 108, 101, 114, 32, 119, 105, 108, 108, 32, 98, 101, 32, 117, 115, 101, 100, 32, 101, 118, 101, 110, 32, 105, 102, 32, 116, 104, 101, 32, 114, 101, 115, 117, 108, 116, 32, 109, 105, 103, 104, 116, 32, 110, 111, 116, 32, 98, 101, 32, 100, 101, 115, 105, 114, 101, 100, 46, 0, 0, 0, 184, 240, 161, 1, 24, 52, 7, 0, 40, 52, 7, 0, 56, 52, 7, 0, 72, 52, 7, 0, 88, 52, 7, 0, 104, 52, 7, 0, 120, 52, 7, 0, 128, 52, 7, 0, 136, 52, 7, 0, 144, 52, 7, 0, 160, 52, 7, 0, 176, 52, 7, 0, 184, 52, 7, 0, 192, 52, 7, 0, 200, 52, 7, 0, 208, 52, 7, 0, 216, 52, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 41, 202, 1, 16, 52, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 112, 117, 0, 0, 0, 0, 0, 80, 154, 159, 1, 168, 251, 155, 1, 176, 251, 155, 1, 0, 0, 0, 0, 67, 80, 85, 32, 67, 111, 114, 101, 32, 117, 115, 101, 100, 32, 105, 110, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 46, 32, 97, 117, 116, 111, 32, 119, 105, 108, 108, 32, 115, 119, 105, 116, 99, 104, 32, 116, 111, 32, 100, 121, 110, 97, 109, 105, 99, 32, 105, 102, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 32, 97, 110, 100, 32, 97, 112, 112, 114, 111, 112, 114, 105, 97, 116, 101, 46, 0, 0, 0, 80, 154, 159, 1, 200, 251, 155, 1, 32, 252, 155, 1, 48, 252, 155, 1, 80, 252, 155, 1, 208, 251, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 67, 80, 85, 32, 84, 121, 112, 101, 32, 117, 115, 101, 100, 32, 105, 110, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 46, 32, 97, 117, 116, 111, 32, 105, 115, 32, 116, 104, 101, 32, 102, 97, 115, 116, 101, 115, 116, 32, 99, 104, 111, 105, 99, 101, 46, 0, 65, 109, 111, 117, 110, 116, 32, 111, 102, 32, 105, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 115, 32, 68, 79, 83, 66, 111, 120, 32, 116, 114, 105, 101, 115, 32, 116, 111, 32, 101, 109, 117, 108, 97, 116, 101, 32, 101, 97, 99, 104, 32, 109, 105, 108, 108, 105, 115, 101, 99, 111, 110, 100, 46, 10, 83, 101, 116, 116, 105, 110, 103, 32, 116, 104, 105, 115, 32, 118, 97, 108, 117, 101, 32, 116, 111, 111, 32, 104, 105, 103, 104, 32, 114, 101, 115, 117, 108, 116, 115, 32, 105, 110, 32, 115, 111, 117, 110, 100, 32, 100, 114, 111, 112, 111, 117, 116, 115, 32, 97, 110, 100, 32, 108, 97, 103, 115, 46, 10, 67, 121, 99, 108, 101, 115, 32, 99, 97, 110, 32, 98, 101, 32, 115, 101, 116, 32, 105, 110, 32, 51, 32, 119, 97, 121, 115, 58, 10, 32, 32, 39, 97, 117, 116, 111, 39, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 114, 105, 101, 115, 32, 116, 111, 32, 103, 117, 101, 115, 115, 32, 119, 104, 97, 116, 32, 97, 32, 103, 97, 109, 101, 32, 110, 101, 101, 100, 115, 46, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 73, 116, 32, 117, 115, 117, 97, 108, 108, 121, 32, 119, 111, 114, 107, 115, 44, 32, 98, 117, 116, 32, 99, 97, 110, 32, 102, 97, 105, 108, 32, 102, 111, 114, 32, 99, 101, 114, 116, 97, 105, 110, 32, 103, 97, 109, 101, 115, 46, 10, 32, 32, 39, 102, 105, 120, 101, 100, 32, 35, 110, 117, 109, 98, 101, 114, 39, 32, 119, 105, 108, 108, 32, 115, 101, 116, 32, 97, 32, 102, 105, 120, 101, 100, 32, 97, 109, 111, 117, 110, 116, 32, 111, 102, 32, 99, 121, 99, 108, 101, 115, 46, 32, 84, 104, 105, 115, 32, 105, 115, 32, 119, 104, 97, 116, 32, 121, 111, 117, 32, 117, 115, 117, 97, 108, 108, 121, 32, 110, 101, 101, 100, 32, 105, 102, 32, 39, 97, 117, 116, 111, 39, 32, 102, 97, 105, 108, 115, 46, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 40, 69, 120, 97, 109, 112, 108, 101, 58, 32, 102, 105, 120, 101, 100, 32, 52, 48, 48, 48, 41, 46, 10, 32, 32, 39, 109, 97, 120, 39, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 119, 105, 108, 108, 32, 97, 108, 108, 111, 99, 97, 116, 101, 32, 97, 115, 32, 109, 117, 99, 104, 32, 99, 121, 99, 108, 101, 115, 32, 97, 115, 32, 121, 111, 117, 114, 32, 99, 111, 109, 112, 117, 116, 101, 114, 32, 105, 115, 32, 97, 98, 108, 101, 32, 116, 111, 32, 104, 97, 110, 100, 108, 101, 46, 10, 0, 0, 80, 154, 159, 1, 152, 251, 155, 1, 136, 251, 155, 1, 8, 27, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 65, 109, 111, 117, 110, 116, 32, 111, 102, 32, 99, 121, 99, 108, 101, 115, 32, 116, 111, 32, 100, 101, 99, 114, 101, 97, 115, 101, 47, 105, 110, 99, 114, 101, 97, 115, 101, 32, 119, 105, 116, 104, 32, 107, 101, 121, 99, 111, 109, 98, 111, 46, 40, 67, 84, 82, 76, 45, 70, 49, 49, 47, 67, 84, 82, 76, 45, 70, 49, 50, 41, 0, 83, 101, 116, 116, 105, 110, 103, 32, 105, 116, 32, 108, 111, 119, 101, 114, 32, 116, 104, 97, 110, 32, 49, 48, 48, 32, 119, 105, 108, 108, 32, 98, 101, 32, 97, 32, 112, 101, 114, 99, 101, 110, 116, 97, 103, 101, 46, 0, 109, 105, 120, 101, 114, 0, 0, 0, 69, 110, 97, 98, 108, 101, 32, 115, 105, 108, 101, 110, 116, 32, 109, 111, 100, 101, 44, 32, 115, 111, 117, 110, 100, 32, 105, 115, 32, 115, 116, 105, 108, 108, 32, 101, 109, 117, 108, 97, 116, 101, 100, 32, 116, 104, 111, 117, 103, 104, 46, 0, 0, 0, 0, 0, 77, 105, 120, 101, 114, 32, 115, 97, 109, 112, 108, 101, 32, 114, 97, 116, 101, 44, 32, 115, 101, 116, 116, 105, 110, 103, 32, 97, 110, 121, 32, 100, 101, 118, 105, 99, 101, 39, 115, 32, 114, 97, 116, 101, 32, 104, 105, 103, 104, 101, 114, 32, 116, 104, 97, 110, 32, 116, 104, 105, 115, 32, 119, 105, 108, 108, 32, 112, 114, 111, 98, 97, 98, 108, 121, 32, 108, 111, 119, 101, 114, 32, 116, 104, 101, 105, 114, 32, 115, 111, 117, 110, 100, 32, 113, 117, 97, 108, 105, 116, 121, 46, 0, 0, 49, 48, 50, 52, 0, 0, 0, 0, 50, 48, 52, 56, 0, 0, 0, 0, 52, 48, 57, 54, 0, 0, 0, 0, 56, 49, 57, 50, 0, 0, 0, 0, 53, 49, 50, 0, 0, 0, 0, 0, 50, 53, 54, 0, 0, 0, 0, 0, 136, 73, 0, 0, 144, 73, 0, 0, 152, 73, 0, 0, 160, 73, 0, 0, 168, 73, 0, 0, 176, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 105, 120, 101, 114, 32, 98, 108, 111, 99, 107, 32, 115, 105, 122, 101, 44, 32, 108, 97, 114, 103, 101, 114, 32, 98, 108, 111, 99, 107, 115, 32, 109, 105, 103, 104, 116, 32, 104, 101, 108, 112, 32, 115, 111, 117, 110, 100, 32, 115, 116, 117, 116, 116, 101, 114, 105, 110, 103, 32, 98, 117, 116, 32, 115, 111, 117, 110, 100, 32, 119, 105, 108, 108, 32, 97, 108, 115, 111, 32, 98, 101, 32, 109, 111, 114, 101, 32, 108, 97, 103, 103, 101, 100, 46, 0, 72, 111, 119, 32, 109, 97, 110, 121, 32, 109, 105, 108, 108, 105, 115, 101, 99, 111, 110, 100, 115, 32, 111, 102, 32, 100, 97, 116, 97, 32, 116, 111, 32, 107, 101, 101, 112, 32, 111, 110, 32, 116, 111, 112, 32, 111, 102, 32, 116, 104, 101, 32, 98, 108, 111, 99, 107, 115, 105, 122, 101, 46, 0, 0, 109, 105, 100, 105, 0, 0, 0, 0, 192, 209, 161, 1, 160, 209, 161, 1, 184, 240, 161, 1, 0, 0, 0, 0, 119, 105, 110, 51, 50, 0, 0, 0, 97, 108, 115, 97, 0, 0, 0, 0, 99, 111, 114, 101, 97, 117, 100, 105, 111, 0, 0, 0, 0, 0, 0, 0, 99, 111, 114, 101, 109, 105, 100, 105, 0, 0, 0, 0, 0, 0, 0, 0, 184, 33, 89, 0, 144, 74, 0, 0, 152, 74, 0, 0, 192, 34, 89, 0, 160, 74, 0, 0, 176, 74, 0, 0, 184, 240, 161, 1, 0, 0, 0, 0, 84, 121, 112, 101, 32, 111, 102, 32, 77, 80, 85, 45, 52, 48, 49, 32, 116, 111, 32, 101, 109, 117, 108, 97, 116, 101, 46, 0, 0, 0, 0, 0, 68, 101, 118, 105, 99, 101, 32, 116, 104, 97, 116, 32, 119, 105, 108, 108, 32, 114, 101, 99, 101, 105, 118, 101, 32, 116, 104, 101, 32, 77, 73, 68, 73, 32, 100, 97, 116, 97, 32, 102, 114, 111, 109, 32, 77, 80, 85, 45, 52, 48, 49, 46, 0, 0, 0, 0, 83, 112, 101, 99, 105, 97, 108, 32, 99, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 32, 111, 112, 116, 105, 111, 110, 115, 32, 102, 111, 114, 32, 116, 104, 101, 32, 100, 101, 118, 105, 99, 101, 32, 100, 114, 105, 118, 101, 114, 46, 32, 84, 104, 105, 115, 32, 105, 115, 32, 117, 115, 117, 97, 108, 108, 121, 32, 116, 104, 101, 32, 105, 100, 32, 111, 102, 32, 116, 104, 101, 32, 100, 101, 118, 105, 99, 101, 32, 121, 111, 117, 32, 119, 97, 110, 116, 32, 116, 111, 32, 117, 115, 101, 46, 10, 32, 32, 83, 101, 101, 32, 116, 104, 101, 32, 82, 69, 65, 68, 77, 69, 47, 77, 97, 110, 117, 97, 108, 32, 102, 111, 114, 32, 109, 111, 114, 101, 32, 100, 101, 116, 97, 105, 108, 115, 46, 0, 0, 0, 0, 115, 98, 108, 97, 115, 116, 101, 114, 0, 0, 0, 0, 0, 0, 0, 0, 136, 240, 161, 1, 144, 240, 161, 1, 152, 240, 161, 1, 160, 240, 161, 1, 168, 240, 161, 1, 176, 240, 161, 1, 184, 240, 161, 1, 0, 0, 0, 0, 84, 121, 112, 101, 32, 111, 102, 32, 83, 111, 117, 110, 100, 98, 108, 97, 115, 116, 101, 114, 32, 116, 111, 32, 101, 109, 117, 108, 97, 116, 101, 46, 32, 103, 98, 32, 105, 115, 32, 71, 97, 109, 101, 98, 108, 97, 115, 116, 101, 114, 46, 0, 0, 0, 0, 0, 84, 104, 101, 32, 73, 79, 32, 97, 100, 100, 114, 101, 115, 115, 32, 111, 102, 32, 116, 104, 101, 32, 115, 111, 117, 110, 100, 98, 108, 97, 115, 116, 101, 114, 46, 0, 0, 0, 0, 0, 84, 104, 101, 32, 73, 82, 81, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 116, 104, 101, 32, 115, 111, 117, 110, 100, 98, 108, 97, 115, 116, 101, 114, 46, 0, 0, 0, 0, 0, 84, 104, 101, 32, 68, 77, 65, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 116, 104, 101, 32, 115, 111, 117, 110, 100, 98, 108, 97, 115, 116, 101, 114, 46, 0, 0, 0, 0, 0, 84, 104, 101, 32, 72, 105, 103, 104, 32, 68, 77, 65, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 116, 104, 101, 32, 115, 111, 117, 110, 100, 98, 108, 97, 115, 116, 101, 114, 46, 0, 0, 0, 0, 0, 0, 0, 0, 65, 108, 108, 111, 119, 32, 116, 104, 101, 32, 115, 111, 117, 110, 100, 98, 108, 97, 115, 116, 101, 114, 32, 109, 105, 120, 101, 114, 32, 116, 111, 32, 109, 111, 100, 105, 102, 121, 32, 116, 104, 101, 32, 68, 79, 83, 66, 111, 120, 32, 109, 105, 120, 101, 114, 46, 0, 0, 0, 0, 0, 0, 0, 0, 80, 154, 159, 1, 200, 240, 161, 1, 208, 240, 161, 1, 216, 240, 161, 1, 232, 240, 161, 1, 184, 240, 161, 1, 0, 0, 0, 0, 0, 0, 0, 0, 84, 121, 112, 101, 32, 111, 102, 32, 79, 80, 76, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 46, 32, 79, 110, 32, 39, 97, 117, 116, 111, 39, 32, 116, 104, 101, 32, 109, 111, 100, 101, 32, 105, 115, 32, 100, 101, 116, 101, 114, 109, 105, 110, 101, 100, 32, 98, 121, 32, 115, 98, 108, 97, 115, 116, 101, 114, 32, 116, 121, 112, 101, 46, 32, 65, 108, 108, 32, 79, 80, 76, 32, 109, 111, 100, 101, 115, 32, 97, 114, 101, 32, 65, 100, 108, 105, 98, 45, 99, 111, 109, 112, 97, 116, 105, 98, 108, 101, 44, 32, 101, 120, 99, 101, 112, 116, 32, 102, 111, 114, 32, 39, 99, 109, 115, 39, 46, 0, 184, 33, 89, 0, 8, 170, 161, 1, 0, 170, 161, 1, 0, 0, 0, 0, 80, 114, 111, 118, 105, 100, 101, 114, 32, 102, 111, 114, 32, 116, 104, 101, 32, 79, 80, 76, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 46, 32, 99, 111, 109, 112, 97, 116, 32, 109, 105, 103, 104, 116, 32, 112, 114, 111, 118, 105, 100, 101, 32, 98, 101, 116, 116, 101, 114, 32, 113, 117, 97, 108, 105, 116, 121, 32, 40, 115, 101, 101, 32, 111, 112, 108, 114, 97, 116, 101, 32, 97, 115, 32, 119, 101, 108, 108, 41, 46, 0, 0, 0, 0, 0, 0, 83, 97, 109, 112, 108, 101, 32, 114, 97, 116, 101, 32, 111, 102, 32, 79, 80, 76, 32, 109, 117, 115, 105, 99, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 46, 32, 85, 115, 101, 32, 52, 57, 55, 49, 54, 32, 102, 111, 114, 32, 104, 105, 103, 104, 101, 115, 116, 32, 113, 117, 97, 108, 105, 116, 121, 32, 40, 115, 101, 116, 32, 116, 104, 101, 32, 109, 105, 120, 101, 114, 32, 114, 97, 116, 101, 32, 97, 99, 99, 111, 114, 100, 105, 110, 103, 108, 121, 41, 46, 0, 0, 0, 0, 0, 69, 110, 97, 98, 108, 101, 32, 116, 104, 101, 32, 71, 114, 97, 118, 105, 115, 32, 85, 108, 116, 114, 97, 115, 111, 117, 110, 100, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 46, 0, 83, 97, 109, 112, 108, 101, 32, 114, 97, 116, 101, 32, 111, 102, 32, 85, 108, 116, 114, 97, 115, 111, 117, 110, 100, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 46, 0, 0, 0, 0, 84, 104, 101, 32, 73, 79, 32, 98, 97, 115, 101, 32, 97, 100, 100, 114, 101, 115, 115, 32, 111, 102, 32, 116, 104, 101, 32, 71, 114, 97, 118, 105, 115, 32, 85, 108, 116, 114, 97, 115, 111, 117, 110, 100, 46, 0, 0, 0, 84, 104, 101, 32, 73, 82, 81, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 116, 104, 101, 32, 71, 114, 97, 118, 105, 115, 32, 85, 108, 116, 114, 97, 115, 111, 117, 110, 100, 46, 0, 0, 0, 0, 0, 0, 0, 0, 84, 104, 101, 32, 68, 77, 65, 32, 99, 104, 97, 110, 110, 101, 108, 32, 111, 102, 32, 116, 104, 101, 32, 71, 114, 97, 118, 105, 115, 32, 85, 108, 116, 114, 97, 115, 111, 117, 110, 100, 46, 0, 0, 0, 0, 0, 0, 0, 67, 58, 92, 85, 76, 84, 82, 65, 83, 78, 68, 0, 0, 0, 0, 0, 80, 97, 116, 104, 32, 116, 111, 32, 85, 108, 116, 114, 97, 115, 111, 117, 110, 100, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 46, 32, 73, 110, 32, 116, 104, 105, 115, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 10, 116, 104, 101, 114, 101, 32, 115, 104, 111, 117, 108, 100, 32, 98, 101, 32, 97, 32, 77, 73, 68, 73, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 116, 104, 97, 116, 32, 99, 111, 110, 116, 97, 105, 110, 115, 10, 116, 104, 101, 32, 112, 97, 116, 99, 104, 32, 102, 105, 108, 101, 115, 32, 102, 111, 114, 32, 71, 85, 83, 32, 112, 108, 97, 121, 98, 97, 99, 107, 46], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 10240);
allocate([32, 80, 97, 116, 99, 104, 32, 115, 101, 116, 115, 32, 117, 115, 101, 100, 10, 119, 105, 116, 104, 32, 84, 105, 109, 105, 100, 105, 116, 121, 32, 115, 104, 111, 117, 108, 100, 32, 119, 111, 114, 107, 32, 102, 105, 110, 101, 46, 0, 0, 0, 0, 0, 0, 0, 0, 115, 112, 101, 97, 107, 101, 114, 0, 69, 110, 97, 98, 108, 101, 32, 80, 67, 45, 83, 112, 101, 97, 107, 101, 114, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 46, 0, 0, 0, 0, 83, 97, 109, 112, 108, 101, 32, 114, 97, 116, 101, 32, 111, 102, 32, 116, 104, 101, 32, 80, 67, 45, 83, 112, 101, 97, 107, 101, 114, 32, 115, 111, 117, 110, 100, 32, 103, 101, 110, 101, 114, 97, 116, 105, 111, 110, 46, 0, 80, 154, 159, 1, 0, 93, 158, 1, 208, 207, 161, 1, 0, 0, 0, 0, 69, 110, 97, 98, 108, 101, 32, 84, 97, 110, 100, 121, 32, 83, 111, 117, 110, 100, 32, 83, 121, 115, 116, 101, 109, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 46, 32, 70, 111, 114, 32, 39, 97, 117, 116, 111, 39, 44, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 32, 105, 115, 32, 112, 114, 101, 115, 101, 110, 116, 32, 111, 110, 108, 121, 32, 105, 102, 32, 109, 97, 99, 104, 105, 110, 101, 32, 105, 115, 32, 115, 101, 116, 32, 116, 111, 32, 39, 116, 97, 110, 100, 121, 39, 46, 0, 0, 0, 0, 0, 0, 0, 0, 83, 97, 109, 112, 108, 101, 32, 114, 97, 116, 101, 32, 111, 102, 32, 116, 104, 101, 32, 84, 97, 110, 100, 121, 32, 51, 45, 86, 111, 105, 99, 101, 32, 103, 101, 110, 101, 114, 97, 116, 105, 111, 110, 46, 0, 0, 0, 0, 69, 110, 97, 98, 108, 101, 32, 68, 105, 115, 110, 101, 121, 32, 83, 111, 117, 110, 100, 32, 83, 111, 117, 114, 99, 101, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 46, 32, 40, 67, 111, 118, 111, 120, 32, 86, 111, 105, 99, 101, 32, 77, 97, 115, 116, 101, 114, 32, 97, 110, 100, 32, 83, 112, 101, 101, 99, 104, 32, 84, 104, 105, 110, 103, 32, 99, 111, 109, 112, 97, 116, 105, 98, 108, 101, 41, 46, 0, 106, 111, 121, 115, 116, 105, 99, 107, 0, 0, 0, 0, 0, 0, 0, 0, 80, 154, 159, 1, 88, 154, 159, 1, 96, 154, 159, 1, 104, 154, 159, 1, 112, 154, 159, 1, 120, 154, 159, 1, 184, 240, 161, 1, 0, 0, 0, 0, 84, 121, 112, 101, 32, 111, 102, 32, 106, 111, 121, 115, 116, 105, 99, 107, 32, 116, 111, 32, 101, 109, 117, 108, 97, 116, 101, 58, 32, 97, 117, 116, 111, 32, 40, 100, 101, 102, 97, 117, 108, 116, 41, 44, 32, 110, 111, 110, 101, 44, 10, 50, 97, 120, 105, 115, 32, 40, 115, 117, 112, 112, 111, 114, 116, 115, 32, 116, 119, 111, 32, 106, 111, 121, 115, 116, 105, 99, 107, 115, 41, 44, 10, 52, 97, 120, 105, 115, 32, 40, 115, 117, 112, 112, 111, 114, 116, 115, 32, 111, 110, 101, 32, 106, 111, 121, 115, 116, 105, 99, 107, 44, 32, 102, 105, 114, 115, 116, 32, 106, 111, 121, 115, 116, 105, 99, 107, 32, 117, 115, 101, 100, 41, 44, 10, 52, 97, 120, 105, 115, 95, 50, 32, 40, 115, 117, 112, 112, 111, 114, 116, 115, 32, 111, 110, 101, 32, 106, 111, 121, 115, 116, 105, 99, 107, 44, 32, 115, 101, 99, 111, 110, 100, 32, 106, 111, 121, 115, 116, 105, 99, 107, 32, 117, 115, 101, 100, 41, 44, 10, 102, 99, 115, 32, 40, 84, 104, 114, 117, 115, 116, 109, 97, 115, 116, 101, 114, 41, 44, 32, 99, 104, 32, 40, 67, 72, 32, 70, 108, 105, 103, 104, 116, 115, 116, 105, 99, 107, 41, 46, 10, 110, 111, 110, 101, 32, 100, 105, 115, 97, 98, 108, 101, 115, 32, 106, 111, 121, 115, 116, 105, 99, 107, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 46, 10, 97, 117, 116, 111, 32, 99, 104, 111, 111, 115, 101, 115, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 32, 100, 101, 112, 101, 110, 100, 105, 110, 103, 32, 111, 110, 32, 114, 101, 97, 108, 32, 106, 111, 121, 115, 116, 105, 99, 107, 40, 115, 41, 46, 10, 40, 82, 101, 109, 101, 109, 98, 101, 114, 32, 116, 111, 32, 114, 101, 115, 101, 116, 32, 100, 111, 115, 98, 111, 120, 39, 115, 32, 109, 97, 112, 112, 101, 114, 102, 105, 108, 101, 32, 105, 102, 32, 121, 111, 117, 32, 115, 97, 118, 101, 100, 32, 105, 116, 32, 101, 97, 114, 108, 105, 101, 114, 41, 0, 0, 101, 110, 97, 98, 108, 101, 32, 116, 105, 109, 101, 100, 32, 105, 110, 116, 101, 114, 118, 97, 108, 115, 32, 102, 111, 114, 32, 97, 120, 105, 115, 46, 32, 69, 120, 112, 101, 114, 105, 109, 101, 110, 116, 32, 119, 105, 116, 104, 32, 116, 104, 105, 115, 32, 111, 112, 116, 105, 111, 110, 44, 32, 105, 102, 32, 121, 111, 117, 114, 32, 106, 111, 121, 115, 116, 105, 99, 107, 32, 100, 114, 105, 102, 116, 115, 32, 40, 97, 119, 97, 121, 41, 46, 0, 0, 0, 99, 111, 110, 116, 105, 110, 117, 111, 117, 115, 108, 121, 32, 102, 105, 114, 101, 115, 32, 97, 115, 32, 108, 111, 110, 103, 32, 97, 115, 32, 121, 111, 117, 32, 107, 101, 101, 112, 32, 116, 104, 101, 32, 98, 117, 116, 116, 111, 110, 32, 112, 114, 101, 115, 115, 101, 100, 46, 0, 0, 0, 0, 0, 0, 115, 119, 97, 112, 32, 116, 104, 101, 32, 51, 114, 100, 32, 97, 110, 100, 32, 116, 104, 101, 32, 52, 116, 104, 32, 97, 120, 105, 115, 46, 32, 99, 97, 110, 32, 98, 101, 32, 117, 115, 101, 102, 117, 108, 32, 102, 111, 114, 32, 99, 101, 114, 116, 97, 105, 110, 32, 106, 111, 121, 115, 116, 105, 99, 107, 115, 46, 0, 0, 0, 0, 0, 101, 110, 97, 98, 108, 101, 32, 98, 117, 116, 116, 111, 110, 32, 119, 114, 97, 112, 112, 105, 110, 103, 32, 97, 116, 32, 116, 104, 101, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 101, 109, 117, 108, 97, 116, 101, 100, 32, 98, 117, 116, 116, 111, 110, 115, 46, 0, 0, 0, 0, 0, 0, 0, 115, 101, 114, 105, 97, 108, 0, 0, 109, 111, 100, 101, 109, 0, 0, 0, 110, 117, 108, 108, 109, 111, 100, 101, 109, 0, 0, 0, 0, 0, 0, 0, 100, 105, 114, 101, 99, 116, 115, 101, 114, 105, 97, 108, 0, 0, 0, 0, 128, 27, 202, 1, 136, 27, 202, 1, 128, 84, 0, 0, 136, 84, 0, 0, 152, 84, 0, 0, 0, 0, 0, 0, 115, 101, 114, 105, 97, 108, 49, 0, 115, 101, 116, 32, 116, 121, 112, 101, 32, 111, 102, 32, 100, 101, 118, 105, 99, 101, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 32, 116, 111, 32, 99, 111, 109, 32, 112, 111, 114, 116, 46, 10, 67, 97, 110, 32, 98, 101, 32, 100, 105, 115, 97, 98, 108, 101, 100, 44, 32, 100, 117, 109, 109, 121, 44, 32, 109, 111, 100, 101, 109, 44, 32, 110, 117, 108, 108, 109, 111, 100, 101, 109, 44, 32, 100, 105, 114, 101, 99, 116, 115, 101, 114, 105, 97, 108, 46, 10, 65, 100, 100, 105, 116, 105, 111, 110, 97, 108, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 32, 109, 117, 115, 116, 32, 98, 101, 32, 105, 110, 32, 116, 104, 101, 32, 115, 97, 109, 101, 32, 108, 105, 110, 101, 32, 105, 110, 32, 116, 104, 101, 32, 102, 111, 114, 109, 32, 111, 102, 10, 112, 97, 114, 97, 109, 101, 116, 101, 114, 58, 118, 97, 108, 117, 101, 46, 32, 80, 97, 114, 97, 109, 101, 116, 101, 114, 32, 102, 111, 114, 32, 97, 108, 108, 32, 116, 121, 112, 101, 115, 32, 105, 115, 32, 105, 114, 113, 32, 40, 111, 112, 116, 105, 111, 110, 97, 108, 41, 46, 10, 102, 111, 114, 32, 100, 105, 114, 101, 99, 116, 115, 101, 114, 105, 97, 108, 58, 32, 114, 101, 97, 108, 112, 111, 114, 116, 32, 40, 114, 101, 113, 117, 105, 114, 101, 100, 41, 44, 32, 114, 120, 100, 101, 108, 97, 121, 32, 40, 111, 112, 116, 105, 111, 110, 97, 108, 41, 46, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 40, 114, 101, 97, 108, 112, 111, 114, 116, 58, 67, 79, 77, 49, 32, 114, 101, 97, 108, 112, 111, 114, 116, 58, 116, 116, 121, 83, 48, 41, 46, 10, 102, 111, 114, 32, 109, 111, 100, 101, 109, 58, 32, 108, 105, 115, 116, 101, 110, 112, 111, 114, 116, 32, 40, 111, 112, 116, 105, 111, 110, 97, 108, 41, 46, 10, 102, 111, 114, 32, 110, 117, 108, 108, 109, 111, 100, 101, 109, 58, 32, 115, 101, 114, 118, 101, 114, 44, 32, 114, 120, 100, 101, 108, 97, 121, 44, 32, 116, 120, 100, 101, 108, 97, 121, 44, 32, 116, 101, 108, 110, 101, 116, 44, 32, 117, 115, 101, 100, 116, 114, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 114, 97, 110, 115, 112, 97, 114, 101, 110, 116, 44, 32, 112, 111, 114, 116, 44, 32, 105, 110, 104, 115, 111, 99, 107, 101, 116, 32, 40, 97, 108, 108, 32, 111, 112, 116, 105, 111, 110, 97, 108, 41, 46, 10, 69, 120, 97, 109, 112, 108, 101, 58, 32, 115, 101, 114, 105, 97, 108, 49, 61, 109, 111, 100, 101, 109, 32, 108, 105, 115, 116, 101, 110, 112, 111, 114, 116, 58, 53, 48, 48, 48, 0, 0, 0, 115, 101, 114, 105, 97, 108, 50, 0, 115, 101, 101, 32, 115, 101, 114, 105, 97, 108, 49, 0, 0, 0, 0, 0, 115, 101, 114, 105, 97, 108, 51, 0, 115, 101, 114, 105, 97, 108, 52, 0, 69, 110, 97, 98, 108, 101, 32, 88, 77, 83, 32, 115, 117, 112, 112, 111, 114, 116, 46, 0, 0, 0, 0, 0, 69, 110, 97, 98, 108, 101, 32, 69, 77, 83, 32, 115, 117, 112, 112, 111, 114, 116, 46, 0, 0, 0, 0, 0, 69, 110, 97, 98, 108, 101, 32, 85, 77, 66, 32, 115, 117, 112, 112, 111, 114, 116, 46, 0, 0, 0, 0, 0, 76, 97, 110, 103, 117, 97, 103, 101, 32, 99, 111, 100, 101, 32, 111, 102, 32, 116, 104, 101, 32, 107, 101, 121, 98, 111, 97, 114, 100, 32, 108, 97, 121, 111, 117, 116, 32, 40, 111, 114, 32, 110, 111, 110, 101, 41, 46, 0, 97, 117, 116, 111, 101, 120, 101, 99, 0, 0, 0, 0, 0, 0, 0, 0, 65, 85, 84, 79, 69, 88, 69, 67, 95, 67, 79, 78, 70, 73, 71, 70, 73, 76, 69, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 0, 0, 0, 76, 105, 110, 101, 115, 32, 105, 110, 32, 116, 104, 105, 115, 32, 115, 101, 99, 116, 105, 111, 110, 32, 119, 105, 108, 108, 32, 98, 101, 32, 114, 117, 110, 32, 97, 116, 32, 115, 116, 97, 114, 116, 117, 112, 46, 10, 89, 111, 117, 32, 99, 97, 110, 32, 112, 117, 116, 32, 121, 111, 117, 114, 32, 77, 79, 85, 78, 84, 32, 108, 105, 110, 101, 115, 32, 104, 101, 114, 101, 46, 10, 0, 0, 0, 0, 0, 0, 0, 35, 32, 84, 104, 105, 115, 32, 105, 115, 32, 116, 104, 101, 32, 99, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 102, 105, 108, 101, 32, 102, 111, 114, 32, 68, 79, 83, 66, 111, 120, 32, 37, 115, 46, 32, 40, 80, 108, 101, 97, 115, 101, 32, 117, 115, 101, 32, 116, 104, 101, 32, 108, 97, 116, 101, 115, 116, 32, 118, 101, 114, 115, 105, 111, 110, 32, 111, 102, 32, 68, 79, 83, 66, 111, 120, 41, 10, 35, 32, 76, 105, 110, 101, 115, 32, 115, 116, 97, 114, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 97, 32, 35, 32, 97, 114, 101, 32, 99, 111, 109, 109, 101, 110, 116, 108, 105, 110, 101, 115, 32, 97, 110, 100, 32, 97, 114, 101, 32, 105, 103, 110, 111, 114, 101, 100, 32, 98, 121, 32, 68, 79, 83, 66, 111, 120, 46, 10, 35, 32, 84, 104, 101, 121, 32, 97, 114, 101, 32, 117, 115, 101, 100, 32, 116, 111, 32, 40, 98, 114, 105, 101, 102, 108, 121, 41, 32, 100, 111, 99, 117, 109, 101, 110, 116, 32, 116, 104, 101, 32, 101, 102, 102, 101, 99, 116, 32, 111, 102, 32, 101, 97, 99, 104, 32, 111, 112, 116, 105, 111, 110, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 80, 111, 115, 115, 105, 98, 108, 101, 32, 118, 97, 108, 117, 101, 115, 0, 78, 53, 86, 97, 108, 117, 101, 57, 87, 114, 111, 110, 103, 84, 121, 112, 101, 69, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 240, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115, 112, 101, 101, 100, 108, 111, 99, 107, 0, 0, 0, 0, 0, 0, 0, 83, 112, 101, 101, 100, 108, 111, 99, 107, 0, 0, 0, 0, 0, 0, 0, 45, 109, 97, 99, 104, 105, 110, 101, 0, 0, 0, 0, 0, 0, 0, 0, 109, 97, 99, 104, 105, 110, 101, 61, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 66, 79, 88, 58, 85, 110, 107, 110, 111, 119, 110, 32, 109, 97, 99, 104, 105, 110, 101, 32, 116, 121, 112, 101, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 97, 115, 116, 32, 70, 111, 114, 119, 97, 114, 100, 32, 79, 78, 0, 70, 97, 115, 116, 32, 70, 111, 114, 119, 97, 114, 100, 32, 79, 70, 70, 0, 0, 0, 0, 0, 0, 0, 0, 69, 109, 117, 108, 97, 116, 105, 111, 110, 32, 101, 110, 100, 101, 100, 32, 98, 101, 99, 97, 117, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 101, 120, 105, 116, 101, 100, 46], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 20480);
allocate([64, 96, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 120, 96, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 3, 0, 0, 0, 9, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 10, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 6, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 80, 111, 115, 115, 105, 98, 108, 121, 32, 105, 110, 118, 97, 108, 105, 100, 32, 112, 97, 114, 116, 105, 116, 105, 111, 110, 32, 116, 97, 98, 108, 101, 32, 105, 110, 32, 100, 105, 115, 107, 32, 105, 109, 97, 103, 101, 46, 0, 85, 115, 105, 110, 103, 32, 112, 97, 114, 116, 105, 116, 105, 111, 110, 32, 37, 100, 32, 111, 110, 32, 100, 114, 105, 118, 101, 59, 32, 115, 107, 105, 112, 112, 105, 110, 103, 32, 37, 100, 32, 115, 101, 99, 116, 111, 114, 115, 0, 0, 0, 0, 0, 0, 0, 0, 78, 111, 32, 103, 111, 111, 100, 32, 112, 97, 114, 116, 105, 116, 111, 110, 32, 102, 111, 117, 110, 100, 32, 105, 110, 32, 105, 109, 97, 103, 101, 46, 0, 0, 0, 0, 0, 0, 0, 0, 76, 111, 97, 100, 101, 100, 32, 105, 109, 97, 103, 101, 32, 104, 97, 115, 32, 110, 111, 32, 118, 97, 108, 105, 100, 32, 109, 97, 103, 105, 99, 110, 117, 109, 98, 101, 114, 115, 32, 97, 116, 32, 116, 104, 101, 32, 101, 110, 100, 33, 0, 0, 0, 0, 0, 0, 77, 111, 117, 110, 116, 101, 100, 32, 70, 65, 84, 32, 118, 111, 108, 117, 109, 101, 32, 105, 115, 32, 70, 65, 84, 49, 50, 32, 119, 105, 116, 104, 32, 37, 100, 32, 99, 108, 117, 115, 116, 101, 114, 115, 0, 0, 0, 0, 77, 111, 117, 110, 116, 101, 100, 32, 70, 65, 84, 32, 118, 111, 108, 117, 109, 101, 32, 105, 115, 32, 70, 65, 84, 49, 54, 32, 119, 105, 116, 104, 32, 37, 100, 32, 99, 108, 117, 115, 116, 101, 114, 115, 0, 0, 0, 0, 77, 111, 117, 110, 116, 101, 100, 32, 70, 65, 84, 32, 118, 111, 108, 117, 109, 101, 32, 105, 115, 32, 70, 65, 84, 51, 50, 32, 119, 105, 116, 104, 32, 37, 100, 32, 99, 108, 117, 115, 116, 101, 114, 115, 0, 0, 0, 0, 46, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 0, 0, 0, 46, 46, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 0, 0, 0, 55, 102, 97, 116, 70, 105, 108, 101, 0, 0, 0, 0, 0, 0, 0, 0, 56, 68, 79, 83, 95, 70, 105, 108, 101, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 40, 96, 0, 0, 32, 82, 202, 1, 24, 96, 0, 0, 56, 96, 0, 0, 0, 0, 0, 0, 56, 102, 97, 116, 68, 114, 105, 118, 101, 0, 0, 0, 0, 0, 0, 0, 57, 68, 79, 83, 95, 68, 114, 105, 118, 101, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 96, 96, 0, 0, 32, 82, 202, 1, 80, 96, 0, 0, 112, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 11, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 96, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 12, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 76, 79, 65, 68, 70, 73, 88, 95, 68, 69, 65, 76, 76, 79, 67, 65, 76, 76, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 76, 79, 65, 68, 70, 73, 88, 95, 65, 76, 76, 79, 67, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 76, 79, 65, 68, 70, 73, 88, 95, 68, 69, 65, 76, 76, 79, 67, 0, 80, 82, 79, 71, 82, 65, 77, 95, 76, 79, 65, 68, 70, 73, 88, 95, 69, 82, 82, 79, 82, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 82, 69, 83, 67, 65, 78, 95, 83, 85, 67, 67, 69, 83, 83, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 75, 69, 89, 66, 95, 83, 72, 79, 87, 72, 69, 76, 80, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 75, 69, 89, 66, 95, 78, 79, 69, 82, 82, 79, 82, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 75, 69, 89, 66, 95, 70, 73, 76, 69, 78, 79, 84, 70, 79, 85, 78, 68, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 75, 69, 89, 66, 95, 73, 78, 86, 65, 76, 73, 68, 70, 73, 76, 69, 0, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 75, 69, 89, 66, 95, 76, 65, 89, 79, 85, 84, 78, 79, 84, 70, 79, 85, 78, 68, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 75, 69, 89, 66, 95, 73, 78, 86, 67, 80, 70, 73, 76, 69, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 75, 69, 89, 66, 95, 73, 78, 70, 79, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 75, 69, 89, 66, 95, 73, 78, 70, 79, 95, 76, 65, 89, 79, 85, 84, 0, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 67, 68, 82, 79, 77, 83, 95, 70, 79, 85, 78, 68, 0, 0, 0, 0, 0, 0, 67, 68, 82, 79, 77, 115, 32, 102, 111, 117, 110, 100, 58, 32, 37, 100, 10, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 83, 84, 65, 84, 85, 83, 95, 50, 0, 0, 68, 114, 105, 118, 101, 32, 37, 99, 32, 105, 115, 32, 109, 111, 117, 110, 116, 101, 100, 32, 97, 115, 32, 37, 115, 10, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 83, 84, 65, 84, 85, 83, 95, 49, 0, 0, 67, 117, 114, 114, 101, 110, 116, 32, 109, 111, 117, 110, 116, 101, 100, 32, 100, 114, 105, 118, 101, 115, 32, 97, 114, 101, 58, 10, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 69, 82, 82, 79, 82, 95, 49, 0, 0, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 37, 115, 32, 100, 111, 101, 115, 110, 39, 116, 32, 101, 120, 105, 115, 116, 46, 10, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 69, 82, 82, 79, 82, 95, 50, 0, 0, 0, 37, 115, 32, 105, 115, 110, 39, 116, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 10, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 73, 76, 76, 95, 84, 89, 80, 69, 0, 0, 73, 108, 108, 101, 103, 97, 108, 32, 116, 121, 112, 101, 32, 37, 115, 10, 0, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 65, 76, 82, 69, 65, 68, 89, 95, 77, 79, 85, 78, 84, 69, 68, 0, 0, 0, 68, 114, 105, 118, 101, 32, 37, 99, 32, 97, 108, 114, 101, 97, 100, 121, 32, 109, 111, 117, 110, 116, 101, 100, 32, 119, 105, 116, 104, 32, 37, 115, 10, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 85, 83, 65, 71, 69, 0, 0, 0, 0, 0, 85, 115, 97, 103, 101, 32, 27, 91, 51, 52, 59, 49, 109, 77, 79, 85, 78, 84, 32, 68, 114, 105, 118, 101, 45, 76, 101, 116, 116, 101, 114, 32, 76, 111, 99, 97, 108, 45, 68, 105, 114, 101, 99, 116, 111, 114, 121, 27, 91, 48, 109, 10, 70, 111, 114, 32, 101, 120, 97, 109, 112, 108, 101, 58, 32, 77, 79, 85, 78, 84, 32, 99, 32, 37, 115, 10, 84, 104, 105, 115, 32, 109, 97, 107, 101, 115, 32, 116, 104, 101, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 37, 115, 32, 97, 99, 116, 32, 97, 115, 32, 116, 104, 101, 32, 67, 58, 32, 100, 114, 105, 118, 101, 32, 105, 110, 115, 105, 100, 101, 32, 68, 79, 83, 66, 111, 120, 46, 10, 84, 104, 101, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 104, 97, 115, 32, 116, 111, 32, 101, 120, 105, 115, 116, 46, 10, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 85, 77, 79, 85, 78, 84, 95, 78, 79, 84, 95, 77, 79, 85, 78, 84, 69, 68, 0, 0, 0, 0, 0, 0, 0, 0, 68, 114, 105, 118, 101, 32, 37, 99, 32, 105, 115, 110, 39, 116, 32, 109, 111, 117, 110, 116, 101, 100, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 85, 77, 79, 85, 78, 84, 95, 83, 85, 67, 67, 69, 83, 83, 0, 0, 0, 0, 68, 114, 105, 118, 101, 32, 37, 99, 32, 104, 97, 115, 32, 115, 117, 99, 99, 101, 115, 115, 102, 117, 108, 108, 121, 32, 98, 101, 101, 110, 32, 114, 101, 109, 111, 118, 101, 100, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 85, 77, 79, 85, 78, 84, 95, 78, 79, 95, 86, 73, 82, 84, 85, 65, 76, 0, 86, 105, 114, 116, 117, 97, 108, 32, 68, 114, 105, 118, 101, 115, 32, 99, 97, 110, 32, 110, 111, 116, 32, 98, 101, 32, 117, 110, 77, 79, 85, 78, 84, 101, 100, 46, 10, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 87, 65, 82, 78, 73, 78, 71, 95, 87, 73, 78, 0, 0, 0, 0, 0, 0, 0, 27, 91, 51, 49, 59, 49, 109, 77, 111, 117, 110, 116, 105, 110, 103, 32, 99, 58, 92, 32, 105, 115, 32, 78, 79, 84, 32, 114, 101, 99, 111, 109, 109, 101, 110, 100, 101, 100, 46, 32, 80, 108, 101, 97, 115, 101, 32, 109, 111, 117, 110, 116, 32, 97, 32, 40, 115, 117, 98, 41, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 110, 101, 120, 116, 32, 116, 105, 109, 101, 46, 27, 91, 48, 109, 10, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 79, 85, 78, 84, 95, 87, 65, 82, 78, 73, 78, 71, 95, 79, 84, 72, 69, 82, 0, 0, 0, 0, 0, 27, 91, 51, 49, 59, 49, 109, 77, 111, 117, 110, 116, 105, 110, 103, 32, 47, 32, 105, 115, 32, 78, 79, 84, 32, 114, 101, 99, 111, 109, 109, 101, 110, 100, 101, 100, 46, 32, 80, 108, 101, 97, 115, 101, 32, 109, 111, 117, 110, 116, 32, 97, 32, 40, 115, 117, 98, 41, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 110, 101, 120, 116, 32, 116, 105, 109, 101, 46, 27, 91, 48, 109, 10, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 69, 77, 95, 67, 79, 78, 86, 69, 78, 0, 0, 0, 0, 0, 0, 37, 49, 48, 100, 32, 75, 98, 32, 102, 114, 101, 101, 32, 99, 111, 110, 118, 101, 110, 116, 105, 111, 110, 97, 108, 32, 109, 101, 109, 111, 114, 121, 10, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 69, 77, 95, 69, 88, 84, 69, 78, 68, 0, 0, 0, 0, 0, 0, 37, 49, 48, 100, 32, 75, 98, 32, 102, 114, 101, 101, 32, 101, 120, 116, 101, 110, 100, 101, 100, 32, 109, 101, 109, 111, 114, 121, 10, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 69, 77, 95, 69, 88, 80, 65, 78, 68, 0, 0, 0, 0, 0, 0, 37, 49, 48, 100, 32, 75, 98, 32, 102, 114, 101, 101, 32, 101, 120, 112, 97, 110, 100, 101, 100, 32, 109, 101, 109, 111, 114, 121, 10, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 77, 69, 77, 95, 85, 80, 80, 69, 82, 0, 0, 0, 0, 0, 0, 0, 37, 49, 48, 100, 32, 75, 98, 32, 102, 114, 101, 101, 32, 117, 112, 112, 101, 114, 32, 109, 101, 109, 111, 114, 121, 32, 105, 110, 32, 37, 100, 32, 98, 108, 111, 99, 107, 115, 32, 40, 108, 97, 114, 103, 101, 115, 116, 32, 85, 77, 66, 32, 37, 100, 32, 75, 98, 41, 10, 0, 0, 0, 0, 0, 37, 100, 32, 107, 98, 32, 97, 108, 108, 111, 99, 97, 116, 101, 100, 46, 10, 0, 0, 0, 0, 0, 0, 0, 37, 100, 32, 107, 98, 32, 102, 114, 101, 101, 100, 46, 10, 0, 0, 0, 85, 115, 101, 100, 32, 109, 101, 109, 111, 114, 121, 32, 102, 114, 101, 101, 100, 46, 10, 0, 0, 0, 0, 0, 77, 101, 109, 111, 114, 121, 32, 97, 108, 108, 111, 99, 97, 116, 105, 111, 110, 32, 101, 114, 114, 111, 114, 46, 10, 0, 0, 0, 0, 0, 0, 0, 77, 83, 67, 68, 69, 88, 95, 83, 85, 67, 67, 69, 83, 83, 0, 0, 77, 83, 67, 68, 69, 88, 32, 105, 110, 115, 116, 97, 108, 108, 101, 100, 46, 10, 0, 0, 0, 0, 0, 0, 77, 83, 67, 68, 69, 88, 95, 69, 82, 82, 79, 82, 95, 77, 85, 76, 84, 73, 80, 76, 69, 95, 67, 68, 82, 79, 77, 83, 0, 0, 0, 0, 77, 83, 67, 68, 69, 88, 58, 32, 70, 97, 105, 108, 117, 114, 101, 58, 32, 68, 114, 105, 118, 101, 45, 108, 101, 116, 116, 101, 114, 115, 32, 111, 102, 32, 109, 117, 108, 116, 105, 112, 108, 101, 32, 67, 68, 82, 111, 109, 45, 100, 114, 105, 118, 101, 115, 32, 104, 97, 118, 101, 32, 116, 111, 32, 98, 101, 32, 99, 111, 110, 116, 105, 110, 117, 111, 117, 115, 46, 10, 0, 77, 83, 67, 68, 69, 88, 95, 69, 82, 82, 79, 82, 95, 78, 79, 84, 95, 83, 85, 80, 80, 79, 82, 84, 69, 68, 0, 0, 0, 0, 0, 0, 77, 83, 67, 68, 69, 88, 58, 32, 70, 97, 105, 108, 117, 114, 101, 58, 32, 78, 111, 116, 32, 121, 101, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 46, 10, 0, 0, 0, 0, 77, 83, 67, 68, 69, 88, 95, 69, 82, 82, 79, 82, 95, 79, 80, 69, 78, 0, 0, 0, 0, 0, 0, 0, 77, 83, 67, 68, 69, 88, 58, 32, 70, 97, 105, 108, 117, 114, 101, 58, 32, 73, 110, 118, 97, 108, 105, 100, 32, 102, 105, 108, 101, 32, 111, 114, 32, 117, 110, 97, 98, 108, 101, 32, 116, 111, 32, 111, 112, 101, 110, 46, 10, 0, 0, 0, 0, 0, 0, 0, 77, 83, 67, 68, 69, 88, 95, 84, 79, 79, 95, 77, 65, 78, 89, 95, 68, 82, 73, 86, 69, 83, 0, 0, 77, 83, 67, 68, 69, 88, 58, 32, 70, 97, 105, 108, 117, 114, 101, 58, 32, 84, 111, 111, 32, 109, 97, 110, 121, 32, 67, 68, 82, 111, 109, 45, 100, 114, 105, 118, 101, 115, 32, 40, 109, 97, 120, 58, 32, 53, 41, 46, 32, 77, 83, 67, 68, 69, 88, 32, 73, 110, 115, 116, 97, 108, 108, 97, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 46, 10, 0, 0, 0, 77, 83, 67, 68, 69, 88, 95, 76, 73, 77, 73, 84, 69, 68, 95, 83, 85, 80, 80, 79, 82, 84, 0, 0, 77, 83, 67, 68, 69, 88, 58, 32, 77, 111, 117, 110, 116, 101, 100, 32, 115, 117, 98, 100, 105, 114, 101, 99, 116, 111, 114, 121, 58, 32, 108, 105, 109, 105, 116, 101, 100, 32, 115, 117, 112, 112, 111, 114, 116, 46, 10, 0, 77, 83, 67, 68, 69, 88, 95, 73, 78, 86, 65, 76, 73, 68, 95, 70, 73, 76, 69, 70, 79, 82, 77, 65, 84, 0, 0, 0, 0, 0, 0, 0, 77, 83, 67, 68, 69, 88, 58, 32, 70, 97, 105, 108, 117, 114, 101, 58, 32, 70, 105, 108, 101, 32, 105, 115, 32, 101, 105, 116, 104, 101, 114, 32, 110, 111, 32, 105, 115, 111, 47, 99, 117, 101, 32, 105, 109, 97, 103, 101, 32, 111, 114, 32, 99, 111, 110, 116, 97, 105, 110, 115, 32, 101, 114, 114, 111, 114, 115, 46, 10, 0, 0, 0, 77, 83, 67, 68, 69, 88, 95, 85, 78, 75, 78, 79, 87, 78, 95, 69, 82, 82, 79, 82, 0, 0, 0, 0, 77, 83, 67, 68, 69, 88, 58, 32, 70, 97, 105, 108, 117, 114, 101, 58, 32, 85, 110, 107, 110, 111, 119, 110, 32, 101, 114, 114, 111, 114, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 68, 114, 105, 118, 101, 32, 99, 97, 99, 104, 101, 32, 99, 108, 101, 97, 114, 101, 100, 46, 10, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 78, 84, 82, 79, 0, 0, 0, 27, 91, 50, 74, 27, 91, 51, 50, 59, 49, 109, 87, 101, 108, 99, 111, 109, 101, 32, 116, 111, 32, 68, 79, 83, 66, 111, 120, 27, 91, 48, 109, 44, 32, 97, 110, 32, 120, 56, 54, 32, 101, 109, 117, 108, 97, 116, 111, 114, 32, 119, 105, 116, 104, 32, 115, 111, 117, 110, 100, 32, 97, 110, 100, 32, 103, 114, 97, 112, 104, 105, 99, 115, 46, 10, 68, 79, 83, 66, 111, 120, 32, 99, 114, 101, 97, 116, 101, 115, 32, 97, 32, 115, 104, 101, 108, 108, 32, 102, 111, 114, 32, 121, 111, 117, 32, 119, 104, 105, 99, 104, 32, 108, 111, 111, 107, 115, 32, 108, 105, 107, 101, 32, 111, 108, 100, 32, 112, 108, 97, 105, 110, 32, 68, 79, 83, 46, 10, 10, 70, 111, 114, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 97, 98, 111, 117, 116, 32, 98, 97, 115, 105, 99, 32, 109, 111, 117, 110, 116, 32, 116, 121, 112, 101, 32, 27, 91, 51, 52, 59, 49, 109, 105, 110, 116, 114, 111, 32, 109, 111, 117, 110, 116, 27, 91, 48, 109, 10, 70, 111, 114, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 97, 98, 111, 117, 116, 32, 67, 68, 45, 82, 79, 77, 32, 115, 117, 112, 112, 111, 114, 116, 32, 116, 121, 112, 101, 32, 27, 91, 51, 52, 59, 49, 109, 105, 110, 116, 114, 111, 32, 99, 100, 114, 111, 109, 27, 91, 48, 109, 10, 70, 111, 114, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 97, 98, 111, 117, 116, 32, 115, 112, 101, 99, 105, 97, 108, 32, 107, 101, 121, 115, 32, 116, 121, 112, 101, 32, 27, 91, 51, 52, 59, 49, 109, 105, 110, 116, 114, 111, 32, 115, 112, 101, 99, 105, 97, 108, 27, 91, 48, 109, 10, 70, 111, 114, 32, 109, 111, 114, 101, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 97, 98, 111, 117, 116, 32, 68, 79, 83, 66, 111, 120, 44, 32, 103, 111, 32, 116, 111, 32, 27, 91, 51, 52, 59, 49, 109, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 100, 111, 115, 98, 111, 120, 46, 99, 111, 109, 47, 119, 105, 107, 105, 27, 91, 48, 109, 10, 10, 27, 91, 51, 49, 59, 49, 109, 68, 79, 83, 66, 111, 120, 32, 119, 105, 108, 108, 32, 115, 116, 111, 112, 47, 101, 120, 105, 116, 32, 119, 105, 116, 104, 111, 117, 116, 32, 97, 32, 119, 97, 114, 110, 105, 110, 103, 32, 105, 102, 32, 97, 110, 32, 101, 114, 114, 111, 114, 32, 111, 99, 99, 117, 114, 101, 100, 33, 27, 91, 48, 109, 10, 10, 10, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 78, 84, 82, 79, 95, 77, 79, 85, 78, 84, 95, 83, 84, 65, 82, 84, 0, 0, 0, 0, 0, 0, 0, 27, 91, 51, 50, 59, 49, 109, 72, 101, 114, 101, 32, 97, 114, 101, 32, 115, 111, 109, 101, 32, 99, 111, 109, 109, 97, 110, 100, 115, 32, 116, 111, 32, 103, 101, 116, 32, 121, 111, 117, 32, 115, 116, 97, 114, 116, 101, 100, 58, 27, 91, 48, 109, 10, 66, 101, 102, 111, 114, 101, 32, 121, 111, 117, 32, 99, 97, 110, 32, 117, 115, 101, 32, 116, 104, 101, 32, 102, 105, 108, 101, 115, 32, 108, 111, 99, 97, 116, 101, 100, 32, 111, 110, 32, 121, 111, 117, 114, 32, 111, 119, 110, 32, 102, 105, 108, 101, 115, 121, 115, 116, 101, 109, 44, 10, 89, 111, 117, 32, 104, 97, 118, 101, 32, 116, 111, 32, 109, 111, 117, 110, 116, 32, 116, 104, 101, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 99, 111, 110, 116, 97, 105, 110, 105, 110, 103, 32, 116, 104, 101, 32, 102, 105, 108, 101, 115, 46, 10, 10, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 78, 84, 82, 79, 95, 77, 79, 85, 78, 84, 95, 87, 73, 78, 68, 79, 87, 83, 0, 0, 0, 0, 0, 27, 91, 52, 52, 59, 49, 109, 201, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 187, 10, 186, 32, 27, 91, 51, 50, 109, 109, 111, 117, 110, 116, 32, 99, 32, 99, 58, 92, 100, 111, 115, 112, 114, 111, 103, 115, 92, 27, 91, 51, 55, 109, 32, 119, 105, 108, 108, 32, 99, 114, 101, 97, 116, 101, 32, 97, 32, 67, 32, 100, 114, 105, 118, 101, 32, 119, 105, 116, 104, 32, 99, 58, 92, 100, 111, 115, 112, 114, 111, 103, 115, 32, 97, 115, 32, 99, 111, 110, 116, 101, 110, 116, 115, 46, 186, 10, 186, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 186, 32, 27, 91, 51, 50, 109, 99, 58, 92, 100, 111, 115, 112, 114, 111, 103, 115, 92, 27, 91, 51, 55, 109, 32, 105, 115, 32, 97, 110, 32, 101, 120, 97, 109, 112, 108, 101, 46, 32, 82, 101, 112, 108, 97, 99, 101, 32, 105, 116, 32, 119, 105, 116, 104, 32, 121, 111, 117, 114, 32, 111, 119, 110, 32, 103, 97, 109, 101, 115, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 46, 32, 32, 27, 91, 51, 55, 109, 32, 186, 10, 200, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 188, 27, 91, 48, 109, 10, 0, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 78, 84, 82, 79, 95, 77, 79, 85, 78, 84, 95, 79, 84, 72, 69, 82, 0, 0, 0, 0, 0, 0, 0, 27, 91, 52, 52, 59, 49, 109, 201, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 187, 10, 186, 32, 27, 91, 51, 50, 109, 109, 111, 117, 110, 116, 32, 99, 32, 126, 47, 100, 111, 115, 112, 114, 111, 103, 115, 27, 91, 51, 55, 109, 32, 119, 105, 108, 108, 32, 99, 114, 101, 97, 116, 101, 32, 97, 32, 67, 32, 100, 114, 105, 118, 101, 32, 119, 105, 116, 104, 32, 126, 47, 100, 111, 115, 112, 114, 111, 103, 115, 32, 97, 115, 32, 99, 111, 110, 116, 101, 110, 116, 115, 46, 186, 10, 186, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 186, 32, 27, 91, 51, 50, 109, 126, 47, 100, 111, 115, 112, 114, 111, 103, 115, 27, 91, 51, 55, 109, 32, 105, 115, 32, 97, 110, 32, 101, 120, 97, 109, 112, 108, 101, 46, 32, 82, 101, 112, 108, 97, 99, 101, 32, 105, 116, 32, 119, 105, 116, 104, 32, 121, 111, 117, 114, 32, 111, 119, 110, 32, 103, 97, 109, 101, 115, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 46, 27, 91, 51, 55, 109, 32, 32, 186, 10, 200, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 188, 27, 91, 48, 109, 10, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 78, 84, 82, 79, 95, 77, 79, 85, 78, 84, 95, 69, 78, 68, 0, 87, 104, 101, 110, 32, 116, 104, 101, 32, 109, 111, 117, 110, 116, 32, 104, 97, 115, 32, 115, 117, 99, 99, 101, 115, 115, 102, 117, 108, 108, 121, 32, 99, 111, 109, 112, 108, 101, 116, 101, 100, 32, 121, 111, 117, 32, 99, 97, 110, 32, 116, 121, 112, 101, 32, 27, 91, 51, 52, 59, 49, 109, 99, 58, 27, 91, 48, 109, 32, 116, 111, 32, 103, 111, 32, 116, 111, 32, 121, 111, 117, 114, 32, 102, 114, 101, 115, 104, 108, 121, 10, 109, 111, 117, 110, 116, 101, 100, 32, 67, 45, 100, 114, 105, 118, 101, 46, 32, 84, 121, 112, 105, 110, 103, 32, 27, 91, 51, 52, 59, 49, 109, 100, 105, 114, 27, 91, 48, 109, 32, 116, 104, 101, 114, 101, 32, 119, 105, 108, 108, 32, 115, 104, 111, 119, 32, 105, 116, 115, 32, 99, 111, 110, 116, 101, 110, 116, 115, 46, 32, 27, 91, 51, 52, 59, 49, 109, 99, 100, 27, 91, 48, 109, 32, 119, 105, 108, 108, 32, 97, 108, 108, 111, 119, 32, 121, 111, 117, 32, 116, 111, 10, 101, 110, 116, 101, 114, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 40, 114, 101, 99, 111, 103, 110, 105, 115, 101, 100, 32, 98, 121, 32, 116, 104, 101, 32, 27, 91, 51, 51, 59, 49, 109, 91, 93, 27, 91, 48, 109, 32, 105, 110, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 108, 105, 115, 116, 105, 110, 103, 41, 46, 10, 89, 111, 117, 32, 99, 97, 110, 32, 114, 117, 110, 32, 112, 114, 111, 103, 114, 97, 109, 115, 47, 102, 105, 108, 101, 115, 32, 119, 104, 105, 99, 104, 32, 101, 110, 100, 32, 119, 105, 116, 104, 32, 27, 91, 51, 49, 109, 46, 101, 120, 101, 32, 46, 98, 97, 116, 27, 91, 48, 109, 32, 97, 110, 100, 32, 27, 91, 51, 49, 109, 46, 99, 111, 109, 27, 91, 48, 109, 46, 10, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 78, 84, 82, 79, 95, 67, 68, 82, 79, 77, 0, 0, 0, 0, 0, 27, 91, 50, 74, 27, 91, 51, 50, 59, 49, 109, 72, 111, 119, 32, 116, 111, 32, 109, 111, 117, 110, 116, 32, 97, 32, 82, 101, 97, 108, 47, 86, 105, 114, 116, 117, 97, 108, 32, 67, 68, 45, 82, 79, 77, 32, 68, 114, 105, 118, 101, 32, 105, 110, 32, 68, 79, 83, 66, 111, 120, 58, 27, 91, 48, 109, 10, 68, 79, 83, 66, 111, 120, 32, 112, 114, 111, 118, 105, 100, 101, 115, 32, 67, 68, 45, 82, 79, 77, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 32, 111, 110, 32, 115, 101, 118, 101, 114, 97, 108, 32, 108, 101, 118, 101, 108, 115, 46, 10, 10, 84, 104, 101, 32, 27, 91, 51, 51, 109, 98, 97, 115, 105, 99, 27, 91, 48, 109, 32, 108, 101, 118, 101, 108, 32, 119, 111, 114, 107, 115, 32, 111, 110, 32, 97, 108, 108, 32, 67, 68, 45, 82, 79, 77, 32, 100, 114, 105, 118, 101, 115, 32, 97, 110, 100, 32, 110, 111, 114, 109, 97, 108, 32, 100, 105, 114, 101, 99, 116, 111, 114, 105, 101, 115, 46, 10, 73, 116, 32, 105, 110, 115, 116, 97, 108, 108, 115, 32, 77, 83, 67, 68, 69, 88, 32, 97, 110, 100, 32, 109, 97, 114, 107, 115, 32, 116, 104, 101, 32, 102, 105, 108, 101, 115, 32, 114, 101, 97, 100, 45, 111, 110, 108, 121, 46, 10, 85, 115, 117, 97, 108, 108, 121, 32, 116, 104, 105, 115, 32, 105, 115, 32, 101, 110, 111, 117, 103, 104, 32, 102, 111, 114, 32, 109, 111, 115, 116, 32, 103, 97, 109, 101, 115, 58, 10, 27, 91, 51, 52, 59, 49, 109, 109, 111, 117, 110, 116, 32, 100, 32, 27, 91, 48, 59, 51, 49, 109, 68, 58, 92, 27, 91, 51, 52, 59, 49, 109, 32, 45, 116, 32, 99, 100, 114, 111, 109, 27, 91, 48, 109, 32, 32, 32, 111, 114, 32, 32, 32, 27, 91, 51, 52, 59, 49, 109, 109, 111, 117, 110, 116, 32, 100, 32, 67, 58, 92, 101, 120, 97, 109, 112, 108, 101, 32, 45, 116, 32, 99, 100, 114, 111, 109, 27, 91, 48, 109, 10, 73, 102, 32, 105, 116, 32, 100, 111, 101, 115, 110, 39, 116, 32, 119, 111, 114, 107, 32, 121, 111, 117, 32, 109, 105, 103, 104, 116, 32, 104, 97, 118, 101, 32, 116, 111, 32, 116, 101, 108, 108, 32, 68, 79, 83, 66, 111, 120, 32, 116, 104, 101, 32, 108, 97, 98, 101, 108, 32, 111, 102, 32, 116, 104, 101, 32, 67, 68, 45, 82, 79, 77, 58, 10, 27, 91, 51, 52, 59, 49, 109, 109, 111, 117, 110, 116, 32, 100, 32, 67, 58, 92, 101, 120, 97, 109, 112, 108, 101, 32, 45, 116, 32, 99, 100, 114, 111, 109, 32, 45, 108, 97, 98, 101, 108, 32, 67, 68, 76, 65, 66, 69, 76, 27, 91, 48, 109, 10, 10, 84, 104, 101, 32, 27, 91, 51, 51, 109, 110, 101, 120, 116, 27, 91, 48, 109, 32, 108, 101, 118, 101, 108, 32, 97, 100, 100, 115, 32, 115, 111, 109, 101, 32, 108, 111, 119, 45, 108, 101, 118, 101, 108, 32, 115, 117, 112, 112, 111, 114, 116, 46, 10, 84, 104, 101, 114, 101, 102, 111, 114, 101, 32, 111, 110, 108, 121, 32, 119, 111, 114, 107, 115, 32, 111, 110, 32, 67, 68, 45, 82, 79, 77, 32, 100, 114, 105, 118, 101, 115, 58, 10, 27, 91, 51, 52, 59, 49, 109, 109, 111, 117, 110, 116, 32, 100, 32, 27, 91, 48, 59, 51, 49, 109, 68, 58, 92, 27, 91, 51, 52, 59, 49, 109, 32, 45, 116, 32, 99, 100, 114, 111, 109, 32, 45, 117, 115, 101, 99, 100, 32, 27, 91, 51, 51, 109, 48, 27, 91, 48, 109, 10, 10, 84, 104, 101, 32, 27, 91, 51, 51, 109, 108, 97, 115, 116, 27, 91, 48, 109, 32, 108, 101, 118, 101, 108, 32, 111, 102, 32, 115, 117, 112, 112, 111, 114, 116, 32, 100, 101, 112, 101, 110, 100, 115, 32, 111, 110, 32, 121, 111, 117, 114, 32, 79, 112, 101, 114, 97, 116, 105, 110, 103, 32, 83, 121, 115, 116, 101, 109, 58, 10, 70, 111, 114, 32, 27, 91, 49, 109, 87, 105, 110, 100, 111, 119, 115, 32, 50, 48, 48, 48, 27, 91, 48, 109, 44, 32, 27, 91, 49, 109, 87, 105, 110, 100, 111, 119, 115, 32, 88, 80, 27, 91, 48, 109, 32, 97, 110, 100, 32, 27, 91, 49, 109, 76, 105, 110, 117, 120, 27, 91, 48, 109, 58, 10, 27, 91, 51, 52, 59, 49, 109, 109, 111, 117, 110, 116, 32, 100, 32, 27, 91, 48, 59, 51, 49, 109, 68, 58, 92, 27, 91, 51, 52, 59, 49, 109, 32, 45, 116, 32, 99, 100, 114, 111, 109, 32, 45, 117, 115, 101, 99, 100, 32, 27, 91, 51, 51, 109, 48, 32, 27, 91, 51, 52, 109, 45, 105, 111, 99, 116, 108, 27, 91, 48, 109, 10, 70, 111, 114, 32, 27, 91, 49, 109, 87, 105, 110, 100, 111, 119, 115, 32, 57, 120, 27, 91, 48, 109, 32, 119, 105, 116, 104, 32, 97, 32, 65, 83, 80, 73, 32, 108, 97, 121, 101, 114, 32, 105, 110, 115, 116, 97, 108, 108, 101, 100, 58, 10, 27, 91, 51, 52, 59, 49, 109, 109, 111, 117, 110, 116, 32, 100, 32, 27, 91, 48, 59, 51, 49, 109, 68, 58, 92, 27, 91, 51, 52, 59, 49, 109, 32, 45, 116, 32, 99, 100, 114, 111, 109, 32, 45, 117, 115, 101, 99, 100, 32, 27, 91, 51, 51, 109, 48, 32, 27, 91, 51, 52, 109, 45, 97, 115, 112, 105, 27, 91, 48, 109, 10, 10, 82, 101, 112, 108, 97, 99, 101, 32, 27, 91, 48, 59, 51, 49, 109, 68, 58, 92, 27, 91, 48, 109, 32, 119, 105, 116, 104, 32, 116, 104, 101, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 111, 102, 32, 121, 111, 117, 114, 32, 67, 68, 45, 82, 79, 77, 46, 10, 82, 101, 112, 108, 97, 99, 101, 32, 116, 104, 101, 32, 27, 91, 51, 51, 59, 49, 109, 48, 27, 91, 48, 109, 32, 105, 110, 32, 27, 91, 51, 52, 59, 49, 109, 45, 117, 115, 101, 99, 100, 32, 27, 91, 51, 51, 109, 48, 27, 91, 48, 109, 32, 119, 105, 116, 104, 32, 116, 104, 101, 32, 110, 117, 109, 98, 101, 114, 32, 114, 101, 112, 111, 114, 116, 101, 100, 32, 102, 111, 114, 32, 121, 111, 117, 114, 32, 67, 68, 45, 82, 79, 77, 32, 105, 102, 32, 121, 111, 117, 32, 116, 121, 112, 101, 58, 10, 27, 91, 51, 52, 59, 49, 109, 109, 111, 117, 110, 116, 32, 45, 99, 100, 27, 91, 48, 109, 10, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 78, 84, 82, 79, 95, 83, 80, 69, 67, 73, 65, 76, 0, 0, 0, 27, 91, 50, 74, 27, 91, 51, 50, 59, 49, 109, 83, 112, 101, 99, 105, 97, 108, 32, 107, 101, 121, 115, 58, 27, 91, 48, 109, 10, 84, 104, 101, 115, 101, 32, 97, 114, 101, 32, 116, 104, 101, 32, 100, 101, 102, 97, 117, 108, 116, 32, 107, 101, 121, 98, 105, 110, 100, 105, 110, 103, 115, 46, 10, 84, 104, 101, 121, 32, 99, 97, 110, 32, 98, 101, 32, 99, 104, 97, 110, 103, 101, 100, 32, 105, 110, 32, 116, 104, 101, 32, 27, 91, 51, 51, 109, 107, 101, 121, 109, 97, 112, 112, 101, 114, 27, 91, 48, 109, 46, 10, 10, 27, 91, 51, 51, 59, 49, 109, 65, 76, 84, 45, 69, 78, 84, 69, 82, 27, 91, 48, 109, 32, 32, 32, 58, 32, 71, 111, 32, 102, 117, 108, 108, 32, 115, 99, 114, 101, 101, 110, 32, 97, 110, 100, 32, 98, 97, 99, 107, 46, 10, 27, 91, 51, 51, 59, 49, 109, 65, 76, 84, 45, 80, 65, 85, 83, 69, 27, 91, 48, 109, 32, 32, 32, 58, 32, 80, 97, 117, 115, 101, 32, 68, 79, 83, 66, 111, 120, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 70, 49, 27, 91, 48, 109, 32, 32, 32, 32, 32, 58, 32, 83, 116, 97, 114, 116, 32, 116, 104, 101, 32, 27, 91, 51, 51, 109, 107, 101, 121, 109, 97, 112, 112, 101, 114, 27, 91, 48, 109, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 70, 52, 27, 91, 48, 109, 32, 32, 32, 32, 32, 58, 32, 85, 112, 100, 97, 116, 101, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 99, 97, 99, 104, 101, 32, 102, 111, 114, 32, 97, 108, 108, 32, 100, 114, 105, 118, 101, 115, 33, 32, 83, 119, 97, 112, 32, 109, 111, 117, 110, 116, 101, 100, 32, 100, 105, 115, 107, 45, 105, 109, 97, 103, 101, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 65, 76, 84, 45, 70, 53, 27, 91, 48, 109, 32, 58, 32, 83, 116, 97, 114, 116, 47, 83, 116, 111, 112, 32, 99, 114, 101, 97, 116, 105, 110, 103, 32, 97, 32, 109, 111, 118, 105, 101, 32, 111, 102, 32, 116, 104, 101, 32, 115, 99, 114, 101, 101, 110, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 70, 53, 27, 91, 48, 109, 32, 32, 32, 32, 32, 58, 32, 83, 97, 118, 101, 32, 97, 32, 115, 99, 114, 101, 101, 110, 115, 104, 111, 116, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 70, 54, 27, 91, 48, 109, 32, 32, 32, 32, 32, 58, 32, 83, 116, 97, 114, 116, 47, 83, 116, 111, 112, 32, 114, 101, 99, 111, 114, 100, 105, 110, 103, 32, 115, 111, 117, 110, 100, 32, 111, 117, 116, 112, 117, 116, 32, 116, 111, 32, 97, 32, 119, 97, 118, 101, 32, 102, 105, 108, 101, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 65, 76, 84, 45, 70, 55, 27, 91, 48, 109, 32, 58, 32, 83, 116, 97, 114, 116, 47, 83, 116, 111, 112, 32, 114, 101, 99, 111, 114, 100, 105, 110, 103, 32, 111, 102, 32, 79, 80, 76, 32, 99, 111, 109, 109, 97, 110, 100, 115, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 65, 76, 84, 45, 70, 56, 27, 91, 48, 109, 32, 58, 32, 83, 116, 97, 114, 116, 47, 83, 116, 111, 112, 32, 116, 104, 101, 32, 114, 101, 99, 111, 114, 100, 105, 110, 103, 32, 111, 102, 32, 114, 97, 119, 32, 77, 73, 68, 73, 32, 99, 111, 109, 109, 97, 110, 100, 115, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 70, 55, 27, 91, 48, 109, 32, 32, 32, 32, 32, 58, 32, 68, 101, 99, 114, 101, 97, 115, 101, 32, 102, 114, 97, 109, 101, 115, 107, 105, 112, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 70, 56, 27, 91, 48, 109, 32, 32, 32, 32, 32, 58, 32, 73, 110, 99, 114, 101, 97, 115, 101, 32, 102, 114, 97, 109, 101, 115, 107, 105, 112, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 70, 57, 27, 91, 48, 109, 32, 32, 32, 32, 32, 58, 32, 75, 105, 108, 108, 32, 68, 79, 83, 66, 111, 120, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 70, 49, 48, 27, 91, 48, 109, 32, 32, 32, 32, 58, 32, 67, 97, 112, 116, 117, 114, 101, 47, 82, 101, 108, 101, 97, 115, 101, 32, 116, 104, 101, 32, 109, 111, 117, 115, 101, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 70, 49, 49, 27, 91, 48, 109, 32, 32, 32, 32, 58, 32, 83, 108, 111, 119, 32, 100, 111, 119, 110, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 32, 40, 68, 101, 99, 114, 101, 97, 115, 101, 32, 68, 79, 83, 66, 111, 120, 32, 67, 121, 99, 108, 101, 115, 41, 46, 10, 27, 91, 51, 51, 59, 49, 109, 67, 84, 82, 76, 45, 70, 49, 50, 27, 91, 48, 109, 32, 32, 32, 32, 58, 32, 83, 112, 101, 101, 100, 32, 117, 112, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 32, 40, 73, 110, 99, 114, 101, 97, 115, 101, 32, 68, 79, 83, 66, 111, 120, 32, 67, 121, 99, 108, 101, 115, 41, 46, 10, 27, 91, 51, 51, 59, 49, 109, 65, 76, 84, 45, 70, 49, 50, 27, 91, 48, 109, 32, 32, 32, 32, 32, 58, 32, 85, 110, 108, 111, 99, 107, 32, 115, 112, 101, 101, 100, 32, 40, 116, 117, 114, 98, 111, 32, 98, 117, 116, 116, 111, 110, 47, 102, 97, 115, 116, 32, 102, 111, 114, 119, 97, 114, 100, 41, 46, 10, 0, 80, 82, 79, 71, 82, 65, 77, 95, 66, 79, 79, 84, 95, 78, 79, 84, 95, 69, 88, 73, 83, 84, 0, 0, 66, 111, 111, 116, 100, 105, 115, 107, 32, 102, 105, 108, 101, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 32, 32, 70, 97, 105, 108, 105, 110, 103, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 66, 79, 79, 84, 95, 78, 79, 84, 95, 79, 80, 69, 78, 0, 0, 0, 67, 97, 110, 110, 111, 116, 32, 111, 112, 101, 110, 32, 98, 111, 111, 116, 100, 105, 115, 107, 32, 102, 105, 108, 101, 46, 32, 32, 70, 97, 105, 108, 105, 110, 103, 46, 10, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 66, 79, 79, 84, 95, 87, 82, 73, 84, 69, 95, 80, 82, 79, 84, 69, 67, 84, 69, 68, 0, 0, 0, 0, 73, 109, 97, 103, 101, 32, 102, 105, 108, 101, 32, 105, 115, 32, 114, 101, 97, 100, 45, 111, 110, 108, 121, 33, 32, 77, 105, 103, 104, 116, 32, 99, 114, 101, 97, 116, 101, 32, 112, 114, 111, 98, 108, 101, 109, 115, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 66, 79, 79, 84, 95, 80, 82, 73, 78, 84, 95, 69, 82, 82, 79, 82, 0, 0, 0, 0, 0, 0, 0, 0, 84, 104, 105, 115, 32, 99, 111, 109, 109, 97, 110, 100, 32, 98, 111, 111, 116, 115, 32, 68, 79, 83, 66, 111, 120, 32, 102, 114, 111, 109, 32, 101, 105, 116, 104, 101, 114, 32, 97, 32, 102, 108, 111, 112, 112, 121, 32, 111, 114, 32, 104, 97, 114, 100, 32, 100, 105, 115, 107, 32, 105, 109, 97, 103, 101, 46, 10, 10, 70, 111, 114, 32, 116, 104, 105, 115, 32, 99, 111, 109, 109, 97, 110, 100, 44, 32, 111, 110, 101, 32, 99, 97, 110, 32, 115, 112, 101, 99, 105, 102, 121, 32, 97, 32, 115, 117, 99, 99, 101, 115, 115, 105, 111, 110, 32, 111, 102, 32, 102, 108, 111, 112, 112, 121, 32, 100, 105, 115, 107, 115, 32, 115, 119, 97, 112, 112, 97, 98, 108, 101, 10, 98, 121, 32, 112, 114, 101, 115, 115, 105, 110, 103, 32, 67, 116, 114, 108, 45, 70, 52, 44, 32, 97, 110, 100, 32, 45, 108, 32, 115, 112, 101, 99, 105, 102, 105, 101, 115, 32, 116, 104, 101, 32, 109, 111, 117, 110, 116, 101, 100, 32, 100, 114, 105, 118, 101, 32, 116, 111, 32, 98, 111, 111, 116, 32, 102, 114, 111, 109, 46, 32, 32, 73, 102, 10, 110, 111, 32, 100, 114, 105, 118, 101, 32, 108, 101, 116, 116, 101, 114, 32, 105, 115, 32, 115, 112, 101, 99, 105, 102, 105, 101, 100, 44, 32, 116, 104, 105, 115, 32, 100, 101, 102, 97, 117, 108, 116, 115, 32, 116, 111, 32, 98, 111, 111, 116, 105, 110, 103, 32, 102, 114, 111, 109, 32, 116, 104, 101, 32, 65, 32, 100, 114, 105, 118, 101, 46, 10, 84, 104, 101, 32, 111, 110, 108, 121, 32, 98, 111, 111, 116, 97, 98, 108, 101, 32, 100, 114, 105, 118, 101, 32, 108, 101, 116, 116, 101, 114, 115, 32, 97, 114, 101, 32, 65, 44, 32, 67, 44, 32, 97, 110, 100, 32, 68, 46, 32, 32, 70, 111, 114, 32, 98, 111, 111, 116, 105, 110, 103, 32, 102, 114, 111, 109, 32, 97, 32, 104, 97, 114, 100, 10, 100, 114, 105, 118, 101, 32, 40, 67, 32, 111, 114, 32, 68, 41, 44, 32, 116, 104, 101, 32, 105, 109, 97, 103, 101, 32, 115, 104, 111, 117, 108, 100, 32, 104, 97, 118, 101, 32, 97, 108, 114, 101, 97, 100, 121, 32, 98, 101, 101, 110, 32, 109, 111, 117, 110, 116, 101, 100, 32, 117, 115, 105, 110, 103, 32, 116, 104, 101, 10, 27, 91, 51, 52, 59, 49, 109, 73, 77, 71, 77, 79, 85, 78, 84, 27, 91, 48, 109, 32, 99, 111, 109, 109, 97, 110, 100, 46, 10, 10, 84, 104, 101, 32, 115, 121, 110, 116, 97, 120, 32, 111, 102, 32, 116, 104, 105, 115, 32, 99, 111, 109, 109, 97, 110, 100, 32, 105, 115, 58, 10, 10, 27, 91, 51, 52, 59, 49, 109, 66, 79, 79, 84, 32, 91, 100, 105, 115, 107, 105, 109, 103, 49, 46, 105, 109, 103, 32, 100, 105, 115, 107, 105, 109, 103, 50, 46, 105, 109, 103, 93, 32, 91, 45, 108, 32, 100, 114, 105, 118, 101, 108, 101, 116, 116, 101, 114, 93, 27, 91, 48, 109, 10, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 66, 79, 79, 84, 95, 85, 78, 65, 66, 76, 69, 0, 0, 0, 0, 0, 85, 110, 97, 98, 108, 101, 32, 116, 111, 32, 98, 111, 111, 116, 32, 111, 102, 102, 32, 111, 102, 32, 100, 114, 105, 118, 101, 32, 37, 99, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 66, 79, 79, 84, 95, 73, 77, 65, 71, 69, 95, 79, 80, 69, 78, 0, 79, 112, 101, 110, 105, 110, 103, 32, 105, 109, 97, 103, 101, 32, 102, 105, 108, 101, 58, 32, 37, 115, 10, 0, 80, 82, 79, 71, 82, 65, 77, 95, 66, 79, 79, 84, 95, 73, 77, 65, 71, 69, 95, 78, 79, 84, 95, 79, 80, 69, 78, 0, 0, 0, 0, 0, 67, 97, 110, 110, 111, 116, 32, 111, 112, 101, 110, 32, 37, 115, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 66, 79, 79, 84, 95, 66, 79, 79, 84, 0, 0, 0, 0, 0, 0, 0, 66, 111, 111, 116, 105, 110, 103, 32, 102, 114, 111, 109, 32, 100, 114, 105, 118, 101, 32, 37, 99, 46, 46, 46, 10, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 66, 79, 79, 84, 95, 67, 65, 82, 84, 95, 87, 79, 95, 80, 67, 74, 82, 0, 0, 0, 0, 0, 0, 0, 80, 67, 106, 114, 32, 99, 97, 114, 116, 114, 105, 100, 103, 101, 32, 102, 111, 117, 110, 100, 44, 32, 98, 117, 116, 32, 109, 97, 99, 104, 105, 110, 101, 32, 105, 115, 32, 110, 111, 116, 32, 80, 67, 106, 114, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 66, 79, 79, 84, 95, 67, 65, 82, 84, 95, 76, 73, 83, 84, 95, 67, 77, 68, 83, 0, 0, 0, 0, 0, 65, 118, 97, 105, 108, 97, 98, 108, 101, 32, 80, 67, 106, 114, 32, 99, 97, 114, 116, 114, 105, 100, 103, 101, 32, 99, 111, 109, 109, 97, 110, 100, 111, 115, 58, 37, 115, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 66, 79, 79, 84, 95, 67, 65, 82, 84, 95, 78, 79, 95, 67, 77, 68, 83, 0, 0, 0, 0, 0, 0, 0, 78, 111, 32, 80, 67, 106, 114, 32, 99, 97, 114, 116, 114, 105, 100, 103, 101, 32, 99, 111, 109, 109, 97, 110, 100, 111, 115, 32, 102, 111, 117, 110, 100, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 83, 80, 69, 67, 73, 70, 89, 95, 68, 82, 73, 86, 69, 0, 0, 77, 117, 115, 116, 32, 115, 112, 101, 99, 105, 102, 121, 32, 100, 114, 105, 118, 101, 32, 108, 101, 116, 116, 101, 114, 32, 116, 111, 32, 109, 111, 117, 110, 116, 32, 105, 109, 97, 103, 101, 32, 97, 116, 46, 10, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 83, 80, 69, 67, 73, 70, 89, 50, 0, 0, 0, 0, 0, 0, 0, 77, 117, 115, 116, 32, 115, 112, 101, 99, 105, 102, 121, 32, 100, 114, 105, 118, 101, 32, 110, 117, 109, 98, 101, 114, 32, 40, 48, 32, 111, 114, 32, 51, 41, 32, 116, 111, 32, 109, 111, 117, 110, 116, 32, 105, 109, 97, 103, 101, 32, 97, 116, 32, 40, 48, 44, 49, 61, 102, 100, 97, 44, 102, 100, 98, 59, 50, 44, 51, 61, 104, 100, 97, 44, 104, 100, 98, 41, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 83, 80, 69, 67, 73, 70, 89, 95, 71, 69, 79, 77, 69, 84, 82, 89, 0, 0, 0, 0, 0, 0, 0, 70, 111, 114, 32, 27, 91, 51, 51, 109, 67, 68, 45, 82, 79, 77, 27, 91, 48, 109, 32, 105, 109, 97, 103, 101, 115, 58, 32, 32, 32, 27, 91, 51, 52, 59, 49, 109, 73, 77, 71, 77, 79, 85, 78, 84, 32, 100, 114, 105, 118, 101, 45, 108, 101, 116, 116, 101, 114, 32, 108, 111, 99, 97, 116, 105, 111, 110, 45, 111, 102, 45, 105, 109, 97, 103, 101, 32, 45, 116, 32, 105, 115, 111, 27, 91, 48, 109, 10, 10, 70, 111, 114, 32, 27, 91, 51, 51, 109, 104, 97, 114, 100, 114, 105, 118, 101, 27, 91, 48, 109, 32, 105, 109, 97, 103, 101, 115, 58, 32, 77, 117, 115, 116, 32, 115, 112, 101, 99, 105, 102, 121, 32, 100, 114, 105, 118, 101, 32, 103, 101, 111, 109, 101, 116, 114, 121, 32, 102, 111, 114, 32, 104, 97, 114, 100, 32, 100, 114, 105, 118, 101, 115, 58, 10, 98, 121, 116, 101, 115, 95, 112, 101, 114, 95, 115, 101, 99, 116, 111, 114, 44, 32, 115, 101, 99, 116, 111, 114, 115, 95, 112, 101, 114, 95, 99, 121, 108, 105, 110, 100, 101, 114, 44, 32, 104, 101, 97, 100, 115, 95, 112, 101, 114, 95, 99, 121, 108, 105, 110, 100, 101, 114, 44, 32, 99, 121, 108, 105, 110, 100, 101, 114, 95, 99, 111, 117, 110, 116, 46, 10, 27, 91, 51, 52, 59, 49, 109, 73, 77, 71, 77, 79, 85, 78, 84, 32, 100, 114, 105, 118, 101, 45, 108, 101, 116, 116, 101, 114, 32, 108, 111, 99, 97, 116, 105, 111, 110, 45, 111, 102, 45, 105, 109, 97, 103, 101, 32, 45, 115, 105, 122, 101, 32, 98, 112, 115, 44, 115, 112, 99, 44, 104, 112, 99, 44, 99, 121, 108, 27, 91, 48, 109, 10, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 73, 78, 86, 65, 76, 73, 68, 95, 73, 77, 65, 71, 69, 0, 0, 67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 108, 111, 97, 100, 32, 105, 109, 97, 103, 101, 32, 102, 105, 108, 101, 46, 10, 67, 104, 101, 99, 107, 32, 116, 104, 97, 116, 32, 116, 104, 101, 32, 112, 97, 116, 104, 32, 105, 115, 32, 99, 111, 114, 114, 101, 99, 116, 32, 97, 110, 100, 32, 116, 104, 101, 32, 105, 109, 97, 103, 101, 32, 105, 115, 32, 97, 99, 99, 101, 115, 115, 105, 98, 108, 101, 46, 10, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 73, 78, 86, 65, 76, 73, 68, 95, 71, 69, 79, 77, 69, 84, 82, 89, 0, 0, 0, 0, 0, 0, 0, 67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 101, 120, 116, 114, 97, 99, 116, 32, 100, 114, 105, 118, 101, 32, 103, 101, 111, 109, 101, 116, 114, 121, 32, 102, 114, 111, 109, 32, 105, 109, 97, 103, 101, 46, 10, 85, 115, 101, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 32, 45, 115, 105, 122, 101, 32, 98, 112, 115, 44, 115, 112, 99, 44, 104, 112, 99, 44, 99, 121, 108, 32, 116, 111, 32, 115, 112, 101, 99, 105, 102, 121, 32, 116, 104, 101, 32, 103, 101, 111, 109, 101, 116, 114, 121, 46, 10, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 84, 89, 80, 69, 95, 85, 78, 83, 85, 80, 80, 79, 82, 84, 69, 68, 0, 0, 0, 0, 0, 0, 0, 84, 121, 112, 101, 32, 34, 37, 115, 34, 32, 105, 115, 32, 117, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 46, 32, 83, 112, 101, 99, 105, 102, 121, 32, 34, 104, 100, 100, 34, 32, 111, 114, 32, 34, 102, 108, 111, 112, 112, 121, 34, 32, 111, 114, 34, 105, 115, 111, 34, 46, 10, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 70, 79, 82, 77, 65, 84, 95, 85, 78, 83, 85, 80, 80, 79, 82, 84, 69, 68, 0, 0, 0, 0, 0, 70, 111, 114, 109, 97, 116, 32, 34, 37, 115, 34, 32, 105, 115, 32, 117, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 46, 32, 83, 112, 101, 99, 105, 102, 121, 32, 34, 102, 97, 116, 34, 32, 111, 114, 32, 34, 105, 115, 111, 34, 32, 111, 114, 32, 34, 110, 111, 110, 101, 34, 46, 10, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 83, 80, 69, 67, 73, 70, 89, 95, 70, 73, 76, 69, 0, 0, 0, 77, 117, 115, 116, 32, 115, 112, 101, 99, 105, 102, 121, 32, 102, 105, 108, 101, 45, 105, 109, 97, 103, 101, 32, 116, 111, 32, 109, 111, 117, 110, 116, 46, 10, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 70, 73, 76, 69, 95, 78, 79, 84, 95, 70, 79, 85, 78, 68, 0, 73, 109, 97, 103, 101, 32, 102, 105, 108, 101, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 46, 10, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 77, 79, 85, 78, 84, 0, 0, 84, 111, 32, 109, 111, 117, 110, 116, 32, 100, 105, 114, 101, 99, 116, 111, 114, 105, 101, 115, 44, 32, 117, 115, 101, 32, 116, 104, 101, 32, 27, 91, 51, 52, 59, 49, 109, 77, 79, 85, 78, 84, 27, 91, 48, 109, 32, 99, 111, 109, 109, 97, 110, 100, 44, 32, 110, 111, 116, 32, 116, 104, 101, 32, 27, 91, 51, 52, 59, 49, 109, 73, 77, 71, 77, 79, 85, 78, 84, 27, 91, 48, 109, 32, 99, 111, 109, 109, 97, 110, 100, 46, 10, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 65, 76, 82, 69, 65, 68, 89, 95, 77, 79, 85, 78, 84, 69, 68, 0, 0, 0, 0, 0, 0, 0, 0, 68, 114, 105, 118, 101, 32, 97, 108, 114, 101, 97, 100, 121, 32, 109, 111, 117, 110, 116, 101, 100, 32, 97, 116, 32, 116, 104, 97, 116, 32, 108, 101, 116, 116, 101, 114, 46, 10, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 67, 65, 78, 84, 95, 67, 82, 69, 65, 84, 69, 0, 0, 0, 0, 67, 97, 110, 39, 116, 32, 99, 114, 101, 97, 116, 101, 32, 100, 114, 105, 118, 101, 32, 102, 114, 111, 109, 32, 102, 105, 108, 101, 46, 10, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 77, 79, 85, 78, 84, 95, 78, 85, 77, 66, 69, 82, 0, 0, 0, 68, 114, 105, 118, 101, 32, 110, 117, 109, 98, 101, 114], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 24052);
allocate([32, 37, 100, 32, 109, 111, 117, 110, 116, 101, 100, 32, 97, 115, 32, 37, 115, 10, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 78, 79, 78, 95, 76, 79, 67, 65, 76, 95, 68, 82, 73, 86, 69, 0, 0, 0, 0, 0, 0, 0, 0, 84, 104, 101, 32, 105, 109, 97, 103, 101, 32, 109, 117, 115, 116, 32, 98, 101, 32, 111, 110, 32, 97, 32, 104, 111, 115, 116, 32, 111, 114, 32, 108, 111, 99, 97, 108, 32, 100, 114, 105, 118, 101, 46, 10, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 77, 71, 77, 79, 85, 78, 84, 95, 77, 85, 76, 84, 73, 80, 76, 69, 95, 78, 79, 78, 95, 67, 85, 69, 73, 83, 79, 95, 70, 73, 76, 69, 83, 0, 0, 0, 0, 0, 0, 85, 115, 105, 110, 103, 32, 109, 117, 108, 116, 105, 112, 108, 101, 32, 102, 105, 108, 101, 115, 32, 105, 115, 32, 111, 110, 108, 121, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 102, 111, 114, 32, 99, 117, 101, 47, 105, 115, 111, 32, 105, 109, 97, 103, 101, 115, 46, 10, 0, 0, 0, 0, 0, 67, 111, 100, 101, 112, 97, 103, 101, 32, 37, 105, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 108, 111, 97, 100, 101, 100, 10, 0, 0, 0, 0, 67, 111, 100, 101, 112, 97, 103, 101, 32, 37, 105, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 108, 111, 97, 100, 101, 100, 32, 102, 111, 114, 32, 108, 97, 121, 111, 117, 116, 32, 37, 115, 10, 0, 0, 0, 0, 0, 0, 27, 91, 51, 50, 59, 49, 109, 75, 69, 89, 66, 27, 91, 48, 109, 32, 91, 107, 101, 121, 98, 111, 97, 114, 100, 32, 108, 97, 121, 111, 117, 116, 32, 73, 68, 91, 32, 99, 111, 100, 101, 112, 97, 103, 101, 32, 110, 117, 109, 98, 101, 114, 91, 32, 99, 111, 100, 101, 112, 97, 103, 101, 32, 102, 105, 108, 101, 93, 93, 93, 10, 10, 83, 111, 109, 101, 32, 101, 120, 97, 109, 112, 108, 101, 115, 58, 10, 32, 32, 27, 91, 51, 50, 59, 49, 109, 75, 69, 89, 66, 27, 91, 48, 109, 58, 32, 68, 105, 115, 112, 108, 97, 121, 32, 99, 117, 114, 114, 101, 110, 116, 108, 121, 32, 108, 111, 97, 100, 101, 100, 32, 99, 111, 100, 101, 112, 97, 103, 101, 46, 10, 32, 32, 27, 91, 51, 50, 59, 49, 109, 75, 69, 89, 66, 27, 91, 48, 109, 32, 115, 112, 58, 32, 76, 111, 97, 100, 32, 116, 104, 101, 32, 115, 112, 97, 110, 105, 115, 104, 32, 40, 83, 80, 41, 32, 108, 97, 121, 111, 117, 116, 44, 32, 117, 115, 101, 32, 97, 110, 32, 97, 112, 112, 114, 111, 112, 114, 105, 97, 116, 101, 32, 99, 111, 100, 101, 112, 97, 103, 101, 46, 10, 32, 32, 27, 91, 51, 50, 59, 49, 109, 75, 69, 89, 66, 27, 91, 48, 109, 32, 115, 112, 32, 56, 53, 48, 58, 32, 76, 111, 97, 100, 32, 116, 104, 101, 32, 115, 112, 97, 110, 105, 115, 104, 32, 40, 83, 80, 41, 32, 108, 97, 121, 111, 117, 116, 44, 32, 117, 115, 101, 32, 99, 111, 100, 101, 112, 97, 103, 101, 32, 56, 53, 48, 46, 10, 32, 32, 27, 91, 51, 50, 59, 49, 109, 75, 69, 89, 66, 27, 91, 48, 109, 32, 115, 112, 32, 56, 53, 48, 32, 109, 121, 99, 112, 46, 99, 112, 105, 58, 32, 83, 97, 109, 101, 32, 97, 115, 32, 97, 98, 111, 118, 101, 44, 32, 98, 117, 116, 32, 117, 115, 101, 32, 102, 105, 108, 101, 32, 109, 121, 99, 112, 46, 99, 112, 105, 46, 10, 0, 0, 0, 0, 0, 0, 0, 75, 101, 121, 98, 111, 97, 114, 100, 32, 108, 97, 121, 111, 117, 116, 32, 37, 115, 32, 108, 111, 97, 100, 101, 100, 32, 102, 111, 114, 32, 99, 111, 100, 101, 112, 97, 103, 101, 32, 37, 105, 10, 0, 0, 0, 0, 0, 0, 75, 101, 121, 98, 111, 97, 114, 100, 32, 102, 105, 108, 101, 32, 37, 115, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 10, 10, 0, 0, 0, 0, 75, 101, 121, 98, 111, 97, 114, 100, 32, 102, 105, 108, 101, 32, 37, 115, 32, 105, 110, 118, 97, 108, 105, 100, 10, 0, 0, 0, 0, 0, 0, 0, 78, 111, 32, 108, 97, 121, 111, 117, 116, 32, 105, 110, 32, 37, 115, 32, 102, 111, 114, 32, 99, 111, 100, 101, 112, 97, 103, 101, 32, 37, 105, 10, 0, 0, 0, 0, 0, 0, 0, 0, 78, 111, 110, 101, 32, 111, 114, 32, 105, 110, 118, 97, 108, 105, 100, 32, 99, 111, 100, 101, 112, 97, 103, 101, 32, 102, 105, 108, 101, 32, 102, 111, 114, 32, 108, 97, 121, 111, 117, 116, 32, 37, 115, 10, 10, 0, 0, 0, 77, 79, 85, 78, 84, 46, 67, 79, 77, 0, 0, 0, 0, 0, 0, 0, 77, 69, 77, 46, 67, 79, 77, 0, 76, 79, 65, 68, 70, 73, 88, 46, 67, 79, 77, 0, 0, 0, 0, 0, 82, 69, 83, 67, 65, 78, 46, 67, 79, 77, 0, 0, 0, 0, 0, 0, 73, 78, 84, 82, 79, 46, 67, 79, 77, 0, 0, 0, 0, 0, 0, 0, 66, 79, 79, 84, 46, 67, 79, 77, 0, 0, 0, 0, 0, 0, 0, 0, 73, 77, 71, 77, 79, 85, 78, 84, 46, 67, 79, 77, 0, 0, 0, 0, 75, 69, 89, 66, 46, 67, 79, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 138, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 55, 76, 79, 65, 68, 70, 73, 88, 0, 0, 0, 0, 0, 0, 0, 0, 55, 80, 114, 111, 103, 114, 97, 109, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 8, 138, 0, 0, 32, 82, 202, 1, 248, 137, 0, 0, 24, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 138, 0, 0, 10, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 54, 82, 69, 83, 67, 65, 78, 0, 32, 82, 202, 1, 72, 138, 0, 0, 24, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 138, 0, 0, 10, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 52, 75, 69, 89, 66, 0, 0, 0, 32, 82, 202, 1, 120, 138, 0, 0, 24, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 138, 0, 0, 10, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 138, 0, 0, 10, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 52, 66, 79, 79, 84, 0, 0, 0, 32, 82, 202, 1, 192, 138, 0, 0, 24, 138, 0, 0, 0, 0, 0, 0, 45, 108, 0, 0, 0, 0, 0, 0, 45, 76, 0, 0, 0, 0, 0, 0, 45, 101, 0, 0, 0, 0, 0, 0, 45, 69, 0, 0, 0, 0, 0, 0, 115, 121, 115, 116, 101, 109, 46, 114, 111, 109, 0, 0, 0, 0, 0, 0, 100, 111, 115, 0, 0, 0, 0, 0, 117, 109, 98, 61, 102, 97, 108, 115, 101, 0, 0, 0, 0, 0, 0, 0, 120, 109, 115, 61, 102, 97, 108, 115, 101, 0, 0, 0, 0, 0, 0, 0, 101, 109, 115, 61, 102, 97, 108, 115, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 139, 0, 0, 10, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 53, 73, 78, 84, 82, 79, 0, 0, 32, 82, 202, 1, 88, 139, 0, 0, 24, 138, 0, 0, 0, 0, 0, 0, 99, 100, 114, 111, 109, 0, 0, 0, 109, 111, 117, 110, 116, 0, 0, 0, 27, 91, 50, 74, 0, 0, 0, 0, 115, 112, 101, 99, 105, 97, 108, 0, 0, 0, 0, 0, 176, 139, 0, 0, 10, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 51, 77, 69, 77, 0, 0, 0, 0, 32, 82, 202, 1, 168, 139, 0, 0, 24, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 139, 0, 0, 10, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 53, 77, 79, 85, 78, 84, 0, 0, 32, 82, 202, 1, 216, 139, 0, 0, 24, 138, 0, 0, 0, 0, 0, 0, 45, 117, 0, 0, 0, 0, 0, 0, 45, 99, 100, 0, 0, 0, 0, 0, 100, 105, 114, 0, 0, 0, 0, 0, 45, 116, 0, 0, 0, 0, 0, 0, 102, 108, 111, 112, 112, 121, 0, 0, 53, 49, 50, 44, 49, 44, 50, 56, 56, 48, 44, 50, 56, 56, 48, 0, 53, 49, 50, 44, 49, 50, 55, 44, 49, 54, 51, 56, 51, 44, 52, 48, 51, 49, 0, 0, 0, 0, 0, 0, 50, 48, 52, 56, 44, 49, 44, 54, 53, 53, 51, 53, 44, 48, 0, 0, 80, 82, 79, 71, 65, 77, 95, 77, 79, 85, 78, 84, 95, 73, 76, 76, 95, 84, 89, 80, 69, 0, 0, 0, 45, 102, 114, 101, 101, 115, 105, 122, 101, 0, 0, 0, 0, 0, 0, 0, 53, 49, 50, 44, 49, 44, 50, 56, 56, 48, 44, 37, 100, 0, 0, 0, 53, 49, 50, 44, 49, 50, 55, 44, 49, 54, 53, 49, 51, 44, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 45, 115, 105, 122, 101, 0, 0, 0, 45, 117, 115, 101, 99, 100, 0, 0, 45, 97, 115, 112, 105, 0, 0, 0, 45, 105, 111, 99, 116, 108, 95, 100, 105, 111, 0, 0, 0, 0, 0, 0, 45, 105, 111, 99, 116, 108, 95, 100, 120, 0, 0, 0, 0, 0, 0, 0, 45, 110, 111, 105, 111, 99, 116, 108, 0, 0, 0, 0, 0, 0, 0, 0, 77, 83, 67, 68, 69, 88, 95, 69, 82, 82, 79, 82, 95, 80, 65, 84, 72, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 58, 67, 97, 110, 39, 116, 32, 99, 114, 101, 97, 116, 101, 32, 100, 114, 105, 118, 101, 0, 0, 45, 108, 97, 98, 101, 108, 0, 0, 95, 68, 82, 73, 86, 69, 0, 0, 95, 70, 76, 79, 80, 80, 89, 0, 126, 47, 100, 111, 115, 112, 114, 111, 103, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 141, 0, 0, 10, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 56, 73, 77, 71, 77, 79, 85, 78, 84, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 88, 141, 0, 0, 24, 138, 0, 0, 0, 0, 0, 0, 104, 100, 100, 0, 0, 0, 0, 0, 102, 97, 116, 0, 0, 0, 0, 0, 45, 102, 115, 0, 0, 0, 0, 0, 105, 115, 111, 0, 0, 0, 0, 0, 54, 53, 48, 44, 49, 50, 55, 44, 49, 54, 53, 49, 51, 44, 49, 55, 48, 48, 0, 0, 0, 0, 0, 0, 108, 111, 99, 97, 108, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 97, 117, 116, 111, 115, 105, 122, 101, 100, 32, 105, 109, 97, 103, 101, 32, 102, 105, 108, 101, 58, 32, 37, 100, 58, 37, 100, 58, 37, 100, 58, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 142, 0, 0, 1, 0, 0, 0, 28, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 224, 142, 0, 0, 4, 0, 0, 0, 29, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 6, 0, 0, 0, 15, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 2, 0, 0, 0, 16, 0, 0, 0, 12, 0, 0, 0, 15, 0, 0, 0, 2, 0, 0, 0, 30, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 11, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 73, 110, 116, 101, 114, 110, 97, 108, 32, 86, 105, 114, 116, 117, 97, 108, 32, 68, 114, 105, 118, 101, 0, 0, 49, 50, 86, 105, 114, 116, 117, 97, 108, 95, 70, 105, 108, 101, 0, 0, 32, 82, 202, 1, 176, 142, 0, 0, 56, 96, 0, 0, 0, 0, 0, 0, 49, 51, 86, 105, 114, 116, 117, 97, 108, 95, 68, 114, 105, 118, 101, 0, 32, 82, 202, 1, 208, 142, 0, 0, 112, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 143, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 15, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 19, 0, 0, 0, 3, 0, 0, 0, 18, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 50, 48, 67, 68, 82, 79, 77, 95, 73, 110, 116, 101, 114, 102, 97, 99, 101, 95, 70, 97, 107, 101, 0, 0, 49, 53, 67, 68, 82, 79, 77, 95, 73, 110, 116, 101, 114, 102, 97, 99, 101, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 80, 143, 0, 0, 32, 82, 202, 1, 56, 143, 0, 0, 104, 143, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 68, 79, 83, 58, 78, 111, 116, 32, 101, 110, 111, 117, 103, 104, 32, 109, 101, 109, 111, 114, 121, 32, 102, 111, 114, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 116, 97, 98, 108, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 32, 67, 97, 115, 101, 77, 97, 112, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 44, 0, 46, 0, 45, 0, 58, 0, 0, 2, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 58, 32, 79, 112, 101, 110, 70, 105, 108, 101, 69, 120, 116, 101, 110, 100, 101, 100, 58, 32, 85, 110, 107, 110, 111, 119, 110, 32, 97, 99, 116, 105, 111, 110, 46, 0, 0, 105, 115, 111, 68, 114, 105, 118, 101, 32, 0, 0, 0, 0, 0, 0, 0, 58, 46, 59, 44, 61, 43, 0, 0, 46, 32, 32, 32, 32, 32, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 58, 46, 59, 44, 61, 43, 32, 9, 47, 34, 91, 93, 60, 62, 124, 0, 129, 252, 206, 231, 119, 2, 205, 32, 185, 178, 24, 190, 178, 25, 191, 110, 231, 187, 0, 128, 253, 243, 164, 252, 135, 247, 131, 238, 198, 25, 237, 87, 87, 233, 237, 229, 85, 80, 88, 33, 11, 1, 4, 8, 108, 250, 54, 84, 153, 232, 11, 169, 0, 230, 26, 24, 6, 116, 187, 252, 255, 70, 79, 78, 84, 32, 0, 0, 1, 110, 57, 1, 23, 6, 253, 253, 6, 0, 28, 0, 77, 38, 14, 69, 71, 65, 201, 205, 30, 32, 181, 1, 254, 216, 53, 36, 3, 0, 18, 38, 16, 8, 149, 197, 10, 0, 109, 255, 126, 129, 165, 129, 129, 189, 153, 3, 126, 254, 131, 15, 255, 219, 255, 255, 195, 231, 255, 255, 230, 119, 0, 108, 254, 62, 236, 124, 56, 16, 48, 16, 56, 124, 253, 192, 14, 24, 60, 60, 231, 178, 182, 0, 24, 6, 15, 101, 110, 126, 59, 15, 179, 179, 34, 24, 9, 222, 177, 255, 0, 231, 195, 95, 63, 246, 0, 31, 60, 102, 66, 66, 102, 255, 146, 60, 195, 153, 189, 189, 153, 195, 254, 33, 30, 14, 26, 50, 120, 204, 222, 235, 0, 120, 32, 45, 185, 230, 0, 79, 97, 187, 159, 15, 63, 51, 63, 48, 0, 112, 240, 249, 200, 224, 0, 127, 99, 127, 99, 158, 189, 103, 231, 230, 192, 124, 24, 219, 135, 221, 160, 60, 219, 46, 128, 187, 253, 192, 224, 240, 248, 254, 248, 45, 192, 128, 191, 254, 31, 2, 6, 14, 30, 62, 254, 62, 30, 14, 6, 2, 107, 73, 43, 94, 124, 103, 60, 0, 102, 152, 155, 7, 95, 231, 54, 219, 0, 123, 27, 255, 155, 0, 124, 198, 96, 56, 108, 198, 198, 108, 56, 12, 6, 228, 198, 124, 0, 254, 67, 102, 79, 126, 111, 96, 15, 0, 189, 96, 15, 0, 254, 150, 112, 17, 12, 254, 12, 119, 201, 12, 0, 48, 96, 254, 6, 228, 96, 48, 0, 192, 97, 86, 92, 161, 118, 57, 40, 108, 40, 14, 80, 88, 159, 178, 183, 160, 124, 125, 138, 14, 91, 14, 56, 175, 188, 192, 0, 24, 60, 102, 175, 140, 143, 33, 235, 233, 36, 32, 139, 185, 108, 94, 3, 173, 254, 54, 241, 194, 192, 124, 6, 6, 134, 30, 214, 239, 193, 194, 198, 38, 223, 174, 48, 96, 198, 134, 46, 20, 14, 12, 118, 220, 193, 26, 175, 118, 189, 129, 109, 0, 96, 78, 139, 185, 43, 0, 229, 185, 89, 15, 8, 150, 141, 0, 24, 226, 21, 22, 222, 255, 229, 132, 129, 162, 237, 6, 182, 20, 108, 192, 49, 254, 215, 150, 173, 49, 249, 21, 226, 159, 192, 128, 248, 48, 174, 214, 214, 14, 118, 178, 39, 56, 120, 89, 16, 129, 46, 246, 228, 124, 198, 198, 254, 15, 216, 78, 6, 60, 2, 6, 253, 67, 223, 12, 28, 60, 108, 204, 254, 156, 208, 176, 30, 141, 254, 3, 214, 252, 31, 56, 144, 187, 96, 15, 198, 198, 198, 102, 238, 254, 63, 243, 115, 195, 79, 26, 31, 125, 1, 11, 126, 11, 219, 63, 12, 120, 186, 11, 123, 4, 15, 98, 147, 48, 158, 146, 26, 53, 6, 194, 201, 222, 2, 0, 246, 98, 27, 35, 95, 37, 76, 12, 223, 182, 179, 16, 222, 0, 220, 97, 20, 196, 46, 59, 219, 108, 144, 254, 15, 108, 60, 252, 102, 241, 124, 134, 244, 252, 111, 212, 21, 239, 0, 194, 242, 233, 161, 16, 248, 108, 63, 123, 108, 248, 15, 254, 102, 98, 104, 132, 252, 120, 104, 96, 98, 102, 254, 192, 182, 0, 240, 63, 77, 126, 222, 198, 198, 102, 58, 97, 239, 105, 110, 111, 107, 194, 60, 125, 48, 49, 38, 30, 13, 119, 73, 239, 230, 106, 179, 110, 120, 120, 116, 230, 15, 179, 216, 240, 96, 0, 111, 146, 127, 79, 238, 254, 254, 214, 242, 219, 15, 230, 246, 254, 222, 206, 121, 88, 111, 198, 155, 45, 223, 65, 39, 236, 240, 31, 214, 222, 151, 228, 124, 12, 14, 227, 41, 217, 230, 31, 226, 178, 66, 80, 63, 9, 123, 126, 126, 90, 175, 22, 178, 198, 95, 15, 37, 15, 108, 56, 16, 67, 254, 214, 214, 214, 254, 238, 108, 107, 166, 108, 142, 97, 159, 102, 13, 206, 11, 203, 79, 27, 134, 33, 31, 127, 194, 22, 236, 60, 48, 0, 31, 254, 10, 193, 112, 56, 28, 118, 178, 175, 60, 12, 0, 98, 12, 60, 220, 141, 144, 230, 236, 52, 108, 255, 24, 233, 3, 120, 12, 124, 175, 22, 46, 224, 25, 120, 102, 17, 226, 207, 28, 19, 2, 0, 185, 195, 223, 28, 105, 45, 43, 0, 47, 128, 140, 31, 254, 198, 251, 54, 50, 48, 120, 175, 207, 240, 93, 118, 46, 204, 223, 161, 95, 210, 95, 108, 50, 158, 118, 230, 220, 3, 97, 56, 79, 107, 75, 9, 0, 219, 0, 204, 16, 23, 47, 113, 198, 0, 230, 144, 156, 47, 56, 53, 186, 0, 236, 0, 76, 214, 0, 198, 15, 220, 203, 102, 161, 159, 108, 9, 159, 31, 246, 177, 4, 240, 159, 144, 22, 210, 25, 237, 220, 159, 31, 76, 96, 228, 118, 9, 223, 16, 217, 178, 223, 252, 222, 54, 28, 31, 16, 94, 61, 15, 130, 49, 0, 71, 192, 15, 0, 183, 132, 154, 27, 48, 83, 56, 117, 47, 212, 181, 4, 12, 3, 135, 82, 204, 79, 205, 217, 254, 239, 14, 112, 100, 61, 14, 247, 9, 131, 63, 218, 123, 27, 35, 36, 64, 248, 201, 220, 223, 139, 52, 226, 79, 23, 210, 207, 24, 216, 89, 114, 204, 191, 224, 74, 57, 184, 132, 207, 59, 110, 97, 31, 47, 124, 96, 15, 192, 96, 48, 182, 132, 46, 56, 70, 200, 47, 63, 222, 75, 111, 79, 92, 194, 95, 253, 87, 194, 15, 189, 24, 50, 31, 102, 90, 194, 31, 6, 222, 194, 15, 47, 107, 192, 15, 198, 207, 115, 11, 141, 15, 114, 9, 220, 199, 200, 175, 63, 78, 254, 54, 54, 126, 216, 216, 110, 62, 30, 58, 220, 254, 15, 206, 24, 201, 255, 63, 132, 93, 198, 15, 101, 179, 175, 15, 8, 141, 246, 79, 113, 88, 31, 194, 133, 31, 198, 239, 89, 7, 198, 159, 101, 13, 198, 79, 112, 34, 113, 55, 225, 13, 239, 210, 112, 224, 100, 96, 3, 161, 33, 159, 12, 201, 56, 126, 15, 219, 183, 248, 105, 248, 196, 204, 222, 5, 198, 229, 25, 31, 14, 27, 112, 154, 126, 216, 11, 225, 1, 175, 66, 106, 132, 127, 203, 222, 15, 207, 33, 123, 47, 191, 146, 28, 98, 95, 4, 220, 12, 111, 110, 141, 28, 108, 54, 12, 12, 142, 214, 94, 15, 81, 15, 152, 88, 7, 72, 93, 17, 192, 143, 122, 28, 254, 144, 52, 16, 60, 193, 224, 253, 204, 166, 133, 224, 168, 108, 13, 172, 129, 220, 20, 62, 15, 96, 191, 102, 206, 154, 63, 34, 232, 185, 247, 188, 99, 201, 98, 133, 54, 203, 204, 108, 216, 0, 109, 118, 13, 108, 216, 17, 68, 228, 133, 1, 85, 170, 33, 47, 221, 119, 5, 118, 24, 0, 11, 217, 248, 13, 15, 207, 38, 54, 0, 246, 54, 176, 32, 208, 75, 216, 15, 47, 206, 35, 246, 6, 150, 192, 0, 61, 133, 108, 31, 37, 163, 47, 186, 201, 130, 17, 15, 172, 97, 143, 0, 200, 134, 248, 191, 39, 108, 31, 47, 24, 24, 25, 146, 255, 255, 88, 35, 114, 89, 91, 31, 63, 33, 27, 45, 134, 132, 31, 15, 55, 123, 194, 191, 55, 48, 63, 109, 82, 9, 191, 187, 176, 31, 247, 95, 131, 45, 109, 247, 44, 100, 63, 47, 108, 150, 31, 47, 108, 182, 63, 47, 12, 182, 221, 255, 44, 36, 47, 95, 200, 142, 255, 223, 66, 194, 134, 97, 201, 175, 223, 151, 176, 63, 239, 185, 176, 63, 63, 100, 33, 79, 16, 132, 45, 132, 145, 95, 175, 147, 141, 79, 255, 44, 100, 0, 159, 28, 54, 0, 240, 201, 144, 15, 11, 11, 54, 242, 97, 0, 118, 220, 216, 8, 210, 220, 207, 211, 6, 91, 216, 204, 190, 134, 69, 204, 127, 72, 7, 173, 145, 157, 74, 255, 53, 204, 0, 31, 203, 192, 242, 159, 120, 126, 0, 126, 216, 112, 100, 146, 95, 102, 12, 59, 192, 111, 43, 32, 28, 139, 32, 64, 193, 47, 169, 143, 254, 198, 131, 37, 171, 209, 23, 110, 238, 214, 156, 206, 30, 62, 49, 176, 44, 111, 178, 10, 130, 97, 108, 247, 3, 6, 15, 243, 126, 108, 104, 59, 28, 154, 96, 9, 125, 223, 48, 28, 255, 37, 11, 205, 178, 154, 2, 93, 74, 54, 80, 89, 144, 62, 16, 65, 42, 110, 7, 102, 15, 79, 1, 172, 27, 17, 119, 96, 255, 24, 42, 18, 66, 24, 110, 12, 36, 151, 172, 14, 15, 172, 97, 129, 66, 243, 176, 0, 15, 12, 96, 219, 236, 52, 60, 207, 6, 214, 108, 88, 91, 36, 207, 160, 50, 190, 100, 188, 0, 126, 64, 78, 0, 47, 24, 14, 5, 132, 5, 3, 88, 112, 126, 1, 18, 28, 126, 255, 130, 0, 18, 76, 253, 251, 9, 86, 249, 4, 41, 146, 224, 247, 245, 73, 48, 243, 146, 96, 241, 73, 48, 239, 96, 118, 120, 39, 193, 146, 236, 36, 56, 235, 234, 78, 176, 233, 193, 9, 232, 42, 37, 231, 74, 96, 36, 229, 44, 9, 228, 169, 18, 227, 50, 37, 193, 225, 144, 32, 222, 72, 144, 221, 144, 96, 219, 36, 193, 218, 130, 114, 0, 222, 72, 215, 13, 193, 50, 228, 32, 36, 210, 18, 156, 209, 207, 130, 16, 18, 76, 205, 203, 9, 86, 201, 73, 48, 199, 9, 82, 195, 2, 23, 118, 18, 76, 193, 190, 130, 16, 18, 76, 189, 188, 39, 88, 187, 32, 193, 102, 198, 185, 73, 112, 118, 95, 36, 72, 181, 130, 211, 6, 100, 75, 179, 32, 112, 130, 176, 2, 73, 174, 99, 192, 75, 254, 251, 65, 8, 107, 37, 165, 20, 73, 48, 163, 73, 112, 126, 161, 193, 107, 128, 135, 37, 159, 163, 151, 4, 157, 30, 128, 4, 155, 18, 188, 27, 153, 193, 91, 13, 48, 59, 151, 212, 28, 72, 149, 124, 2, 18, 147, 4, 143, 175, 130, 149, 144, 88, 64, 142, 179, 4, 175, 30, 130, 149, 139, 65, 66, 136, 240, 34, 135, 60, 74, 73, 132, 65, 50, 163, 117, 32, 129, 252, 130, 37, 175, 19, 76, 126, 125, 75, 130, 124, 104, 70, 203, 90, 246, 202, 13, 18, 188, 184, 119, 39, 88, 118, 150, 4, 117, 3, 9, 115, 64, 130, 60, 113, 147, 224, 120, 111, 128, 27, 6, 120, 108, 130, 65, 110, 240, 4, 75, 108, 146, 224, 107, 106, 146, 208, 249, 38, 4, 103, 124, 3, 9, 101, 193, 178, 240, 27, 36, 48, 98, 97, 9, 14, 230, 95, 134, 45, 55, 217, 9, 93, 153, 66, 42, 10, 33, 193, 88, 145, 32, 87, 177, 25, 215, 13, 240, 74, 28, 102, 27, 72, 83, 69, 193, 54, 247, 140, 130, 37, 80, 130, 65, 79, 60, 193, 74, 76, 193, 32, 75, 60, 12, 36, 73, 255, 1, 18, 69, 24, 169, 83, 118, 13, 36, 65, 169, 100, 53, 192, 72, 48, 61, 151, 29, 118, 27, 254, 130, 36, 36, 88, 57, 124, 56, 3, 6, 118, 150, 72, 16, 53, 18, 12, 230, 51, 4, 7, 60, 9, 150, 49, 47, 8, 9, 191, 94, 108, 38, 41, 9, 9, 43, 132, 4, 9, 195, 178, 139, 107, 152, 176, 27, 124, 88, 118, 193, 139, 14, 36, 33, 240, 201, 203, 55, 112, 28, 76, 130, 29, 88, 18, 28, 36, 36, 26, 179, 37, 191, 13, 128, 4, 22, 18, 184, 25, 20, 4, 88, 34, 146, 224, 124, 17, 130, 71, 131, 130, 75, 15, 14, 65, 66, 13, 112, 32, 11, 112, 18, 72, 9, 72, 147, 102, 85, 220, 91, 43, 165, 83, 192, 167, 178, 183, 4, 149, 51, 13, 132, 219, 180, 204, 41, 13, 176, 204, 248, 13, 48, 25, 249, 118, 189, 133, 247, 97, 183, 236, 69, 83, 221, 215, 50, 13, 38, 152, 176, 27, 102, 90, 64, 219, 5, 222, 192, 13, 41, 1, 201, 13, 3, 150, 233, 231, 94, 9, 148, 16, 178, 25, 134, 30, 227, 245, 192, 128, 110, 225, 48, 224, 206, 223, 3, 54, 153, 198, 55, 144, 198, 13, 203, 128, 217, 132, 101, 251, 219, 18, 38, 198, 177, 9, 235, 198, 11, 132, 164, 198, 197, 131, 7, 207, 127, 6, 36, 205, 48, 107, 235, 43, 25, 203, 67, 222, 14, 124, 193, 111, 102, 243, 1, 3, 199, 96, 66, 102, 9, 51, 197, 177, 45, 97, 23, 183, 236, 13, 181, 41, 192, 178, 167, 128, 101, 189, 64, 194, 187, 96, 101, 185, 144, 48, 183, 179, 24, 181, 83, 72, 6, 90, 36, 12, 177, 115, 6, 175, 99, 176, 109, 110, 195, 133, 31, 13, 12, 248, 54, 110, 218, 172, 3, 220, 216, 170, 1, 11, 50, 224, 168, 166, 25, 16, 163, 3, 2, 159, 224, 42, 248, 176, 50, 155, 91, 24, 153, 182, 3, 206, 149, 1, 43, 96, 144, 147, 176, 50, 143, 3, 30, 141, 139, 1, 41, 128, 149, 137, 96, 200, 135, 31, 172, 48, 131, 66, 6, 81, 43, 3, 125, 148, 1, 123, 217, 128, 119, 31, 192, 8, 3, 102, 117, 115, 1, 43, 48, 224, 113, 111, 7, 140, 109, 202, 128, 107, 101, 64, 105, 200, 128, 103, 101, 192, 101, 1, 110, 27, 112, 133, 97, 63, 70, 24, 93, 24, 240, 209, 89, 1, 83, 255, 112, 133, 85, 248, 2, 24, 81, 32, 3, 77, 100, 64, 73, 12, 8, 71, 48, 173, 63, 56, 12, 68, 120, 176, 12, 66, 96, 25, 65, 144, 48, 63, 32, 25, 61, 24, 48, 60, 126, 12, 12, 58, 96, 6, 56, 48, 48, 55, 107, 25, 53, 29, 147, 145, 29, 254, 3, 38, 49, 3, 46, 238, 47, 128, 3, 60, 128, 201, 44, 126, 150, 192, 42, 41, 107, 173, 120, 11, 143, 194, 98, 30, 191, 101, 64, 37, 50, 96, 34, 101, 192, 32, 50, 32, 30, 96, 192, 28, 12, 72, 25, 1, 35, 3, 150, 23, 21, 100, 192, 18, 6, 12, 24, 15, 128, 67, 60, 28, 192, 202, 13, 32, 100, 11, 46, 48, 8, 8, 44, 3, 5, 128, 3, 252, 12, 112, 251, 246, 160, 1, 245, 108, 0, 19, 238, 218, 130, 233, 6, 56, 107, 133, 97, 13, 15, 208, 218, 16, 5, 32, 8, 215, 64, 16, 209, 128, 32, 203, 240, 65, 197, 15, 7, 15, 125, 1, 12, 191, 186, 3, 4, 180, 80, 128, 179, 192, 15, 174, 103, 230, 192, 6, 48, 167, 168, 117, 128, 128, 161, 3, 44, 239, 2, 155, 56, 192, 2, 66, 0, 6, 51, 6, 152, 143, 138, 192, 0, 137, 187, 219, 174, 97, 73, 60, 134, 124, 208, 239, 5, 39, 38, 77, 128, 255, 114, 192, 59, 53, 15, 128, 36, 101, 9, 112, 95, 89, 3, 124, 36, 102, 255, 18, 241, 128, 159, 192, 139, 239, 46, 111, 32, 61, 70, 0, 29, 124, 36, 143, 134, 49, 87, 219, 234, 24, 62, 96, 88, 124, 41, 128, 134, 215, 7, 120, 35, 56, 30, 36, 171, 118, 204, 195, 52, 249, 48, 15, 0, 230, 12, 1, 146, 6, 0, 131, 45, 43, 126, 26, 8, 214, 199, 176, 232, 183, 171, 71, 214, 195, 221, 171, 88, 194, 201, 247, 226, 28, 229, 7, 234, 85, 60, 179, 15, 206, 202, 30, 106, 92, 189, 252, 15, 191, 166, 174, 190, 124, 67, 61, 98, 121, 177, 171, 239, 2, 7, 126, 171, 171, 23, 116, 98, 188, 55, 119, 103, 178, 122, 170, 148, 171, 71, 166, 141, 205, 234, 124, 136, 237, 202, 7, 130, 192, 120, 196, 226, 135, 55, 175, 78, 111, 117, 96, 104, 195, 56, 245, 202, 208, 107, 88, 124, 105, 254, 74, 161, 217, 254, 7, 245, 87, 159, 31, 206, 87, 5, 43, 82, 45, 88, 77, 47, 6, 171, 30, 69, 230, 26, 140, 127, 240, 85, 176, 57, 39, 38, 161, 109, 160, 19, 108, 122, 195, 94, 111, 252, 61, 69, 15, 206, 124, 14, 218, 139, 55, 95, 43, 231, 168, 127, 11, 44, 222, 87, 61, 8, 53, 86, 65, 42, 248, 83, 189, 0, 12, 70, 122, 15, 103, 39, 234, 158, 231, 50, 111, 60, 64, 144, 223, 153, 58, 151, 217, 197, 73, 213, 60, 64, 224, 233, 145, 169, 195, 186, 188, 169, 1, 118, 57, 53, 128, 117, 220, 135, 9, 184, 127, 134, 68, 38, 187, 135, 158, 124, 151, 96, 248, 117, 70, 245, 118, 202, 53, 9, 248, 47, 139, 118, 146, 175, 124, 21, 222, 127, 105, 112, 79, 132, 60, 23, 36, 122, 0, 230, 86, 34, 181, 116, 48, 164, 82, 44, 24, 109, 15, 154, 108, 124, 79, 30, 103, 145, 86, 95, 126, 161, 4, 163, 135, 234, 84, 74, 88, 76, 73, 191, 144, 98, 38, 134, 84, 55, 99, 17, 0, 23, 126, 131, 115, 47, 55, 223, 245, 84, 126, 33, 112, 144, 58, 31, 25, 229, 222, 12, 18, 146, 154, 107, 7, 163, 195, 198, 255, 54, 27, 204, 95, 59, 70, 179, 231, 240, 179, 110, 111, 204, 7, 182, 201, 96, 48, 23, 56, 9, 77, 191, 130, 209, 112, 210, 157, 25, 151, 7, 48, 140, 130, 63, 192, 152, 27, 60, 31, 7, 142, 185, 23, 7, 198, 16, 115, 51, 104, 71, 39, 51, 129, 13, 44, 58, 105, 248, 161, 236, 163, 133, 127, 110, 151, 212, 209, 150, 206, 163, 96, 144, 71, 155, 13, 87, 7, 130, 145, 126, 157, 240, 143, 15, 198, 112, 154, 247, 152, 122, 239, 23, 14, 39, 166, 102, 74, 85, 128, 35, 71, 90, 89, 200, 17, 29, 66, 197, 83, 24, 29, 253, 250, 198, 207, 198, 199, 72, 60, 163, 71, 71, 66, 179, 55, 247, 159, 246, 98, 255, 63, 95, 48, 10, 42, 49, 220, 7, 184, 74, 70, 31, 209, 48, 25, 147, 155, 18, 8, 161, 13, 163, 6, 230, 191, 7, 99, 230, 108, 126, 51, 102, 204, 15, 161, 246, 122, 54, 106, 223, 17, 244, 238, 53, 16, 22, 221, 195, 102, 51, 207, 102, 9, 34, 66, 179, 136, 1, 217, 16, 26, 212, 149, 208, 202, 52, 161, 154, 161, 33, 190, 184, 8, 13, 178, 72, 104, 172, 150, 208, 160, 208, 132, 154, 132, 134, 148, 142, 132, 14, 248, 130, 8, 5, 124, 8, 29, 255, 112, 22, 11, 15, 31, 16, 26, 94, 60, 20, 82, 55, 161, 132, 76, 37, 52, 70, 208, 161, 64, 132, 150, 58, 52, 33, 52, 46, 13, 161, 40, 110, 9, 34, 15, 161, 97, 111, 16, 66, 1, 10, 49, 91, 119, 111, 96, 254, 39, 6, 22, 242, 120, 195, 215, 39, 49, 176, 221, 98, 96, 215, 196, 192, 203, 23, 147, 129, 200, 193, 136, 69, 120, 188, 179, 216, 93, 254, 182, 24, 22, 176, 22, 177, 171, 169, 96, 113, 126, 163, 226, 139, 156, 192, 22, 195, 152, 146, 241, 34, 145, 199, 233, 214, 151, 134, 226, 139, 133, 14, 44, 198, 128, 60, 122, 239, 213, 143, 7, 11, 23, 115, 111, 245, 162, 126, 109, 222, 155, 255, 102, 1, 54, 12, 46, 41, 23, 129, 158, 7, 94, 56, 5, 79, 37, 44, 75, 204, 226, 127, 62, 99, 89, 56, 135, 144, 197, 44, 44, 190, 6, 15, 31, 98, 49, 27, 194, 189, 221, 80, 93, 69, 61, 121, 60, 136, 36, 32, 55, 51, 129, 76, 28, 57, 82, 3, 105, 38, 17, 132, 32, 144, 22, 34, 0, 120, 249, 4, 124, 206, 214, 230, 124, 64, 43, 131, 51, 218, 123, 28, 29, 30, 80, 195, 31, 16, 231, 124, 1, 97, 51, 118, 63, 124, 130, 178, 170, 170, 2, 130, 124, 194, 32, 51, 212, 42, 44, 162, 141, 163, 133, 133, 15, 45, 228, 96, 48, 221, 197, 239, 154, 162, 0, 154, 32, 98, 239, 132, 202, 51, 149, 69, 83, 178, 136, 67, 6, 17, 51, 26, 68, 17, 179, 208, 185, 100, 147, 12, 136, 132, 255, 40, 50, 51, 106, 82, 15, 130, 49, 65, 198, 243, 177, 131, 52, 24, 44, 6, 146, 160, 3, 67, 228, 246, 191, 48, 138, 83, 11, 187, 198, 15, 48, 138, 48, 115, 70, 12, 28, 228, 72, 15, 90, 18, 3, 97, 6, 196, 15, 66, 114, 0, 202, 32, 51, 155, 133, 64, 71, 236, 5, 159, 127, 133, 133, 54, 4, 189, 159, 136, 145, 67, 222, 50, 51, 255, 236, 194, 31, 48, 47, 48, 172, 210, 22, 164, 244, 12, 49, 91, 15, 86, 6, 51, 250, 0, 195, 124, 1, 1, 163, 20, 179, 240, 14, 144, 239, 44, 143, 198, 73, 55, 127, 198, 9, 11, 15, 226, 85, 17, 183, 164, 115, 12, 144, 32, 115, 133, 145, 57, 129, 189, 95, 0, 45, 33, 187, 66, 22, 16, 9, 161, 231, 138, 111, 189, 48, 98, 54, 236, 209, 50, 163, 86, 89, 51, 200, 32, 51, 89, 209, 11, 89, 52, 120, 29, 205, 24, 148, 176, 149, 42, 10, 30, 17, 208, 130, 203, 15, 124, 32, 154, 33, 124, 34, 192, 51, 69, 138, 3, 90, 29, 207, 131, 184, 230, 124, 128, 51, 1, 35, 12, 152, 203, 202, 2, 144, 19, 12, 98, 51, 140, 2, 0, 7, 179, 6, 241, 178, 51, 2, 5, 1, 3, 155, 132, 1, 153, 194, 128, 151, 101, 64, 149, 241, 128, 148, 68, 6, 51, 44, 34, 15, 7, 140, 137, 65, 152, 2, 144, 51, 46, 3, 121, 118, 3, 3, 119, 131, 112, 223, 51, 164, 10, 75, 6, 103, 3, 96, 64, 101, 4, 104, 233, 22, 153, 246, 149, 16, 138, 207, 3, 59, 198, 13, 18, 138, 48, 235, 66, 177, 11, 50, 96, 89, 144, 223, 13, 60, 102, 9, 57, 0, 100, 16, 51, 196, 66, 56, 128, 32, 87, 236, 192, 73, 60, 34, 3, 206, 69, 136, 35, 124, 16, 50, 51, 96, 25, 65, 100, 38, 86, 41, 48, 96, 48, 183, 108, 124, 10, 13, 50, 136, 51, 30, 176, 55, 228, 3, 53, 224, 30, 48, 52, 46, 3, 51, 124, 66, 198, 111, 198, 96, 89, 13, 197, 50, 45, 3, 28, 203, 43, 19, 44, 26, 202, 128, 39, 86, 52, 86, 128, 20, 120, 192, 31, 99, 54, 236, 52, 163, 21, 84, 70, 115, 192, 128, 25, 6, 60, 24, 112, 21, 50, 96, 19, 3, 6, 24, 15, 192, 2, 32, 98, 13, 0, 194, 51, 71, 131, 95, 196, 163, 94, 61, 24, 51, 0, 58, 108, 48, 218, 15, 108, 184, 78, 24, 196, 51, 40, 20, 14, 205, 12, 57, 194, 32, 51, 104, 9, 151, 22, 137, 107, 156, 201, 179, 7, 96, 48, 208, 161, 178, 12, 226, 177, 51, 17, 161, 136, 32, 67, 68, 144, 59, 16, 25, 51, 48, 161, 94, 196, 236, 23, 127, 16, 25, 51, 223, 161, 40, 205, 118, 226, 208, 24, 108, 34, 149, 143, 155, 246, 34, 14, 25, 177, 214, 68, 89, 6, 69, 108, 7, 48, 16, 146, 83, 159, 34, 80, 230, 22, 44, 251, 6, 16, 110, 7, 10, 101, 51, 27, 36, 32, 48, 63, 134, 5, 27, 28, 17, 87, 18, 193, 32, 51, 240, 14, 95, 15, 22, 239, 95, 7, 159, 139, 13, 124, 239, 39, 25, 196, 51, 60, 138, 90, 47, 94, 137, 147, 69, 115, 7, 71, 152, 155, 111, 191, 7, 35, 216, 48, 15, 79, 95, 132, 211, 12, 241, 14, 121, 119, 99, 101, 107, 77, 25, 196, 51, 193, 34, 83, 64, 255, 225, 50, 228, 58, 246, 42, 95, 134, 160, 32, 52, 69, 18, 51, 139, 129, 62, 53, 139, 135, 135, 46, 139, 33, 24, 33, 32, 14, 60, 108, 241, 43, 122, 120, 144, 65, 51, 1, 57, 181, 114, 193, 147, 84, 157, 76, 68, 86, 103, 74, 82, 9, 128, 104, 68, 53, 202, 42, 167, 5, 230, 192, 90, 89, 103, 128, 31, 255, 26, 30, 28, 139, 141, 55, 88, 214, 86, 193, 103, 165, 70, 73, 100, 1, 131, 76, 54, 51, 18, 124, 101, 21, 103, 16, 110, 108, 96, 73, 151, 41, 171, 103, 136, 112, 31, 5, 75, 39, 75, 89, 103, 55, 22, 68, 183, 172, 18, 63, 72, 22, 95, 202, 42, 103, 101, 159, 0, 246, 98, 100, 63, 200, 187, 0, 118, 50, 52, 48, 136, 217, 120, 79, 44, 44, 167, 128, 56, 31, 5, 203, 183, 23, 89, 103, 54, 44, 136, 28, 215, 136, 135, 6, 18, 52, 13, 12, 231, 147, 191, 191, 100, 108, 120, 112, 224, 224, 101, 16, 51, 9, 32, 214, 88, 130, 143, 202, 42, 103, 37, 172, 95, 9, 213, 24, 161, 220, 176, 79, 15, 144, 208, 109, 143, 65, 188, 127, 33, 33, 55, 127, 146, 45, 63, 89, 16, 255, 15, 87, 133, 175, 41, 30, 84, 240, 232, 101, 195, 143, 63, 33, 184, 244, 207, 11, 34, 7, 30, 3, 95, 200, 32, 51, 37, 139, 65, 11, 253, 24, 89, 99, 112, 203, 15, 175, 42, 131, 51, 200, 24, 24, 255, 132, 217, 18, 47, 25, 196, 51, 109, 21, 212, 104, 97, 255, 97, 156, 73, 31, 48, 136, 51, 156, 0, 12, 126, 33, 69, 39, 12, 34, 51, 226, 176, 175, 11, 129, 71, 145, 144, 198, 41, 194, 127, 103, 226, 45, 47, 44, 9, 103, 149, 65, 51, 14, 105, 143, 254, 6, 113, 51, 98, 85, 3, 43, 247, 6, 28, 79, 141, 98, 89, 63, 170, 12, 51, 194, 220, 47, 223, 98, 82, 143, 45, 41, 199, 183, 236, 207, 15, 13, 141, 44, 239, 205, 154, 239, 239, 129, 226, 79, 199, 32, 38, 246, 216, 202, 51, 95, 41, 34, 231, 120, 48, 15, 8, 131, 51, 21, 177, 134, 128, 7, 15, 101, 16, 51, 152, 11, 95, 0, 150, 86, 67, 60, 18, 0, 252, 81, 16, 136, 133, 113, 40, 48, 51, 164, 236, 24, 55, 4, 30, 255, 127, 4, 183, 58, 63, 150, 176, 127, 5, 19, 47, 69, 89, 103, 104, 20, 85, 96, 109, 204, 145, 159, 192, 178, 10, 103, 24, 48, 245, 240, 34, 164, 132, 85, 103, 203, 128, 241, 192, 128, 124, 239, 171, 224, 124, 103, 112, 33, 94, 64, 130, 49, 101, 64, 233, 65, 188, 27, 130, 101, 143, 44, 172, 103, 27, 6, 227, 13, 25, 16, 225, 85, 112, 60, 32, 148, 103, 98, 51, 219, 55, 46, 3, 217, 120, 44, 3, 215, 150, 16, 155, 48, 32, 109, 86, 193, 103, 128, 21, 128, 203, 207, 60, 64, 192, 205, 111, 103, 204, 120, 8, 60, 56, 112, 162, 208, 242, 54, 63, 141, 12, 51, 135, 25, 71, 79, 89, 5, 103, 132, 65, 51, 0, 148, 205, 130, 182, 69, 130, 161, 13, 202, 93, 12, 88, 183, 97, 182, 251, 79, 134, 45, 55, 98, 19, 191, 13, 59, 3, 177, 102, 125, 134, 37, 55, 150, 224, 213, 149, 146, 32, 147, 136, 199, 19, 170, 48, 51, 2, 73, 86, 240, 237, 157, 18, 6, 205, 32, 90, 153, 134, 200, 51, 24, 182, 48, 159, 16, 49, 97, 9, 21, 6, 51, 12, 88, 121, 6, 4, 119, 16, 7, 118, 1, 101, 51, 193, 128, 101, 50, 136, 118, 51, 25, 16, 97, 16, 47, 13, 32, 97, 51, 224, 50, 93, 118, 145, 48, 91, 69, 6, 51, 25, 164, 29, 254, 25, 196, 51, 136, 20, 177, 164, 229, 50, 160, 5, 73, 12, 226, 124, 51, 64, 138, 32, 96, 63, 144, 48, 61, 75, 24, 59, 11, 22, 214, 81, 102, 205, 209, 81, 46, 3, 53, 230, 200, 32, 51, 101, 64, 49, 120, 192, 240, 47, 2, 131, 51, 20, 17, 136, 151, 19, 12, 56, 4, 50, 51, 20, 6, 35, 12, 248, 48, 28, 108, 56, 29, 16, 43, 1, 96, 51, 192, 140, 245, 99, 101, 15, 33, 128, 48, 23, 203, 128, 11, 172, 130, 240, 103, 8, 2, 112, 16, 9, 201, 42, 135, 177, 7, 97, 5, 135, 92, 181, 172, 171, 224, 48, 112, 220, 103, 10, 6, 99, 24, 77, 115, 192, 85, 48, 124, 254, 131, 103, 12, 24, 254, 134, 28, 112, 194, 254, 104, 65, 15, 196, 42, 225, 96, 21, 103, 103, 232, 12, 216, 33, 7, 198, 104, 6, 108, 165, 60, 178, 10, 103, 239, 22, 7, 194, 196, 31, 163, 2, 136, 141, 96, 23, 55, 126, 194, 11, 220, 23, 134, 252, 219, 0, 94, 16, 8, 178, 10, 103, 120, 20, 99, 237, 177, 45, 35, 97, 242, 46, 27, 136, 104, 217, 60, 120, 195, 232, 240, 48, 62, 78, 49, 107, 4, 193, 80, 6, 51, 30, 189, 173, 39, 30, 205, 37, 33, 226, 205, 199, 95, 153, 1, 207, 189, 139, 185, 31, 253, 7, 124, 116, 124, 194, 5, 194, 197, 30, 103, 31, 217, 172, 39, 231, 165, 16, 134, 47, 5, 96, 51, 64, 184, 191, 60, 225, 91, 5, 48, 224, 149, 65, 51, 242, 44, 183, 24, 24, 12, 98, 51, 67, 136, 249, 201, 135, 17, 198, 124, 50, 136, 51, 18, 161, 200, 152, 208, 62, 159, 48, 131, 51, 196, 96, 205, 252, 63, 24, 51, 0, 59, 25, 26, 120, 194, 196, 216, 216, 24, 17, 11, 160, 66, 6, 51, 56, 28, 199, 121, 40, 131, 51, 78, 106, 126, 13, 56, 24, 44, 209, 124, 40, 131, 51, 204, 90, 23, 111, 189, 95, 86, 230, 198, 17, 19, 134, 7, 113, 17, 12, 255, 209, 110, 107, 31, 170, 252, 57, 50, 136, 12, 35, 99, 123, 206, 240, 224, 184, 99, 136, 25, 196, 51, 241, 93, 24, 136, 14, 12, 162, 7, 51, 88, 132, 95, 241, 88, 103, 98, 97, 77, 8, 12, 51, 111, 66, 177, 79, 185, 25, 191, 28, 182, 246, 160, 206, 7, 151, 216, 6, 97, 51, 201, 83, 233, 116, 80, 122, 114, 85, 209, 114, 200, 136, 155, 73, 138, 1, 80, 133, 36, 34, 6, 131, 81, 15, 51, 85, 25, 155, 241, 104, 95, 64, 6, 51, 54, 161, 106, 175, 152, 91, 12, 47, 136, 74, 161, 192, 155, 48, 130, 24, 83, 17, 181, 47, 149, 155, 127, 9, 84, 219, 171, 96, 103, 122, 11, 223, 75, 162, 251, 101, 16, 51, 87, 124, 8, 28, 54, 136, 44, 34, 125, 70, 212, 155, 11, 21, 52, 27, 153, 143, 18, 110, 153, 191, 204, 89, 84, 155, 84, 111, 204, 27, 25, 171, 0, 68, 45, 110, 101, 155, 204, 94, 84, 187, 6, 113, 51, 86, 5, 179, 10, 103, 32, 34, 170, 200, 51, 10, 218, 235, 82, 200, 51, 63, 175, 96, 51, 96, 16, 51, 44, 1, 0, 40, 35, 194, 42, 103, 89, 128, 191, 42, 8, 161, 194, 103, 74, 106, 85, 223, 146, 92, 18, 223, 86, 193, 103, 217, 82, 12, 255, 13, 107, 126, 47, 37, 61, 209, 248, 239, 172, 130, 103, 196, 40, 33, 115, 65, 191, 194, 114, 116, 159, 87, 65, 103, 21, 200, 24, 166, 140, 2, 108, 85, 42, 132, 55, 187, 119, 236, 184, 174, 196, 177, 44, 239, 69, 6, 51, 4, 75, 0, 101, 21, 103, 85, 65, 49, 163, 233, 168, 7, 51, 138, 140, 155, 8, 55, 38, 140, 48, 51, 72, 6, 227, 22, 35, 81, 41, 136, 90, 33, 192, 155, 151, 1, 213, 60, 100, 16, 51, 53, 75, 111, 150, 64, 115, 178, 10, 103, 100, 192, 203, 193, 163, 90, 86, 86, 103, 18, 168, 129, 70, 212, 155, 75, 5, 45, 91, 152, 125, 16, 110, 152, 167, 178, 150, 1, 180, 44, 3, 179, 82, 6, 178, 48, 162, 155, 25, 48, 173, 6, 113, 120, 51, 18, 1, 51, 3, 151, 50, 136, 51, 144, 0, 99, 24, 121, 103, 21, 44, 131, 152, 115, 51, 13, 40, 36, 88, 94, 156, 201, 96, 21, 103, 96, 80, 56, 51, 73, 194, 42, 103, 89, 3, 123, 183, 164, 99, 16, 176, 172, 11, 133, 85, 103, 195, 128, 55, 129, 1, 53, 86, 193, 230, 103, 32, 16, 217, 50, 45, 167, 1, 166, 134, 193, 133, 42, 24, 85, 86, 103, 192, 128, 33, 30, 176, 32, 44, 3, 31, 144, 65, 51, 3, 18, 13, 85, 48, 84, 128, 103, 32, 6, 68, 205, 51, 23, 101, 155, 126, 48, 136, 195, 51, 204, 149, 225, 81, 25, 196, 75, 140, 168, 155, 81, 8, 16, 131, 117, 60, 46, 100, 51, 63, 94, 81, 59, 176, 10, 103, 204, 93, 79, 126, 192, 206, 30, 140, 78, 30, 51, 0, 130, 135, 147, 120, 40, 172, 103, 197, 92, 65, 71, 81, 204, 7, 95, 199, 192, 175, 161, 14, 219, 192, 109, 181, 248, 48, 21, 76, 146, 255, 100, 103, 112, 216, 7, 3, 3, 115, 99, 48, 136, 62, 51, 65, 40, 8, 86, 103, 34, 131, 51, 190, 135, 124, 130, 124, 113, 124, 98, 142, 213, 209, 202, 32, 51, 144, 141, 0, 172, 130, 103, 22, 34, 95, 42, 24, 133, 194, 103, 194, 208, 241, 198, 239, 9, 5, 233, 239, 140, 168, 155, 112, 49, 153, 88, 188, 152, 147, 85, 48, 230, 35, 132, 103, 193, 228, 199, 79, 204, 120, 152, 197, 0, 202, 42, 103, 88, 194, 0, 197, 191, 86, 188, 192, 64, 128, 131, 136, 234, 51, 22, 34, 0, 42, 72, 60, 202, 103, 29, 191, 201, 128, 89, 162, 224, 5, 153, 138, 200, 207, 80, 73, 36, 65, 20, 138, 160, 4, 191, 194, 162, 207, 196, 10, 84, 24, 51, 143, 168, 155, 2, 33, 48, 10, 199, 84, 48, 136, 133, 135, 168, 50, 51, 70, 212, 155, 64, 86, 132, 162, 73, 21, 95, 170, 8, 65, 204, 113, 24, 145, 51, 67, 130, 23, 24, 81, 155, 22, 4, 226, 204, 0, 173, 140, 211, 97, 68, 155, 32, 82, 177, 12, 191, 101, 0, 31, 35, 106, 155, 13, 2, 35, 202, 0, 155, 128, 0, 71, 137, 161, 139, 2, 207, 3, 2, 97, 16, 51, 162, 2, 128, 56, 155, 40, 88, 5, 203, 251, 8, 73, 163, 34, 131, 51, 68, 37, 100, 100, 155, 170, 0, 97, 64, 101, 51, 32, 99, 97, 16, 51, 32, 70, 84, 48, 193, 84, 70, 155, 3, 2, 53, 1, 43, 35, 234, 52, 155, 49, 8, 88, 82, 101, 18, 128, 117, 17, 21, 75, 149, 155, 0, 70, 148, 155, 64, 16, 66, 14, 0, 0, 16, 9, 10, 97, 51, 194, 136, 155, 2, 17, 99, 129, 8, 195, 65, 4, 10, 149, 51, 192, 136, 155, 20, 170, 116, 34, 35, 32, 38, 29, 49, 194, 51, 130, 0, 191, 48, 162, 155, 17, 2, 98, 100, 146, 33, 12, 51, 32, 20, 43, 169, 130, 119, 68, 5, 6, 96, 155, 17, 229, 0, 83, 144, 155, 81, 48, 136, 229, 51, 60, 25, 90, 57, 191, 89, 20, 207, 89, 17, 168, 0, 37, 9, 66, 5, 192, 32, 51, 16, 42, 100, 81, 207, 80, 65, 12, 34, 51, 4, 170, 88, 20, 207, 1, 0, 131, 24, 51, 161, 0, 22, 5, 207, 67, 64, 13, 219, 255, 10, 84, 104, 105, 115, 32, 102, 111, 110, 116, 4, 105, 127, 251, 108, 101, 32, 104, 97, 13, 98, 101, 101, 110, 32, 99, 219, 254, 114, 101, 97, 116, 101, 100, 47, 2, 105, 6, 253, 155, 19, 121, 32, 67, 80, 73, 97, 100, 111, 191, 9, 86, 49, 46, 50, 48, 55, 67, 111, 112, 127, 249, 121, 114, 105, 103, 104, 40, 67, 41, 32, 49, 57, 191, 238, 57, 51, 45, 4, 54, 40, 107, 111, 254, 219, 115, 116, 84, 64, 97, 99, 109, 46, 111, 114, 103, 187, 219, 31, 75, 15, 97, 32, 75, 21, 7, 27, 41, 113, 112, 114, 187, 255, 111, 103, 114, 97, 109, 32, 109, 97, 121, 111, 32, 117, 214, 186, 115, 99, 102, 114, 9, 107, 237, 111, 102, 122, 132, 54, 223, 90, 9, 126, 32, 121, 111, 117, 214, 182, 114, 17, 119, 141, 105, 0, 252, 115, 107, 46, 13, 10, 0, 0, 0, 0, 0, 18, 255, 164, 232, 58, 0, 114, 250, 65, 232, 47, 0, 227, 59, 115, 249, 131, 233, 3, 114, 6, 136, 204, 172, 247, 208, 149, 49, 201, 232, 27, 0, 17, 201, 117, 8, 65, 232, 19, 0, 115, 251, 65, 65, 129, 253, 0, 243, 131, 209, 1, 141, 3, 150, 243, 164, 150, 235, 200, 232, 2, 0, 17, 201, 1, 219, 117, 4, 173, 17, 192, 147, 195, 94, 185, 1, 0, 172, 44, 232, 60, 1, 119, 249, 139, 28, 134, 223, 41, 243, 137, 28, 173, 226, 238, 195, 0, 0, 0, 0, 0, 0, 129, 252, 206, 231, 119, 2, 205, 32, 185, 79, 21, 190, 79, 22, 191, 110, 231, 187, 0, 128, 253, 243, 164, 252, 135, 247, 131, 238, 198, 25, 237, 87, 87, 233, 237, 229, 85, 80, 88, 33, 11, 1, 4, 8, 16, 64, 55, 228, 89, 199, 127, 83, 0, 230, 183, 20, 6, 69, 187, 252, 255, 70, 79, 78, 84, 32, 0, 0, 1, 110, 57, 1, 23, 6, 253, 253, 6, 0, 28, 0, 77, 38, 14, 69, 71, 65, 201, 205, 30, 32, 3, 3, 183, 216, 53, 36, 12, 18, 38, 178, 216, 16, 8, 10, 0, 237, 191, 126, 129, 165, 129, 129, 189, 153, 3, 127, 176, 126, 15, 255, 219, 255, 255, 195, 231, 252, 206, 255, 255, 0, 108, 254, 135, 221, 124, 56, 16, 48, 16, 31, 216, 56, 124, 14, 24, 60, 60, 214, 182, 231, 0, 24, 6, 15, 204, 77, 126, 59, 15, 118, 182, 34, 24, 9, 59, 118, 255, 0, 231, 195, 95, 199, 222, 0, 31, 60, 102, 95, 242, 66, 66, 102, 60, 195, 153, 189, 63, 228, 189, 153, 195, 30, 14, 26, 50, 123, 221, 120, 204, 0, 120, 32, 45, 215, 220, 0, 79, 97, 247, 51, 15, 63, 51, 63, 48, 0, 31, 121, 112, 240, 224, 0, 127, 99, 127, 99, 179, 55, 103, 231, 230, 192, 124, 176, 219, 24, 219, 160, 60, 219, 46, 183, 255, 128, 192, 224, 240, 248, 254, 248, 45, 192, 128, 255, 99, 191, 2, 6, 14, 30, 62, 254, 62, 30, 14, 45, 201, 6, 2, 43, 239, 108, 94, 60, 0, 115, 147, 102, 7, 95, 220, 6, 219, 0, 123, 27, 127, 243, 0, 124, 198, 96, 56, 108, 198, 198, 128, 252, 108, 56, 12, 198, 124, 0, 200, 204, 254, 79, 13, 108, 126, 15, 23, 236, 0, 15, 0, 223, 178, 112, 17, 12, 46, 217, 254, 12, 12, 0, 128, 252, 48, 96, 254, 96, 48, 0, 204, 202, 192, 92, 46, 39, 161, 40, 108, 40, 10, 203, 14, 159, 246, 22, 160, 124, 125, 138, 97, 75, 14, 56, 175, 23, 216, 0, 24, 236, 149, 60, 140, 143, 100, 221, 233, 36, 32, 49, 55, 108, 94, 3, 223, 102, 173, 241, 194, 192, 124, 6, 195, 218, 6, 134, 239, 193, 228, 219, 194, 198, 174, 48, 96, 198, 134, 133, 194, 14, 12, 88, 195, 118, 220, 175, 118, 189, 176, 45, 0, 96, 78, 49, 55, 43, 0, 55, 107, 229, 15, 8, 178, 49, 0, 24, 226, 194, 194, 222, 255, 229, 48, 176, 162, 192, 150, 237, 20, 13, 216, 49, 254, 178, 149, 215, 49, 191, 194, 226, 159, 192, 128, 31, 38, 174, 214, 214, 193, 14, 178, 39, 11, 194, 56, 120, 129, 46, 158, 60, 124, 198, 198, 254, 219, 201, 15, 6, 60, 2, 6, 127, 8, 223, 12, 28, 60, 108, 204, 19, 186, 254, 176, 30, 141, 192, 154, 254, 252, 31, 114, 119, 56, 96, 15, 198, 198, 198, 204, 29, 254, 63, 243, 110, 216, 79, 26, 47, 96, 31, 11, 97, 187, 126, 63, 12, 120, 186, 97, 111, 4, 15, 108, 114, 48, 158, 82, 67, 53, 6, 194, 217, 91, 2, 0, 94, 44, 27, 35, 132, 201, 95, 12, 223, 118, 182, 16, 222, 0, 140, 194, 220, 196, 46, 103, 59, 108, 144, 254, 141, 103, 15, 252, 102, 241, 144, 158, 124, 252, 111, 186, 194, 239, 0, 194, 62, 157, 161, 16, 248, 108, 103, 79, 108, 248, 15, 254, 144, 255, 102, 98, 104, 120, 104, 96, 98, 102, 254, 216, 150, 0, 240, 63, 201, 15, 222, 198, 198, 102, 58, 236, 189, 105, 110, 111, 77, 56, 60, 125, 198, 100, 48, 30, 13, 46, 41, 239, 230], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 34292);
allocate([214, 237, 106, 120, 120, 116, 230, 15, 22, 123, 240, 96, 0, 111, 242, 111, 79, 238, 254, 254, 214, 126, 91, 15, 230, 246, 254, 222, 206, 15, 75, 111, 198, 179, 37, 223, 132, 125, 65, 240, 31, 146, 252, 214, 222, 124, 12, 14, 37, 251, 227, 230, 31, 86, 40, 226, 80, 63, 97, 79, 126, 126, 90, 175, 66, 54, 198, 95, 228, 193, 15, 108, 56, 16, 200, 191, 214, 214, 214, 254, 238, 108, 205, 116, 108, 142, 97, 172, 97, 159, 206, 97, 217, 79, 27, 228, 99, 134, 127, 194, 130, 61, 60, 48, 0, 95, 193, 31, 193, 112, 78, 214, 56, 28, 175, 60, 12, 140, 193, 0, 60, 220, 17, 82, 230, 157, 166, 108, 255, 125, 128, 24, 120, 12, 124, 194, 37, 175, 224, 25, 44, 194, 120, 226, 207, 99, 194, 2, 0, 119, 152, 223, 28, 105, 101, 37, 0, 47, 144, 177, 31, 254, 120, 31, 54, 50, 48, 120, 175, 190, 203, 207, 118, 46, 204, 59, 20, 95, 210, 95, 198, 243, 108, 118, 230, 220, 32, 76, 56, 79, 109, 105, 9, 0, 219, 25, 98, 0, 23, 206, 152, 47, 0, 230, 146, 51, 47, 56, 70, 23, 0, 236, 0, 201, 186, 0, 198, 15, 217, 140, 220, 161, 159, 45, 97, 159, 62, 150, 31, 4, 240, 210, 194, 159, 210, 163, 29, 220, 159, 31, 9, 44, 228, 46, 129, 223, 16, 246, 219, 217, 252, 222, 54, 28, 31, 194, 75, 61, 15, 48, 6, 0, 8, 88, 15, 150, 240, 0, 154, 102, 234, 27, 56, 117, 47, 186, 22, 4, 12, 224, 144, 82, 204, 57, 123, 79, 254, 239, 14, 172, 167, 112, 14, 247, 97, 144, 63, 123, 47, 27, 35, 36, 8, 95, 201, 220, 223, 145, 6, 226, 244, 97, 79, 30, 54, 102, 249, 132, 239, 254, 98, 96, 96, 37, 45, 255, 146, 105, 207, 113, 75, 118, 240, 63, 0, 45, 49, 167, 129, 27, 32, 255, 233, 107, 112, 84, 84, 112, 3, 4, 90, 7, 63, 119, 11, 120, 206, 222, 246, 115, 179, 230, 127, 20, 15, 72, 9, 239, 29, 206, 108, 239, 210, 133, 111, 198, 239, 172, 16, 79, 20, 210, 239, 88, 179, 27, 223, 82, 91, 224, 255, 177, 18, 223, 19, 73, 223, 126, 199, 101, 191, 124, 107, 228, 165, 207, 124, 16, 56, 100, 11, 110, 236, 208, 255, 132, 63, 200, 182, 0, 0, 118, 200, 214, 254, 15, 193, 66, 47, 110, 233, 248, 176, 176, 234, 54, 0, 14, 88, 79, 246, 222, 203, 234, 0, 246, 255, 24, 8, 159, 75, 110, 95, 38, 62, 38, 123, 186, 204, 79, 246, 204, 207, 122, 4, 218, 64, 122, 176, 206, 239, 24, 188, 6, 124, 175, 78, 88, 34, 124, 24, 201, 95, 34, 18, 210, 98, 15, 61, 28, 146, 255, 195, 228, 37, 95, 254, 192, 240, 177, 2, 124, 204, 146, 255, 162, 1, 107, 1, 31, 44, 8, 241, 15, 22, 242, 198, 124, 38, 61, 2, 239, 89, 200, 111, 15, 210, 99, 2, 239, 48, 6, 1, 20, 82, 239, 158, 189, 28, 31, 17, 68, 242, 194, 1, 85, 170, 144, 23, 221, 119, 2, 187, 24, 0, 133, 236, 248, 13, 103, 147, 15, 54, 0, 246, 88, 144, 54, 128, 37, 108, 15, 231, 145, 47, 246, 6, 75, 96, 0, 61, 66, 54, 31, 100, 209, 47, 238, 89, 176, 17, 15, 53, 44, 143, 217, 144, 0, 248, 191, 132, 13, 31, 47, 67, 242, 24, 24, 255, 255, 107, 36, 114, 107, 11, 31, 63, 100, 35, 45, 144, 48, 31, 15, 79, 216, 55, 191, 55, 48, 63, 42, 97, 109, 23, 86, 191, 31, 247, 176, 101, 95, 109, 133, 108, 247, 63, 205, 146, 47, 31, 205, 150, 47, 63, 193, 150, 47, 221, 133, 132, 255, 47, 217, 145, 95, 255, 223, 72, 24, 134, 44, 89, 175, 223, 18, 54, 63, 23, 246, 239, 63, 63, 44, 36, 79, 130, 144, 45, 48, 18, 95, 178, 145, 175, 79, 133, 108, 255, 0, 72, 8, 175, 144, 54, 36, 30, 207, 3, 151, 15, 148, 144, 144, 175, 196, 139, 135, 48, 152, 191, 255, 145, 173, 31, 56, 129, 1, 60, 144, 50, 159, 147, 39, 2, 56, 16, 12, 202, 124, 16, 207, 89, 131, 207, 122, 179, 15, 61, 214, 50, 175, 255, 203, 18, 15, 129, 100, 47, 2, 204, 128, 1, 143, 38, 176, 1, 9, 188, 255, 2, 9, 43, 159, 32, 93, 95, 62, 35, 112, 204, 1, 204, 129, 101, 207, 1, 50, 26, 206, 175, 152, 48, 63, 220, 178, 191, 15, 101, 208, 245, 207, 96, 46, 18, 31, 35, 163, 175, 44, 102, 63, 191, 5, 183, 15, 8, 70, 70, 47, 22, 19, 127, 63, 50, 88, 31, 44, 222, 111, 63, 244, 37, 15, 254, 109, 100, 79, 31, 216, 144, 252, 77, 35, 163, 31, 176, 120, 95, 47, 51, 151, 238, 0, 6, 144, 0, 14, 193, 11, 5, 28, 97, 3, 126, 7, 22, 1, 126, 128, 4, 255, 147, 32, 253, 149, 4, 251, 74, 130, 249, 56, 65, 247, 140, 36, 245, 88, 18, 243, 140, 36, 241, 93, 18, 239, 120, 36, 152, 39, 236, 78, 176, 235, 44, 9, 234, 130, 19, 233, 73, 112, 232, 231, 152, 74, 36, 130, 18, 229, 4, 75, 228, 112, 170, 227, 50, 72, 73, 225, 36, 36, 222, 24, 18, 221, 48, 36, 219, 28, 73, 218, 0, 146, 160, 215, 172, 55, 13, 1, 73, 176, 210, 39, 8, 209, 132, 4, 207, 147, 32, 205, 149, 4, 203, 76, 130, 201, 84, 18, 199, 69, 130, 195, 147, 192, 118, 193, 132, 4, 190, 147, 32, 189, 150, 4, 188, 208, 9, 187, 146, 224, 90, 185, 146, 224, 118, 95, 72, 144, 181, 4, 45, 200, 178, 128, 179, 32, 56, 65, 176, 129, 36, 174, 48, 96, 75, 254, 22, 72, 168, 43, 9, 165, 96, 82, 68, 224, 146, 163, 126, 17, 144, 161, 203, 232, 240, 95, 9, 14, 163, 157, 9, 46, 30, 155, 120, 1, 27, 183, 36, 153, 13, 118, 130, 151, 212, 144, 96, 149, 36, 56, 124, 147, 73, 176, 146, 147, 32, 128, 149, 4, 142, 4, 177, 179, 146, 192, 113, 139, 72, 176, 136, 36, 72, 135, 9, 94, 60, 132, 2, 41, 211, 144, 74, 129, 36, 152, 252, 127, 33, 176, 206, 112, 130, 125, 178, 78, 124, 203, 178, 215, 170, 13, 224, 192, 213, 245, 146, 119, 102, 58, 107, 33, 37, 195, 130, 9, 60, 234, 64, 113, 120, 82, 75, 127, 126, 18, 76, 240, 108, 29, 90, 120, 96, 73, 122, 217, 146, 105, 209, 38, 172, 182, 252, 37, 164, 100, 156, 224, 27, 98, 7, 18, 97, 230, 150, 4, 95, 83, 195, 55, 125, 192, 178, 153, 130, 133, 10, 65, 66, 88, 51, 34, 87, 215, 149, 98, 13, 28, 144, 224, 102, 83, 109, 54, 69, 247, 44, 129, 140, 48, 28, 18, 79, 60, 86, 18, 76, 6, 9, 75, 60, 32, 9, 73, 144, 96, 255, 69, 72, 12, 131, 32, 193, 118, 65, 18, 111, 181, 95, 193, 75, 195, 217, 37, 61, 118, 27, 72, 114, 254, 130, 37, 57, 124, 96, 64, 56, 118, 4, 49, 150, 193, 128, 53, 230, 112, 32, 51, 60, 96, 73, 49, 144, 144, 47, 197, 134, 191, 38, 144, 224, 41, 43, 97, 145, 9, 66, 106, 55, 38, 108, 124, 27, 124, 150, 29, 193, 139, 3, 9, 33, 242, 178, 240, 55, 112, 28, 147, 96, 29, 150, 4, 28, 9, 9, 26, 108, 9, 191, 13, 32, 193, 22, 22, 46, 25, 68, 44, 2, 114, 36, 24, 124, 17, 224, 145, 131, 224, 146, 15, 14, 144, 144, 13, 28, 72, 11, 112, 4, 18, 9, 193, 164, 102, 42, 33, 5, 0, 193, 224, 74, 154, 82, 127, 97, 192, 255, 224, 189, 237, 55, 210, 50, 252, 127, 208, 66, 204, 172, 25, 248, 151, 6, 172, 229, 12, 72, 243, 37, 37, 113, 152, 108, 97, 198, 37, 12, 237, 105, 37, 197, 113, 1, 33, 144, 134, 231, 127, 114, 45, 67, 176, 66, 99, 40, 25, 222, 128, 67, 218, 56, 1, 201, 219, 3, 134, 218, 216, 1, 9, 3, 134, 215, 212, 36, 164, 0, 19, 6, 210, 240, 50, 224, 240, 176, 188, 208, 97, 64, 206, 130, 43, 95, 121, 12, 88, 203, 128, 217, 139, 160, 249, 201, 246, 204, 58, 48, 199, 206, 16, 64, 113, 140, 25, 195, 187, 12, 184, 252, 192, 7, 12, 191, 101, 192, 240, 77, 244, 128, 188, 177, 148, 127, 184, 146, 10, 193, 29, 146, 219, 27, 28, 6, 101, 192, 164, 101, 135, 194, 13, 73, 135, 194, 113, 54, 108, 97, 13, 96, 72, 194, 99, 25, 172, 117, 37, 45, 113, 176, 96, 198, 100, 64, 163, 12, 8, 159, 128, 171, 248, 192, 202, 155, 111, 97, 153, 112, 12, 56, 149, 6, 172, 147, 128, 65, 192, 202, 143, 12, 120, 141, 139, 6, 164, 137, 3, 86, 135, 128, 33, 31, 176, 194, 131, 8, 25, 81, 172, 12, 125, 82, 6, 123, 100, 3, 119, 31, 1, 35, 12, 152, 117, 115, 7, 172, 113, 194, 128, 111, 30, 48, 109, 41, 3, 107, 150, 1, 105, 35, 3, 103, 149, 1, 101, 6, 184, 27, 97, 192, 21, 63, 27, 97, 93, 209, 97, 192, 89, 6, 76, 255, 85, 192, 21, 248, 8, 96, 81, 41, 12, 77, 164, 3, 79, 85, 129, 182, 13, 193, 150, 133, 121, 44, 3, 71, 70, 24, 31, 214, 194, 27, 97, 36, 48, 60, 203, 25, 48, 252, 61, 192, 107, 97, 96, 132, 245, 192, 48, 56, 43, 97, 54, 95, 146, 45, 13, 88, 201, 41, 97, 64, 178, 125, 48, 97, 46, 240, 28, 24, 44, 252, 179, 6, 42, 137, 174, 89, 98, 97, 192, 128, 204, 39, 66, 232, 206, 89, 172, 195, 23, 39, 160, 189, 48, 28, 214, 92, 72, 245, 16, 8, 205, 27, 89, 196, 91, 55, 214, 150, 167, 13, 230, 11, 139, 233, 137, 9, 79, 55, 133, 197, 233, 73, 188, 55, 55, 209, 110, 13, 254, 0, 44, 100, 192, 27, 139, 23, 67, 219, 120, 11, 83, 192, 146, 41, 128, 97, 9, 228, 200, 5, 8, 14, 176, 252, 192, 1, 251, 6, 48, 246, 245, 76, 128, 108, 238, 11, 2, 233, 6, 230, 96, 56, 131, 13, 28, 190, 15, 254, 183, 96, 2, 215, 64, 16, 209, 128, 32, 203, 240, 65, 197, 15, 7, 15, 125, 1, 12, 191, 186, 3, 4, 180, 80, 128, 179, 192, 15, 174, 103, 230, 192, 6, 48, 167, 168, 117, 128, 128, 161, 3, 44, 239, 2, 155, 56, 192, 2, 66, 0, 6, 51, 6, 152, 143, 138, 221, 0, 137, 0, 62, 97, 222, 219, 73, 60, 134, 253, 208, 192, 247, 39, 38, 255, 157, 38, 114, 53, 18, 224, 15, 101, 56, 64, 95, 184, 4, 89, 36, 3, 20, 237, 18, 240, 128, 159, 240, 30, 114, 46, 27, 8, 61, 70, 240, 218, 114, 37, 163, 9, 49, 87, 148, 248, 24, 62, 96, 192, 104, 40, 144, 156, 204, 128, 7, 35, 56, 178, 122, 30, 118, 204, 139, 85, 62, 116, 34, 64, 13, 9, 240, 19, 6, 75, 128, 0, 132, 97, 43, 131, 43, 183, 24, 232, 116, 12, 247, 214, 185, 114, 254, 221, 62, 136, 194, 253, 28, 2, 29, 187, 46, 179, 10, 202, 239, 171, 30, 197, 252, 15, 71, 87, 191, 252, 5, 98, 133, 243, 121, 239, 61, 79, 2, 7, 23, 171, 126, 171, 116, 55, 171, 98, 119, 94, 189, 103, 129, 149, 172, 148, 190, 122, 143, 141, 124, 220, 172, 136, 7, 222, 38, 134, 192, 120, 135, 2, 189, 1, 246, 67, 27, 195, 56, 87, 6, 208, 107, 227, 171, 105, 254, 238, 52, 27, 254, 7, 171, 207, 239, 31, 206, 87, 32, 144, 118, 219, 140, 243, 47, 30, 13, 86, 69, 230, 53, 24, 127, 240, 44, 102, 57, 195, 122, 53, 47, 2, 189, 46, 158, 196, 27, 111, 228, 239, 151, 15, 206, 124, 14, 215, 94, 55, 95, 168, 176, 58, 127, 126, 69, 26, 70, 253, 21, 132, 86, 222, 32, 248, 0, 12, 30, 47, 155, 103, 247, 244, 39, 11, 50, 111, 130, 84, 60, 223, 212, 1, 151, 78, 202, 217, 213, 60, 24, 184, 234, 97, 113, 72, 186, 134, 101, 74, 215, 26, 139, 224, 138, 220, 58, 204, 204, 127, 52, 36, 38, 98, 247, 224, 124, 151, 96, 248, 166, 206, 71, 118, 9, 78, 185, 248, 47, 146, 239, 212, 175, 228, 127, 167, 10, 105, 132, 61, 184, 60, 23, 0, 230, 90, 70, 214, 2, 145, 116, 50, 12, 24, 109, 54, 22, 15, 124, 79, 72, 77, 30, 86, 181, 179, 95, 126, 109, 157, 114, 163, 74, 169, 73, 73, 67, 70, 13, 86, 144, 10, 55, 44, 194, 0, 23, 156, 64, 93, 126, 79, 53, 223, 126, 33, 112, 169, 83, 31, 25, 238, 13, 12, 18, 169, 83, 17, 7, 169, 9, 62, 2, 192, 53, 207, 33, 76, 33, 255, 30, 185, 15, 57, 52, 61, 127, 10, 198, 129, 36, 255, 181, 113, 168, 56, 29, 140, 134, 159, 196, 48, 59, 124, 7, 140, 146, 247, 193, 45, 225, 198, 247, 75, 136, 102, 247, 193, 120, 12, 111, 43, 98, 255, 126, 88, 49, 118, 176, 98, 107, 204, 96, 124, 39, 172, 36, 231, 246, 81, 97, 254, 101, 140, 134, 119, 113, 96, 48, 10, 197, 163, 103, 172, 120, 54, 46, 89, 17, 38, 195, 138, 30, 152, 21, 22, 176, 172, 14, 84, 154, 247, 227, 51, 154, 87, 54, 28, 14, 71, 1, 136, 61, 135, 60, 255, 225, 77, 255, 31, 0, 102, 20, 24, 154, 197, 47, 248, 81, 48, 12, 250, 130, 6, 7, 62, 65, 16, 255, 16, 58, 47, 244, 88, 194, 247, 102, 79, 1, 34, 136, 1, 52, 132, 217, 161, 33, 212, 202, 66, 43, 154, 67, 104, 190, 26, 66, 184, 208, 16, 178, 161, 145, 172, 160, 9, 45, 154, 13, 161, 148, 29, 8, 142, 248, 10, 8, 130, 58, 16, 124, 255, 22, 16, 112, 15, 52, 44, 31, 40, 32, 94, 9, 121, 82, 55, 104, 66, 76, 67, 75, 70, 64, 45, 161, 58, 104, 8, 52, 66, 67, 46, 40, 18, 26, 34, 195, 220, 15, 111, 2, 66, 16, 182, 132, 10, 119, 192, 98, 254, 44, 222, 39, 242, 135, 13, 215, 31, 2, 22, 227, 76, 179, 214, 7, 23, 17, 229, 209, 74, 175, 184, 159, 105, 36, 137, 192, 127, 54, 25, 252, 15, 244, 72, 129, 51, 224, 175, 121, 141, 23, 170, 128, 8, 72, 103, 155, 205, 127, 31, 7, 134, 197, 145, 104, 51, 127, 0, 113, 246, 128, 63, 246, 206, 194, 127, 122, 252, 23, 44, 116, 7, 22, 141, 129, 109, 120, 113, 126, 103, 57, 216, 82, 248, 159, 20, 195, 159, 93, 25, 236, 162, 17, 24, 176, 56, 60, 57, 139, 87, 94, 65, 91, 60, 126, 194, 47, 134, 6, 174, 252, 17, 152, 201, 34, 47, 11, 22, 41, 136, 134, 64, 87, 191, 205, 17, 47, 254, 134, 28, 112, 194, 102, 153, 254, 23, 210, 53, 206, 0, 0, 131, 24, 51, 3, 114, 129, 76, 4, 144, 39, 105, 38, 50, 130, 20, 17, 10, 6, 65, 72, 195, 72, 73, 179, 44, 35, 131, 149, 17, 147, 50, 136, 51, 21, 161, 35, 152, 165, 179, 196, 10, 17, 25, 51, 164, 32, 19, 20, 140, 136, 133, 3, 40, 50, 51, 73, 65, 99, 129, 72, 99, 16, 9, 72, 32, 83, 36, 43, 67, 149, 21, 51, 176, 130, 35, 86, 48, 19, 10, 86, 65, 194, 3, 88, 72, 243, 33, 41, 227, 97, 16, 51, 249, 86, 0, 255, 72, 14, 240, 133, 100, 15, 136, 132, 54, 0, 48, 51, 144, 6, 108, 127, 136, 176, 145, 150, 108, 255, 198, 252, 77, 8, 233, 26, 2, 231, 55, 33, 162, 15, 144, 162, 75, 173, 189, 36, 72, 1, 5, 37, 5, 193, 144, 46, 42, 24, 74, 17, 172, 36, 41, 175, 232, 20, 153, 43, 140, 224, 176, 97, 66, 0, 219, 243, 15, 12, 236, 52, 60, 70, 176, 28, 118, 248, 35, 88, 27, 216, 54, 160, 50, 155, 48, 136, 51, 8, 128, 24, 176, 155, 43, 8, 3, 5, 41, 32, 32, 21, 36, 164, 7, 145, 65, 51, 12, 8, 139, 73, 193, 35, 131, 88, 51, 4, 32, 133, 20, 119, 144, 130, 105, 6, 49, 51, 72, 21, 33, 41, 189, 32, 16, 125, 4, 34, 111, 21, 172, 10, 134, 129, 193, 200, 115, 96, 89, 101, 140, 172, 87, 128, 21, 73, 178, 130, 59, 89, 193, 45, 131, 8, 51, 48, 8, 96, 25, 77, 5, 50, 73, 49, 153, 48, 69, 6, 51, 16, 87, 108, 121, 97, 23, 0, 108, 6, 36, 32, 3, 66, 30, 3, 206, 27, 64, 42, 3, 102, 25, 23, 1, 43, 48, 224, 21, 18, 3, 174, 24, 15, 192, 33, 60, 28, 96, 101, 13, 194, 60, 11, 42, 12, 51, 16, 8, 96, 86, 251, 48, 172, 243, 96, 86, 89, 49, 172, 99, 80, 6, 51, 16, 161, 148, 88, 86, 115, 34, 131, 51, 38, 20, 77, 201, 10, 155, 100, 16, 51, 10, 66, 16, 193, 203, 136, 32, 203, 196, 16, 195, 108, 8, 59, 9, 2, 17, 43, 4, 98, 35, 2, 17, 27, 129, 8, 19, 64, 4, 32, 130, 11, 17, 194, 51, 139, 97, 218, 209, 97, 35, 27, 50, 136, 51, 69, 168, 80, 220, 100, 98, 120, 96, 98, 182, 139, 108, 239, 98, 241, 87, 85, 100, 225, 5, 79, 22, 239, 204, 102, 1, 62, 44, 66, 56, 120, 17, 51, 23, 178, 44, 6, 134, 197, 15, 31, 81, 44, 27, 23, 238, 136, 80, 185, 50, 136, 51, 128, 60, 181, 114, 224, 201, 40, 157, 76, 34, 171, 103, 36, 41, 65, 21, 12, 98, 51, 161, 34, 188, 5, 191, 200, 248, 200, 133, 69, 67, 86, 136, 156, 15, 68, 113, 102, 130, 145, 23, 136, 88, 242, 56, 201, 195, 151, 198, 124, 13, 27, 18, 226, 80, 59, 170, 12, 51, 21, 255, 207, 205, 239, 236, 255, 220, 139, 12, 200, 39, 209, 5, 156, 240, 10, 28, 76, 128, 176, 103, 178, 8, 0, 1, 12, 98, 51, 1, 10, 152, 1, 33, 75, 128, 85, 52, 1, 187, 126, 7, 6, 29, 60, 129, 1, 27, 192, 185, 13, 45, 150, 48, 24, 16, 60, 96, 21, 145, 65, 51, 12, 88, 13, 25, 48, 11, 52, 96, 10, 97, 21, 103, 64, 80, 40, 144, 65, 132, 81, 132, 51, 201, 160, 102, 197, 23, 80, 126, 23, 131, 76, 60, 85, 209, 94, 56, 7, 25, 231, 102, 45, 33, 8, 25, 196, 124, 51, 22, 71, 143, 27, 216, 197, 252, 25, 124, 194, 16, 191, 19, 194, 124, 60, 101, 51, 233, 116, 80, 39, 151, 87, 209, 34, 146, 114, 80, 146, 95, 80, 96, 96, 248, 24, 65, 15, 93, 240, 230, 6, 6, 119, 252, 172, 160, 96, 246, 131, 234, 236, 249, 68, 5, 162, 120, 174, 234, 69, 156, 12, 44, 35, 155, 37, 16, 151, 129, 32, 183, 1, 43, 96, 32, 99, 37, 39, 131, 137, 32, 151, 2, 213, 251, 162, 86, 176, 178, 171, 65, 18, 163, 147, 128, 195, 89, 81, 219, 168, 2, 23, 50, 235, 242, 216, 246, 88, 92, 90, 0, 220, 12, 178, 119, 88, 14, 15, 229, 93, 0, 216, 216, 252, 218, 222, 176, 220, 12, 14, 9, 203, 15, 62, 140, 160, 124, 236, 144, 63, 15, 234, 176, 63, 45, 33, 91, 41, 234, 12, 107, 5, 44, 128, 145, 67, 183, 178, 99, 0, 217, 103, 238, 108, 254, 16, 12, 212, 108, 15, 86, 2, 123, 50, 162, 139, 0, 149, 168, 132, 219, 146, 141, 235, 240, 70, 212, 155, 162, 86, 21, 178, 171, 144, 17, 171, 68, 141, 12, 106, 9, 184, 43, 3, 123, 73, 81, 139, 136, 10, 84, 200, 187, 66, 86, 203, 50, 162, 203, 148, 17, 63, 12, 168, 251, 69, 45, 42, 100, 11, 33, 41, 43, 74, 25, 159, 253, 171, 5, 108, 216, 108, 54, 185, 128, 15, 13, 35, 170, 17, 155, 173, 2, 37, 65, 155, 43, 106, 171, 81, 33, 26, 73, 139, 75, 160, 139, 89, 5, 103, 168, 85, 181, 164, 219, 149, 64, 235, 172, 130, 103, 181, 138, 144, 21, 91, 176, 140, 255, 145, 85, 103, 16, 86, 33, 33, 70, 206, 15, 102, 44, 146, 50, 168, 251, 21, 181, 170, 149, 251, 141, 36, 11, 36, 80, 11, 139, 40, 47, 64, 53, 106, 132, 27, 53, 137, 43, 149, 64, 43, 172, 130, 103, 213, 170, 86, 18, 123, 147, 130, 99, 167, 160, 60, 100, 147, 96, 54, 24, 84, 171, 162, 70, 213, 50, 171, 82, 18, 187, 60, 162, 187, 137, 234, 203, 81, 43, 90, 25, 203, 117, 162, 219, 133, 17, 219, 43, 107, 239, 25, 84, 203, 139, 106, 219, 84, 43, 170, 73, 43, 35, 132, 59, 25, 81, 171, 162, 10, 68, 72, 187, 10, 9, 99, 74, 130, 32, 6, 208, 204, 139, 106, 11, 84, 43, 90, 73, 91, 77, 168, 107, 170, 133, 191, 1, 44, 107, 164, 168, 254, 59, 81, 173, 106, 101, 75, 33, 41, 155, 234, 101, 63, 7, 7, 43, 41, 219, 88, 84, 235, 2, 88, 56, 19, 27, 40, 131, 51, 4, 34, 72, 18, 4, 4, 39, 3, 9, 150, 2, 1, 3, 38, 240, 255, 130, 3, 240, 140, 12, 113, 100, 16, 141, 44, 96, 61, 22, 176, 89, 81, 103, 72, 73, 193, 75, 40, 129, 89, 81, 105, 11, 24, 117, 192, 8, 162, 102, 235, 133, 176, 147, 101, 80, 97, 203, 128, 229, 192, 128, 220, 227, 48, 224, 220, 225, 12, 56, 220, 223, 18, 14, 220, 23, 3, 206, 219, 128, 3, 230, 83, 203, 217, 200, 195, 128, 215, 130, 83, 214, 16, 18, 1, 70, 66, 29, 48, 3, 196, 189, 25, 192, 10, 128, 154, 13, 84, 202, 31, 90, 70, 141, 200, 128, 115, 70, 212, 225, 136, 90, 192, 200, 155, 148, 121, 195, 87, 70, 169, 254, 144, 1, 190, 164, 168, 95, 154, 133, 13, 200, 136, 183, 86, 212, 133, 136, 90, 194, 200, 197, 247, 160, 66, 53, 144, 111, 150, 20, 221, 146, 162, 25, 144, 49, 75, 200, 128, 168, 122, 192, 166, 192, 136, 155, 80, 33, 26, 73, 251, 203, 138, 105, 73, 81, 109, 12, 72, 53, 85, 16, 26, 148, 103, 75, 138, 179, 137, 1, 137, 85, 16, 22, 144, 103, 176, 162, 35, 150, 145, 159, 176, 10, 103, 216, 170, 253, 48, 32, 102, 234, 49, 64, 43, 131, 111, 89, 81, 175, 14, 8, 95, 138, 58, 192, 202, 189, 162, 102, 91, 12, 176, 203, 168, 7, 87, 172, 172, 217, 100, 21, 103, 3, 66, 75, 81, 3, 11, 9, 173, 48, 102, 11, 24, 176, 3, 99, 204, 206, 149, 85, 117, 193, 128, 65, 132, 170, 240, 155, 6, 172, 61, 17, 53, 194, 170, 149, 197, 133, 36, 51, 47, 89, 247, 43, 90, 89, 81, 203, 160, 69, 89, 84, 19, 131, 106, 153, 114, 35, 139, 68, 77, 253, 106, 101, 169, 44, 137, 23, 145, 64, 125, 200, 128, 36, 101, 192, 34, 200, 128, 32, 6, 213, 195, 12, 88, 29, 106, 217, 167, 43, 137, 177, 164, 168, 254, 39, 81, 173, 168, 37, 149, 141, 164, 123, 81, 231, 55, 88, 73, 179, 144, 12, 13, 38, 1, 75, 65, 76, 16, 128, 51, 5, 2, 159, 208, 88, 254, 12, 161, 207, 229, 7, 108, 211, 246, 162, 126, 156, 7, 94, 139, 231, 0, 176, 8, 255, 10, 90, 6, 4, 49, 207, 168, 96, 203, 81, 75, 222, 168, 72, 67, 69, 77, 206, 163, 33, 163, 165, 25, 193, 235, 140, 96, 251, 163, 54, 105, 160, 168, 150, 158, 52, 172, 195, 22, 127, 151, 94, 91, 222, 21, 154, 209, 88, 169, 185, 63, 139, 254, 219, 222, 5, 176, 25, 157, 160, 198, 90, 31, 159, 102, 17, 101, 252, 237, 252, 7, 198, 204, 248, 248, 204, 198, 130, 20, 59, 65, 10, 75, 13, 18, 46, 56, 212, 139, 6, 7, 106, 22, 11, 212, 18, 46, 163, 23, 59, 73, 245, 145, 72, 60, 134, 17, 155, 144, 162, 163, 70, 84, 163, 41, 106, 171, 162, 14, 0, 123, 145, 11, 5, 7, 70, 212, 171, 138, 26, 17, 117, 179, 162, 150, 179, 80, 147, 187, 106, 88, 203, 53, 41, 83, 134, 17, 227, 39, 241, 5, 13, 51, 27, 5, 51, 51, 202, 125, 151, 102, 9, 2, 35, 155, 16, 21, 162, 134, 27, 66, 147, 163, 184, 36, 26, 246, 85, 16, 40, 148, 103, 179, 73, 148, 124, 6, 89, 5, 103, 168, 16, 52, 164, 123, 130, 73, 222, 136, 172, 103, 132, 94, 145, 39, 83, 212, 195, 172, 168, 203, 20, 149, 16, 154, 203, 17, 134, 208, 10, 45, 137, 110, 162, 8, 96, 22, 75, 94, 175, 171, 32, 103, 81, 40, 168, 37, 110, 97, 143, 19, 27, 172, 168, 163, 17, 181, 245, 226, 163, 43, 129, 17, 171, 245, 160, 246, 150, 17, 179, 17, 245, 5, 139, 128, 187, 157, 69, 45, 168, 98, 179, 102, 19, 187, 79, 18, 168, 235, 70, 212, 163, 179, 8, 111, 16, 136, 124, 203, 242, 69, 92, 126, 6, 93, 246, 134, 138, 90, 25, 244, 251, 118, 204, 98, 53, 106, 89, 61, 29, 35, 235, 248, 12, 139, 215, 6, 12, 250, 28, 97, 17, 50, 85, 176, 159, 26, 2, 195, 73, 168, 219, 89, 5, 103, 64, 14, 29, 191, 242, 100, 98, 5, 153, 82, 68, 10, 74, 33, 11, 80, 69, 0, 144, 20, 161, 193, 57, 19, 80, 86, 103, 9, 68, 0, 8, 148, 132, 34, 17, 48, 47, 183, 192, 42, 103, 1, 8, 69, 33, 64, 66, 17, 2, 72, 18, 163, 33, 131, 51, 12, 200, 81, 229, 104, 10, 158, 57, 191, 34, 178, 103, 80, 178, 73, 80, 162, 2, 65, 133, 193, 57, 187, 80, 86, 103, 18, 69, 188, 160, 23, 171, 192, 103, 2, 2, 81, 161, 32, 8, 43, 10, 171, 103, 127, 168, 13, 10, 84, 104, 105, 115, 127, 251, 32, 102, 111, 110, 116, 4, 105, 108, 101, 32, 104, 97, 255, 111, 13, 98, 101, 101, 110, 32, 99, 114, 101, 97, 116, 101, 115, 219, 100, 47, 2, 105, 6, 19, 183, 127, 121, 32, 67, 80, 73, 97, 100, 9, 86, 49, 255, 237, 46, 50, 48, 55, 67, 111, 112, 121, 114, 105, 103, 104, 253, 47, 40, 67, 41, 32, 49, 57, 57, 51, 45, 251, 215, 4, 54, 40, 107, 111, 115, 116, 84, 219, 127, 64, 97, 99, 109, 46, 111, 114, 103, 31, 75, 99, 119, 15, 97, 32, 75, 21, 41, 255, 96, 113, 112, 114, 111, 103, 114, 97, 109, 119, 247, 32, 109, 97, 121, 111, 32, 117, 115, 99, 221, 90, 102, 114, 9, 111, 102, 107, 173, 122, 132, 54, 9, 246, 91, 126, 32, 121, 111, 117, 114, 17, 223, 218, 119, 141, 105, 115, 107, 46, 13, 0, 128, 10, 0, 0, 2, 0, 0, 64, 255, 164, 232, 58, 0, 114, 250, 65, 232, 47, 0, 227, 59, 115, 249, 131, 233, 3, 114, 6, 136, 204, 172, 247, 208, 149, 49, 201, 232, 27, 0, 17, 201, 117, 8, 65, 232, 19, 0, 115, 251, 65, 65, 129, 253, 0, 243, 131, 209, 1, 141, 3, 150, 243, 164, 150, 235, 200, 232, 2, 0, 17, 201, 1, 219, 117, 4, 173, 17, 192, 147, 195, 94, 185, 1, 0, 172, 44, 232, 60, 1, 119, 249, 139, 28, 134, 223, 41, 243, 137, 28, 173, 226, 238, 195, 0, 129, 252, 154, 193, 119, 2, 205, 32, 185, 88, 22, 190, 88, 23, 191, 58, 193, 187, 0, 128, 253, 243, 164, 252, 135, 247, 131, 238, 198, 25, 237, 87, 87, 233, 185, 191, 85, 80, 88, 33, 11, 1, 4, 8, 207, 252, 254, 146, 249, 225, 194, 50, 204, 191, 192, 21, 6, 207, 187, 252, 255, 70, 79, 78, 84, 32, 0, 0, 1, 110, 57, 1, 23, 6, 253, 253, 5, 0, 28, 0, 77, 38, 14, 69, 71, 65, 201, 205, 30, 32, 225, 2, 254, 216, 53, 36, 3, 0, 18, 38, 16, 8, 149, 197, 10, 0, 109, 255, 126, 129, 165, 129, 129, 189, 153, 3, 126, 254, 131, 15, 255, 219, 255, 255, 195, 231, 255, 255, 230, 119, 0, 108, 254, 62, 236, 124, 56, 16, 48, 16, 56, 124, 253, 192, 14, 24, 60, 60, 231, 178, 182, 0, 24, 6, 15, 101, 110, 126, 59, 15, 179, 179, 34, 24, 9, 222, 177, 255, 0, 231, 195, 95, 63, 246, 0, 31, 60, 102, 66, 66, 102, 255, 146, 60, 195, 153, 189, 189, 153, 195, 254, 33, 30, 14, 26, 50, 120, 204, 222, 235, 0, 120, 32, 45, 185, 230, 0, 79, 97, 187, 159, 15, 63, 51, 63, 48, 0, 112, 240, 249, 200, 224, 0, 127, 99, 127, 99, 158, 189, 103, 231, 230, 192, 124, 24, 219, 135, 221, 160, 60, 219, 46, 128, 187, 253, 192, 224, 240, 248, 254, 248, 45, 192, 128, 191, 254, 31, 2, 6, 14, 30, 62, 254, 62, 30, 14, 6, 2, 107, 73, 43, 94, 124, 103, 60, 0, 102, 152, 155, 7, 95, 231, 54, 219, 0, 123, 27, 255, 155, 0, 124, 198, 96, 56, 108, 198, 198, 108, 56, 12, 6, 228, 198, 124, 0, 254, 67, 102, 79, 126, 111, 96, 15, 0, 189, 96, 15, 0, 254, 150, 112, 17, 12, 254, 12, 119, 201, 12, 0, 48, 96, 254, 6, 228, 96, 48, 0, 192, 97, 86, 92, 161, 118, 57, 40, 108, 40, 14, 80, 88, 159, 178, 183, 160, 124, 125, 138, 14, 91, 14, 56, 175, 188, 192, 0, 24, 60, 102, 175, 140, 143, 33, 235, 233, 36, 32, 139, 185, 108, 94, 3, 173, 254, 54, 241, 194, 192, 124, 6, 6, 134, 30, 214, 239, 193, 194, 198, 38, 223, 174, 48, 96, 198, 134, 46, 20, 14, 12, 118, 220, 193, 26, 175, 118, 189, 129, 109, 0, 96, 78, 139, 185, 43, 0, 229, 185, 89, 15, 8, 150, 141, 0, 24, 226, 21, 22, 222, 255, 229, 132, 129, 162, 237, 6, 182, 20, 108, 192, 49, 254, 215, 150, 173, 49, 249, 21, 226, 159, 192, 128, 248, 48, 174, 214, 214, 14, 118, 178, 39, 56, 120, 89, 16, 129, 46, 246, 228, 124, 198, 198, 254, 15, 216, 78, 6, 60, 2, 6, 253, 67, 223, 12, 28, 60, 108, 204, 254, 156, 208, 176, 30, 141, 254, 3, 214, 252, 31, 56, 144, 187, 96, 15, 198, 198, 198, 102, 238, 254, 63, 243, 115, 195, 79, 26, 31, 125, 1, 11, 126, 11, 219, 63, 12, 120, 186, 11, 123, 4, 15, 98, 147, 48, 158, 146, 26, 53, 6, 194, 201, 222, 2, 0, 246, 98, 27, 35, 95, 37, 76, 12, 223, 182, 179, 16, 222, 0, 220, 97, 20, 196, 46, 59, 219, 108, 144, 254, 15, 108, 60, 252, 102, 241, 124, 134, 244, 252, 111, 212, 21, 239, 0, 194, 242, 233, 161, 16, 248, 108, 63, 123, 108, 248, 15, 254, 102, 98, 104, 132, 252, 120, 104, 96, 98, 102, 254, 192, 182, 0, 240, 63, 77, 126, 222, 198, 198, 102, 58, 97, 239, 105, 110, 111, 107, 194, 60, 125, 48, 49, 38, 30, 13, 119, 73, 239, 230, 106, 179, 110, 120, 120, 116, 230, 15, 179, 216, 240, 96, 0, 111, 146, 127, 79, 238, 254, 254, 214, 242, 219, 15, 230, 246, 254, 222, 206, 121, 88, 111, 198, 155, 45, 223, 65, 39, 236, 240, 31, 214, 222, 151, 228, 124, 12, 14, 227, 41, 217, 230, 31, 226, 178, 66, 80, 63, 9, 123, 126, 126, 90, 175, 22, 178, 198, 95, 15, 37, 15, 108, 56, 16, 67, 254, 214, 214, 214, 254, 238, 108, 107, 166, 108, 142, 97, 159, 102, 13, 206, 11, 203, 79, 27, 134, 33, 31, 127, 194, 22, 236, 60, 48, 0, 31, 254, 10, 193, 112, 56, 28, 118, 178, 175, 60, 12, 0, 98, 12, 60, 220, 141, 144, 230, 236, 52, 108, 255, 24, 233, 3, 120, 12, 124, 175, 22, 46, 224, 25, 120, 102, 17, 226, 207, 28, 19, 2, 0, 185, 195, 223, 28, 105, 45, 43, 0, 47, 128, 140, 31, 254, 198, 251, 54, 50, 48, 120, 175, 207, 240, 93, 118, 46, 204, 223, 161, 95, 210, 95, 108, 50, 158, 118, 230, 220, 3, 97, 56, 79, 107, 75, 9, 0, 219, 0, 204, 16, 23, 47, 113, 198, 0, 230, 144, 156, 47, 56, 53, 186, 0, 236, 0, 76, 214, 0, 198, 15, 220, 203, 102, 161, 159, 108, 9, 159, 31, 246, 177, 4, 240, 159, 144, 22, 210, 25, 237, 220, 159, 31, 76, 96, 228, 118, 9, 223, 16, 217, 178, 223, 252, 222, 54, 28, 31, 16, 94, 61, 15, 130, 49, 0, 71, 192, 15, 0, 183, 132, 154, 27, 48, 83, 56, 117, 47, 212, 181, 4, 12, 3, 135, 82, 204, 79, 205, 217, 254, 239, 14, 112, 100, 61, 14, 247, 9, 131, 63, 218, 123, 27, 35, 36, 64, 248, 201, 220, 223, 139, 52, 226, 79, 149, 52, 239, 118, 122, 254, 98, 28, 255, 230, 94, 16, 16, 171, 63, 43, 105, 239, 90, 25, 175, 105, 74, 223, 124, 239, 64, 14, 124, 145, 180, 223, 105, 178, 111, 198, 223, 82, 8, 224, 48, 72, 222, 109, 237, 130, 99, 91, 130, 2, 169, 7, 239, 14, 233, 254, 255, 198, 182, 64, 31, 107, 224, 98, 48, 91, 98, 191, 86, 210, 223, 180, 146, 159, 246, 177, 215, 124, 109, 124, 166, 11, 164, 207, 216, 123, 28, 30, 31, 23, 97, 123, 36, 47, 105, 40, 238, 15, 220, 216, 96, 108, 0, 220, 47, 224, 139, 219, 216, 60, 248, 48, 252, 161, 190, 100, 31, 53, 124, 218, 4, 63, 158, 33, 197, 211, 143, 36, 59, 120, 192, 223, 97, 58, 125, 159, 97, 52, 148, 60, 255, 144, 105, 73, 107, 157, 47, 62, 189, 196, 43, 217, 63, 79, 151, 49, 191, 198, 111, 246, 204, 248, 248, 204, 191, 143, 120, 95, 75, 108, 15, 238, 194, 223, 246, 99, 33, 9, 178, 179, 6, 161, 48, 79, 56, 99, 23, 74, 60, 96, 127, 28, 66, 72, 111, 114, 47, 63, 0, 108, 72, 143, 252, 79, 227, 157, 126, 216, 0, 191, 134, 193, 50, 178, 230, 26, 84, 79, 33, 105, 254, 111, 3, 123, 127, 207, 58, 132, 92, 114, 16, 157, 64, 95, 16, 214, 176, 147, 31, 17, 68, 1, 133, 188, 85, 170, 46, 228, 221, 119, 24, 187, 192, 0, 248, 13, 100, 33, 15, 228, 217, 54, 0, 246, 54, 27, 22, 192, 15, 100, 9, 47, 216, 121, 246, 6, 0, 205, 18, 61, 180, 144, 31, 47, 44, 89, 238, 17, 75, 22, 15, 143, 100, 13, 0, 67, 54, 248, 191, 31, 60, 97, 47, 24, 24, 255, 201, 144, 255, 194, 26, 114, 200, 218, 31, 63, 12, 217, 45, 31, 54, 36, 15, 55, 191, 216, 19, 55, 48, 63, 109, 149, 74, 191, 217, 133, 31, 247, 95, 27, 108, 109, 247, 63, 100, 33, 47, 101, 179, 31, 47, 101, 179, 63, 47, 97, 176, 221, 255, 47, 100, 33, 95, 70, 118, 255, 223, 22, 18, 134, 175, 13, 75, 223, 189, 132, 63, 239, 201, 133, 63, 63, 36, 11, 79, 132, 32, 45, 95, 36, 140, 175, 155, 108, 79, 255, 0, 97, 33, 159, 228, 176, 0, 240, 72, 134, 15, 88, 88, 54, 228, 48, 143, 68, 88, 15, 8, 16, 143, 150, 91, 15, 95, 229, 18, 15, 30, 150, 79, 245, 102, 178, 65, 14, 31, 18, 86, 79, 129, 244, 63, 255, 33, 233, 4, 8, 175, 183, 176, 102, 15, 47, 28, 48, 143, 64, 128, 91, 24, 159, 15, 104, 96, 126, 170, 120, 205, 30, 175, 126, 15, 44, 246, 58, 126, 64, 15, 133, 193, 79, 8, 180, 15, 255, 59, 91, 47, 60, 31, 2, 1, 143, 172, 82, 93, 150, 212, 65, 22, 164, 62, 16, 144, 74, 110, 246, 94, 15, 188, 111, 6, 23, 102, 31, 231, 82, 80, 42, 2, 15, 9, 238, 144, 88, 151, 12, 48, 31, 129, 172, 172, 176, 97, 66, 0, 219, 243, 15, 12, 236, 52, 60, 53, 8, 95, 108, 129, 129, 88, 44, 217, 22, 160, 50, 188, 147, 47, 0, 126, 6, 144, 0, 14, 193, 11, 5, 28, 97, 3, 126, 7, 22, 1, 126, 128, 4, 255, 147, 32, 253, 149, 4, 251, 74, 130, 249, 56, 65, 247, 140, 36, 245, 88, 18, 243, 140, 36, 241, 93, 18, 239, 120, 36, 152, 39, 236, 78, 176, 235, 44, 9, 234, 130, 19, 233, 73, 112, 232, 231, 152, 74, 36, 130, 18, 229, 4, 75, 228, 112, 170, 227, 50, 72, 73, 225, 36, 36, 222, 24, 18, 221, 48, 36, 219, 28, 73, 218, 0, 146, 160, 215, 172, 55, 13, 1, 73, 176, 210, 39, 8, 209, 132, 4, 207, 147, 32, 205, 149, 4, 203, 76, 130, 201, 84, 18, 199, 69, 130, 195, 147, 192, 118, 193, 132, 4, 190, 147, 32, 189, 150, 4, 188, 240, 9, 187, 102, 198, 28, 72, 185, 118, 82, 18, 95, 52, 9, 181, 146, 224, 6, 179, 32, 217, 32, 18, 156, 176, 174, 176, 64, 75, 194, 24, 254, 251, 73, 16, 165, 147, 90, 68, 151, 4, 163, 126, 150, 4, 161, 4, 167, 32, 28, 150, 159, 163, 92, 18, 157, 30, 2, 18, 155, 73, 240, 27, 153, 4, 111, 13, 193, 236, 151, 212, 112, 32, 149, 124, 96, 73, 147, 65, 146, 146, 9, 38, 128, 142, 98, 43, 179, 18, 188, 30, 139, 9, 86, 136, 4, 9, 193, 139, 135, 60, 43, 37, 132, 243, 72, 37, 145, 18, 76, 252, 127, 36, 88, 126, 78, 16, 125, 212, 9, 124, 167, 150, 139, 138, 163, 101, 13, 216, 37, 193, 119, 66, 234, 102, 58, 149, 132, 212, 131, 32, 193, 60, 113, 234, 108, 237, 230, 100, 89, 142, 108, 108, 36, 24, 240, 108, 58, 181, 139, 53, 144, 138, 117, 33, 136, 124, 200, 32, 101, 124, 150, 77, 240, 27, 129, 9, 98, 112, 32, 97, 230, 108, 73, 95, 55, 59, 53, 125, 153, 72, 45, 202, 36, 88, 88, 18, 36, 87, 54, 35, 215, 13, 94, 41, 28, 102, 37, 164, 179, 106, 155, 69, 247, 140, 4, 203, 160, 4, 135, 79, 60, 130, 149, 76, 130, 65, 75, 60, 24, 72, 73, 255, 3, 36, 69, 240, 4, 67, 118, 28, 72, 65, 124, 2, 18, 63, 73, 240, 195, 61, 92, 118, 118, 27, 254, 9, 146, 57, 144, 96, 124, 56, 12, 24, 118, 150, 32, 65, 53, 72, 48, 230, 51, 18, 28, 60, 49, 36, 88, 47, 33, 36, 191, 120, 177, 38, 41, 36, 36, 43, 18, 18, 9, 38, 164, 151, 124, 97, 194, 27, 124, 193, 96, 217, 139, 59, 144, 33, 240, 55, 38, 47, 112, 28, 212, 9, 29, 130, 132, 172, 66, 66, 26, 191, 49, 91, 13, 171, 101, 134, 245, 128, 13, 41, 130, 167, 131, 124, 30, 73, 17, 131, 46, 9, 15, 14, 9, 9, 13, 129, 4, 11, 32, 193, 112, 9, 77, 74, 102, 27, 32, 113, 8, 172, 152, 3, 53, 32, 150, 0, 59, 48, 143, 254, 27, 4, 38, 240, 177, 205, 154, 254, 179, 41, 233, 13, 99, 131, 1, 247, 124, 96, 101, 167, 13, 22, 112, 216, 195, 24, 240, 240, 216, 204, 198, 241, 74, 74, 99, 190, 151, 103, 79, 254, 176, 146, 113, 44, 25, 231, 209, 72, 182, 195, 1, 15, 227, 97, 135, 226, 126, 139, 201, 34, 191, 150, 1, 221, 4, 3, 220, 118, 56, 173, 148, 83, 16, 96, 101, 161, 151, 22, 70, 12, 3, 113, 145, 140, 68, 3, 62, 191, 248, 204, 210, 192, 45, 71, 6, 60, 208, 207, 64, 90, 29, 192, 100, 112, 199, 100, 203, 120, 243, 177, 140, 159, 50, 192, 224, 199, 74, 70, 201, 192, 50, 116, 176, 100, 195, 125, 97, 64, 192, 48, 96, 190, 101, 65, 112, 32, 216, 48, 111, 128, 214, 19, 1, 37, 205, 186, 1, 49, 96, 183, 76, 72, 29, 252, 7, 6, 179, 112, 150, 1, 177, 46, 9, 128, 254, 151, 144, 1, 111, 24, 48, 181, 92, 24, 65, 68, 243, 8, 3, 16, 96, 50, 96, 163, 6, 4, 159, 192, 85, 248, 96, 101, 155, 192, 50, 153, 32, 101, 151, 192, 50, 149, 88, 100, 147, 172, 12, 143, 128, 7, 141, 64, 202, 139, 96, 101, 137, 24, 50, 135, 31, 43, 12, 131, 144, 1, 81, 202, 128, 125, 101, 192, 123, 54, 32, 119, 31, 48, 66, 128, 25, 117, 192, 202, 115, 12, 120, 113, 111, 1, 35, 50, 224, 109, 107, 25, 144, 105, 50, 96, 103, 25, 48, 101, 128, 91, 27, 92, 97, 97, 63, 17, 6, 93, 6, 188, 209, 89, 192, 20, 255, 92, 97, 85, 248, 0, 6, 81, 194, 128, 77, 24, 176, 75, 12, 88, 71, 129, 169, 68, 189, 73, 47, 8, 16, 253, 73, 111, 13, 211, 73, 111, 13, 197, 50, 96, 61, 48, 96, 14, 59, 45, 59, 28, 55, 3, 38, 127, 55, 82, 44, 134, 45, 11, 13, 176, 236, 41, 125, 96, 25, 49, 56, 48, 47, 126, 37, 12, 45, 73, 136, 13, 28, 129, 1, 41, 97, 192, 124, 39, 86, 44, 13, 221, 12, 88, 34, 6, 164, 32, 12, 88, 30, 224, 45, 220, 146, 75, 91, 102, 25, 16, 25, 12, 8, 23, 30, 176, 21, 32, 3, 18, 50, 96, 24, 15, 6, 28, 60, 28, 13, 3, 86, 11, 1, 33, 112, 129, 8, 8, 96, 25, 5, 3, 28, 252, 251, 96, 128, 246, 0, 13, 245, 108, 4, 152, 238, 233, 208, 22, 6, 56, 95, 43, 129, 13, 15, 254, 128, 7, 25, 2, 76, 215, 209, 4, 8, 203, 8, 16, 197, 1, 62, 15, 7, 15, 125, 191, 32, 128, 186, 112, 128, 180, 1, 10, 179, 174, 6, 248, 103, 230, 192, 167, 208, 0, 168, 128, 13, 14, 161, 32, 120, 128, 2, 155, 2, 0, 7, 66, 19, 192, 51, 143, 192, 0, 138, 187, 27, 137, 0, 62, 97, 73, 60, 134, 94, 176, 124, 208, 39, 4, 248, 38, 255, 114, 188, 195, 114, 15, 72, 2, 101, 0, 7, 95, 192, 151, 89, 36, 102, 255, 15, 56, 18, 159, 188, 24, 239, 46, 6, 2, 61, 208, 240, 70, 173, 36, 104, 8, 49, 86, 252, 87, 24, 62, 131, 240, 224, 124, 24, 91, 0, 15, 35, 56, 100, 245, 30, 118, 204, 152, 134, 249, 48, 192, 124, 15, 12, 64, 18, 6, 176, 37, 0, 43, 3, 97, 126, 214, 24, 86, 232, 189, 234, 99, 214, 225, 197, 90, 221, 194, 23, 95, 201, 28, 229, 175, 186, 7, 60, 179, 113, 86, 202, 30, 224, 125, 115, 252, 15, 241, 232, 169, 252, 173, 83, 172, 234, 121, 44, 245, 189, 2, 7, 126, 245, 98, 171, 116, 247, 102, 98, 119, 103, 86, 143, 170, 148, 245, 72, 166, 89, 125, 141, 124, 136, 92, 185, 7, 130, 122, 37, 107, 135, 172, 70, 61, 252, 118, 204, 96, 252, 204, 189, 50, 208, 107, 86, 95, 105, 254, 100, 104, 54, 254, 7, 213, 103, 245, 31, 206, 193, 194, 87, 224, 11, 86, 77, 47, 193, 106, 30, 69, 6, 163, 230, 127, 240, 20, 172, 57, 139, 73, 193, 203, 226, 197, 202, 222, 48, 30, 111, 127, 143, 69, 15, 206, 124, 14, 241, 34, 55, 202, 125, 33, 12, 127, 164, 247, 11, 87, 165, 8, 53, 86, 65, 42, 248, 34, 22, 157, 157, 244, 155, 100, 60, 221, 72, 231, 50, 111, 60, 8, 82, 223, 83, 7, 151, 217, 58, 41, 213, 60, 97, 224, 38, 97, 212, 33, 186, 212, 128, 188, 118, 26, 192, 57, 117, 220, 195, 164, 176, 127, 67, 170, 22, 221, 83, 164, 124, 151, 96, 58, 163, 248, 245, 118, 229, 154, 9, 248, 47, 84, 59, 146, 175, 10, 239, 140, 127, 105, 184, 167, 132, 60, 23, 70, 61, 0, 230, 214, 145, 90, 116, 24, 22, 206, 22, 12, 109, 15, 77, 54, 124, 79, 30, 179, 72, 86, 95, 130, 139, 126, 75, 135, 197, 169, 74, 144, 154, 71, 67, 96, 212, 86, 48, 172, 251, 27, 139, 0, 23, 126, 47, 26, 156, 55, 223, 126, 129, 167, 33, 112, 97, 27, 214, 137, 12, 179, 220, 18, 107, 88, 70, 252, 84, 74, 247, 145, 59, 249, 127, 37, 156, 142, 254, 247, 194, 132, 87, 239, 35, 76, 124, 247, 124, 132, 36, 239, 96, 52, 198, 165, 132, 239, 212, 66, 160, 56, 73, 40, 159, 247, 8, 70, 169, 108, 73, 255, 15, 96, 132, 19, 205, 239, 134, 48, 207, 16, 140, 138, 161, 146, 231, 118, 224, 5, 12, 160, 77, 153, 210, 209, 246, 115, 87, 252, 55, 139, 105, 38, 151, 83, 33, 211, 23, 55, 163, 90, 111, 66, 166, 56, 225, 232, 97, 127, 6, 12, 232, 31, 126, 237, 135, 193, 123, 198, 163, 71, 173, 55, 205, 232, 60, 235, 163, 24, 46, 42, 71, 7, 56, 126, 35, 18, 94, 224, 63, 183, 139, 209, 24, 15, 102, 20, 15, 189, 143, 12, 112, 7, 8, 131, 103, 254, 183, 96, 48, 230, 177, 18, 222, 92, 184, 175, 118, 236, 16, 200, 34, 136, 1, 67, 104, 217, 26, 66, 212, 180, 18, 202, 132, 38, 154, 190, 33, 52, 184, 13, 161, 178, 26, 9, 172, 208, 18, 160, 16, 154, 154, 148, 129, 208, 142, 128, 208, 248, 130, 3, 161, 124, 1, 161, 255, 112, 195, 98, 15, 31, 2, 66, 94, 144, 135, 82, 55, 38, 148, 76, 180, 132, 70, 18, 58, 64, 58, 134, 208, 52, 52, 132, 46, 161, 33, 40, 34, 204, 45, 15, 111, 32, 52, 16, 75, 40, 10, 44, 102, 119, 254, 226, 13, 39, 216, 192, 242, 215, 22, 111, 39, 221, 44, 6, 215, 88, 12, 203, 176, 24, 194, 139, 211, 71, 188, 184, 199, 71, 7, 225, 98, 47, 7, 147, 152, 39, 205, 6, 139, 14, 164, 28, 68, 198, 31, 198, 102, 39, 215, 102, 7, 58, 230, 15, 71, 64, 184, 92, 79, 79, 64, 190, 124, 217, 222, 2, 62, 64, 182, 167, 62, 155, 180, 64, 188, 39, 7, 98, 80, 246, 239, 246, 23, 76, 8, 28, 47, 131, 24, 199, 46, 60, 56, 126, 71, 184, 88, 85, 5, 131, 94, 79, 106, 114, 48, 81, 89, 76, 15, 62, 204, 98, 56, 24, 88, 51, 69, 50, 110, 47, 130, 33, 31, 107, 22, 27, 221, 171, 220, 80, 74, 72, 23, 0, 0, 13, 98, 51, 14, 200, 129, 76, 82, 3, 33, 71, 105, 38, 100, 4, 130, 162, 70, 17, 3, 2, 77, 24, 153, 6, 49, 204, 243, 3, 6, 104, 88, 68, 3, 6, 24, 105, 101, 17, 83, 132, 189, 47, 15, 86, 128, 152, 15, 9, 18, 88, 8, 89, 47, 13, 139, 115, 97, 239, 111, 79, 95, 102, 42, 72, 15, 1, 18, 231, 12, 89, 31, 102, 129, 69, 83, 133, 181, 6, 15, 128, 189, 47, 15, 72, 196, 198, 19, 152, 75, 141, 15, 132, 75, 220, 8, 25, 243, 66, 6, 210, 90, 172, 169, 245, 110, 12, 22, 234, 62, 210, 254, 201, 30, 15, 206, 255, 33, 16, 3, 50, 32, 244, 108, 89, 175, 15, 33, 188, 48, 120, 79, 217, 97, 31, 15, 46, 98, 35, 217, 146, 198, 76, 217, 44, 63, 28, 48, 104, 186, 174, 30, 4, 124, 206, 100, 7, 225, 230, 124, 64, 96, 100, 96, 202, 4, 141, 115, 179, 82, 28, 29, 205, 218, 30, 31, 83, 66, 124, 14, 26, 163, 27, 147, 24, 14, 177, 212, 1, 176, 16, 175, 3, 225, 239, 79, 45, 123, 15, 207, 133, 236, 47, 191, 40, 28, 173, 112, 73, 147, 12, 33, 169, 163, 98, 163, 60, 201, 54, 209, 18, 35, 36, 155, 217, 203, 59, 3, 167, 2, 96, 192, 36, 64, 51, 162, 251, 130, 178, 170, 170, 2, 130, 181, 12, 99, 0, 76, 1, 22, 78, 119, 224, 168, 108, 98, 11, 232, 220, 178, 45, 152, 62, 15, 154, 253, 102, 206, 154, 63, 34, 232, 157, 46, 188, 54, 44, 150, 133, 204, 60, 54, 108, 216, 0, 102, 183, 13, 108, 216, 96, 16, 51, 180, 80, 148, 108, 100, 111, 15, 33, 47, 96, 48, 119, 108, 239, 154, 162, 0, 136, 88, 154, 239, 161, 50, 51, 157, 98, 255, 94, 146, 4, 193, 16, 41, 168, 12, 226, 241, 51, 177, 138, 203, 152, 18, 95, 9, 115, 12, 255, 100, 16, 51, 164, 80, 15, 98, 208, 137, 126, 16, 127, 52, 24, 44, 6, 62, 4, 61, 190, 34, 151, 3, 246, 100, 29, 191, 31, 23, 54, 198, 15, 48, 18, 88, 63, 199, 146, 63, 15, 176, 2, 83, 204, 53, 172, 15, 72, 38, 0, 25, 68, 51, 179, 80, 64, 189, 96, 71, 159, 176, 144, 127, 54, 172, 183, 159, 111, 81, 132, 182, 156, 179, 204, 204, 255, 38, 108, 31, 48, 195, 202, 47, 210, 182, 44, 31, 12, 1, 74, 147, 144, 3, 102, 12, 96, 192, 195, 4, 104, 124, 163, 204, 6, 240, 14, 190, 83, 44, 143, 198, 221, 64, 127, 198, 50, 36, 198, 188, 22, 159, 110, 9, 63, 12, 33, 16, 179, 11, 35, 57, 2, 123, 95, 0, 90, 66, 187, 133, 44, 16, 18, 66, 231, 88, 223, 189, 48, 98, 54, 236, 111, 43, 74, 51, 81, 42, 202, 102, 25, 0, 232, 65, 255, 17, 178, 29, 43, 155, 148, 42, 34, 96, 10, 18, 177, 144, 76, 41, 88, 33, 12, 162, 124, 51, 170, 160, 66, 17, 137, 9, 30, 24, 112, 3, 9, 46, 118, 1, 19, 1, 208, 203, 128, 255, 217, 123, 27, 41, 13, 50, 96, 251, 48, 96, 118, 249, 139, 56, 118, 43, 123, 9, 97, 69, 98, 217, 83, 91, 118, 246, 13, 68, 96, 89, 111, 224, 50, 239, 60, 55, 48, 237, 13, 150, 189, 41, 13, 44, 3, 233, 18, 6, 231, 45, 3, 229, 96, 25, 164, 66, 53, 227, 24, 96, 192, 110, 225, 24, 112, 206, 223, 1, 27, 153, 27, 200, 198, 198, 13, 101, 192, 217, 217, 178, 251, 13, 17, 111, 55, 179, 36, 229, 66, 244, 102, 55, 24, 112, 100, 32, 2, 192, 29, 207, 230, 124, 128, 128, 101, 205, 25, 240, 204, 203, 203, 128, 202, 224, 84, 99, 156, 48, 199, 216, 112, 88, 6, 197, 9, 75, 177, 23, 101, 111, 13, 181, 150, 189, 41, 167, 44, 3, 189, 18, 6, 187, 43, 3, 185, 132, 1, 183, 197, 128, 181, 15, 152, 83, 179, 132, 1, 178, 224, 128, 177, 205, 25, 175, 99, 110, 195, 182, 195, 133, 31, 13, 204, 232, 54, 110, 218, 60, 128, 7, 171, 24, 240, 170, 168, 3, 22, 166, 6, 49, 51, 96, 85, 176, 48, 155, 72, 24, 153, 36, 12, 151, 88, 6, 149, 16, 15, 148, 66, 100, 51, 48, 3, 139, 3, 30, 138, 137, 16, 9, 0, 100, 51, 203, 128, 121, 192, 128, 118, 119, 32, 220, 223, 169, 194, 51, 146, 1, 103, 24, 208, 3, 101, 1, 26, 233, 69, 38, 246, 9, 169, 149, 155, 58, 176, 198, 13, 48, 198, 74, 183, 215, 12, 72, 89, 100, 183, 13, 60, 102, 66, 14, 0, 25, 68, 51, 177, 16, 56, 59, 115, 14, 6, 48, 111, 97, 9, 48, 210, 105, 96, 211, 1, 19, 120, 189, 146, 66, 78, 100, 151, 27, 48, 41, 48, 96, 48, 192, 108, 124, 10, 32, 100, 58, 1, 51, 40, 3, 150, 55, 53, 48, 100, 224, 3, 30, 52, 51, 198, 46, 124, 111, 198, 89, 66, 13, 53, 107, 11, 3, 146, 151, 43, 19, 44, 26, 202, 128, 39, 12, 56, 254, 34, 1, 139, 169, 140, 31, 99, 225, 70, 52, 115, 128, 84, 48, 192, 25, 188, 98, 129, 109, 64, 6, 19, 96, 192, 24, 15, 12, 88, 13, 24, 68, 51, 64, 1, 38, 98, 250, 40, 70, 255, 140, 78, 214, 118, 246, 48, 26, 124, 240, 99, 110, 118, 23, 7, 96, 108, 147, 48, 23, 56, 147, 152, 227, 5, 163, 112, 210, 186, 9, 239, 7, 48, 70, 193, 63, 192, 204, 13, 60, 31, 7, 199, 92, 23, 7, 198, 16, 98, 16, 164, 40, 231, 71, 39, 177, 25, 65, 44, 248, 53, 66, 213, 236, 71, 11, 127, 110, 151, 160, 163, 150, 206, 70, 193, 65, 71, 55, 27, 87, 7, 55, 35, 126, 143, 112, 179, 7, 31, 218, 137, 43, 6, 23, 41, 129, 14, 30, 189, 39, 95, 71, 143, 94, 90, 61, 35, 89, 58, 108, 48, 218, 15, 108, 184, 78, 212, 209, 72, 60, 51, 122, 71, 66, 48, 123, 247, 159, 230, 102, 213, 217, 95, 48, 10, 42, 32, 220, 7, 100, 244, 252, 31, 13, 163, 25, 209, 25, 18, 124, 49, 154, 12, 11, 237, 131, 254, 4, 99, 107, 189, 251, 126, 51, 102, 204, 15, 7, 122, 54, 106, 223, 76, 168, 17, 244, 237, 14, 193, 22, 102, 51, 112, 95, 68, 102, 9, 2, 131, 51, 132, 22, 151, 55, 207, 218, 156, 7, 96, 48, 135, 38, 178, 136, 67, 177, 132, 50, 51, 20, 28, 188, 101, 14, 28, 191, 250, 98, 66, 141, 130, 12, 51, 152, 208, 94, 98, 118, 23, 127, 136, 12, 51, 239, 80, 40, 205, 113, 232, 118, 24, 108, 34, 202, 71, 155, 246, 123, 24, 247, 16, 89, 56, 99, 0, 23, 48, 8, 203, 31, 159, 17, 40, 230, 11, 22, 251, 6, 8, 55, 7, 133, 50, 51, 13, 18, 32, 48, 195, 130, 63, 27, 61, 14, 87, 55, 198, 162, 213, 188, 204, 225, 29, 95, 15, 95, 44, 222, 7, 159, 197, 27, 124, 239, 139, 9, 171, 130, 143, 226, 192, 90, 139, 23, 137, 147, 209, 220, 7, 71, 179, 152, 119, 137, 205, 30, 175, 15, 56, 163, 23, 159, 12, 139, 119, 121, 119, 107, 98, 0, 126, 98, 203, 93, 10, 253, 31, 42, 225, 50, 228, 58, 246, 42, 95, 134, 130, 0, 52, 73, 128, 51, 6, 22, 62, 120, 152, 183, 135, 24, 178, 46, 24, 226, 176, 33, 60, 22, 15, 43, 122, 25, 196, 120, 51, 144, 3, 181, 114, 60, 25, 83, 157, 76, 20, 145, 130, 146, 200, 130, 32, 81, 33, 131, 39, 97, 16, 51, 130, 80, 132, 12, 135, 133, 65, 51, 12, 130, 151, 100, 163, 0, 131, 96, 167, 16, 33, 8, 101, 51, 200, 32, 199, 25, 68, 51, 8, 66, 17, 50, 231, 84, 6, 51, 44, 130, 7, 65, 132, 8, 150, 51, 172, 178, 23, 101, 17, 7, 139, 32, 39, 217, 9, 4, 8, 15, 17, 156, 88, 101, 39, 200, 128, 167, 16, 163, 34, 100, 51, 42, 3, 183, 25, 68, 51, 98, 16, 42, 9, 39, 6, 17, 51, 98, 85, 40, 9, 103, 25, 68, 51, 34, 20, 32, 9, 215, 25, 196, 51, 34, 20, 2, 11, 71, 16, 161, 70, 101, 51, 182, 32, 135, 96, 182, 66, 54, 49, 9, 149, 5, 151, 174, 4, 207, 97, 16, 51, 32, 66, 43, 176, 199, 96, 16, 51, 130, 8, 16, 203, 215, 28, 101, 51, 102, 136, 148, 177, 12, 7, 149, 0, 151, 32, 182, 206, 198, 132, 16, 167, 148, 65, 51, 2, 17, 169, 64, 150, 1, 249, 194, 32, 51, 4, 11, 72, 72, 67, 176, 12, 233, 145, 68, 81, 48, 96, 225, 32, 134, 124, 176, 200, 51, 98, 25, 219, 139, 12, 51, 72, 4, 151, 131, 72, 51, 65, 34, 18, 22, 147, 203, 32, 51, 89, 4, 161, 8, 22, 193, 178, 147, 66, 22, 175, 4, 135, 19, 86, 89, 175, 50, 32, 95, 68, 0, 72, 24, 51, 200, 128, 109, 6, 145, 51, 88, 20, 200, 128, 207, 65, 132, 88, 145, 51, 72, 130, 7, 6, 17, 51, 72, 21, 66, 130, 105, 6, 49, 51, 72, 21, 64, 130, 203, 68, 32, 17, 25, 51, 44, 136, 3, 102, 43, 48, 65, 76, 65, 100, 17, 131, 120, 8, 16, 51, 177, 2, 149, 5, 59, 12, 98, 51, 65, 172, 136, 100, 73, 12, 50, 51, 86, 6, 19, 18, 32, 211, 2, 196, 113, 241, 90, 219, 129, 0, 127, 12, 34, 51, 128, 0, 20, 18, 161, 32, 71, 65, 4, 8, 133, 51, 65, 40, 119, 96, 16, 51, 132, 130, 127, 25, 133, 152, 161, 32, 135, 6, 49, 51, 10, 66, 68, 16, 151, 8, 25, 51, 65, 40, 167, 100, 16, 51, 163, 32, 55, 65, 4, 10, 130, 51, 16, 50, 63, 130, 81, 55, 48, 10, 71, 193, 236, 211, 7, 70, 70, 71, 18, 32, 135, 16, 11, 136, 96, 51, 140, 4, 143, 144, 65, 51, 128, 88, 17, 74, 199, 80, 6, 51, 4, 136, 231, 65, 140, 88, 144, 51, 200, 128, 31, 25, 68, 51, 136, 17, 8, 12, 87, 6, 177, 51, 136, 80, 133, 12, 119, 32, 134, 27, 136, 50, 127, 152, 69, 104, 43, 131, 51, 24, 16, 151, 32, 22, 16, 201, 51, 136, 24, 159, 16, 50, 51, 32, 14, 241, 193, 18, 55, 28, 86, 255, 211, 33, 64, 7, 12, 34, 51, 146, 167, 233, 116, 80, 240, 228, 90, 209, 114, 145, 85, 103, 146, 20, 128, 160, 21, 200, 34, 21, 163, 22, 122, 248, 78, 171, 160, 102, 103, 32, 40, 1, 171, 21, 156, 91, 102, 21, 96, 103, 122, 80, 124, 194, 5, 31, 3, 194, 124, 65, 88, 103, 144, 83, 29, 191, 60, 25, 101, 5, 153, 145, 65, 51, 146, 20, 130, 130, 66, 222, 0, 5, 43, 72, 89, 103, 45, 33, 83, 37, 0, 106, 11, 106, 139, 84, 33, 178, 96, 52, 7, 91, 246, 16, 8, 40, 15, 73, 208, 166, 171, 96, 103, 84, 43, 32, 97, 173, 42, 171, 103, 69, 112, 102, 0, 75, 36, 15, 239, 192, 42, 130, 3, 139, 10, 35, 223, 222, 255, 60, 66, 153, 165, 161, 165, 153, 66, 14, 178, 10, 103, 5, 144, 40, 101, 131, 50, 3, 109, 172, 130, 103, 0, 42, 1, 16, 176, 236, 9, 0, 149, 85, 103, 70, 0, 10, 3, 249, 16, 12, 112, 146, 239, 7, 24, 244, 254, 132, 1, 242, 96, 192, 0, 239, 12, 24, 237, 85, 176, 128, 145, 103, 5, 203, 233, 23, 89, 103, 102, 41, 130, 0, 199, 64, 10, 22, 96, 219, 164, 8, 157, 80, 175, 56, 68, 177, 95, 205, 68, 56, 42, 172, 130, 184, 103, 25, 176, 211, 15, 8, 209, 42, 48, 0, 194, 103, 1, 43, 130, 129, 23, 2, 172, 103, 148, 160, 82, 97, 224, 179, 10, 103, 32, 5, 195, 1, 163, 210, 14, 81, 147, 20, 140, 191, 163, 100, 193, 187, 21, 12, 163, 96, 103, 176, 21, 12, 42, 100, 103, 20, 28, 130, 108, 9, 239, 119, 21, 164, 10, 102, 103, 21, 4, 215, 130], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 44532);
allocate([16, 147, 12, 10, 15, 4, 53, 208, 155, 123, 7, 2, 19, 201, 40, 172, 103, 116, 168, 8, 211, 42, 152, 24, 135, 202, 103, 13, 10, 183, 255, 84, 104, 105, 115, 32, 102, 111, 110, 116, 4, 105, 108, 255, 246, 101, 32, 104, 97, 13, 98, 101, 101, 110, 32, 99, 114, 183, 253, 101, 97, 116, 101, 100, 47, 2, 105, 6, 251, 55, 19, 121, 32, 67, 80, 73, 97, 100, 9, 223, 126, 86, 49, 46, 50, 48, 55, 67, 111, 112, 121, 255, 242, 114, 105, 103, 104, 40, 67, 41, 32, 49, 57, 57, 127, 221, 51, 45, 4, 54, 40, 107, 111, 115, 253, 183, 116, 84, 64, 97, 99, 109, 46, 111, 114, 103, 118, 183, 31, 75, 15, 97, 32, 75, 21, 15, 54, 41, 113, 112, 114, 111, 119, 255, 103, 114, 97, 109, 32, 109, 97, 121, 111, 32, 117, 115, 173, 117, 99, 102, 114, 9, 214, 218, 111, 102, 122, 132, 54, 191, 181, 9, 126, 32, 121, 111, 117, 114, 173, 109, 17, 119, 141, 105, 0, 248, 115, 107, 46, 13, 10, 0, 0, 0, 0, 0, 36, 255, 164, 232, 58, 0, 114, 250, 65, 232, 47, 0, 227, 59, 115, 249, 131, 233, 3, 114, 6, 136, 204, 172, 247, 208, 149, 49, 201, 232, 27, 0, 17, 201, 117, 8, 65, 232, 19, 0, 115, 251, 65, 65, 129, 253, 0, 243, 131, 209, 1, 141, 3, 150, 243, 164, 150, 235, 200, 232, 2, 0, 17, 201, 1, 219, 117, 4, 173, 17, 192, 147, 195, 94, 185, 1, 0, 172, 44, 232, 60, 1, 119, 249, 139, 28, 134, 223, 41, 243, 137, 28, 173, 226, 238, 195, 75, 67, 70, 0, 1, 1, 46, 72, 101, 110, 114, 105, 113, 117, 101, 32, 80, 101, 114, 111, 110, 255, 68, 79, 83, 32, 99, 111, 100, 101, 112, 97, 103, 101, 115, 32, 45, 32, 108, 105, 98, 114, 97, 114, 121, 32, 35, 49, 32, 111, 102, 32, 51, 160, 3, 14, 0, 0, 66, 69, 44, 120, 0, 66, 69, 44, 120, 0, 70, 82, 6, 4, 44, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 90, 3, 15, 3, 22, 3, 0, 0, 91, 3, 94, 1, 150, 1, 0, 0, 82, 3, 0, 0, 22, 3, 0, 0, 181, 1, 19, 2, 30, 2, 0, 0, 55, 117, 109, 2, 186, 2, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 66, 0, 38, 49, 124, 3, 66, 0, 130, 50, 64, 4, 66, 0, 34, 51, 35, 5, 65, 0, 39, 52, 6, 65, 0, 40, 53, 7, 66, 0, 245, 54, 94, 8, 65, 0, 138, 55, 9, 65, 0, 33, 56, 10, 66, 0, 135, 57, 123, 11, 66, 0, 133, 48, 125, 12, 65, 0, 41, 248, 13, 68, 12, 45, 95, 0, 0, 31, 16, 197, 0, 97, 30, 65, 30, 0, 30, 0, 30, 1, 30, 0, 30, 17, 197, 0, 122, 44, 90, 44, 0, 44, 0, 44, 26, 44, 0, 44, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 66, 3, 202, 204, 91, 27, 66, 0, 36, 42, 93, 30, 197, 0, 113, 16, 81, 16, 0, 16, 0, 16, 17, 16, 0, 16, 39, 197, 0, 109, 50, 77, 50, 0, 50, 0, 50, 13, 50, 0, 50, 40, 67, 12, 151, 37, 203, 203, 41, 65, 0, 253, 252, 43, 67, 12, 230, 156, 200, 200, 44, 197, 0, 119, 17, 87, 17, 0, 17, 0, 17, 23, 17, 0, 17, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 50, 68, 8, 44, 63, 92, 0, 28, 51, 66, 0, 59, 46, 60, 52, 66, 0, 58, 47, 62, 53, 67, 12, 61, 43, 201, 201, 57, 0, 0, 32, 86, 68, 8, 60, 62, 92, 0, 28, 0, 16, 197, 0, 97, 30, 65, 30, 145, 30, 146, 30, 1, 30, 0, 30, 18, 66, 3, 0, 0, 213, 24, 67, 3, 0, 0, 171, 172, 31, 66, 3, 0, 0, 225, 44, 197, 0, 119, 17, 87, 17, 174, 17, 0, 17, 23, 17, 0, 17, 45, 66, 3, 0, 0, 175, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 0, 7, 65, 2, 21, 0, 41, 65, 3, 0, 160, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 9, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 67, 128, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 5, 66, 3, 0, 0, 213, 16, 197, 0, 97, 30, 65, 30, 134, 30, 143, 30, 1, 30, 0, 30, 17, 197, 0, 122, 44, 90, 44, 145, 44, 146, 44, 26, 44, 0, 44, 18, 67, 3, 0, 0, 228, 229, 24, 67, 3, 0, 0, 171, 172, 43, 65, 3, 0, 160, 44, 197, 0, 119, 17, 87, 17, 174, 17, 0, 17, 23, 17, 0, 17, 45, 66, 3, 0, 0, 175, 0, 96, 7, 97, 133, 101, 138, 117, 151, 65, 183, 69, 212, 85, 235, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 5, 99, 135, 101, 130, 67, 128, 69, 144, 32, 39, 34, 11, 97, 132, 101, 137, 105, 139, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 85, 154, 89, 243, 32, 34, 0, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 247, 231, 1, 9, 0, 0, 66, 82, 44, 19, 1, 66, 82, 4, 3, 44, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 90, 3, 93, 1, 102, 1, 0, 0, 82, 3, 0, 0, 102, 1, 0, 0, 181, 1, 249, 0, 18, 1, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 251, 3, 2, 3, 0, 0, 253, 4, 2, 3, 0, 0, 252, 5, 2, 3, 0, 0, 156, 6, 2, 3, 0, 0, 189, 7, 2, 3, 0, 204, 170, 8, 2, 3, 0, 0, 47, 9, 2, 3, 0, 0, 124, 10, 2, 3, 0, 0, 63, 11, 2, 3, 0, 0, 248, 13, 2, 3, 0, 0, 245, 16, 66, 3, 0, 0, 47, 17, 66, 3, 0, 0, 63, 18, 66, 0, 101, 69, 248, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 1, 3, 203, 200, 27, 3, 0, 91, 123, 166, 27, 30, 65, 0, 97, 65, 39, 65, 0, 135, 128, 40, 3, 7, 201, 202, 0, 30, 41, 1, 0, 39, 34, 43, 3, 0, 93, 125, 167, 29, 49, 65, 0, 110, 78, 53, 3, 0, 59, 58, 92, 28, 57, 0, 0, 32, 115, 2, 0, 47, 63, 248, 126, 1, 0, 46, 46, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 6, 2, 3, 0, 0, 155, 13, 2, 3, 0, 0, 21, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 7, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 18, 68, 15, 0, 0, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 250, 86, 1, 4, 18, 1, 66, 82, 4, 1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 90, 3, 207, 0, 214, 0, 0, 0, 82, 3, 0, 0, 214, 0, 0, 0, 181, 1, 121, 0, 128, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 7, 1, 3, 0, 202, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 30, 65, 0, 97, 65, 40, 2, 3, 203, 204, 249, 41, 1, 3, 200, 201, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 57, 0, 0, 32, 0, 40, 2, 7, 0, 0, 160, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 9, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 67, 128, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 34, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 34, 0, 198, 8, 4, 19, 0, 0, 67, 70, 44, 0, 0, 67, 65, 44, 58, 0, 67, 70, 44, 58, 0, 67, 65, 6, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 90, 3, 42, 1, 49, 1, 0, 0, 82, 3, 0, 0, 49, 1, 0, 0, 95, 3, 112, 3, 167, 3, 0, 0, 91, 3, 160, 1, 212, 1, 0, 0, 70, 117, 69, 2, 175, 2, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 241, 3, 2, 1, 0, 34, 64, 4, 2, 1, 0, 47, 156, 5, 2, 3, 0, 0, 189, 6, 2, 3, 0, 0, 207, 7, 2, 1, 0, 63, 170, 8, 2, 3, 0, 0, 221, 9, 2, 3, 0, 0, 253, 10, 2, 3, 0, 0, 252, 11, 2, 3, 0, 0, 172, 12, 2, 3, 0, 0, 171, 13, 2, 3, 0, 0, 243, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 66, 0, 105, 73, 251, 24, 66, 0, 111, 79, 245, 25, 66, 3, 0, 0, 244, 26, 2, 3, 201, 201, 91, 27, 2, 3, 204, 203, 93, 30, 65, 0, 97, 65, 39, 2, 3, 0, 0, 126, 40, 2, 3, 200, 200, 123, 41, 4, 8, 35, 124, 92, 0, 28, 43, 2, 0, 60, 62, 125, 46, 65, 0, 99, 67, 47, 66, 3, 0, 0, 174, 48, 66, 3, 0, 0, 175, 49, 66, 3, 0, 0, 248, 50, 66, 3, 0, 0, 230, 51, 2, 1, 0, 39, 238, 52, 2, 1, 0, 46, 45, 53, 66, 4, 130, 144, 202, 57, 0, 0, 32, 86, 2, 0, 174, 175, 248, 0, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 247, 3, 99, 135, 67, 128, 32, 247, 0, 8, 2, 7, 0, 0, 160, 11, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 18, 2, 3, 0, 0, 213, 30, 3, 3, 0, 0, 145, 146, 36, 3, 3, 0, 0, 164, 165, 38, 3, 3, 0, 0, 171, 172, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 44, 3, 99, 135, 67, 128, 32, 44, 0, 2, 2, 7, 0, 0, 160, 5, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 11, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 18, 2, 3, 0, 0, 213, 21, 3, 3, 0, 0, 231, 232, 23, 2, 7, 0, 0, 160, 25, 3, 3, 0, 0, 171, 172, 30, 3, 3, 0, 0, 145, 146, 38, 3, 3, 0, 0, 208, 209, 43, 1, 3, 206, 207, 51, 2, 7, 0, 0, 160, 52, 2, 7, 0, 0, 205, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 32, 39, 34, 9, 101, 137, 105, 139, 117, 129, 121, 152, 69, 211, 73, 216, 85, 154, 89, 243, 32, 34, 44, 13, 97, 132, 101, 158, 105, 166, 111, 148, 117, 168, 65, 142, 69, 159, 73, 167, 79, 153, 85, 169, 99, 135, 67, 128, 32, 44, 45, 11, 97, 198, 101, 236, 105, 244, 111, 228, 110, 164, 65, 199, 69, 237, 73, 246, 79, 229, 78, 165, 32, 45, 60, 11, 97, 250, 101, 241, 105, 225, 111, 252, 117, 247, 65, 251, 69, 242, 73, 238, 79, 253, 85, 239, 32, 60, 62, 11, 97, 134, 101, 189, 105, 249, 111, 155, 117, 184, 65, 143, 69, 190, 73, 221, 79, 157, 85, 173, 32, 62, 0, 5, 2, 3, 0, 0, 155, 6, 2, 3, 0, 0, 152, 8, 2, 3, 0, 0, 160, 10, 2, 3, 0, 0, 166, 13, 2, 3, 0, 0, 173, 23, 66, 7, 0, 0, 160, 24, 66, 3, 0, 0, 143, 25, 66, 3, 0, 0, 134, 51, 2, 3, 0, 0, 167, 0, 96, 7, 97, 133, 101, 138, 117, 151, 65, 142, 69, 145, 85, 157, 32, 96, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 132, 69, 146, 73, 168, 79, 153, 85, 158, 32, 94, 161, 5, 101, 130, 111, 162, 117, 163, 69, 144, 32, 161, 164, 7, 101, 137, 105, 139, 117, 129, 69, 148, 73, 149, 85, 154, 32, 164, 165, 3, 99, 135, 67, 128, 32, 165, 0, 154, 68, 7, 9, 189, 1, 67, 70, 44, 189, 1, 67, 65, 10, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0, 90, 3, 27, 1, 252, 2, 0, 0, 90, 3, 42, 1, 252, 2, 0, 0, 82, 3, 14, 2, 252, 2, 0, 0, 82, 3, 23, 2, 252, 2, 0, 0, 95, 3, 131, 3, 123, 4, 0, 0, 95, 3, 160, 3, 123, 4, 0, 0, 91, 3, 186, 5, 177, 6, 0, 0, 91, 3, 208, 5, 177, 6, 0, 0, 70, 117, 200, 4, 253, 4, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 0, 63, 8, 2, 3, 0, 0, 123, 9, 2, 3, 0, 0, 125, 10, 4, 11, 0, 0, 91, 0, 27, 11, 4, 11, 0, 0, 93, 0, 29, 13, 2, 3, 0, 0, 170, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 4, 15, 202, 204, 200, 0, 30, 27, 66, 0, 135, 128, 126, 30, 65, 0, 97, 65, 39, 2, 3, 0, 0, 248, 40, 65, 0, 138, 212, 41, 4, 8, 47, 92, 124, 0, 28, 43, 65, 0, 133, 183, 44, 66, 3, 0, 0, 174, 45, 66, 3, 0, 0, 175, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 51, 2, 1, 0, 39, 60, 52, 2, 1, 0, 34, 62, 53, 65, 0, 130, 144, 57, 0, 0, 32, 86, 68, 12, 151, 235, 0, 0, 28, 0, 18, 66, 3, 0, 0, 213, 42, 4, 31, 0, 0, 0, 0, 121, 0, 2, 1, 0, 251, 173, 3, 1, 2, 253, 160, 4, 1, 0, 252, 156, 5, 1, 0, 172, 207, 6, 1, 2, 171, 160, 7, 1, 2, 243, 160, 8, 16, 0, 0, 9, 16, 0, 0, 10, 1, 0, 241, 241, 11, 16, 0, 0, 12, 1, 0, 168, 168, 13, 1, 3, 206, 160, 16, 16, 0, 0, 17, 16, 0, 0, 18, 16, 0, 0, 19, 1, 0, 244, 169, 20, 16, 0, 0, 21, 1, 0, 190, 190, 22, 16, 0, 0, 23, 16, 0, 0, 24, 65, 0, 155, 157, 25, 65, 0, 231, 232, 26, 1, 3, 160, 205, 27, 1, 1, 201, 238, 30, 65, 0, 145, 146, 31, 1, 0, 225, 245, 32, 65, 0, 208, 209, 33, 1, 0, 166, 166, 34, 16, 0, 0, 35, 16, 0, 0, 36, 16, 0, 0, 37, 16, 0, 0, 38, 16, 0, 0, 39, 1, 3, 203, 160, 40, 16, 0, 0, 41, 1, 0, 45, 196, 43, 16, 0, 0, 44, 16, 0, 0, 45, 16, 0, 0, 46, 1, 0, 189, 184, 47, 16, 0, 0, 48, 16, 0, 0, 49, 16, 0, 0, 50, 1, 0, 230, 167, 51, 1, 0, 158, 158, 52, 1, 0, 250, 246, 53, 1, 2, 47, 160, 54, 4, 31, 0, 0, 0, 0, 120, 86, 1, 2, 221, 160, 0, 42, 4, 31, 0, 0, 0, 0, 123, 0, 2, 1, 0, 251, 173, 3, 1, 2, 253, 160, 4, 1, 0, 252, 156, 5, 1, 0, 172, 207, 6, 1, 2, 171, 160, 7, 1, 2, 243, 160, 8, 16, 0, 0, 9, 16, 0, 0, 10, 1, 0, 241, 241, 11, 16, 0, 0, 12, 1, 0, 168, 168, 13, 1, 3, 206, 160, 16, 16, 0, 0, 17, 16, 0, 0, 18, 16, 0, 0, 19, 1, 0, 244, 169, 20, 16, 0, 0, 21, 1, 0, 190, 190, 22, 16, 0, 0, 23, 1, 1, 160, 213, 24, 65, 0, 155, 157, 25, 65, 0, 231, 232, 26, 1, 3, 160, 205, 27, 1, 1, 201, 238, 30, 65, 0, 145, 146, 31, 1, 0, 225, 245, 32, 65, 0, 208, 209, 33, 1, 0, 166, 166, 34, 16, 0, 0, 35, 16, 0, 0, 36, 16, 0, 0, 37, 16, 0, 0, 38, 16, 0, 0, 39, 1, 3, 203, 160, 40, 16, 0, 0, 41, 1, 0, 45, 196, 43, 16, 0, 0, 44, 16, 0, 0, 45, 16, 0, 0, 46, 1, 0, 189, 184, 47, 16, 0, 0, 48, 16, 0, 0, 49, 16, 0, 0, 50, 1, 0, 230, 167, 51, 1, 0, 158, 158, 52, 1, 0, 250, 246, 53, 1, 2, 47, 160, 54, 4, 31, 0, 0, 0, 0, 122, 86, 1, 2, 221, 160, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 248, 3, 97, 134, 65, 143, 32, 248, 247, 3, 99, 135, 67, 128, 32, 247, 0, 26, 1, 3, 0, 201, 40, 65, 0, 138, 145, 42, 4, 31, 0, 0, 0, 0, 125, 43, 65, 0, 133, 142, 86, 65, 0, 151, 157, 0, 2, 16, 0, 0, 3, 1, 2, 253, 160, 4, 1, 0, 166, 156, 5, 1, 0, 172, 152, 6, 1, 2, 171, 160, 7, 1, 2, 173, 160, 8, 16, 0, 0, 9, 16, 0, 0, 10, 1, 0, 241, 241, 11, 16, 0, 0, 12, 16, 0, 0, 13, 1, 3, 204, 160, 16, 16, 0, 0, 17, 16, 0, 0, 18, 16, 0, 0, 19, 1, 2, 134, 160, 20, 16, 0, 0, 21, 16, 0, 0, 22, 16, 0, 0, 23, 16, 0, 0, 24, 16, 0, 0, 25, 16, 0, 0, 26, 1, 1, 160, 248, 27, 1, 0, 126, 167, 30, 16, 0, 0, 31, 1, 0, 225, 143, 32, 16, 0, 0, 33, 16, 0, 0, 34, 16, 0, 0, 35, 16, 0, 0, 36, 16, 0, 0, 37, 16, 0, 0, 38, 16, 0, 0, 39, 1, 3, 203, 160, 40, 16, 0, 0, 41, 1, 0, 45, 196, 43, 16, 0, 0, 44, 16, 0, 0, 45, 16, 0, 0, 46, 1, 2, 155, 160, 47, 16, 0, 0, 48, 16, 0, 0, 49, 16, 0, 0, 50, 1, 2, 230, 160, 51, 16, 0, 0, 52, 1, 0, 250, 246, 53, 1, 2, 47, 160, 54, 4, 31, 0, 0, 0, 0, 124, 86, 1, 2, 160, 160, 0, 96, 7, 97, 133, 101, 138, 117, 151, 65, 142, 69, 145, 85, 157, 32, 96, 164, 7, 101, 137, 105, 139, 117, 129, 69, 148, 73, 149, 85, 154, 32, 164, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 132, 69, 146, 73, 168, 79, 153, 85, 158, 32, 94, 161, 5, 101, 130, 111, 162, 117, 163, 69, 144, 32, 161, 165, 3, 99, 135, 67, 128, 32, 165, 0, 7, 3, 3, 0, 0, 231, 232, 18, 2, 3, 0, 0, 213, 24, 3, 3, 0, 0, 171, 172, 27, 2, 7, 0, 0, 201, 30, 3, 3, 0, 0, 145, 146, 38, 3, 3, 0, 0, 208, 209, 51, 2, 7, 0, 203, 205, 52, 2, 7, 0, 206, 207, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 11, 97, 198, 101, 236, 105, 244, 111, 228, 110, 164, 65, 199, 69, 237, 73, 246, 79, 229, 78, 165, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 32, 39, 34, 9, 101, 137, 105, 139, 117, 129, 121, 152, 69, 211, 73, 216, 85, 154, 89, 243, 32, 34, 60, 11, 97, 250, 101, 241, 105, 225, 111, 252, 117, 247, 65, 251, 69, 242, 73, 238, 79, 253, 85, 239, 32, 60, 34, 11, 97, 132, 101, 158, 105, 166, 111, 148, 117, 168, 65, 142, 69, 159, 73, 167, 79, 153, 85, 169, 32, 34, 62, 11, 97, 134, 101, 189, 105, 249, 111, 155, 117, 184, 65, 143, 69, 190, 73, 221, 79, 157, 85, 173, 32, 62, 0, 18, 66, 3, 0, 0, 213, 24, 67, 3, 0, 0, 171, 172, 42, 4, 31, 0, 0, 0, 0, 127, 0, 2, 1, 0, 251, 173, 3, 1, 2, 253, 160, 4, 1, 0, 252, 156, 5, 1, 1, 160, 207, 6, 16, 0, 0, 7, 16, 0, 0, 8, 16, 0, 0, 9, 16, 0, 0, 10, 1, 0, 241, 241, 11, 16, 0, 0, 12, 1, 0, 168, 168, 13, 1, 3, 206, 160, 16, 16, 0, 0, 17, 16, 0, 0, 18, 16, 0, 0, 19, 1, 0, 244, 169, 20, 16, 0, 0, 21, 1, 0, 190, 190, 22, 16, 0, 0, 23, 16, 0, 0, 24, 65, 0, 155, 157, 25, 65, 0, 231, 232, 26, 1, 3, 160, 205, 27, 1, 1, 201, 238, 30, 65, 0, 145, 146, 31, 1, 0, 225, 245, 32, 65, 0, 208, 209, 33, 1, 0, 166, 166, 34, 16, 0, 0, 35, 16, 0, 0, 36, 16, 0, 0, 37, 16, 0, 0, 38, 16, 0, 0, 39, 1, 3, 203, 160, 40, 16, 0, 0, 41, 1, 0, 45, 196, 43, 16, 0, 0, 44, 16, 0, 0, 45, 16, 0, 0, 46, 1, 0, 189, 184, 47, 16, 0, 0, 48, 16, 0, 0, 49, 16, 0, 0, 50, 1, 0, 230, 167, 51, 1, 0, 158, 158, 52, 1, 0, 250, 246, 53, 1, 2, 47, 160, 54, 4, 31, 0, 0, 0, 0, 126, 86, 16, 0, 0, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 248, 3, 97, 134, 65, 143, 32, 248, 44, 3, 99, 135, 67, 128, 32, 44, 0, 80, 170, 4, 4, 245, 1, 67, 70, 6, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 90, 3, 88, 1, 95, 1, 0, 0, 82, 3, 0, 0, 95, 1, 0, 0, 95, 3, 216, 3, 88, 4, 0, 0, 91, 3, 222, 1, 254, 1, 0, 0, 70, 117, 127, 2, 23, 3, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 0, 0, 251, 173, 3, 3, 1, 0, 34, 64, 253, 4, 3, 3, 0, 0, 252, 156, 5, 3, 3, 0, 0, 172, 207, 6, 2, 3, 0, 0, 171, 7, 2, 1, 0, 63, 243, 8, 2, 3, 0, 0, 123, 9, 4, 3, 0, 0, 91, 241, 27, 10, 4, 11, 0, 0, 93, 0, 29, 11, 2, 3, 0, 0, 125, 12, 3, 3, 0, 0, 124, 168, 13, 2, 7, 0, 0, 204, 18, 65, 0, 101, 69, 19, 67, 3, 0, 0, 244, 169, 21, 66, 0, 121, 89, 190, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 67, 0, 111, 79, 155, 157, 25, 67, 3, 0, 0, 231, 232, 26, 4, 11, 202, 202, 248, 0, 30, 27, 67, 12, 135, 128, 201, 205, 30, 67, 0, 97, 65, 145, 146, 31, 67, 3, 0, 0, 225, 245, 32, 67, 3, 0, 0, 208, 209, 33, 66, 3, 0, 0, 166, 39, 3, 15, 0, 0, 203, 203, 40, 65, 0, 138, 212, 41, 2, 0, 248, 248, 170, 43, 67, 12, 133, 183, 200, 200, 44, 66, 3, 0, 0, 174, 45, 66, 3, 0, 0, 175, 46, 67, 0, 99, 67, 189, 184, 49, 65, 0, 110, 78, 50, 67, 3, 0, 0, 230, 167, 51, 2, 1, 0, 39, 60, 52, 2, 1, 0, 46, 62, 53, 66, 0, 130, 144, 47, 57, 0, 0, 32, 86, 68, 0, 151, 235, 92, 124, 28, 0, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 247, 3, 99, 135, 67, 128, 32, 247, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 5, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 7, 2, 5, 0, 63, 160, 18, 2, 3, 0, 0, 213, 23, 3, 3, 0, 0, 171, 172, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 44, 3, 99, 135, 67, 128, 32, 44, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 0, 2, 3, 15, 0, 0, 160, 160, 3, 3, 15, 0, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 7, 2, 7, 0, 0, 160, 9, 3, 15, 0, 0, 0, 160, 12, 3, 15, 0, 0, 0, 160, 18, 2, 3, 0, 0, 213, 19, 3, 15, 0, 0, 160, 160, 20, 3, 3, 0, 0, 231, 232, 21, 2, 7, 0, 0, 160, 23, 3, 3, 0, 0, 171, 172, 24, 3, 15, 0, 0, 160, 160, 25, 3, 15, 0, 0, 160, 160, 31, 2, 7, 0, 0, 160, 32, 3, 15, 0, 0, 160, 160, 33, 2, 7, 0, 0, 160, 38, 3, 3, 0, 0, 208, 209, 46, 3, 15, 0, 0, 160, 160, 50, 3, 15, 0, 0, 0, 160, 51, 2, 7, 0, 0, 206, 52, 2, 7, 0, 0, 207, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 11, 97, 198, 101, 236, 105, 244, 111, 228, 110, 164, 65, 199, 69, 237, 73, 246, 79, 229, 78, 165, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 32, 39, 44, 13, 97, 132, 101, 158, 105, 166, 111, 148, 117, 168, 65, 142, 69, 159, 73, 167, 79, 153, 85, 169, 99, 135, 67, 128, 32, 44, 34, 9, 101, 137, 105, 139, 117, 129, 121, 152, 69, 211, 73, 216, 85, 154, 89, 243, 32, 34, 60, 11, 97, 250, 101, 241, 105, 225, 111, 252, 117, 247, 65, 251, 69, 242, 73, 238, 79, 253, 85, 239, 32, 60, 62, 11, 97, 134, 101, 189, 105, 249, 111, 155, 117, 184, 65, 143, 69, 190, 73, 221, 79, 157, 85, 173, 32, 62, 0, 2, 3, 15, 0, 0, 160, 160, 4, 2, 3, 0, 0, 166, 5, 3, 7, 0, 0, 0, 152, 7, 2, 3, 0, 0, 173, 12, 3, 15, 0, 0, 0, 160, 19, 67, 11, 0, 0, 134, 160, 21, 66, 7, 0, 0, 160, 24, 67, 15, 0, 0, 160, 160, 25, 67, 15, 0, 0, 160, 160, 27, 67, 11, 0, 0, 126, 201, 30, 67, 15, 0, 0, 160, 160, 31, 67, 7, 0, 0, 0, 143, 32, 67, 15, 0, 0, 160, 160, 33, 66, 7, 0, 0, 160, 40, 65, 0, 138, 145, 43, 65, 0, 133, 142, 46, 67, 11, 0, 0, 155, 160, 50, 67, 15, 0, 0, 0, 160, 57, 0, 0, 32, 86, 65, 0, 151, 157, 0, 96, 7, 97, 133, 101, 138, 117, 151, 65, 142, 69, 145, 85, 157, 32, 96, 164, 7, 101, 137, 105, 139, 117, 129, 69, 148, 73, 149, 85, 154, 32, 164, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 132, 69, 146, 73, 168, 79, 153, 85, 158, 32, 94, 161, 5, 101, 130, 111, 162, 117, 163, 69, 144, 32, 161, 165, 3, 99, 135, 67, 128, 32, 165, 0, 140, 11, 3, 4, 0, 0, 67, 90, 5, 2, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 84, 3, 102, 1, 182, 1, 0, 0, 90, 3, 8, 1, 15, 1, 0, 0, 82, 3, 0, 0, 15, 1, 0, 0, 99, 3, 75, 2, 153, 2, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 2, 2, 0, 43, 49, 33, 3, 2, 1, 160, 50, 64, 4, 2, 1, 160, 51, 35, 5, 2, 1, 160, 52, 36, 6, 2, 1, 160, 53, 37, 7, 2, 1, 160, 54, 94, 8, 2, 0, 236, 55, 38, 9, 2, 0, 160, 56, 42, 10, 2, 0, 161, 57, 40, 11, 2, 0, 130, 48, 41, 12, 3, 0, 61, 37, 45, 95, 13, 3, 3, 200, 160, 61, 43, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 3, 0, 163, 47, 91, 123, 27, 3, 0, 41, 40, 93, 125, 30, 65, 0, 97, 65, 39, 3, 1, 160, 34, 59, 58, 40, 3, 8, 245, 33, 207, 203, 41, 3, 2, 59, 202, 96, 126, 43, 3, 1, 201, 39, 92, 124, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 51, 3, 1, 0, 63, 60, 158, 52, 3, 1, 0, 58, 62, 246, 53, 3, 0, 45, 95, 47, 63, 57, 0, 0, 32, 86, 2, 0, 38, 42, 225, 0, 18, 66, 3, 0, 0, 213, 0, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 248, 3, 97, 134, 65, 143, 32, 248, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 0, 3, 0, 0, 216, 4, 0, 0, 231, 5, 0, 0, 159, 6, 0, 0, 253, 7, 0, 0, 167, 13, 1, 3, 0, 203, 18, 66, 3, 0, 0, 170, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 31, 65, 0, 115, 83, 32, 65, 0, 100, 68, 38, 65, 0, 108, 76, 39, 0, 0, 133, 40, 3, 15, 0, 0, 0, 204, 44, 65, 0, 122, 90, 86, 3, 15, 0, 0, 0, 205, 0, 39, 25, 97, 160, 99, 134, 101, 130, 105, 161, 108, 146, 110, 228, 111, 162, 114, 234, 115, 152, 117, 163, 121, 236, 122, 171, 65, 181, 67, 143, 69, 144, 73, 214, 76, 145, 78, 227, 79, 224, 82, 232, 83, 151, 85, 233, 89, 237, 90, 141, 32, 239, 249, 9, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 69, 211, 79, 153, 85, 154, 32, 249, 248, 3, 117, 133, 85, 222, 32, 248, 243, 19, 99, 159, 100, 212, 101, 216, 108, 150, 110, 229, 114, 253, 115, 231, 116, 156, 122, 167, 67, 172, 68, 210, 69, 183, 76, 149, 78, 213, 82, 252, 83, 230, 84, 155, 90, 166, 32, 243, 94, 7, 97, 131, 105, 140, 111, 147, 65, 182, 73, 215, 79, 226, 32, 94, 241, 5, 111, 139, 117, 251, 79, 138, 85, 235, 32, 241, 0, 3, 0, 0, 136, 4, 0, 0, 168, 5, 0, 0, 135, 6, 0, 0, 169, 7, 0, 0, 145, 8, 0, 0, 152, 13, 1, 3, 0, 203, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 31, 65, 0, 115, 83, 32, 65, 0, 100, 68, 38, 65, 0, 108, 76, 39, 0, 0, 150, 40, 3, 14, 173, 0, 160, 204, 44, 65, 0, 122, 90, 51, 3, 15, 0, 0, 0, 160, 0, 39, 17, 97, 160, 101, 130, 105, 161, 108, 141, 111, 162, 114, 170, 117, 163, 121, 152, 65, 143, 69, 144, 73, 139, 76, 138, 79, 149, 82, 171, 85, 151, 89, 157, 32, 39, 34, 7, 97, 132, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 248, 3, 117, 150, 85, 166, 32, 248, 118, 19, 99, 135, 100, 131, 101, 136, 108, 140, 110, 164, 114, 169, 115, 168, 116, 159, 122, 145, 67, 128, 68, 133, 69, 137, 76, 156, 78, 165, 82, 158, 83, 155, 84, 134, 90, 146, 32, 118, 94, 3, 111, 147, 79, 167, 32, 94, 0, 25, 250, 3, 4, 243, 0, 67, 90, 5, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 84, 3, 74, 1, 204, 1, 0, 0, 90, 3, 141, 2, 148, 2, 0, 0, 82, 3, 0, 0, 148, 2, 0, 0, 99, 3, 27, 3, 136, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 4, 43, 49, 200, 3, 1, 1, 160, 50, 4, 3, 5, 160, 51, 201, 30, 5, 1, 1, 160, 52, 6, 2, 5, 160, 53, 202, 7, 1, 1, 160, 54, 8, 2, 4, 236, 55, 203, 9, 2, 0, 160, 56, 250, 10, 2, 4, 161, 57, 204, 11, 1, 0, 130, 48, 12, 2, 4, 61, 37, 205, 13, 2, 7, 204, 160, 206, 16, 66, 3, 0, 0, 92, 17, 66, 3, 0, 0, 124, 18, 65, 0, 101, 69, 21, 196, 0, 122, 44, 90, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 2, 0, 163, 47, 246, 27, 2, 0, 41, 40, 158, 30, 66, 0, 97, 65, 60, 33, 66, 3, 0, 0, 91, 34, 66, 3, 0, 0, 93, 39, 2, 1, 160, 34, 36, 40, 2, 0, 245, 33, 225, 41, 1, 2, 59, 202, 43, 2, 1, 205, 39, 207, 44, 196, 0, 121, 21, 89, 21, 62, 21, 25, 21, 0, 21, 45, 66, 3, 0, 0, 35, 46, 66, 0, 99, 67, 38, 47, 66, 3, 0, 0, 64, 48, 66, 3, 0, 0, 123, 49, 66, 0, 110, 78, 125, 50, 66, 3, 0, 0, 230, 51, 1, 1, 0, 63, 52, 2, 1, 0, 58, 42, 53, 3, 4, 45, 95, 0, 31, 57, 0, 0, 32, 86, 3, 0, 38, 42, 60, 28, 0, 2, 2, 3, 0, 0, 126, 3, 2, 6, 216, 0, 200, 4, 0, 0, 231, 5, 2, 6, 159, 0, 202, 6, 2, 6, 253, 0, 203, 7, 2, 6, 167, 0, 204, 8, 2, 3, 0, 0, 96, 9, 2, 7, 0, 0, 205, 10, 2, 7, 0, 0, 206, 11, 2, 7, 0, 0, 207, 12, 2, 7, 0, 0, 208, 13, 2, 7, 206, 200, 209, 18, 66, 3, 0, 0, 170, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 31, 66, 0, 115, 83, 208, 32, 66, 0, 100, 68, 209, 37, 66, 3, 0, 0, 136, 38, 66, 0, 108, 76, 157, 39, 0, 0, 133, 41, 1, 3, 0, 203, 43, 0, 1, 208, 50, 2, 7, 0, 0, 160, 0, 243, 19, 99, 159, 100, 212, 101, 216, 108, 150, 110, 229, 114, 253, 115, 231, 116, 156, 122, 167, 67, 172, 68, 210, 69, 183, 76, 149, 78, 213, 82, 252, 83, 230, 84, 155, 90, 166, 32, 243, 94, 7, 97, 131, 105, 140, 111, 147, 65, 182, 73, 215, 79, 226, 32, 94, 244, 3, 97, 199, 65, 198, 32, 244, 248, 3, 117, 133, 85, 222, 32, 248, 242, 5, 97, 165, 101, 169, 65, 164, 69, 168, 32, 242, 250, 3, 122, 190, 90, 189, 32, 250, 39, 25, 97, 160, 99, 134, 101, 130, 105, 161, 108, 146, 110, 228, 111, 162, 114, 234, 115, 152, 117, 163, 121, 236, 122, 171, 65, 181, 67, 143, 69, 144, 73, 214, 76, 145, 78, 227, 79, 224, 82, 232, 83, 151, 85, 233, 89, 237, 90, 141, 32, 239, 241, 5, 111, 139, 117, 251, 79, 138, 85, 235, 32, 241, 249, 9, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 69, 211, 79, 153, 85, 154, 32, 249, 247, 7, 99, 135, 115, 173, 116, 238, 67, 128, 83, 184, 84, 221, 32, 247, 0, 18, 66, 3, 0, 0, 213, 0, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 248, 3, 97, 134, 65, 143, 32, 248, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 247, 3, 99, 135, 67, 128, 32, 247, 0, 2, 2, 3, 0, 0, 126, 3, 2, 6, 136, 0, 200, 4, 0, 0, 168, 5, 0, 0, 135, 6, 0, 0, 169, 7, 0, 0, 145, 8, 2, 2, 152, 0, 96, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 203, 12, 2, 7, 0, 0, 204, 13, 2, 7, 203, 200, 160, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 27, 2, 7, 0, 0, 160, 31, 65, 0, 115, 83, 32, 65, 0, 100, 68, 38, 65, 0, 108, 76, 39, 0, 0, 150, 40, 0, 0, 173, 41, 1, 3, 0, 202, 43, 2, 7, 204, 0, 160, 0, 118, 19, 99, 135, 100, 131, 101, 136, 108, 140, 110, 164, 114, 169, 115, 168, 116, 159, 122, 145, 67, 128, 68, 133, 69, 137, 76, 156, 78, 165, 82, 158, 83, 155, 84, 134, 90, 146, 32, 118, 94, 3, 111, 147, 79, 167, 32, 94, 248, 3, 117, 150, 85, 166, 32, 248, 39, 17, 97, 160, 101, 130, 105, 161, 108, 141, 111, 162, 114, 170, 117, 163, 121, 152, 65, 143, 69, 144, 73, 139, 76, 138, 79, 149, 82, 171, 85, 151, 89, 157, 32, 39, 34, 7, 97, 132, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 0, 229, 119, 2, 9, 0, 0, 68, 75, 44, 159, 0, 68, 75, 5, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 90, 3, 253, 0, 10, 1, 0, 0, 82, 3, 0, 0, 10, 1, 0, 0, 97, 3, 133, 1, 144, 1, 0, 0, 52, 117, 223, 1, 24, 2, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 4, 2, 3, 0, 0, 156, 5, 2, 1, 0, 207, 36, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 123, 9, 3, 1, 0, 40, 91, 27, 10, 3, 1, 0, 41, 93, 29, 11, 2, 1, 0, 61, 125, 12, 1, 0, 43, 63, 13, 2, 3, 203, 200, 124, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 65, 0, 134, 143, 27, 3, 7, 204, 202, 201, 30, 30, 65, 0, 97, 65, 39, 65, 0, 145, 146, 40, 65, 0, 155, 157, 41, 1, 0, 171, 245, 43, 1, 0, 39, 42, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 50, 66, 3, 0, 0, 230, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 3, 0, 45, 95, 92, 31, 57, 0, 0, 32, 86, 3, 0, 60, 62, 92, 28, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 5, 1, 1, 0, 175, 41, 1, 1, 0, 21, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 9, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 67, 128, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 6, 2, 3, 0, 0, 213, 13, 1, 3, 202, 160, 18, 2, 3, 0, 0, 213, 27, 3, 7, 203, 201, 200, 30, 31, 2, 3, 0, 0, 225, 32, 4, 11, 0, 0, 208, 0, 209, 37, 2, 3, 0, 0, 242, 44, 2, 3, 0, 0, 174, 45, 2, 3, 0, 0, 175, 0, 126, 7, 97, 198, 105, 141, 117, 151, 65, 199, 73, 222, 85, 235, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 7, 97, 132, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 249, 0, 141, 32, 2, 23, 0, 0, 68, 86, 44, 0, 0, 85, 83, 68, 86, 44, 103, 0, 68, 86, 44, 103, 0, 85, 83, 68, 86, 4, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 90, 3, 250, 1, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 181, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 12, 132, 0, 91, 26, 123, 26, 27, 26, 0, 26, 0, 26, 13, 132, 0, 93, 27, 125, 27, 29, 27, 0, 27, 0, 27, 16, 132, 0, 39, 40, 34, 40, 0, 40, 0, 40, 0, 40, 17, 132, 0, 44, 51, 60, 51, 0, 51, 0, 51, 0, 51, 18, 132, 0, 46, 52, 62, 52, 0, 52, 0, 52, 0, 52, 19, 196, 0, 112, 25, 80, 25, 16, 25, 0, 25, 0, 25, 20, 196, 0, 121, 21, 89, 21, 25, 21, 0, 21, 0, 21, 21, 196, 0, 102, 33, 70, 33, 6, 33, 0, 33, 0, 33, 22, 196, 0, 103, 34, 71, 34, 7, 34, 0, 34, 0, 34, 23, 196, 0, 99, 46, 67, 46, 3, 46, 0, 46, 0, 46, 24, 196, 0, 114, 19, 82, 19, 18, 19, 0, 19, 0, 19, 25, 196, 0, 108, 38, 76, 38, 12, 38, 0, 38, 0, 38, 26, 132, 0, 47, 53, 63, 53, 0, 53, 0, 53, 0, 53, 27, 132, 0, 61, 13, 43, 13, 0, 13, 0, 131, 0, 131, 31, 196, 0, 111, 24, 79, 24, 15, 24, 0, 24, 0, 24, 32, 196, 0, 101, 18, 69, 18, 5, 18, 0, 18, 0, 18, 33, 196, 0, 117, 22, 85, 22, 21, 22, 0, 22, 0, 22, 34, 196, 0, 105, 23, 73, 23, 9, 23, 0, 23, 0, 23, 35, 196, 0, 100, 32, 68, 32, 4, 32, 0, 32, 0, 32, 36, 196, 0, 104, 35, 72, 35, 8, 35, 0, 35, 0, 35, 37, 196, 0, 116, 20, 84, 20, 20, 20, 0, 20, 0, 20, 38, 196, 0, 110, 49, 78, 49, 14, 49, 0, 49, 0, 49, 39, 196, 0, 115, 31, 83, 31, 19, 31, 0, 31, 0, 31, 40, 132, 0, 45, 12, 95, 12, 31, 12, 0, 130, 0, 130, 44, 132, 0, 59, 39, 58, 39, 0, 39, 0, 39, 0, 39, 45, 196, 0, 113, 16, 81, 16, 17, 16, 0, 16, 0, 16, 46, 196, 0, 106, 36, 74, 36, 10, 36, 0, 36, 0, 36, 47, 196, 0, 107, 37, 75, 37, 11, 37, 0, 37, 0, 37, 48, 196, 0, 120, 45, 88, 45, 24, 45, 0, 45, 0, 45, 49, 196, 0, 98, 48, 66, 48, 2, 48, 0, 48, 0, 48, 51, 196, 0, 119, 17, 87, 17, 23, 17, 0, 17, 0, 17, 52, 196, 0, 118, 47, 86, 47, 22, 47, 0, 47, 0, 47, 53, 196, 0, 122, 44, 90, 44, 26, 44, 0, 44, 0, 44, 0, 32, 196, 0, 101, 18, 69, 18, 5, 18, 213, 18, 0, 18, 0, 157, 219, 2, 9, 0, 0, 70, 82, 44, 189, 0, 70, 82, 6, 4, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 90, 3, 160, 1, 167, 1, 0, 0, 91, 3, 2, 2, 63, 2, 0, 0, 82, 3, 0, 0, 167, 1, 0, 0, 181, 1, 84, 1, 101, 1, 0, 0, 69, 117, 156, 2, 184, 2, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 65, 0, 38, 49, 3, 66, 4, 130, 50, 201, 4, 66, 0, 34, 51, 35, 5, 66, 0, 39, 52, 123, 6, 67, 0, 40, 53, 91, 27, 7, 67, 0, 45, 54, 124, 31, 8, 66, 4, 138, 55, 200, 9, 67, 0, 95, 56, 92, 28, 10, 66, 0, 135, 57, 94, 11, 66, 0, 133, 48, 64, 12, 67, 0, 41, 248, 93, 29, 13, 66, 3, 0, 0, 125, 16, 197, 0, 97, 30, 65, 30, 0, 30, 1, 30, 0, 30, 0, 30, 17, 197, 0, 122, 44, 90, 44, 0, 44, 26, 44, 0, 44, 0, 44, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 67, 7, 202, 203, 0, 30, 27, 66, 0, 36, 156, 207, 30, 197, 0, 113, 16, 81, 16, 0, 16, 17, 16, 0, 16, 0, 16, 39, 197, 0, 109, 50, 77, 50, 0, 50, 13, 50, 0, 50, 0, 50, 40, 65, 0, 151, 37, 41, 65, 0, 253, 252, 43, 65, 0, 42, 230, 44, 197, 0, 119, 17, 87, 17, 0, 17, 23, 17, 0, 17, 0, 17, 49, 65, 0, 110, 78, 50, 65, 0, 44, 63, 51, 66, 0, 59, 46, 60, 52, 66, 0, 58, 47, 62, 53, 65, 0, 33, 245, 57, 0, 0, 32, 86, 65, 0, 60, 62, 0, 27, 66, 7, 0, 0, 160, 41, 65, 3, 0, 160, 53, 65, 1, 0, 21, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 16, 197, 0, 97, 30, 65, 30, 145, 30, 1, 30, 146, 30, 0, 30, 18, 68, 11, 0, 0, 213, 0, 144, 24, 68, 11, 0, 0, 171, 0, 172, 44, 197, 0, 119, 17, 87, 17, 174, 17, 23, 17, 0, 17, 0, 17, 45, 66, 3, 0, 0, 175, 46, 68, 11, 0, 0, 135, 0, 128, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 0, 3, 66, 7, 0, 0, 160, 8, 66, 7, 0, 0, 160, 18, 66, 3, 0, 0, 213, 26, 65, 3, 200, 160, 41, 16, 0, 0, 0, 94, 11, 97, 238, 101, 208, 105, 246, 111, 250, 117, 252, 65, 239, 69, 209, 73, 247, 79, 251, 85, 253, 32, 94, 0, 255, 60, 5, 19, 0, 0, 71, 82, 44, 0, 0, 68, 69, 44, 129, 0, 71, 82, 44, 129, 0, 68, 69, 9, 4, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0, 90, 3, 79, 1, 86, 1, 0, 0, 82, 3, 0, 0, 86, 1, 0, 0, 91, 3, 167, 1, 235, 1, 0, 0, 181, 1, 64, 2, 71, 2, 0, 0, 84, 3, 120, 2, 252, 2, 0, 0, 85, 3, 93, 3, 122, 3, 0, 0, 57, 117, 151, 3, 3, 4, 0, 0, 68, 117, 88, 4, 147, 4, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 124, 3, 2, 1, 0, 34, 253, 4, 2, 1, 0, 245, 252, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 123, 9, 4, 9, 0, 40, 91, 0, 27, 10, 4, 9, 0, 41, 93, 0, 29, 11, 2, 1, 0, 61, 125, 12, 4, 8, 225, 63, 92, 0, 28, 13, 1, 3, 202, 200, 16, 66, 3, 0, 0, 64, 18, 65, 0, 101, 69, 21, 197, 0, 122, 44, 90, 44, 0, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 65, 0, 129, 154, 27, 2, 0, 43, 42, 126, 30, 65, 0, 97, 65, 39, 65, 0, 148, 153, 40, 65, 0, 132, 142, 41, 4, 13, 201, 248, 0, 0, 30, 43, 1, 0, 35, 39, 44, 197, 0, 121, 21, 89, 21, 60, 21, 0, 21, 25, 21, 0, 21, 45, 66, 3, 0, 0, 62, 46, 65, 0, 99, 67], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 54772);
allocate([49, 66, 3, 0, 0, 35, 50, 66, 3, 0, 0, 230, 51, 1, 1, 0, 59, 52, 1, 1, 0, 58, 53, 4, 12, 45, 95, 0, 0, 31, 57, 0, 0, 32, 86, 2, 0, 60, 62, 124, 0, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 0, 3, 1, 3, 0, 203, 9, 3, 7, 0, 0, 0, 174, 10, 3, 7, 0, 0, 0, 175, 18, 2, 3, 0, 0, 213, 24, 3, 3, 0, 0, 171, 172, 30, 3, 3, 0, 0, 134, 143, 39, 3, 3, 0, 0, 155, 157, 40, 3, 3, 0, 0, 145, 146, 46, 3, 3, 0, 0, 135, 128, 49, 3, 3, 0, 0, 164, 165, 0, 96, 7, 97, 133, 101, 138, 117, 151, 65, 183, 69, 212, 85, 235, 32, 96, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 7, 97, 160, 101, 130, 111, 162, 65, 181, 69, 144, 79, 224, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 0, 4, 2, 5, 0, 21, 160, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 9, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 67, 128, 69, 144, 32, 39, 0, 3, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 2, 3, 0, 0, 170, 9, 3, 7, 0, 0, 0, 174, 10, 3, 7, 0, 0, 0, 175, 13, 1, 3, 200, 160, 18, 3, 3, 0, 0, 169, 168, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 21, 197, 0, 122, 44, 90, 44, 190, 44, 189, 44, 26, 44, 0, 44, 22, 3, 3, 0, 0, 251, 235, 23, 3, 3, 0, 0, 133, 222, 24, 3, 3, 0, 0, 139, 138, 30, 3, 3, 0, 0, 165, 164, 31, 65, 0, 115, 83, 32, 67, 0, 100, 68, 208, 209, 38, 67, 0, 108, 76, 136, 157, 41, 0, 1, 201, 49, 65, 0, 110, 78, 50, 2, 7, 0, 0, 160, 0, 239, 25, 97, 160, 99, 134, 101, 130, 105, 161, 108, 146, 110, 228, 111, 162, 114, 234, 115, 152, 117, 163, 121, 236, 122, 171, 65, 181, 67, 143, 69, 144, 73, 214, 76, 145, 78, 227, 79, 224, 82, 232, 83, 151, 85, 233, 89, 237, 90, 141, 32, 239, 94, 21, 99, 159, 100, 212, 101, 216, 108, 150, 110, 229, 111, 147, 114, 253, 115, 231, 116, 156, 122, 167, 67, 172, 68, 210, 69, 183, 76, 149, 78, 213, 79, 226, 82, 252, 83, 230, 84, 155, 90, 166, 32, 94, 0, 13, 16, 0, 0, 31, 65, 0, 115, 83, 34, 65, 0, 103, 71, 35, 65, 0, 104, 72, 36, 65, 0, 106, 74, 41, 0, 1, 200, 0, 94, 13, 99, 134, 103, 155, 104, 169, 106, 159, 115, 199, 117, 237, 67, 143, 71, 157, 72, 168, 74, 172, 83, 198, 85, 236, 32, 94, 0, 3, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 12, 0, 1, 160, 13, 0, 1, 200, 18, 2, 3, 0, 0, 213, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 23, 3, 3, 0, 0, 139, 216, 25, 65, 0, 112, 80, 30, 3, 3, 0, 0, 198, 199, 31, 65, 0, 115, 83, 32, 65, 0, 100, 68, 34, 65, 0, 103, 71, 35, 65, 0, 104, 72, 37, 65, 0, 107, 75, 38, 65, 0, 108, 76, 40, 3, 3, 0, 0, 145, 146, 41, 0, 1, 201, 49, 65, 0, 110, 78, 50, 2, 7, 0, 0, 160, 0, 239, 11, 99, 134, 103, 208, 114, 232, 115, 250, 122, 170, 67, 143, 71, 209, 82, 246, 83, 251, 90, 171, 32, 239, 94, 29, 99, 172, 100, 138, 101, 136, 103, 221, 104, 189, 105, 140, 107, 133, 108, 242, 110, 228, 112, 157, 114, 253, 115, 231, 116, 156, 122, 168, 67, 173, 68, 212, 69, 210, 71, 222, 72, 190, 73, 215, 75, 183, 76, 241, 78, 229, 80, 225, 82, 252, 83, 230, 84, 155, 90, 169, 32, 94, 0, 2, 2, 7, 0, 0, 204, 3, 1, 3, 0, 203, 18, 66, 3, 0, 0, 213, 23, 67, 3, 0, 0, 158, 159, 24, 67, 3, 0, 0, 171, 172, 27, 2, 7, 0, 0, 205, 30, 67, 3, 0, 0, 134, 143, 39, 67, 3, 0, 0, 155, 157, 40, 67, 3, 0, 0, 145, 146, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 13, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 121, 189, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 89, 190, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 124, 11, 97, 135, 101, 208, 105, 231, 111, 249, 117, 247, 65, 128, 69, 209, 73, 232, 79, 221, 85, 239, 32, 124, 126, 7, 101, 198, 111, 164, 148, 228, 69, 199, 79, 165, 153, 229, 32, 126, 0, 200, 198, 8, 9, 197, 1, 71, 82, 44, 197, 1, 68, 69, 12, 4, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 0, 90, 3, 93, 1, 117, 3, 0, 0, 90, 3, 108, 1, 117, 3, 0, 0, 82, 3, 108, 2, 117, 3, 0, 0, 82, 3, 117, 2, 117, 3, 0, 0, 181, 1, 252, 3, 5, 5, 0, 0, 181, 1, 10, 4, 5, 5, 0, 0, 84, 3, 1, 6, 123, 6, 0, 0, 85, 3, 220, 6, 3, 7, 0, 0, 91, 3, 96, 5, 156, 5, 0, 0, 57, 117, 32, 7, 145, 7, 0, 0, 68, 117, 230, 7, 39, 8, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 124, 3, 2, 1, 0, 34, 253, 4, 2, 1, 0, 245, 252, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 123, 9, 4, 9, 0, 40, 91, 0, 27, 10, 4, 9, 0, 41, 93, 0, 29, 11, 2, 1, 0, 61, 125, 12, 4, 8, 225, 63, 92, 0, 28, 13, 2, 7, 203, 200, 206, 16, 66, 3, 0, 0, 64, 18, 65, 0, 101, 69, 21, 197, 0, 122, 44, 90, 44, 0, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 65, 0, 129, 154, 27, 2, 4, 43, 42, 201, 30, 65, 0, 97, 65, 39, 65, 0, 148, 153, 40, 65, 0, 132, 142, 41, 4, 12, 39, 248, 202, 0, 30, 44, 197, 0, 121, 21, 89, 21, 60, 21, 0, 21, 25, 21, 0, 21, 45, 66, 3, 0, 0, 62, 46, 65, 0, 99, 67, 49, 66, 0, 110, 78, 35, 50, 66, 3, 0, 0, 230, 51, 1, 1, 0, 59, 52, 1, 1, 0, 58, 53, 4, 12, 45, 95, 0, 0, 31, 57, 0, 0, 32, 0, 18, 66, 3, 0, 0, 213, 42, 4, 31, 0, 0, 0, 0, 121, 0, 2, 1, 0, 251, 173, 3, 1, 2, 253, 160, 4, 1, 0, 252, 156, 5, 1, 0, 172, 207, 6, 1, 2, 171, 160, 7, 1, 2, 243, 160, 8, 1, 2, 123, 160, 9, 1, 2, 91, 160, 10, 1, 0, 93, 241, 11, 1, 0, 125, 248, 12, 1, 0, 92, 168, 13, 1, 3, 206, 160, 16, 1, 2, 64, 160, 17, 16, 0, 0, 18, 16, 0, 0, 19, 1, 0, 244, 169, 20, 65, 0, 231, 232, 21, 133, 2, 190, 44, 160, 44, 0, 44, 0, 44, 26, 44, 0, 44, 22, 16, 0, 0, 23, 16, 0, 0, 24, 65, 0, 155, 157, 25, 16, 0, 0, 26, 1, 3, 204, 205, 27, 1, 1, 201, 238, 30, 65, 0, 145, 146, 31, 1, 0, 225, 245, 32, 65, 0, 208, 209, 33, 1, 2, 166, 160, 34, 16, 0, 0, 35, 16, 0, 0, 36, 16, 0, 0, 37, 1, 2, 38, 160, 38, 1, 3, 200, 160, 39, 1, 3, 203, 160, 40, 1, 3, 202, 160, 41, 1, 0, 170, 221, 43, 16, 0, 0, 44, 133, 0, 174, 21, 60, 21, 60, 21, 0, 21, 25, 21, 0, 21, 45, 1, 0, 175, 62, 46, 1, 0, 189, 184, 47, 16, 0, 0, 48, 16, 0, 0, 49, 1, 2, 35, 160, 50, 1, 0, 230, 167, 51, 1, 2, 158, 160, 52, 1, 0, 250, 246, 53, 16, 0, 0, 54, 4, 31, 0, 0, 0, 0, 120, 86, 16, 0, 0, 0, 42, 4, 31, 0, 0, 0, 0, 123, 0, 2, 1, 0, 251, 173, 3, 1, 2, 253, 160, 4, 1, 0, 252, 156, 5, 1, 0, 172, 207, 6, 1, 2, 171, 160, 7, 1, 2, 243, 160, 8, 1, 2, 123, 160, 9, 1, 2, 91, 160, 10, 1, 0, 93, 241, 11, 1, 0, 125, 248, 12, 1, 0, 92, 168, 13, 1, 3, 206, 160, 16, 1, 2, 64, 160, 17, 16, 0, 0, 18, 16, 0, 0, 19, 1, 0, 244, 169, 20, 65, 0, 231, 232, 21, 133, 2, 190, 44, 160, 44, 0, 44, 0, 44, 26, 44, 0, 44, 22, 16, 0, 0, 23, 16, 0, 0, 24, 65, 0, 155, 157, 25, 16, 0, 0, 26, 1, 3, 204, 205, 27, 1, 1, 201, 238, 30, 65, 0, 145, 146, 31, 1, 0, 225, 245, 32, 65, 0, 208, 209, 33, 1, 2, 166, 160, 34, 16, 0, 0, 35, 16, 0, 0, 36, 16, 0, 0, 37, 1, 2, 38, 160, 38, 1, 3, 200, 160, 39, 1, 3, 203, 160, 40, 1, 3, 202, 160, 41, 1, 0, 170, 221, 43, 16, 0, 0, 44, 133, 0, 174, 21, 60, 21, 60, 21, 0, 21, 25, 21, 0, 21, 45, 1, 0, 175, 62, 46, 1, 0, 189, 184, 47, 16, 0, 0, 48, 16, 0, 0, 49, 1, 2, 35, 160, 50, 1, 0, 230, 167, 51, 1, 2, 158, 160, 52, 1, 0, 250, 246, 53, 16, 0, 0, 54, 4, 31, 0, 0, 0, 0, 122, 86, 16, 0, 0, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 248, 3, 97, 134, 65, 143, 32, 248, 247, 3, 99, 135, 67, 128, 32, 247, 0, 4, 1, 1, 0, 21, 42, 4, 31, 0, 0, 0, 0, 125, 0, 2, 1, 1, 160, 173, 3, 1, 2, 253, 160, 4, 1, 1, 160, 156, 5, 1, 2, 172, 160, 6, 1, 2, 171, 160, 7, 16, 0, 0, 8, 1, 2, 123, 160, 9, 1, 2, 91, 160, 10, 1, 0, 93, 241, 11, 1, 0, 125, 248, 12, 1, 0, 92, 168, 13, 1, 3, 206, 160, 16, 1, 2, 64, 160, 17, 16, 0, 0, 18, 16, 0, 0, 19, 1, 2, 20, 160, 20, 16, 0, 0, 21, 133, 2, 157, 44, 160, 44, 0, 44, 0, 44, 26, 44, 0, 44, 22, 16, 0, 0, 23, 16, 0, 0, 24, 16, 0, 0, 25, 16, 0, 0, 26, 1, 3, 204, 205, 27, 1, 3, 201, 160, 30, 65, 0, 145, 146, 31, 1, 0, 225, 21, 32, 16, 0, 0, 33, 1, 2, 166, 160, 34, 16, 0, 0, 35, 16, 0, 0, 36, 16, 0, 0, 37, 1, 2, 38, 160, 38, 1, 3, 200, 160, 39, 1, 3, 203, 160, 40, 1, 3, 202, 160, 41, 1, 2, 170, 160, 43, 16, 0, 0, 44, 133, 0, 174, 21, 60, 21, 60, 21, 0, 21, 25, 21, 0, 21, 45, 1, 0, 175, 62, 46, 1, 2, 155, 160, 47, 16, 0, 0, 48, 16, 0, 0, 49, 1, 2, 35, 160, 50, 1, 0, 230, 167, 51, 16, 0, 0, 52, 1, 0, 250, 246, 53, 16, 0, 0, 54, 4, 31, 0, 0, 0, 0, 124, 86, 16, 0, 0, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 7, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 248, 3, 97, 134, 65, 143, 32, 248, 44, 3, 99, 135, 67, 128, 32, 44, 0, 3, 1, 3, 0, 204, 9, 3, 7, 0, 0, 0, 174, 10, 3, 7, 0, 0, 0, 175, 13, 2, 7, 0, 0, 205, 18, 2, 3, 0, 0, 213, 24, 3, 3, 0, 0, 171, 172, 30, 3, 3, 0, 0, 134, 143, 39, 3, 3, 0, 0, 155, 157, 40, 3, 3, 0, 0, 145, 146, 0, 96, 7, 97, 133, 101, 138, 117, 151, 65, 183, 69, 212, 85, 235, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 7, 97, 160, 101, 130, 111, 162, 65, 181, 69, 144, 79, 224, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 44, 3, 99, 135, 67, 128, 32, 44, 0, 3, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 2, 3, 0, 0, 170, 13, 2, 7, 200, 201, 160, 18, 3, 3, 0, 0, 169, 168, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 21, 197, 0, 122, 44, 90, 44, 190, 44, 189, 44, 26, 44, 0, 44, 22, 3, 3, 0, 0, 251, 235, 23, 3, 3, 0, 0, 133, 222, 24, 3, 3, 0, 0, 139, 138, 27, 2, 7, 0, 0, 160, 30, 3, 3, 0, 0, 165, 164, 31, 65, 0, 115, 83, 32, 67, 0, 100, 68, 208, 209, 38, 67, 0, 108, 76, 136, 157, 41, 2, 7, 0, 0, 160, 50, 2, 7, 0, 0, 160, 0, 239, 25, 97, 160, 99, 134, 101, 130, 105, 161, 108, 146, 110, 228, 111, 162, 114, 234, 115, 152, 117, 163, 121, 236, 122, 171, 65, 181, 67, 143, 69, 144, 73, 214, 76, 145, 78, 227, 79, 224, 82, 232, 83, 151, 85, 233, 89, 237, 90, 141, 32, 239, 96, 21, 99, 159, 100, 212, 101, 216, 108, 150, 110, 229, 111, 147, 114, 253, 115, 231, 116, 156, 122, 167, 67, 172, 68, 210, 69, 183, 76, 149, 78, 213, 79, 226, 82, 252, 83, 230, 84, 155, 90, 166, 32, 96, 0, 13, 2, 7, 200, 160, 160, 27, 2, 7, 0, 0, 160, 31, 65, 0, 115, 83, 34, 65, 0, 103, 71, 35, 65, 0, 104, 72, 36, 65, 0, 106, 74, 41, 2, 7, 0, 0, 200, 0, 94, 13, 99, 134, 103, 155, 104, 169, 106, 159, 115, 199, 117, 237, 67, 143, 71, 157, 72, 168, 74, 172, 83, 198, 85, 236, 32, 94, 0, 3, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 12, 0, 1, 160, 13, 2, 7, 200, 201, 160, 18, 66, 3, 0, 0, 213, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 23, 67, 3, 0, 0, 139, 216, 25, 65, 0, 112, 80, 27, 2, 7, 0, 0, 160, 30, 67, 3, 0, 0, 198, 199, 31, 65, 0, 115, 83, 32, 65, 0, 100, 68, 34, 65, 0, 103, 71, 35, 65, 0, 104, 72, 37, 65, 0, 107, 75, 38, 65, 0, 108, 76, 40, 3, 3, 0, 0, 145, 146, 41, 2, 7, 0, 0, 160, 50, 2, 7, 0, 0, 160, 0, 239, 11, 99, 134, 103, 208, 114, 232, 115, 250, 122, 170, 67, 143, 71, 209, 82, 246, 83, 251, 90, 171, 32, 239, 96, 29, 99, 172, 100, 138, 101, 136, 103, 221, 104, 189, 105, 140, 107, 133, 108, 242, 110, 228, 112, 157, 114, 253, 115, 231, 116, 156, 122, 168, 67, 173, 68, 212, 69, 210, 71, 222, 72, 190, 73, 215, 75, 183, 76, 241, 78, 229, 80, 225, 82, 252, 83, 230, 84, 155, 90, 169, 32, 96, 0, 3, 1, 3, 0, 203, 13, 2, 7, 202, 0, 205, 18, 2, 3, 0, 0, 213, 23, 67, 3, 0, 0, 158, 159, 24, 67, 3, 0, 0, 171, 172, 27, 2, 7, 0, 0, 204, 30, 67, 3, 0, 0, 134, 143, 39, 67, 3, 0, 0, 155, 157, 40, 67, 3, 0, 0, 145, 146, 41, 2, 7, 0, 0, 201, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 13, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 121, 189, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 89, 190, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 126, 11, 97, 135, 101, 208, 105, 231, 111, 249, 117, 247, 65, 128, 69, 209, 73, 232, 79, 221, 85, 239, 32, 126, 44, 7, 101, 198, 111, 164, 148, 228, 69, 199, 79, 165, 153, 229, 32, 44, 0, 244, 197, 3, 4, 0, 0, 72, 85, 5, 2, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 84, 3, 211, 1, 68, 2, 0, 0, 90, 3, 69, 1, 76, 1, 0, 0, 82, 3, 0, 0, 76, 1, 0, 0, 181, 225, 5, 3, 95, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 7, 0, 204, 200, 3, 1, 3, 0, 205, 4, 3, 5, 0, 43, 201, 30, 5, 1, 1, 0, 33, 6, 2, 7, 0, 0, 202, 7, 1, 1, 0, 47, 8, 2, 5, 0, 61, 203, 9, 2, 1, 0, 40, 250, 10, 2, 1, 0, 41, 239, 11, 65, 0, 148, 153, 12, 66, 0, 129, 154, 249, 13, 194, 4, 162, 13, 224, 0, 206, 131, 16, 66, 3, 0, 0, 92, 17, 66, 3, 0, 0, 124, 18, 66, 0, 101, 69, 142, 19, 66, 3, 0, 0, 245, 20, 66, 3, 0, 0, 207, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 66, 0, 105, 73, 214, 24, 65, 0, 111, 79, 26, 66, 3, 160, 160, 246, 27, 66, 0, 163, 233, 158, 30, 66, 0, 97, 65, 132, 33, 66, 3, 0, 0, 91, 34, 66, 3, 0, 0, 93, 36, 66, 3, 0, 0, 161, 39, 66, 0, 130, 144, 36, 40, 66, 0, 160, 181, 225, 41, 66, 0, 161, 214, 48, 43, 66, 3, 160, 160, 92, 44, 66, 0, 122, 90, 62, 45, 66, 3, 0, 0, 35, 46, 66, 0, 99, 67, 38, 47, 66, 3, 0, 0, 64, 48, 66, 3, 0, 0, 123, 49, 66, 0, 110, 78, 125, 50, 66, 3, 0, 0, 60, 51, 2, 0, 44, 63, 59, 52, 2, 0, 46, 58, 62, 53, 3, 0, 45, 95, 42, 31, 57, 0, 0, 32, 0, 22, 66, 3, 0, 0, 213, 0, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 248, 3, 97, 134, 65, 143, 32, 248, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 34, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 34, 247, 3, 99, 135, 67, 128, 32, 247, 0, 2, 2, 3, 0, 206, 126, 3, 2, 7, 0, 208, 200, 4, 1, 3, 0, 207, 5, 2, 7, 0, 0, 202, 6, 2, 7, 0, 0, 203, 7, 2, 7, 0, 0, 204, 8, 2, 3, 0, 0, 96, 9, 2, 7, 0, 0, 205, 11, 66, 3, 0, 0, 241, 13, 194, 5, 0, 13, 224, 0, 209, 131, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 22, 66, 3, 0, 0, 170, 26, 65, 0, 139, 138, 31, 66, 0, 115, 83, 208, 32, 66, 0, 100, 68, 209, 37, 66, 3, 0, 0, 136, 38, 66, 0, 108, 76, 157, 43, 65, 0, 251, 235, 0, 243, 19, 99, 159, 100, 212, 101, 216, 108, 150, 110, 229, 114, 253, 115, 231, 116, 156, 122, 167, 67, 172, 68, 210, 69, 183, 76, 149, 78, 213, 82, 252, 83, 230, 84, 155, 90, 166, 32, 243, 94, 7, 97, 131, 105, 140, 111, 147, 65, 182, 73, 215, 79, 226, 32, 94, 244, 3, 97, 199, 65, 198, 32, 244, 248, 3, 117, 133, 85, 222, 32, 248, 242, 5, 97, 165, 101, 169, 65, 164, 69, 168, 32, 242, 250, 3, 122, 190, 90, 189, 32, 250, 39, 25, 97, 160, 99, 134, 101, 130, 105, 161, 108, 146, 110, 228, 111, 162, 114, 234, 115, 152, 117, 163, 121, 236, 122, 171, 65, 181, 67, 143, 69, 144, 73, 214, 76, 145, 78, 227, 79, 224, 82, 232, 83, 151, 85, 233, 89, 237, 90, 141, 32, 39, 43, 5, 111, 139, 117, 251, 79, 138, 85, 235, 32, 43, 34, 9, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 69, 211, 79, 153, 85, 154, 32, 34, 247, 7, 99, 135, 115, 173, 116, 238, 67, 128, 83, 184, 84, 221, 32, 247, 0, 2, 1, 3, 0, 204, 3, 1, 3, 0, 206, 4, 1, 3, 0, 205, 10, 2, 7, 0, 0, 204, 11, 66, 7, 0, 0, 205, 12, 66, 7, 0, 0, 206, 13, 66, 5, 0, 149, 207, 19, 66, 3, 0, 0, 21, 20, 66, 7, 0, 0, 160, 23, 66, 3, 0, 0, 141, 25, 66, 3, 0, 0, 159, 26, 65, 0, 147, 167, 27, 66, 5, 0, 151, 160, 40, 65, 1, 0, 143, 41, 65, 1, 0, 141, 43, 65, 0, 150, 152, 0, 126, 3, 110, 164, 78, 165, 32, 126, 94, 4, 97, 131, 101, 136, 105, 140, 32, 94, 248, 2, 97, 134, 32, 248, 96, 3, 97, 133, 101, 138, 32, 96, 39, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 143, 69, 144, 73, 141, 79, 149, 85, 151, 32, 39, 43, 5, 111, 147, 117, 150, 79, 167, 85, 152, 32, 43, 34, 9, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 44, 3, 99, 135, 67, 128, 32, 44, 0, 55, 207, 3, 4, 208, 0, 72, 85, 5, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 84, 3, 227, 1, 84, 2, 0, 0, 90, 3, 85, 1, 92, 1, 0, 0, 82, 3, 0, 0, 92, 1, 0, 0, 181, 225, 21, 3, 105, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 7, 0, 204, 200, 3, 1, 3, 0, 205, 4, 3, 5, 0, 43, 201, 30, 5, 1, 1, 0, 33, 6, 2, 7, 0, 0, 202, 7, 1, 1, 0, 47, 8, 2, 5, 0, 61, 203, 9, 2, 1, 0, 40, 250, 10, 2, 1, 0, 41, 239, 11, 65, 0, 148, 153, 12, 66, 0, 129, 154, 249, 13, 194, 4, 162, 13, 224, 0, 206, 131, 16, 66, 3, 0, 0, 92, 17, 66, 3, 0, 0, 124, 18, 66, 0, 101, 69, 142, 21, 196, 0, 122, 44, 90, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 117, 85, 23, 66, 0, 105, 73, 214, 24, 65, 0, 111, 79, 26, 66, 3, 160, 160, 246, 27, 66, 0, 163, 233, 158, 30, 66, 0, 97, 65, 132, 33, 66, 3, 0, 0, 91, 34, 66, 3, 0, 0, 93, 36, 66, 3, 0, 0, 161, 39, 66, 0, 130, 144, 36, 40, 66, 0, 160, 181, 225, 41, 1, 0, 48, 245, 43, 66, 3, 160, 160, 207, 44, 196, 0, 121, 21, 89, 21, 62, 21, 25, 21, 0, 21, 45, 66, 3, 0, 0, 35, 46, 66, 0, 99, 67, 38, 47, 66, 3, 0, 0, 64, 48, 66, 3, 0, 0, 123, 49, 66, 0, 110, 78, 125, 50, 66, 3, 0, 0, 60, 51, 2, 0, 44, 63, 59, 52, 2, 0, 46, 58, 62, 53, 3, 0, 45, 95, 42, 31, 57, 0, 0, 32, 86, 66, 0, 161, 214, 60, 0, 22, 66, 3, 0, 0, 213, 0, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 248, 3, 97, 134, 65, 143, 32, 248, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 34, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 34, 247, 3, 99, 135, 67, 128, 32, 247, 0, 2, 2, 3, 0, 206, 126, 3, 2, 7, 0, 208, 200, 4, 1, 3, 0, 207, 5, 2, 7, 0, 0, 202, 6, 2, 7, 0, 0, 203, 7, 2, 7, 0, 0, 204, 8, 2, 3, 0, 0, 96, 9, 2, 7, 0, 0, 205, 11, 66, 3, 0, 0, 241, 13, 194, 5, 0, 13, 224, 0, 209, 131, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 22, 66, 3, 0, 0, 170, 26, 65, 0, 139, 138, 31, 66, 0, 115, 83, 208, 32, 66, 0, 100, 68, 209, 37, 66, 3, 0, 0, 136, 38, 66, 0, 108, 76, 157, 43, 65, 0, 251, 235, 0, 243, 19, 99, 159, 100, 212, 101, 216, 108, 150, 110, 229, 114, 253, 115, 231, 116, 156, 122, 167, 67, 172, 68, 210, 69, 183, 76, 149, 78, 213, 82, 252, 83, 230, 84, 155, 90, 166, 32, 243, 94, 7, 97, 131, 105, 140, 111, 147, 65, 182, 73, 215, 79, 226, 32, 94, 244, 3, 97, 199, 65, 198, 32, 244, 248, 3, 117, 133, 85, 222, 32, 248, 242, 5, 97, 165, 101, 169, 65, 164, 69, 168, 32, 242, 250, 3, 122, 190, 90, 189, 32, 250, 39, 25, 97, 160, 99, 134, 101, 130, 105, 161, 108, 146, 110, 228, 111, 162, 114, 234, 115, 152, 117, 163, 121, 236, 122, 171, 65, 181, 67, 143, 69, 144, 73, 214, 76, 145, 78, 227, 79, 224, 82, 232, 83, 151, 85, 233, 89, 237, 90, 141, 32, 39, 43, 5, 111, 139, 117, 251, 79, 138, 85, 235, 32, 43, 34, 9, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 69, 211, 79, 153, 85, 154, 32, 34, 247, 7, 99, 135, 115, 173, 116, 238, 67, 128, 83, 184, 84, 221, 32, 247, 0, 2, 1, 3, 0, 204, 3, 1, 3, 0, 206, 4, 1, 3, 0, 205, 10, 2, 7, 0, 0, 204, 11, 66, 7, 0, 0, 205, 12, 66, 7, 0, 0, 206, 13, 66, 5, 0, 149, 207, 23, 66, 3, 0, 0, 141, 25, 66, 3, 0, 0, 159, 26, 65, 0, 147, 167, 27, 66, 5, 0, 151, 160, 40, 65, 1, 0, 143, 41, 1, 1, 0, 21, 43, 66, 4, 150, 152, 160, 86, 65, 1, 0, 141, 0, 126, 3, 110, 164, 78, 165, 32, 126, 94, 4, 97, 131, 101, 136, 105, 140, 32, 94, 248, 2, 97, 134, 32, 248, 96, 3, 97, 133, 101, 138, 32, 96, 39, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 143, 69, 144, 73, 141, 79, 149, 85, 151, 32, 39, 43, 5, 111, 147, 117, 150, 79, 167, 85, 152, 32, 43, 34, 9, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 44, 3, 99, 135, 67, 128, 32, 44, 0, 45, 131, 3, 9, 0, 0, 73, 84, 44, 141, 0, 73, 84, 8, 4, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 90, 3, 251, 0, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 181, 1, 245, 0, 0, 0, 0, 0, 84, 3, 22, 2, 89, 2, 0, 0, 101, 3, 106, 2, 0, 0, 0, 0, 101, 3, 147, 2, 68, 3, 0, 0, 55, 117, 8, 1, 129, 1, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 34, 4, 2, 1, 0, 156, 35, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 123, 9, 4, 9, 0, 40, 91, 0, 27, 10, 4, 9, 0, 41, 93, 0, 29, 11, 2, 1, 0, 61, 125, 12, 1, 0, 39, 63, 13, 4, 8, 141, 94, 126, 0, 30, 16, 66, 3, 0, 0, 64, 26, 3, 0, 138, 130, 91, 123, 27, 3, 0, 43, 42, 93, 125, 39, 2, 0, 149, 135, 64, 40, 2, 0, 133, 248, 35, 41, 4, 12, 92, 124, 0, 0, 28, 43, 2, 0, 151, 245, 96, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 4, 12, 45, 95, 0, 0, 31, 86, 1, 0, 60, 62, 0, 43, 1, 1, 0, 21, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 0, 3, 1, 3, 0, 200, 4, 1, 3, 0, 160, 6, 2, 3, 0, 0, 213, 12, 0, 1, 201, 13, 1, 3, 0, 202, 18, 66, 0, 101, 69, 213, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 67, 0, 111, 79, 171, 172, 30, 67, 0, 97, 65, 145, 146, 31, 66, 3, 0, 0, 225, 38, 67, 3, 0, 0, 242, 246, 40, 1, 3, 0, 204, 41, 2, 3, 0, 0, 250, 43, 2, 7, 0, 205, 203, 44, 66, 3, 0, 0, 174, 45, 66, 3, 0, 0, 175, 46, 67, 3, 0, 0, 135, 128, 49, 67, 3, 0, 0, 164, 165, 57, 0, 0, 32, 0, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 39, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 32, 39, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 248, 11, 97, 198, 101, 189, 105, 155, 111, 158, 117, 169, 65, 199, 69, 190, 73, 157, 79, 159, 85, 184, 32, 248, 245, 11, 97, 208, 101, 221, 105, 156, 111, 231, 117, 239, 65, 209, 69, 249, 73, 207, 79, 232, 85, 247, 32, 245, 0, 4, 1, 3, 0, 160, 6, 2, 3, 0, 0, 170, 13, 1, 3, 160, 200, 18, 66, 3, 0, 0, 170, 26, 0, 1, 160, 31, 65, 0, 115, 83, 32, 67, 0, 100, 68, 208, 209, 39, 0, 1, 160, 40, 0, 1, 160, 43, 0, 1, 160, 44, 65, 0, 122, 90, 46, 67, 0, 99, 67, 134, 143, 57, 0, 0, 32, 0, 94, 7, 99, 159, 115, 231, 122, 167, 67, 172, 83, 230, 90, 166, 32, 94, 0, 6, 2, 3, 0, 0, 135, 13, 0, 1, 160, 18, 2, 3, 0, 0, 135, 39, 1, 3, 160, 160, 40, 1, 3, 160, 160, 43, 1, 3, 160, 160, 54, 5, 63, 0, 0, 0, 0, 0, 125, 0, 6, 2, 3, 0, 0, 135, 13, 0, 1, 160, 16, 1, 0, 139, 140, 17, 1, 2, 237, 160, 18, 66, 0, 222, 168, 135, 19, 65, 0, 235, 199, 20, 65, 0, 238, 208, 21, 65, 0, 242, 209, 22, 65, 0, 226, 172, 23, 65, 0, 227, 173, 24, 65, 0, 233, 190, 25, 65, 0, 234, 198, 26, 1, 3, 160, 160, 30, 65, 0, 214, 164, 31, 65, 0, 236, 207, 32, 65, 0, 221, 167, 33, 65, 0, 243, 210, 34, 65, 0, 216, 166, 35, 65, 0, 225, 170, 36, 65, 0, 232, 189, 37, 65, 0, 228, 181, 38, 65, 0, 229, 182, 39, 1, 3, 200, 160, 40, 1, 3, 201, 160, 42, 5, 63, 0, 0, 0, 0, 0, 124, 43, 1, 3, 202, 160, 44, 193, 0, 224, 0, 169, 44, 45, 65, 0, 244, 211, 46, 65, 0, 246, 212, 47, 65, 0, 250, 213, 48, 65, 0, 215, 165, 49, 65, 0, 231, 184, 50, 65, 0, 230, 183, 57, 0, 0, 32, 0, 239, 15, 214, 155, 222, 157, 225, 158, 227, 159, 233, 162, 242, 163, 250, 253, 164, 134, 168, 141, 170, 143, 173, 144, 190, 146, 209, 149, 213, 152, 32, 239, 249, 5, 227, 160, 242, 251, 173, 145, 209, 150, 32, 249, 247, 3, 227, 161, 242, 252, 32, 247, 0, 110, 121, 3, 4, 142, 0, 73, 84, 8, 4, 44, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 90, 3, 246, 0, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 181, 1, 240, 0, 0, 0, 0, 0, 84, 3, 17, 2, 84, 2, 0, 0, 101, 3, 101, 2, 0, 0, 0, 0, 101, 3, 142, 2, 63, 3, 0, 0, 55, 117, 3, 1, 124, 1, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 34, 4, 2, 1, 0, 156, 35, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 123, 9, 4, 9, 0, 40, 91, 0, 27, 10, 4, 9, 0, 41, 93, 0, 29, 11, 2, 1, 0, 61, 125, 12, 1, 0, 39, 63, 13, 4, 12, 141, 94, 0, 0, 30, 16, 66, 3, 0, 0, 64, 26, 1, 0, 138, 130, 27, 2, 0, 43, 42, 126, 39, 1, 0, 149, 135, 40, 1, 0, 133, 248, 41, 4, 12, 92, 124, 0, 0, 28, 43, 2, 0, 151, 245, 96, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 4, 12, 45, 95, 0, 0, 31, 86, 1, 0, 60, 62, 0, 43, 1, 1, 0, 21, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 0, 3, 1, 3, 0, 200, 4, 1, 3, 0, 160, 6, 2, 3, 0, 0, 213, 12, 0, 1, 201, 13, 1, 3, 0, 202, 18, 66, 0, 101, 69, 213, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 67, 0, 111, 79, 171, 172, 30, 67, 0, 97, 65, 145, 146, 31, 66, 3, 0, 0, 225, 38, 67, 3, 0, 0, 242, 246, 40, 1, 3, 0, 204, 41, 2, 3, 0, 0, 250, 43, 2, 7, 0, 205, 203, 44, 66, 3, 0, 0, 174, 45, 66, 3, 0, 0, 175, 46, 67, 3, 0, 0, 135, 128, 49, 67, 3, 0, 0, 164, 165, 57, 0, 0, 32, 0, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 39, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 32, 39, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 248, 11, 97, 198, 101, 189, 105, 155, 111, 158, 117, 169, 65, 199, 69, 190, 73, 157, 79, 159, 85, 184, 32, 248, 245, 11, 97, 208, 101, 221, 105, 156, 111, 231, 117, 239, 65, 209, 69, 249, 73, 207, 79, 232, 85, 247, 32, 245, 0, 4, 1, 3, 0, 160, 6, 2, 3, 0, 0, 170, 13, 1, 3, 160, 200, 18, 66, 3, 0, 0, 170, 26, 0, 1, 160, 31, 65, 0, 115, 83, 32, 67, 0, 100, 68, 208, 209, 39, 0, 1, 160, 40, 0, 1, 160, 43, 0, 1, 160, 44, 65, 0, 122, 90, 46, 67, 0, 99, 67, 134, 143, 57, 0, 0, 32, 0, 94, 7, 99, 159, 115, 231, 122, 167, 67, 172, 83, 230, 90, 166, 32, 94, 0, 6, 2, 3, 0, 0, 135, 13, 0, 1, 160, 18, 2, 3, 0, 0, 135, 39, 1, 3, 160, 160, 40, 1, 3, 160, 160, 43, 1, 3, 160, 160, 54, 5, 63, 0, 0, 0, 0, 0, 125, 0, 6, 2, 3, 0, 0, 135, 13, 0, 1, 160, 16, 1, 0, 139, 140, 17, 1, 2, 237, 160, 18, 66, 0, 222, 168, 135, 19, 65, 0, 235, 199, 20, 65, 0, 238, 208, 21, 65, 0, 242, 209, 22, 65, 0, 226, 172, 23, 65, 0, 227, 173, 24, 65, 0, 233, 190, 25, 65, 0, 234, 198, 26, 1, 3, 160, 160, 30, 65, 0, 214, 164, 31, 65, 0, 236, 207, 32, 65, 0, 221, 167, 33, 65, 0, 243, 210, 34, 65, 0, 216, 166, 35, 65, 0, 225, 170, 36, 65, 0, 232, 189, 37, 65, 0, 228, 181, 38, 65, 0, 229, 182, 39, 1, 3, 200, 160, 40, 1, 3, 201, 160, 42, 5, 63, 0, 0, 0, 0, 0, 124, 43, 1, 3, 202, 160, 44, 193, 0, 224, 0, 169, 44, 45, 65, 0, 244, 211, 46, 65, 0, 246, 212, 47, 65, 0, 250, 213, 48, 65, 0, 215, 165, 49, 65, 0, 231, 184, 50, 65, 0, 230, 183, 57, 0, 0, 32, 0, 239, 15, 214, 155, 222, 157, 225, 158, 227, 159, 233, 162, 242, 163, 250, 253, 164, 134, 168, 141, 170, 143, 173, 144, 190, 146, 209, 149, 213, 152, 32, 239, 249, 5, 227, 160, 242, 251, 173, 145, 209, 150, 32, 249, 247, 3, 227, 161, 242, 252, 32, 247, 0, 140, 35, 2, 12, 0, 0, 74, 80, 44, 0, 0, 74, 80, 49, 48, 54, 3, 5, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 164, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 64, 128, 0, 0, 0, 0, 64, 12, 0, 128, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 128, 0, 8, 0, 0, 0, 128, 0, 0, 0, 2, 3, 11, 0, 0, 199, 160, 3, 3, 9, 0, 34, 204, 160, 4, 3, 3, 0, 0, 177, 167, 5, 3, 3, 0, 0, 179, 169, 6, 3, 3, 0, 0, 180, 170, 7, 3, 1, 0, 38, 181, 171, 8, 3, 1, 0, 39, 212, 172, 9, 3, 1, 0, 40, 213, 173, 10, 3, 1, 0, 41, 214, 174, 11, 3, 1, 0, 126, 220, 166, 12, 3, 9, 0, 61, 206, 160, 13, 4, 8, 94, 126, 205, 160, 30, 16, 67, 11, 0, 0, 192, 160, 17, 67, 11, 0, 0, 195, 160, 18, 67, 3, 0, 0, 178, 168, 19, 67, 11, 0, 0, 189, 160, 20, 67, 11, 0, 0, 182, 160, 21, 67, 11, 0, 0, 221, 160, 22, 67, 11, 0, 0, 197, 160, 23, 67, 11, 0, 0, 198, 160, 24, 67, 11, 0, 0, 215, 160, 25, 67, 11, 0, 0, 190, 160, 26, 132, 8, 64, 26, 96, 26, 222, 26, 160, 26, 0, 3, 27, 4, 0, 91, 123, 223, 162, 27, 30, 67, 11, 0, 0, 193, 160, 31, 67, 11, 0, 0, 196, 160, 32, 67, 11, 0, 0, 188, 160, 33, 67, 11, 0, 0, 202, 160, 34, 67, 11, 0, 0, 183, 160, 35, 67, 11, 0, 0, 184, 160, 36, 67, 11, 0, 0, 207, 160, 37, 67, 11, 0, 0, 201, 160, 38, 67, 11, 0, 0, 216, 160, 39, 3, 9, 0, 43, 218, 160, 40, 3, 8, 58, 42, 185, 160, 41, 134, 0, 0, 175, 0, 176, 0, 175, 0, 176, 0, 177, 0, 178, 0, 178, 43, 4, 0, 93, 125, 209, 163, 29, 44, 67, 3, 0, 0, 194, 175, 45, 67, 11, 0, 0, 187, 160, 46, 67, 11, 0, 0, 191, 160, 47, 67, 11, 0, 0, 203, 160, 48, 67, 11, 0, 0, 186, 160, 49, 67, 11, 0, 0, 208, 160, 50, 67, 11, 0, 0, 211, 160, 51, 3, 3, 0, 0, 200, 164, 52, 3, 3, 0, 0, 217, 161, 53, 3, 3, 0, 0, 210, 165, 58, 134, 10, 0, 179, 0, 58, 0, 179, 0, 58, 0, 180, 0, 181, 0, 181, 112, 134, 96, 0, 182, 0, 183, 0, 182, 0, 183, 0, 184, 195, 0, 187, 0, 115, 4, 0, 92, 95, 219, 124, 28, 121, 134, 0, 0, 167, 0, 168, 0, 167, 0, 168, 0, 169, 0, 170, 0, 170, 123, 134, 0, 0, 171, 0, 172, 0, 171, 0, 172, 0, 173, 0, 174, 0, 174, 125, 4, 8, 92, 124, 176, 160, 28, 186, 134, 127, 0, 179, 0, 58, 187, 0, 0, 58, 0, 180, 0, 181, 0, 181, 0, 213, 179, 4, 9, 0, 0, 76, 65, 44, 171, 0, 76, 65, 7, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 90, 3, 67, 1, 74, 1, 0, 0, 82, 3, 0, 0, 74, 1, 0, 0, 181, 1, 0, 0, 252, 0, 0, 0, 51, 117, 181, 1, 9, 2, 0, 0, 77, 117, 170, 2, 21, 3, 0, 0, 78, 117, 170, 3, 2, 4, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 34, 7, 1, 1, 0, 38, 8, 1, 1, 0, 47, 9, 1, 1, 0, 40, 10, 1, 1, 0, 41, 11, 1, 1, 0, 61, 12, 4, 8, 39, 63, 92, 0, 28, 13, 1, 0, 168, 173, 16, 2, 3, 0, 0, 64, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 1, 3, 202, 203, 27, 2, 0, 43, 42, 126, 30, 65, 0, 97, 65, 39, 65, 0, 164, 165, 40, 4, 12, 123, 91, 201, 0, 27, 41, 2, 0, 124, 248, 170, 43, 4, 12, 125, 93, 200, 0, 29, 46, 65, 0, 99, 67, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 4, 12, 45, 95, 0, 0, 31, 57, 0, 0, 32, 86, 1, 0, 60, 62, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 9, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 67, 128, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 5, 2, 3, 0, 0, 207, 6, 2, 3, 0, 0, 213, 13, 2, 3, 0, 0, 156, 18, 3, 3, 0, 0, 189, 190, 23, 3, 3, 0, 0, 158, 159, 27, 2, 7, 0, 0, 204, 30, 3, 3, 0, 0, 244, 246, 31, 67, 0, 115, 83, 251, 230, 34, 65, 0, 103, 71, 38, 3, 3, 0, 0, 252, 253, 44, 66, 0, 122, 90, 174, 45, 66, 0, 120, 88, 175, 49, 67, 0, 110, 78, 225, 238, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 19, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 99, 171, 115, 249, 122, 247, 120, 184, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 67, 172, 83, 221, 90, 239, 88, 169, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 34, 15, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 110, 166, 120, 241, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 78, 167, 88, 242, 32, 34, 126, 17, 97, 198, 101, 134, 105, 145, 111, 228, 117, 155, 103, 208, 110, 164, 121, 231, 65, 199, 69, 143, 73, 146, 79, 229, 85, 157, 71, 209, 78, 165, 89, 232, 32, 126, 0, 4, 2, 3, 0, 0, 250, 6, 2, 3, 0, 0, 213, 17, 3, 3, 0, 0, 247, 239, 18, 3, 3, 0, 0, 135, 128, 19, 3, 3, 0, 0, 230, 251, 21, 3, 3, 0, 0, 244, 246, 22, 3, 3, 0, 0, 231, 232, 23, 3, 3, 0, 0, 241, 242, 24, 3, 3, 0, 0, 155, 157, 31, 67, 0, 115, 83, 228, 229, 32, 3, 3, 0, 0, 252, 253, 33, 3, 3, 0, 0, 198, 199, 41, 1, 3, 204, 205, 44, 2, 3, 0, 0, 174, 45, 2, 3, 0, 0, 175, 49, 3, 3, 0, 0, 156, 207, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 11, 97, 134, 101, 145, 105, 152, 111, 225, 117, 158, 65, 143, 69, 146, 73, 243, 79, 238, 85, 159, 32, 94, 39, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 115, 249, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 83, 221, 32, 34, 124, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 124, 248, 11, 97, 166, 101, 171, 105, 169, 111, 189, 117, 208, 65, 167, 69, 172, 73, 184, 79, 190, 85, 209, 32, 248, 0, 6, 2, 3, 0, 0, 213, 12, 0, 1, 204, 13, 2, 3, 0, 0, 156, 18, 2, 3, 0, 0, 159, 20, 2, 3, 0, 0, 207, 22, 2, 3, 0, 0, 253, 23, 2, 3, 0, 0, 251, 24, 2, 3, 0, 0, 252, 25, 2, 3, 0, 0, 190, 30, 2, 3, 0, 0, 158, 31, 66, 0, 115, 83, 225, 41, 1, 3, 205, 206, 44, 66, 0, 122, 90, 174, 45, 2, 3, 0, 0, 175, 46, 2, 3, 0, 0, 189, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 12, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 99, 135, 115, 249, 122, 247, 67, 128, 83, 221, 90, 239, 32, 94, 239, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 32, 39, 34, 9, 97, 132, 105, 139, 111, 148, 117, 129, 65, 142, 73, 216, 79, 153, 85, 154, 32, 34, 39, 11, 97, 182, 101, 210, 105, 215, 111, 226, 117, 234, 65, 198, 69, 199, 73, 228, 79, 229, 85, 230, 32, 39, 124, 11, 97, 208, 101, 137, 105, 236, 111, 231, 117, 152, 65, 209, 69, 211, 73, 237, 79, 232, 85, 243, 32, 124, 248, 11, 97, 134, 101, 145, 105, 155, 111, 171, 117, 166, 65, 143, 69, 146, 73, 157, 79, 172, 85, 167, 32, 248, 0, 195, 125, 2, 25, 0, 0, 76, 72, 44, 0, 0, 85, 83, 68, 86, 76, 44, 103, 0, 76, 72, 44, 103, 0, 85, 83, 68, 86, 76, 4, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 90, 3, 85, 2, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 181, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 132, 0, 91, 26, 123, 26, 27, 26, 0, 26, 0, 26, 3, 132, 0, 93, 27, 125, 27, 29, 27, 0, 27, 0, 27, 4, 132, 0, 47, 53, 63, 53, 0, 53, 0, 53, 0, 53, 5, 196, 0, 112, 25, 80, 25, 16, 25, 0, 25, 0, 25, 6, 196, 0, 102, 33, 70, 33, 6, 33, 0, 33, 0, 33, 7, 196, 0, 109, 50, 77, 50, 13, 50, 0, 50, 0, 50, 8, 196, 0, 108, 38, 76, 38, 12, 38, 0, 38, 0, 38, 9, 196, 0, 106, 36, 74, 36, 10, 36, 0, 36, 0, 36, 10, 132, 0, 52, 5, 36, 5, 0, 5, 0, 123, 0, 123, 11, 132, 0, 51, 4, 35, 4, 0, 4, 0, 122, 0, 122, 12, 132, 0, 50, 3, 64, 3, 0, 3, 0, 121, 0, 121, 13, 132, 0, 49, 2, 33, 2, 0, 2, 0, 120, 0, 120, 16, 132, 0, 59, 39, 58, 39, 0, 39, 0, 39, 0, 39, 17, 196, 0, 113, 16, 81, 16, 17, 16, 0, 16, 0, 16, 18, 196, 0, 98, 48, 66, 48, 2, 48, 0, 48, 0, 48, 19, 196, 0, 121, 21, 89, 21, 25, 21, 0, 21, 0, 21, 20, 196, 0, 117, 22, 85, 22, 21, 22, 0, 22, 0, 22, 21, 196, 0, 114, 19, 82, 19, 18, 19, 0, 19, 0, 19, 22, 196, 0, 115, 31, 83, 31, 19, 31, 0, 31, 0, 31, 23, 196, 0, 111, 24, 79, 24, 15, 24, 0, 24, 0, 24, 24, 132, 0, 46, 52, 62, 52, 0, 52, 0, 52, 0, 52, 25, 132, 0, 54, 7, 94, 7, 30, 7, 0, 125, 0, 125, 26, 132, 0, 53, 6, 37, 6, 0, 6, 0, 124, 0, 124, 27, 132, 0, 61, 13, 43, 13, 0, 13, 0, 131, 0, 131, 30, 132, 0, 45, 12, 95, 12, 31, 12, 0, 130, 0, 130, 31, 196, 0, 107, 37, 75, 37, 11, 37, 0, 37, 0, 37, 32, 196, 0, 99, 46, 67, 46, 3, 46, 0, 46, 0, 46, 33, 196, 0, 100, 32, 68, 32, 4, 32, 0, 32, 0, 32, 34, 196, 0, 116, 20, 84, 20, 20, 20, 0, 20, 0, 20, 36, 196, 0, 101, 18, 69, 18, 5, 18, 0, 18, 0, 18, 37, 196, 0, 97, 30, 65, 30, 1, 30, 0, 30, 0, 30, 38, 196, 0, 122, 44, 90, 44, 26, 44, 0, 44, 0, 44, 39, 132, 0, 56, 9, 42, 9, 0, 9, 0, 127, 0, 127, 40, 132, 0, 55, 8, 38, 8, 0, 8, 0, 126, 0, 126, 44, 132, 0, 39, 40, 34, 40, 0, 40, 0, 40, 0, 40, 46, 196, 0, 103, 34, 71, 34, 7, 34, 0, 34, 0, 34, 48, 196, 0, 119, 17, 87, 17, 23, 17, 0, 17, 0, 17, 50, 196, 0, 105, 23, 73, 23, 9, 23, 0, 23, 0, 23, 52, 132, 0, 48, 11, 41, 11, 0, 11, 0, 129, 0, 129, 53, 132, 0, 57, 10, 40, 10, 0, 10, 0, 128, 0, 128, 0, 36, 196, 0, 101, 18, 69, 18, 5, 18, 213, 18, 0, 18, 0, 160, 25, 3, 9, 0, 0, 78, 76, 44, 143, 0, 78, 76, 5, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 90, 3, 169, 1, 176, 1, 0, 0, 82, 3, 0, 0, 176, 1, 0, 0, 181, 1, 44, 1, 86, 1, 0, 0, 68, 117, 47, 2, 126, 2, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 251, 3, 2, 1, 0, 34, 253, 4, 2, 3, 0, 0, 252, 5, 2, 3, 0, 0, 172, 6, 2, 3, 0, 0, 171, 7, 2, 1, 0, 38, 243, 8, 4, 9, 0, 95, 156, 0, 31, 9, 2, 1, 0, 40, 123, 10, 2, 1, 0, 41, 125, 11, 1, 1, 0, 39, 12, 4, 8, 47, 63, 92, 0, 28, 13, 2, 6, 248, 201, 205, 18, 65, 0, 101, 69, 19, 66, 3, 0, 0, 244, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 4, 15, 204, 202, 0, 0, 30, 27, 2, 0, 42, 124, 221, 30, 65, 0, 97, 65, 31, 66, 3, 0, 0, 225, 39, 1, 0, 43, 241, 40, 1, 3, 203, 200, 41, 2, 0, 64, 245, 170, 43, 1, 0, 60, 62, 44, 66, 3, 0, 0, 174, 45, 66, 3, 0, 0, 175, 46, 66, 0, 99, 67, 189, 49, 65, 0, 110, 78, 50, 66, 3, 0, 0, 230, 51, 4, 9, 0, 59, 91, 0, 27, 52, 2, 1, 0, 58, 250, 53, 4, 8, 45, 61, 93, 0, 29, 57, 0, 0, 32, 86, 4, 8, 93, 91, 124, 0, 29, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 7, 2, 7, 0, 0, 160, 19, 66, 3, 0, 0, 20, 27, 2, 7, 0, 0, 160, 41, 1, 1, 0, 21, 46, 66, 3, 0, 0, 155, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 7, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 44, 3, 99, 135, 67, 128, 32, 44, 0, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 247, 3, 99, 135, 67, 128, 32, 247, 0, 5, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 7, 2, 7, 0, 0, 160, 16, 67, 3, 0, 0, 145, 146, 18, 66, 3, 0, 0, 213, 23, 67, 3, 0, 0, 158, 159, 24, 67, 3, 0, 0, 171, 172, 25, 67, 3, 0, 0, 155, 157, 27, 2, 7, 0, 0, 160, 30, 67, 3, 0, 0, 134, 143, 38, 67, 3, 0, 0, 228, 229, 46, 2, 7, 0, 0, 160, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 11, 97, 135, 101, 208, 105, 231, 111, 249, 117, 247, 65, 128, 69, 209, 73, 232, 79, 221, 85, 239, 32, 126, 94, 13, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 121, 189, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 89, 190, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 44, 5, 101, 198, 111, 164, 69, 199, 79, 165, 32, 44, 0, 120, 80, 3, 9, 0, 0, 78, 79, 44, 155, 0, 78, 79, 6, 4, 0, 0, 0, 0, 13], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 65012);
allocate([100, 0, 0, 0, 0, 0, 90, 3, 17, 1, 30, 1, 0, 0, 82, 3, 0, 0, 30, 1, 0, 0, 97, 3, 153, 1, 164, 1, 0, 0, 48, 117, 243, 1, 0, 0, 0, 0, 48, 117, 167, 2, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 4, 2, 3, 0, 0, 156, 5, 2, 1, 0, 207, 36, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 123, 9, 4, 9, 0, 40, 91, 0, 27, 10, 4, 9, 0, 41, 93, 0, 29, 11, 2, 1, 0, 61, 125, 12, 1, 0, 43, 63, 13, 4, 14, 92, 200, 203, 0, 28, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 65, 0, 134, 143, 27, 4, 15, 204, 202, 201, 0, 30, 30, 65, 0, 97, 65, 39, 65, 0, 155, 157, 40, 65, 0, 145, 146, 41, 1, 0, 124, 245, 43, 1, 0, 39, 42, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 50, 66, 3, 0, 0, 230, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 4, 12, 45, 95, 0, 0, 31, 57, 0, 0, 32, 86, 1, 0, 60, 62, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 5, 1, 1, 0, 175, 41, 1, 1, 0, 21, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 9, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 67, 128, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 4, 2, 7, 0, 0, 160, 6, 2, 3, 0, 0, 213, 9, 3, 7, 0, 0, 0, 174, 10, 3, 7, 0, 0, 0, 175, 13, 2, 7, 0, 160, 160, 16, 67, 3, 0, 0, 131, 182, 18, 66, 3, 0, 0, 213, 20, 67, 3, 0, 0, 171, 151, 23, 67, 3, 0, 0, 139, 216, 24, 67, 3, 0, 0, 228, 229, 27, 2, 7, 160, 160, 160, 30, 67, 3, 0, 0, 160, 181, 31, 67, 3, 0, 0, 170, 150, 32, 67, 3, 0, 0, 159, 141, 33, 67, 3, 0, 0, 144, 128, 34, 67, 3, 0, 0, 161, 162, 35, 67, 3, 0, 0, 133, 130, 37, 67, 3, 0, 0, 166, 167, 39, 67, 3, 0, 0, 148, 153, 40, 67, 3, 0, 0, 132, 142, 44, 67, 3, 0, 0, 172, 152, 46, 67, 3, 0, 0, 158, 140, 47, 67, 3, 0, 0, 137, 138, 48, 67, 3, 0, 0, 135, 136, 49, 67, 3, 0, 0, 169, 149, 54, 5, 63, 0, 0, 0, 0, 0, 124, 0, 4, 2, 7, 0, 0, 160, 6, 2, 3, 0, 0, 213, 9, 3, 7, 0, 0, 0, 174, 10, 3, 7, 0, 0, 0, 175, 13, 2, 7, 0, 160, 160, 16, 67, 0, 160, 181, 113, 81, 17, 67, 0, 170, 150, 119, 87, 18, 66, 3, 0, 0, 213, 21, 67, 0, 171, 151, 121, 89, 23, 67, 3, 0, 0, 139, 216, 24, 67, 3, 0, 0, 228, 229, 27, 66, 4, 169, 149, 160, 30, 67, 3, 0, 0, 131, 182, 34, 67, 3, 0, 0, 161, 162, 35, 67, 3, 0, 0, 144, 128, 37, 67, 3, 0, 0, 166, 167, 39, 67, 3, 0, 0, 148, 153, 40, 67, 3, 0, 0, 132, 142, 42, 5, 63, 0, 0, 0, 0, 0, 123, 43, 67, 0, 159, 141, 39, 42, 44, 67, 3, 0, 0, 135, 136, 45, 67, 0, 158, 140, 120, 88, 86, 67, 0, 172, 152, 137, 138, 0, 105, 91, 3, 9, 0, 0, 80, 76, 44, 201, 1, 80, 76, 13, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 0, 84, 3, 16, 1, 0, 0, 0, 0, 156, 2, 16, 1, 0, 0, 0, 0, 223, 3, 79, 1, 0, 0, 0, 0, 22, 3, 79, 1, 0, 0, 0, 0, 155, 2, 79, 1, 0, 0, 0, 0, 80, 3, 105, 2, 0, 0, 0, 0, 80, 3, 156, 1, 0, 0, 0, 0, 81, 3, 66, 3, 0, 0, 0, 0, 81, 3, 120, 2, 0, 0, 0, 0, 90, 3, 149, 1, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 223, 227, 160, 0, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 24, 195, 0, 111, 24, 79, 24, 162, 24, 224, 0, 0, 5, 2, 3, 0, 0, 155, 16, 67, 3, 0, 0, 132, 142, 17, 67, 3, 0, 0, 130, 138, 18, 67, 3, 0, 0, 145, 144, 19, 67, 3, 0, 0, 137, 131, 22, 67, 3, 0, 0, 129, 154, 23, 67, 3, 0, 0, 148, 153, 24, 67, 7, 0, 0, 0, 163, 25, 67, 3, 0, 0, 147, 150, 30, 67, 3, 0, 0, 134, 143, 31, 67, 3, 0, 0, 158, 152, 38, 67, 3, 0, 0, 146, 156, 44, 67, 3, 0, 0, 167, 161, 45, 67, 3, 0, 0, 166, 160, 46, 67, 3, 0, 0, 141, 149, 49, 67, 3, 0, 0, 164, 165, 0, 18, 67, 3, 0, 0, 169, 168, 22, 66, 3, 0, 0, 170, 30, 67, 3, 0, 0, 165, 164, 31, 67, 3, 0, 0, 152, 151, 38, 67, 3, 0, 0, 136, 157, 44, 67, 3, 0, 0, 190, 189, 45, 67, 3, 0, 0, 171, 141, 46, 67, 3, 0, 0, 134, 143, 49, 67, 3, 0, 0, 228, 227, 0, 5, 2, 3, 0, 0, 155, 18, 67, 3, 0, 0, 145, 144, 24, 67, 7, 0, 0, 0, 163, 30, 67, 3, 0, 0, 134, 143, 31, 67, 3, 0, 0, 158, 152, 38, 67, 3, 0, 0, 146, 156, 44, 67, 3, 0, 0, 167, 161, 45, 67, 3, 0, 0, 166, 160, 46, 67, 3, 0, 0, 141, 149, 49, 67, 3, 0, 0, 164, 165, 0, 22, 66, 3, 0, 0, 213, 0, 13, 67, 0, 236, 156, 61, 43, 16, 65, 0, 239, 159, 17, 65, 0, 232, 152, 18, 66, 0, 165, 133, 253, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 167, 135, 22, 65, 0, 227, 147, 23, 65, 0, 247, 246, 24, 67, 12, 174, 142, 160, 160, 25, 65, 0, 175, 143, 26, 67, 0, 166, 134, 91, 123, 27, 67, 0, 231, 151, 93, 125, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 243, 242, 35, 65, 0, 163, 131, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 67, 0, 249, 248, 59, 58, 40, 67, 0, 233, 153, 39, 34, 41, 67, 0, 245, 244, 96, 126, 42, 4, 31, 0, 0, 0, 0, 125, 43, 67, 0, 238, 158, 92, 124, 44, 65, 0, 168, 136, 45, 65, 0, 229, 149, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 51, 2, 3, 0, 0, 59, 52, 2, 3, 0, 0, 58, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 126, 0, 16, 65, 0, 239, 159, 17, 65, 0, 232, 152, 18, 66, 0, 165, 133, 251, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 167, 135, 22, 65, 0, 227, 147, 23, 65, 0, 249, 248, 24, 67, 12, 174, 142, 160, 160, 25, 65, 0, 175, 143, 26, 67, 0, 166, 134, 91, 123, 27, 67, 0, 231, 151, 93, 125, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 236, 156, 35, 65, 0, 163, 131, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 67, 0, 247, 246, 59, 58, 40, 67, 0, 237, 157, 39, 34, 41, 195, 0, 241, 41, 240, 0, 96, 41, 126, 41, 42, 4, 31, 0, 0, 0, 0, 127, 43, 67, 0, 238, 158, 92, 124, 44, 65, 0, 235, 155, 45, 65, 0, 229, 149, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 51, 2, 3, 0, 0, 59, 52, 2, 3, 0, 0, 58, 0, 18, 66, 3, 0, 0, 251, 54, 4, 31, 0, 0, 0, 0, 128, 0, 164, 245, 8, 4, 214, 0, 80, 76, 13, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 0, 84, 3, 149, 3, 23, 4, 0, 0, 156, 2, 216, 4, 62, 5, 0, 0, 90, 3, 167, 5, 174, 5, 0, 0, 82, 3, 0, 0, 174, 5, 0, 0, 155, 2, 129, 1, 90, 2, 0, 0, 22, 3, 129, 1, 90, 2, 0, 0, 223, 3, 231, 1, 90, 2, 0, 0, 80, 3, 47, 7, 0, 0, 0, 0, 80, 3, 53, 6, 0, 0, 0, 0, 81, 3, 139, 8, 0, 0, 0, 0, 81, 3, 148, 7, 0, 0, 0, 0, 223, 227, 189, 2, 48, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 7, 0, 0, 200, 3, 1, 1, 0, 34, 4, 3, 7, 0, 0, 201, 30, 5, 1, 1, 0, 207, 6, 2, 7, 0, 0, 202, 7, 1, 1, 0, 38, 8, 2, 5, 0, 47, 203, 9, 2, 1, 0, 40, 250, 10, 2, 5, 0, 41, 204, 11, 1, 1, 0, 61, 12, 2, 4, 43, 63, 205, 13, 2, 4, 39, 42, 206, 16, 66, 3, 0, 0, 92, 17, 66, 3, 0, 0, 124, 18, 65, 0, 101, 69, 21, 196, 0, 122, 44, 90, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 66, 3, 160, 160, 246, 27, 67, 3, 160, 160, 158, 27, 30, 65, 0, 97, 65, 33, 66, 3, 0, 0, 91, 34, 66, 3, 0, 0, 93, 39, 67, 3, 160, 160, 36, 29, 40, 66, 3, 160, 160, 225, 41, 16, 0, 0, 43, 65, 2, 162, 160, 44, 196, 0, 121, 21, 89, 21, 0, 21, 25, 21, 0, 21, 46, 65, 0, 99, 67, 47, 66, 3, 0, 0, 64, 48, 66, 3, 0, 0, 123, 49, 66, 0, 110, 78, 125, 50, 66, 3, 0, 0, 245, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 3, 4, 45, 95, 0, 31, 57, 0, 0, 32, 86, 1, 0, 60, 62, 0, 2, 2, 3, 0, 0, 126, 4, 2, 7, 0, 0, 200, 5, 1, 3, 0, 160, 6, 2, 3, 0, 0, 248, 7, 2, 7, 0, 0, 201, 8, 2, 7, 0, 0, 202, 9, 2, 7, 0, 0, 203, 10, 2, 7, 0, 0, 204, 12, 2, 7, 0, 0, 205, 13, 2, 7, 0, 0, 206, 26, 65, 0, 167, 164, 27, 66, 4, 158, 141, 160, 31, 65, 0, 115, 83, 39, 65, 0, 146, 156, 40, 65, 0, 134, 145, 41, 1, 3, 201, 203, 43, 65, 1, 0, 166, 50, 66, 3, 0, 0, 21, 0, 2, 2, 3, 0, 0, 126, 4, 2, 7, 0, 0, 200, 5, 1, 3, 0, 160, 6, 2, 3, 0, 0, 248, 7, 2, 7, 0, 0, 201, 8, 2, 7, 0, 0, 202, 9, 2, 7, 0, 0, 203, 10, 2, 7, 0, 0, 204, 12, 2, 7, 0, 0, 205, 13, 2, 7, 0, 0, 206, 21, 196, 0, 122, 44, 90, 44, 155, 44, 26, 44, 0, 44, 26, 65, 0, 167, 164, 27, 66, 4, 158, 141, 160, 31, 65, 0, 115, 83, 39, 65, 0, 146, 156, 40, 65, 0, 134, 145, 41, 1, 3, 201, 203, 43, 65, 1, 0, 166, 50, 66, 3, 0, 0, 168, 0, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 126, 5, 97, 134, 101, 145, 65, 143, 69, 144, 32, 126, 96, 4, 97, 133, 101, 138, 117, 151, 32, 96, 250, 3, 122, 167, 90, 161, 32, 250, 39, 12, 99, 141, 101, 130, 110, 164, 111, 162, 115, 158, 122, 166, 67, 149, 78, 165, 79, 163, 83, 152, 90, 160, 32, 39, 34, 9, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 44, 3, 99, 135, 67, 128, 32, 44, 0, 2, 2, 7, 0, 0, 200, 4, 2, 7, 0, 0, 201, 5, 1, 3, 0, 160, 6, 2, 3, 0, 0, 248, 7, 2, 7, 0, 0, 202, 8, 2, 7, 0, 0, 203, 9, 2, 7, 0, 0, 204, 10, 2, 7, 0, 0, 205, 12, 2, 7, 0, 0, 206, 13, 2, 7, 0, 0, 207, 21, 196, 0, 122, 44, 90, 44, 155, 44, 26, 44, 0, 44, 26, 65, 0, 167, 164, 27, 66, 4, 158, 141, 160, 31, 65, 0, 115, 83, 39, 65, 0, 146, 156, 40, 65, 0, 134, 145, 41, 1, 3, 202, 204, 43, 65, 1, 0, 166, 50, 66, 3, 0, 0, 168, 0, 126, 3, 97, 132, 65, 142, 32, 126, 94, 5, 101, 136, 105, 140, 111, 147, 79, 150, 32, 94, 44, 5, 97, 134, 101, 145, 65, 143, 69, 144, 32, 44, 96, 6, 97, 133, 111, 148, 117, 151, 79, 153, 85, 154, 32, 96, 250, 3, 122, 167, 90, 161, 32, 250, 39, 13, 99, 141, 101, 130, 110, 164, 111, 162, 115, 158, 122, 166, 67, 149, 69, 138, 78, 165, 79, 163, 83, 152, 90, 160, 32, 39, 34, 4, 101, 137, 105, 139, 69, 131, 32, 34, 45, 3, 99, 135, 67, 128, 32, 44, 0, 2, 2, 3, 0, 0, 126, 3, 2, 7, 0, 0, 200, 5, 2, 7, 0, 0, 202, 6, 2, 7, 0, 0, 203, 7, 2, 7, 0, 0, 204, 8, 2, 3, 0, 0, 96, 9, 2, 7, 0, 0, 205, 10, 2, 7, 0, 0, 206, 11, 2, 7, 0, 0, 207, 12, 2, 7, 0, 0, 208, 13, 2, 7, 0, 0, 209, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 22, 66, 3, 0, 0, 170, 26, 65, 0, 190, 228, 27, 65, 0, 152, 134, 31, 66, 0, 115, 83, 208, 32, 66, 0, 100, 68, 209, 38, 65, 0, 108, 76, 39, 65, 0, 136, 157, 40, 65, 0, 165, 169, 41, 1, 3, 204, 205, 43, 65, 1, 0, 171, 0, 243, 19, 99, 159, 100, 212, 101, 216, 108, 150, 110, 229, 114, 253, 115, 231, 116, 156, 122, 167, 67, 172, 68, 210, 69, 183, 76, 149, 78, 213, 82, 252, 83, 230, 84, 155, 90, 166, 32, 243, 94, 7, 97, 131, 105, 140, 111, 147, 65, 182, 73, 215, 79, 226, 32, 94, 244, 3, 97, 199, 65, 198, 32, 244, 248, 3, 117, 133, 85, 222, 32, 248, 242, 5, 97, 165, 101, 169, 65, 164, 69, 168, 32, 242, 250, 3, 122, 190, 90, 189, 32, 250, 239, 25, 97, 160, 99, 134, 101, 130, 105, 161, 108, 146, 110, 228, 111, 162, 114, 234, 115, 152, 117, 163, 121, 236, 122, 171, 65, 181, 67, 143, 69, 144, 73, 214, 76, 145, 78, 227, 79, 224, 82, 232, 83, 151, 85, 233, 89, 237, 90, 141, 32, 239, 241, 5, 111, 139, 117, 251, 79, 138, 85, 235, 32, 241, 249, 9, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 69, 211, 79, 153, 85, 154, 32, 249, 247, 7, 99, 135, 115, 173, 116, 238, 67, 128, 83, 184, 84, 221, 32, 247, 0, 2, 2, 3, 0, 0, 126, 4, 2, 7, 0, 0, 200, 5, 1, 3, 0, 160, 6, 2, 3, 0, 0, 248, 7, 2, 7, 0, 0, 201, 8, 2, 7, 0, 0, 202, 9, 2, 7, 0, 0, 203, 10, 2, 7, 0, 0, 204, 12, 2, 7, 0, 0, 205, 13, 2, 7, 0, 0, 206, 26, 65, 0, 190, 228, 27, 66, 4, 152, 134, 160, 31, 65, 0, 115, 83, 39, 65, 0, 136, 157, 40, 65, 0, 165, 169, 41, 1, 3, 201, 203, 43, 65, 1, 0, 171, 50, 66, 3, 0, 0, 21, 0, 94, 5, 97, 131, 105, 140, 111, 147, 117, 150, 32, 94, 126, 5, 97, 165, 101, 169, 65, 164, 69, 168, 32, 126, 96, 4, 97, 133, 101, 138, 111, 149, 32, 96, 250, 3, 122, 190, 90, 189, 32, 250, 39, 16, 97, 160, 99, 134, 101, 130, 105, 161, 110, 228, 111, 162, 115, 152, 117, 163, 122, 171, 67, 143, 69, 144, 78, 227, 79, 224, 83, 151, 90, 141, 32, 39, 34, 9, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 44, 3, 99, 135, 67, 128, 32, 44, 0, 22, 66, 3, 0, 0, 213, 0, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 248, 3, 97, 134, 65, 143, 32, 248, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 247, 3, 99, 135, 67, 128, 32, 247, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 1, 3, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 16, 65, 0, 239, 159, 17, 65, 0, 232, 152, 18, 66, 0, 165, 133, 253, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 196, 0, 167, 44, 135, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 227, 147, 23, 65, 0, 247, 246, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 66, 4, 166, 134, 160, 27, 66, 4, 231, 151, 160, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 243, 242, 35, 65, 0, 163, 131, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 249, 248, 40, 66, 4, 233, 153, 160, 41, 65, 0, 245, 244, 42, 4, 31, 0, 0, 0, 0, 127, 43, 65, 0, 238, 158, 44, 196, 0, 168, 21, 136, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 229, 149, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 66, 4, 172, 140, 160, 86, 65, 0, 236, 156, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 1, 3, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 18, 66, 3, 0, 0, 253, 26, 16, 0, 0, 27, 2, 7, 160, 160, 160, 39, 1, 3, 160, 160, 40, 16, 0, 0, 41, 16, 0, 0, 43, 16, 0, 0, 50, 2, 7, 0, 0, 160, 54, 4, 31, 0, 0, 0, 0, 128, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 1, 3, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 16, 65, 0, 239, 159, 17, 65, 0, 232, 152, 18, 66, 0, 165, 133, 251, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 196, 0, 167, 44, 135, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 227, 147, 23, 65, 0, 249, 248, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 66, 4, 166, 134, 160, 27, 66, 4, 231, 151, 160, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 236, 156, 35, 65, 0, 163, 131, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 247, 246, 40, 66, 4, 237, 157, 160, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 129, 43, 65, 0, 238, 158, 44, 196, 0, 235, 21, 155, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 229, 149, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 66, 4, 172, 140, 160, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 1, 3, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 18, 66, 3, 0, 0, 251, 26, 16, 0, 0, 27, 2, 7, 160, 160, 160, 39, 1, 3, 160, 160, 40, 16, 0, 0, 41, 16, 0, 0, 43, 16, 0, 0, 50, 2, 7, 0, 0, 160, 54, 4, 31, 0, 0, 0, 0, 130, 0, 180, 209, 1, 9, 0, 0, 80, 79, 44, 163, 0, 80, 79, 4, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 90, 3, 227, 0, 240, 0, 0, 0, 82, 3, 0, 0, 240, 0, 0, 0, 92, 3, 103, 1, 110, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 4, 2, 3, 0, 0, 156, 5, 2, 3, 0, 0, 245, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 123, 9, 3, 1, 0, 40, 91, 27, 10, 3, 1, 0, 41, 93, 29, 11, 2, 1, 0, 61, 125, 12, 1, 0, 39, 63, 13, 1, 0, 174, 175, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 2, 4, 43, 42, 204, 27, 1, 3, 203, 200, 30, 65, 0, 97, 65, 39, 65, 0, 135, 128, 40, 1, 0, 167, 166, 41, 3, 4, 92, 124, 0, 28, 43, 3, 7, 201, 202, 0, 30, 49, 65, 0, 110, 78, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 3, 4, 45, 95, 0, 31, 57, 0, 0, 32, 86, 2, 4, 60, 62, 204, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 5, 2, 3, 0, 0, 21, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 145, 69, 146, 73, 152, 79, 169, 85, 157, 32, 96, 126, 7, 97, 132, 110, 164, 111, 148, 65, 142, 78, 165, 79, 153, 32, 126, 94, 7, 97, 131, 101, 136, 111, 147, 65, 143, 69, 137, 79, 140, 32, 94, 39, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 134, 69, 144, 73, 139, 79, 159, 85, 150, 32, 39, 34, 3, 117, 129, 85, 154, 32, 34, 0, 224, 112, 2, 25, 0, 0, 82, 72, 44, 0, 0, 85, 83, 68, 86, 82, 44, 103, 0, 82, 72, 44, 103, 0, 85, 83, 68, 86, 82, 4, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 90, 3, 72, 2, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 181, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 6, 196, 0, 106, 36, 74, 36, 10, 36, 0, 36, 0, 36, 7, 196, 0, 108, 38, 76, 38, 12, 38, 0, 38, 0, 38, 8, 196, 0, 109, 50, 77, 50, 13, 50, 0, 50, 0, 50, 9, 196, 0, 102, 33, 70, 33, 6, 33, 0, 33, 0, 33, 10, 196, 0, 112, 25, 80, 25, 16, 25, 0, 25, 0, 25, 11, 132, 0, 47, 53, 63, 53, 0, 53, 0, 53, 0, 53, 12, 132, 0, 91, 26, 123, 26, 27, 26, 0, 26, 0, 26, 13, 132, 0, 93, 27, 125, 27, 29, 27, 0, 27, 0, 27, 16, 132, 0, 53, 6, 37, 6, 0, 6, 0, 125, 0, 125, 17, 132, 0, 54, 7, 94, 7, 30, 7, 0, 126, 0, 126, 18, 196, 0, 113, 16, 81, 16, 17, 16, 0, 16, 0, 16, 19, 132, 0, 46, 52, 62, 52, 0, 52, 0, 52, 0, 52, 20, 196, 0, 111, 24, 79, 24, 15, 24, 0, 24, 0, 24, 21, 196, 0, 114, 19, 82, 19, 18, 19, 0, 19, 0, 19, 22, 196, 0, 115, 31, 83, 31, 19, 31, 0, 31, 0, 31, 23, 196, 0, 117, 22, 85, 22, 21, 22, 0, 22, 0, 22, 24, 196, 0, 121, 21, 89, 21, 25, 21, 0, 21, 0, 21, 25, 196, 0, 98, 48, 66, 48, 2, 48, 0, 48, 0, 48, 26, 132, 0, 59, 39, 58, 39, 0, 39, 0, 39, 0, 39, 27, 132, 0, 61, 13, 43, 13, 0, 13, 0, 131, 0, 131, 30, 132, 0, 55, 8, 38, 8, 0, 8, 0, 127, 0, 127, 31, 132, 0, 56, 9, 42, 9, 0, 9, 0, 128, 0, 128, 32, 196, 0, 122, 44, 90, 44, 26, 44, 0, 44, 0, 44, 33, 196, 0, 97, 30, 65, 30, 1, 30, 0, 30, 0, 30, 34, 196, 0, 101, 18, 69, 18, 5, 18, 0, 18, 0, 18, 36, 196, 0, 116, 20, 84, 20, 20, 20, 0, 20, 0, 20, 37, 196, 0, 100, 32, 68, 32, 4, 32, 0, 32, 0, 32, 38, 196, 0, 99, 46, 67, 46, 3, 46, 0, 46, 0, 46, 39, 196, 0, 107, 37, 75, 37, 11, 37, 0, 37, 0, 37, 40, 132, 0, 45, 12, 95, 12, 31, 12, 0, 130, 0, 130, 44, 132, 0, 57, 10, 40, 10, 0, 10, 0, 128, 0, 128, 45, 132, 0, 48, 11, 41, 11, 0, 11, 0, 129, 0, 129, 46, 196, 0, 120, 45, 88, 45, 24, 45, 0, 45, 0, 45, 47, 132, 0, 44, 51, 60, 51, 0, 51, 0, 51, 0, 51, 48, 196, 0, 105, 23, 73, 23, 9, 23, 0, 23, 0, 23, 50, 196, 0, 119, 17, 87, 17, 23, 17, 0, 17, 0, 17, 51, 196, 0, 118, 47, 86, 47, 22, 47, 0, 47, 0, 47, 52, 196, 0, 103, 34, 71, 34, 7, 34, 0, 34, 0, 34, 53, 132, 0, 39, 40, 34, 40, 0, 40, 0, 40, 0, 40, 0, 34, 196, 0, 101, 18, 69, 18, 5, 18, 213, 18, 0, 18, 0, 195, 64, 3, 9, 0, 0, 83, 70, 44, 150, 0, 83, 70, 5, 5, 0, 0, 0, 0, 5, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 90, 3, 235, 1, 244, 1, 0, 0, 82, 3, 0, 0, 244, 1, 0, 0, 181, 1, 124, 1, 156, 1, 0, 0, 91, 3, 111, 2, 185, 2, 0, 0, 64, 64, 12, 0, 0, 0, 0, 0, 64, 0, 12, 64, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 4, 9, 0, 43, 43, 0, 124, 3, 4, 9, 0, 34, 34, 0, 64, 4, 4, 9, 0, 42, 42, 0, 35, 5, 4, 9, 0, 135, 135, 0, 248, 6, 4, 15, 0, 0, 0, 0, 245, 7, 4, 9, 0, 38, 38, 0, 170, 8, 4, 9, 0, 47, 47, 0, 221, 9, 4, 9, 0, 40, 40, 0, 189, 10, 2, 1, 0, 41, 41, 11, 2, 1, 0, 61, 61, 12, 4, 16, 39, 63, 63, 39, 203, 13, 5, 31, 202, 200, 200, 202, 201, 30, 18, 3, 0, 101, 69, 101, 69, 21, 134, 0, 122, 44, 90, 44, 122, 44, 90, 44, 0, 44, 26, 44, 0, 44, 22, 3, 0, 117, 85, 117, 85, 23, 3, 0, 105, 73, 105, 73, 24, 3, 0, 111, 79, 111, 79, 26, 4, 0, 138, 129, 154, 212, 91, 27, 4, 9, 204, 33, 33, 204, 93, 30, 3, 0, 97, 65, 97, 65, 31, 4, 15, 0, 0, 0, 0, 225, 39, 3, 0, 130, 148, 153, 144, 40, 4, 0, 133, 132, 142, 183, 123, 41, 3, 0, 245, 248, 248, 245, 43, 4, 0, 36, 156, 156, 36, 125, 44, 134, 0, 121, 21, 89, 21, 121, 21, 89, 21, 0, 21, 25, 21, 0, 21, 46, 3, 0, 99, 67, 99, 67, 49, 3, 0, 110, 78, 110, 78, 50, 4, 15, 0, 0, 0, 0, 230, 51, 4, 9, 0, 59, 59, 0, 60, 52, 4, 9, 0, 58, 58, 0, 62, 53, 5, 0, 45, 95, 95, 45, 92, 31, 57, 3, 6, 32, 0, 0, 32, 86, 5, 0, 60, 62, 62, 60, 92, 28, 0, 6, 4, 15, 0, 0, 0, 0, 21, 8, 4, 31, 0, 0, 0, 0, 160, 9, 4, 15, 0, 0, 0, 0, 155, 41, 3, 6, 21, 0, 0, 21, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 9, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 67, 128, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 18, 4, 15, 0, 0, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 8, 4, 31, 0, 0, 0, 0, 160, 16, 4, 15, 0, 0, 0, 0, 146, 18, 4, 15, 0, 0, 0, 0, 213, 23, 4, 15, 0, 0, 0, 0, 172, 24, 4, 15, 0, 0, 0, 0, 171, 30, 4, 15, 0, 0, 0, 0, 145, 44, 134, 0, 121, 21, 89, 21, 121, 21, 89, 21, 174, 21, 25, 21, 0, 21, 45, 4, 15, 0, 0, 0, 0, 175, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 0, 99, 123, 2, 19, 0, 0, 83, 71, 44, 0, 0, 83, 68, 44, 150, 0, 83, 71, 44, 150, 0, 83, 68, 4, 5, 0, 0, 0, 0, 5, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 90, 3, 227, 1, 236, 1, 0, 0, 82, 3, 0, 0, 236, 1, 0, 0, 181, 1, 116, 1, 148, 1, 0, 0, 64, 64, 12, 0, 0, 0, 0, 0, 64, 0, 12, 64, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 4, 9, 0, 43, 43, 0, 124, 3, 4, 9, 0, 34, 34, 0, 64, 4, 4, 9, 0, 42, 42, 0, 35, 5, 4, 9, 0, 135, 135, 0, 248, 6, 4, 15, 0, 0, 0, 0, 245, 7, 4, 9, 0, 38, 38, 0, 170, 8, 4, 9, 0, 47, 47, 0, 221, 9, 4, 9, 0, 40, 40, 0, 189, 10, 2, 1, 0, 41, 41, 11, 2, 1, 0, 61, 61, 12, 4, 16, 39, 63, 63, 39, 203, 13, 5, 31, 202, 200, 200, 202, 201, 30, 18, 3, 0, 101, 69, 101, 69, 21, 134, 0, 122, 44, 90, 44, 122, 44, 90, 44, 0, 44, 26, 44, 0, 44, 22, 3, 0, 117, 85, 117, 85, 23, 3, 0, 105, 73, 105, 73, 24, 3, 0, 111, 79, 111, 79, 26, 4, 0, 129, 138, 212, 154, 91, 27, 4, 9, 204, 33, 33, 204, 93, 30, 3, 0, 97, 65, 97, 65, 31, 4, 15, 0, 0, 0, 0, 225, 39, 3, 0, 148, 130, 144, 153, 40, 4, 0, 132, 133, 183, 142, 123, 41, 3, 0, 245, 248, 248, 245, 43, 4, 0, 36, 156, 156, 36, 125, 44, 134, 0, 121, 21, 89, 21, 121, 21, 89, 21, 0, 21, 25, 21, 0, 21, 46, 3, 0, 99, 67, 99, 67, 49, 3, 0, 110, 78, 110, 78, 50, 4, 15, 0, 0, 0, 0, 230, 51, 4, 9, 0, 59, 59, 0, 60, 52, 4, 9, 0, 58, 58, 0, 62, 53, 5, 0, 45, 95, 95, 45, 92, 31, 57, 3, 6, 32, 0, 0, 32, 86, 5, 0, 60, 62, 62, 60, 92, 28, 0, 6, 4, 15, 0, 0, 0, 0, 21, 8, 4, 31, 0, 0, 0, 0, 160, 9, 4, 15, 0, 0, 0, 0, 155, 41, 3, 6, 21, 0, 0, 21, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 9, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 67, 128, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 18, 4, 15, 0, 0, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 239, 240, 3, 9, 0, 0, 83, 75, 44, 245, 0, 83, 75, 5, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 84, 3, 73, 1, 193, 1, 0, 0, 90, 3, 130, 2, 137, 2, 0, 0, 82, 3, 0, 0, 137, 2, 0, 0, 99, 3, 16, 3, 121, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 4, 43, 49, 200, 3, 1, 1, 160, 50, 4, 3, 5, 160, 51, 201, 30, 5, 1, 1, 160, 52, 6, 2, 5, 160, 53, 202, 7, 1, 1, 160, 54, 8, 2, 4, 236, 55, 203, 9, 2, 0, 160, 56, 250, 10, 2, 4, 161, 57, 204, 11, 1, 0, 130, 48, 12, 2, 4, 61, 37, 205, 13, 2, 7, 204, 160, 206, 16, 66, 3, 0, 0, 92, 17, 66, 3, 0, 0, 124, 18, 65, 0, 101, 69, 21, 196, 0, 122, 44, 90, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 25, 66, 3, 0, 0, 39, 26, 2, 0, 163, 47, 246, 27, 2, 0, 132, 40, 158, 30, 66, 0, 97, 65, 60, 33, 66, 3, 0, 0, 91, 34, 66, 3, 0, 0, 93, 39, 2, 0, 147, 34, 36, 40, 2, 0, 245, 33, 225, 41, 1, 2, 59, 202, 43, 2, 1, 160, 41, 207, 44, 196, 0, 121, 21, 89, 21, 62, 21, 25, 21, 0, 21, 45, 66, 3, 0, 0, 35, 46, 66, 0, 99, 67, 38, 47, 66, 3, 0, 0, 64, 48, 66, 3, 0, 0, 123, 49, 66, 0, 110, 78, 125, 51, 1, 1, 0, 63, 52, 2, 1, 0, 58, 42, 53, 3, 4, 45, 95, 0, 31, 57, 0, 0, 32, 86, 2, 0, 38, 42, 60, 0, 2, 2, 3, 0, 0, 126, 3, 2, 6, 150, 0, 200, 4, 0, 0, 231, 5, 2, 6, 159, 0, 202, 6, 2, 6, 156, 0, 203, 7, 2, 6, 167, 0, 204, 8, 2, 3, 0, 0, 96, 9, 2, 7, 0, 0, 205, 10, 2, 7, 0, 0, 206, 11, 2, 7, 0, 0, 207, 12, 2, 7, 0, 0, 208, 13, 2, 7, 206, 200, 209, 18, 66, 3, 0, 0, 170, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 31, 66, 0, 115, 83, 208, 32, 66, 0, 100, 68, 209, 37, 66, 3, 0, 0, 136, 38, 66, 0, 108, 76, 157, 41, 1, 3, 0, 203, 43, 0, 0, 229, 0, 243, 19, 99, 159, 100, 212, 101, 216, 108, 150, 110, 229, 114, 253, 115, 231, 116, 156, 122, 167, 67, 172, 68, 210, 69, 183, 76, 149, 78, 213, 82, 252, 83, 230, 84, 155, 90, 166, 32, 243, 94, 7, 97, 131, 105, 140, 111, 147, 65, 182, 73, 215, 79, 226, 32, 94, 244, 3, 97, 199, 65, 198, 32, 244, 248, 3, 117, 133, 85, 222, 32, 248, 242, 5, 97, 165, 101, 169, 65, 164, 69, 168, 32, 242, 250, 3, 122, 190, 90, 189, 32, 250, 239, 25, 97, 160, 99, 134, 101, 130, 105, 161, 108, 146, 110, 228, 111, 162, 114, 234, 115, 152, 117, 163, 121, 236, 122, 171, 65, 181, 67, 143, 69, 144, 73, 214, 76, 145, 78, 227, 79, 224, 82, 232, 83, 151, 85, 233, 89, 237, 90, 141, 32, 239, 241, 5, 111, 139, 117, 251, 79, 138, 85, 235, 32, 241, 249, 9, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 69, 211, 79, 153, 85, 154, 32, 249, 247, 7, 99, 135, 115, 173, 116, 238, 67, 128, 83, 184, 84, 221, 32, 247, 0, 18, 66, 3, 0, 0, 213, 0, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 248, 3, 97, 134, 65, 143, 32, 248, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 247, 3, 99, 135, 67, 128, 32, 247, 0, 2, 2, 3, 0, 0, 126, 3, 2, 6, 140, 0, 200, 4, 0, 0, 168, 5, 0, 0, 135, 6, 0, 0, 159, 7, 0, 0, 145, 8, 2, 2, 152, 0, 96, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 203, 12, 2, 7, 0, 0, 204, 13, 2, 7, 203, 200, 160, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 27, 2, 7, 0, 0, 160, 31, 65, 0, 115, 83, 32, 65, 0, 100, 68, 38, 65, 0, 108, 76, 40, 0, 0, 173, 41, 1, 3, 0, 202, 43, 2, 6, 164, 0, 160, 0, 118, 19, 99, 135, 100, 131, 101, 136, 108, 140, 110, 164, 114, 169, 115, 168, 116, 159, 122, 145, 67, 128, 68, 133, 69, 137, 76, 156, 78, 165, 82, 158, 83, 155, 84, 134, 90, 146, 32, 118, 94, 3, 111, 147, 79, 167, 32, 94, 248, 3, 117, 150, 85, 166, 32, 248, 39, 17, 97, 160, 101, 130, 105, 161, 108, 141, 111, 162, 114, 170, 117, 163, 121, 152, 65, 143, 69, 144, 73, 139, 76, 138, 79, 149, 82, 171, 85, 151, 89, 157, 32, 39, 34, 7, 97, 132, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 0, 155, 68, 2, 29, 0, 0, 83, 80, 44, 0, 0, 69, 83, 44, 172, 0, 83, 80, 44, 172, 0, 69, 83, 44, 173, 0, 83, 80, 44, 173, 0, 69, 83, 5, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 90, 3, 64, 1, 77, 1, 0, 0, 82, 3, 0, 0, 77, 1, 0, 0, 181, 1, 0, 0, 245, 0, 0, 0, 55, 117, 196, 1, 245, 1, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 124, 3, 2, 1, 0, 34, 64, 4, 2, 1, 0, 250, 35, 5, 2, 7, 0, 0, 201, 7, 2, 1, 0, 38, 170, 8, 1, 1, 0, 47, 9, 1, 1, 0, 40, 10, 1, 1, 0, 41, 11, 1, 1, 0, 61, 12, 1, 0, 39, 63, 13, 1, 0, 173, 168, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 2, 3, 200, 202, 91, 27, 2, 0, 43, 42, 93, 30, 65, 0, 97, 65, 39, 66, 0, 164, 165, 126, 40, 2, 3, 203, 204, 123, 41, 3, 0, 167, 166, 92, 28, 43, 66, 0, 135, 128, 125, 49, 65, 0, 110, 78, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 3, 0, 45, 95, 92, 31, 57, 0, 0, 32, 86, 1, 0, 60, 62, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 7, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 5, 2, 3, 0, 0, 126, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 26, 1, 3, 0, 160, 38, 4, 11, 0, 0, 242, 0, 246, 40, 1, 3, 201, 202, 44, 2, 3, 0, 0, 174, 45, 2, 3, 0, 0, 175, 0, 96, 7, 97, 133, 101, 138, 111, 149, 65, 183, 69, 212, 79, 227, 32, 96, 39, 9, 101, 130, 105, 161, 111, 162, 117, 163, 69, 144, 73, 214, 79, 224, 85, 233, 32, 39, 34, 5, 105, 139, 117, 129, 73, 216, 85, 154, 32, 34, 0, 204, 39, 4, 29, 0, 0, 83, 85, 44, 0, 0, 83, 86, 44, 0, 0, 70, 73, 44, 153, 0, 83, 85, 44, 153, 0, 83, 86, 44, 153, 0, 70, 73, 7, 4, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 90, 3, 122, 1, 135, 1, 0, 0, 91, 3, 2, 2, 37, 2, 0, 0, 82, 3, 0, 0, 135, 1, 0, 0, 181, 1, 33, 1, 43, 1, 0, 0, 48, 117, 174, 2, 0, 0, 0, 0, 48, 117, 102, 3, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 4, 2, 3, 0, 0, 156, 5, 2, 1, 0, 207, 36, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 123, 9, 4, 9, 0, 40, 91, 0, 27, 10, 4, 9, 0, 41, 93, 0, 29, 11, 2, 1, 0, 61, 125, 12, 4, 8, 43, 63, 92, 0, 28, 13, 2, 3, 203, 200, 124, 16, 66, 3, 0, 0, 64, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 65, 0, 134, 143, 27, 4, 15, 204, 202, 201, 0, 30, 30, 65, 0, 97, 65, 39, 65, 0, 148, 153, 40, 65, 0, 132, 142, 41, 1, 0, 245, 171, 43, 1, 0, 39, 42, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 50, 66, 3, 0, 0, 230, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 4, 12, 45, 95, 0, 0, 31, 57, 0, 0, 32, 86, 2, 0, 60, 62, 124, 0, 5, 1, 3, 0, 160, 41, 0, 0, 21, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 9, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 67, 128, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 31, 65, 0, 115, 83, 40, 66, 7, 0, 0, 205, 41, 1, 3, 0, 160, 44, 66, 0, 122, 90, 175, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 118, 5, 115, 249, 122, 247, 83, 221, 90, 239, 32, 118, 0, 4, 2, 7, 0, 0, 160, 6, 2, 3, 0, 0, 213, 9, 3, 7, 0, 0, 0, 174, 10, 3, 7, 0, 0, 0, 175, 13, 1, 3, 160, 160, 16, 67, 3, 0, 0, 131, 182, 18, 66, 3, 0, 0, 213, 20, 67, 3, 0, 0, 171, 151, 23, 67, 3, 0, 0, 139, 216, 24, 67, 3, 0, 0, 228, 229, 27, 2, 7, 160, 160, 160, 30, 67, 3, 0, 0, 160, 181, 31, 67, 3, 0, 0, 170, 150, 32, 67, 3, 0, 0, 159, 141, 33, 67, 3, 0, 0, 144, 128, 34, 67, 3, 0, 0, 161, 162, 35, 67, 3, 0, 0, 133, 130, 37, 67, 3, 0, 0, 166, 167, 39, 67, 3, 0, 0, 155, 157, 40, 67, 3, 0, 0, 145, 146, 41, 1, 3, 0, 160, 44, 67, 3, 0, 0, 172, 152, 46, 67, 3, 0, 0, 158, 140, 47, 67, 3, 0, 0, 137, 138, 48, 67, 3, 0, 0, 135, 136, 49, 67, 3, 0, 0, 169, 149, 54, 5, 63, 0, 0, 0, 0, 0, 125, 0, 4, 2, 7, 0, 0, 160, 6, 2, 3, 0, 0, 213, 9, 3, 7, 0, 0, 0, 174, 10, 3, 7, 0, 0, 0, 175, 13, 1, 3, 160, 160, 16, 67, 0, 160, 181, 113, 81, 17, 67, 0, 170, 150, 119, 87, 18, 66, 3, 0, 0, 213, 21, 67, 0, 171, 151, 121, 89, 23, 67, 3, 0, 0, 139, 216, 24, 67, 3, 0, 0, 228, 229, 27, 66, 4, 169, 149, 160, 30, 67, 3, 0, 0, 131, 182, 34, 67, 3, 0, 0, 161, 162, 35, 67, 3, 0, 0, 144, 128, 37, 67, 3, 0, 0, 166, 167, 39, 67, 3, 0, 0, 155, 157, 40, 67, 3, 0, 0, 145, 146, 41, 1, 3, 0, 160, 42, 5, 63, 0, 0, 0, 0, 0, 124, 43, 67, 0, 159, 141, 39, 42, 44, 67, 3, 0, 0, 135, 136, 45, 67, 0, 158, 140, 120, 88, 86, 67, 0, 172, 152, 137, 138, 0, 214, 184, 3, 9, 0, 0, 85, 75, 44, 166, 0, 85, 75, 8, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 90, 3, 231, 0, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 181, 1, 196, 0, 0, 0, 0, 0, 49, 117, 132, 1, 254, 1, 0, 0, 91, 3, 238, 0, 67, 1, 0, 0, 85, 3, 4, 3, 97, 3, 0, 0, 84, 3, 167, 2, 219, 2, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 124, 3, 1, 1, 0, 34, 4, 1, 1, 0, 156, 18, 67, 0, 101, 69, 130, 144, 22, 67, 0, 117, 85, 163, 233, 23, 67, 0, 105, 73, 161, 214, 24, 195, 0, 111, 24, 79, 24, 162, 24, 224, 0, 30, 67, 0, 97, 65, 160, 181, 40, 1, 1, 0, 64, 41, 2, 1, 0, 170, 221, 43, 1, 0, 35, 126, 53, 4, 11, 0, 0, 92, 0, 28, 86, 4, 12, 92, 124, 0, 0, 28, 0, 22, 67, 15, 0, 0, 0, 160, 23, 67, 15, 0, 0, 0, 160, 24, 67, 15, 0, 0, 0, 160, 30, 67, 15, 0, 0, 0, 160, 41, 2, 7, 0, 0, 160, 0, 5, 2, 3, 0, 0, 213, 0, 2, 2, 3, 0, 0, 173, 3, 1, 3, 0, 202, 5, 2, 3, 0, 0, 213, 7, 1, 3, 0, 200, 16, 67, 3, 0, 0, 145, 146, 21, 65, 0, 121, 89, 25, 67, 3, 0, 0, 171, 172, 41, 2, 3, 201, 0, 124, 46, 67, 3, 0, 0, 135, 128, 49, 67, 3, 0, 0, 164, 165, 51, 2, 3, 0, 0, 174, 52, 2, 3, 0, 0, 175, 53, 3, 7, 0, 0, 0, 168, 57, 0, 0, 32, 0, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 96, 7, 97, 133, 101, 138, 117, 151, 65, 183, 69, 212, 85, 235, 32, 96, 34, 11, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 0, 3, 1, 3, 0, 201, 5, 2, 3, 0, 0, 213, 7, 2, 3, 0, 202, 94, 17, 67, 0, 119, 87, 134, 143, 20, 65, 0, 116, 84, 21, 67, 0, 121, 89, 236, 237, 25, 65, 0, 112, 80, 31, 65, 0, 115, 83, 32, 65, 0, 100, 68, 33, 65, 0, 102, 70, 34, 65, 0, 103, 71, 40, 0, 1, 203, 41, 0, 1, 200, 43, 1, 3, 0, 204, 44, 67, 3, 0, 0, 249, 250, 46, 67, 0, 99, 67, 135, 128, 48, 65, 0, 98, 66, 49, 67, 3, 0, 0, 164, 165, 50, 65, 0, 109, 77, 51, 2, 3, 0, 0, 174, 52, 2, 3, 0, 0, 175, 57, 0, 0, 32, 0, 96, 15, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 119, 145, 121, 198, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 87, 146, 89, 199, 32, 96, 34, 15, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 119, 166, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 87, 167, 89, 243, 32, 34, 94, 15, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 119, 155, 121, 228, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 87, 157, 89, 229, 32, 94, 39, 15, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 119, 134, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 87, 143, 89, 237, 32, 39, 126, 19, 98, 242, 99, 189, 100, 208, 102, 159, 103, 158, 109, 172, 112, 168, 115, 244, 116, 231, 66, 169, 67, 184, 68, 209, 70, 190, 71, 246, 77, 251, 80, 173, 83, 225, 84, 232, 32, 126, 0, 4, 1, 3, 0, 160, 5, 2, 3, 0, 0, 170, 31, 65, 0, 115, 83, 38, 65, 0, 108, 76, 41, 2, 7, 200, 160, 160, 44, 65, 0, 122, 90, 45, 65, 0, 120, 88, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 57, 0, 0, 32, 0, 45, 19, 97, 165, 99, 134, 101, 169, 108, 136, 110, 228, 111, 162, 115, 152, 120, 171, 122, 190, 65, 164, 67, 143, 69, 168, 76, 157, 78, 227, 79, 224, 83, 151, 88, 141, 90, 189, 32, 45, 0, 3, 1, 3, 0, 202, 7, 1, 3, 0, 201, 22, 67, 3, 0, 0, 237, 236, 23, 67, 15, 0, 0, 160, 160, 24, 67, 12, 111, 79, 160, 160, 30, 67, 15, 0, 0, 160, 160, 31, 65, 0, 115, 83, 34, 67, 0, 103, 71, 229, 228, 35, 67, 0, 104, 72, 232, 231, 36, 65, 0, 106, 74, 41, 2, 3, 200, 160, 124, 44, 67, 3, 0, 0, 190, 189, 46, 67, 0, 99, 67, 145, 146, 49, 66, 3, 0, 0, 243, 57, 0, 0, 32, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 19, 99, 134, 101, 136, 103, 155, 104, 169, 105, 140, 106, 159, 111, 147, 115, 199, 117, 150, 67, 143, 69, 210, 71, 157, 72, 168, 73, 215, 74, 172, 79, 226, 83, 198, 85, 234, 32, 94, 34, 5, 101, 137, 105, 139, 69, 211, 73, 216, 32, 34, 0, 252, 127, 4, 4, 168, 0, 85, 75, 8, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 90, 3, 11, 1, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 181, 1, 238, 0, 0, 0, 0, 0, 49, 117, 226, 1, 119, 2, 0, 0, 91, 3, 18, 1, 137, 1, 0, 0, 85, 3, 32, 3, 155, 3], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 75254);
allocate([84, 3, 232, 3, 81, 4, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 251, 3, 2, 1, 0, 34, 253, 4, 2, 1, 0, 156, 252, 5, 2, 3, 0, 0, 172, 6, 2, 3, 0, 0, 171, 7, 2, 1, 0, 38, 243, 8, 1, 1, 0, 39, 9, 1, 1, 0, 40, 10, 2, 1, 0, 41, 241, 11, 2, 1, 0, 35, 248, 12, 2, 3, 0, 0, 95, 13, 1, 0, 170, 238, 26, 1, 0, 64, 96, 27, 4, 8, 91, 123, 126, 0, 27, 39, 1, 1, 0, 43, 40, 4, 8, 58, 42, 94, 0, 30, 41, 4, 8, 92, 221, 124, 0, 28, 43, 4, 12, 93, 125, 0, 0, 29, 50, 66, 3, 0, 0, 230, 57, 0, 0, 32, 86, 4, 12, 124, 95, 0, 0, 31, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 7, 2, 7, 0, 0, 160, 13, 1, 3, 0, 160, 41, 1, 3, 0, 160, 0, 18, 66, 3, 0, 0, 213, 0, 2, 3, 7, 0, 0, 0, 173, 3, 1, 3, 0, 202, 5, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 7, 2, 7, 0, 0, 160, 8, 1, 3, 0, 203, 18, 66, 0, 101, 69, 213, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 67, 0, 111, 79, 171, 172, 26, 1, 3, 0, 201, 30, 67, 0, 97, 65, 145, 146, 40, 2, 7, 0, 0, 200, 41, 1, 3, 0, 160, 46, 67, 3, 0, 0, 135, 128, 49, 67, 3, 0, 0, 164, 165, 51, 2, 3, 0, 0, 174, 52, 2, 3, 0, 0, 175, 53, 2, 3, 0, 0, 168, 0, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 96, 7, 97, 133, 101, 138, 117, 151, 65, 183, 69, 212, 85, 235, 32, 96, 34, 11, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 39, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 32, 39, 0, 2, 2, 7, 0, 0, 160, 3, 2, 3, 0, 201, 253, 5, 2, 7, 0, 0, 160, 7, 2, 7, 0, 0, 160, 8, 1, 3, 0, 203, 11, 1, 3, 0, 202, 13, 1, 3, 0, 204, 17, 65, 0, 119, 87, 18, 66, 0, 101, 69, 213, 20, 65, 0, 116, 84, 21, 67, 0, 121, 89, 249, 250, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 25, 65, 0, 112, 80, 26, 1, 3, 0, 200, 30, 65, 0, 97, 65, 31, 65, 0, 115, 83, 32, 65, 0, 100, 68, 33, 65, 0, 102, 70, 34, 65, 0, 103, 71, 46, 67, 0, 99, 67, 135, 128, 48, 65, 0, 98, 66, 49, 67, 3, 0, 0, 164, 165, 50, 65, 0, 109, 77, 51, 2, 3, 0, 0, 174, 52, 2, 3, 0, 0, 175, 0, 96, 15, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 119, 145, 121, 198, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 87, 146, 89, 199, 32, 96, 34, 15, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 119, 166, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 87, 167, 89, 243, 32, 34, 35, 15, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 119, 155, 121, 228, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 87, 157, 89, 229, 32, 35, 39, 15, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 119, 134, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 87, 143, 89, 237, 32, 39, 238, 19, 98, 242, 99, 189, 100, 208, 102, 159, 103, 158, 109, 172, 112, 168, 115, 244, 116, 231, 66, 169, 67, 184, 68, 209, 70, 190, 71, 246, 77, 251, 80, 173, 83, 225, 84, 232, 32, 238, 0, 2, 2, 7, 0, 0, 160, 3, 1, 3, 0, 200, 5, 2, 7, 0, 0, 160, 7, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 13, 16, 0, 0, 18, 67, 0, 101, 69, 130, 144, 22, 67, 0, 117, 85, 237, 236, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 1, 3, 0, 201, 30, 65, 0, 97, 65, 31, 65, 0, 115, 83, 34, 67, 0, 103, 71, 229, 228, 35, 67, 0, 104, 72, 232, 231, 36, 65, 0, 106, 74, 40, 2, 7, 0, 0, 202, 41, 1, 1, 0, 124, 44, 67, 3, 0, 0, 190, 189, 46, 67, 0, 99, 67, 145, 146, 49, 66, 3, 0, 0, 243, 0, 34, 5, 101, 137, 105, 139, 69, 211, 73, 216, 32, 34, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 19, 99, 134, 101, 136, 103, 155, 104, 169, 105, 140, 106, 159, 111, 147, 115, 199, 117, 150, 67, 143, 69, 210, 71, 157, 72, 168, 73, 215, 74, 172, 79, 226, 83, 198, 85, 234, 32, 94, 0, 2, 2, 7, 0, 0, 160, 3, 2, 7, 0, 0, 160, 4, 2, 7, 0, 160, 160, 5, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 7, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 13, 1, 3, 200, 160, 18, 66, 0, 101, 69, 170, 24, 65, 0, 111, 79, 30, 65, 0, 97, 65, 31, 65, 0, 115, 83, 38, 65, 0, 108, 76, 41, 1, 3, 0, 160, 44, 65, 0, 122, 90, 45, 65, 0, 120, 88, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 50, 66, 7, 0, 0, 160, 0, 96, 19, 97, 165, 99, 134, 101, 169, 108, 136, 110, 228, 111, 162, 115, 152, 120, 171, 122, 190, 65, 164, 67, 143, 69, 168, 76, 157, 78, 227, 79, 224, 83, 151, 88, 141, 90, 189, 32, 96, 0, 136, 166, 2, 9, 0, 0, 85, 83, 44, 103, 0, 85, 83, 8, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 90, 3, 130, 0, 0, 0, 0, 0, 91, 3, 219, 1, 55, 2, 0, 0, 85, 3, 143, 0, 206, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 181, 1, 0, 0, 0, 0, 0, 0, 69, 117, 3, 1, 8, 1, 0, 0, 71, 117, 33, 1, 102, 1, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 18, 65, 0, 101, 69, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 30, 65, 0, 97, 65, 57, 0, 0, 32, 0, 6, 2, 3, 0, 0, 213, 18, 2, 3, 0, 0, 213, 0, 7, 1, 3, 0, 200, 18, 3, 3, 0, 0, 130, 144, 22, 3, 3, 0, 0, 237, 236, 31, 65, 0, 115, 83, 34, 65, 0, 103, 71, 35, 65, 0, 104, 72, 36, 65, 0, 106, 74, 40, 1, 3, 0, 201, 41, 3, 3, 0, 0, 138, 212, 46, 65, 0, 99, 67, 49, 2, 3, 0, 0, 243, 0, 94, 19, 99, 134, 103, 155, 104, 169, 106, 159, 115, 199, 101, 136, 105, 140, 111, 147, 117, 150, 67, 143, 71, 157, 72, 168, 74, 172, 83, 198, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 34, 5, 101, 137, 105, 139, 69, 211, 73, 216, 32, 34, 0, 41, 0, 1, 200, 0, 96, 11, 97, 238, 101, 208, 105, 246, 111, 250, 117, 252, 65, 239, 69, 209, 73, 247, 79, 251, 85, 253, 32, 96, 0, 7, 1, 3, 0, 202, 18, 2, 3, 0, 0, 213, 20, 65, 0, 116, 84, 24, 3, 3, 0, 0, 171, 172, 30, 3, 3, 0, 0, 145, 146, 31, 65, 0, 115, 83, 32, 65, 0, 100, 68, 38, 65, 0, 108, 76, 40, 1, 3, 203, 204, 41, 1, 3, 200, 201, 46, 3, 3, 0, 0, 135, 128, 49, 66, 0, 110, 78, 242, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 3, 110, 189, 78, 190, 32, 126, 94, 21, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 115, 249, 100, 208, 108, 155, 110, 158, 116, 231, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 83, 221, 68, 209, 76, 157, 78, 159, 84, 232, 32, 94, 39, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 32, 39, 34, 7, 101, 137, 105, 139, 111, 148, 69, 211, 73, 216, 79, 153, 32, 34, 0, 2, 2, 3, 0, 0, 173, 6, 2, 3, 0, 0, 213, 7, 1, 3, 0, 200, 18, 3, 3, 0, 0, 145, 146, 21, 65, 0, 121, 89, 24, 3, 3, 0, 0, 171, 172, 30, 3, 3, 0, 0, 134, 143, 31, 2, 3, 0, 0, 225, 40, 1, 3, 201, 202, 41, 1, 3, 203, 204, 46, 3, 3, 0, 0, 135, 128, 49, 67, 0, 110, 78, 164, 165, 51, 2, 3, 0, 0, 174, 52, 2, 3, 0, 0, 175, 53, 2, 3, 0, 0, 168, 0, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 11, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 96, 7, 97, 133, 101, 138, 117, 151, 65, 183, 69, 212, 85, 235, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 0, 60, 240, 3, 39, 0, 0, 89, 85, 44, 0, 0, 66, 65, 44, 0, 0, 72, 82, 44, 0, 0, 83, 73, 44, 234, 0, 89, 85, 44, 234, 0, 66, 65, 44, 234, 0, 72, 82, 44, 234, 0, 83, 73, 5, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 84, 3, 242, 1, 121, 2, 0, 0, 113, 0, 61, 1, 147, 1, 0, 0, 90, 3, 58, 3, 65, 3, 0, 0, 82, 3, 0, 0, 65, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 7, 0, 0, 200, 3, 1, 1, 0, 34, 4, 3, 7, 0, 0, 201, 30, 6, 2, 7, 0, 0, 202, 7, 1, 1, 0, 38, 8, 2, 5, 0, 47, 203, 9, 2, 1, 0, 40, 250, 10, 2, 5, 0, 41, 204, 11, 1, 1, 0, 61, 12, 2, 4, 39, 63, 205, 13, 2, 4, 43, 42, 206, 16, 66, 3, 0, 0, 92, 17, 66, 3, 0, 0, 124, 18, 65, 0, 101, 69, 21, 196, 0, 122, 44, 90, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 66, 3, 160, 160, 246, 27, 66, 3, 160, 160, 158, 30, 65, 0, 97, 65, 33, 66, 3, 0, 0, 91, 34, 66, 3, 0, 0, 93, 39, 67, 7, 160, 160, 0, 29, 40, 66, 3, 160, 160, 225, 41, 1, 3, 206, 205, 43, 66, 3, 160, 160, 207, 44, 196, 0, 121, 21, 89, 21, 0, 21, 25, 21, 0, 21, 46, 65, 0, 99, 67, 47, 66, 3, 0, 0, 64, 48, 66, 3, 0, 0, 123, 49, 66, 0, 110, 78, 125, 50, 66, 3, 0, 0, 245, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 3, 4, 45, 95, 0, 31, 57, 0, 0, 32, 86, 1, 0, 60, 62, 0, 2, 2, 3, 0, 0, 126, 3, 2, 7, 0, 0, 200, 6, 2, 3, 0, 0, 248, 8, 2, 7, 0, 0, 202, 10, 2, 7, 0, 0, 203, 12, 2, 7, 0, 0, 204, 13, 2, 7, 0, 0, 205, 26, 65, 0, 164, 165, 27, 66, 4, 155, 157, 160, 31, 65, 0, 115, 83, 39, 65, 0, 145, 146, 40, 65, 0, 134, 143, 41, 1, 3, 205, 204, 43, 66, 4, 166, 167, 160, 50, 66, 3, 0, 0, 21, 0, 118, 7, 99, 145, 115, 164, 122, 166, 67, 146, 83, 165, 90, 167, 32, 118, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 39, 9, 97, 160, 99, 134, 101, 130, 105, 161, 111, 162, 117, 163, 67, 143, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 44, 3, 99, 135, 67, 128, 32, 44, 0, 2, 2, 3, 0, 0, 126, 3, 2, 7, 0, 0, 200, 5, 2, 7, 0, 0, 202, 6, 2, 7, 0, 0, 203, 7, 2, 7, 0, 0, 204, 8, 2, 3, 0, 0, 96, 9, 2, 7, 0, 0, 205, 10, 2, 7, 0, 0, 206, 11, 2, 7, 0, 0, 207, 12, 2, 7, 0, 0, 208, 13, 2, 7, 0, 0, 209, 18, 66, 3, 0, 0, 170, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 26, 65, 0, 231, 230, 27, 65, 0, 208, 209, 31, 65, 0, 115, 83, 32, 65, 0, 100, 68, 37, 66, 3, 0, 0, 136, 38, 66, 0, 108, 76, 157, 39, 65, 0, 159, 172, 40, 65, 0, 134, 143, 41, 1, 3, 209, 208, 43, 65, 0, 167, 166, 0, 243, 19, 99, 159, 100, 212, 101, 216, 108, 150, 110, 229, 114, 253, 115, 231, 116, 156, 122, 167, 67, 172, 68, 210, 69, 183, 76, 149, 78, 213, 82, 252, 83, 230, 84, 155, 90, 166, 32, 243, 94, 7, 97, 131, 105, 140, 111, 147, 65, 182, 73, 215, 79, 226, 32, 94, 244, 3, 97, 199, 65, 198, 32, 244, 248, 3, 117, 133, 85, 222, 32, 248, 242, 5, 97, 165, 101, 169, 65, 164, 69, 168, 32, 242, 250, 3, 122, 190, 90, 189, 32, 250, 239, 25, 97, 160, 99, 134, 101, 130, 105, 161, 108, 146, 110, 228, 111, 162, 114, 234, 115, 152, 117, 163, 121, 236, 122, 171, 65, 181, 67, 143, 69, 144, 73, 214, 76, 145, 78, 227, 79, 224, 82, 232, 83, 151, 85, 233, 89, 237, 90, 141, 32, 239, 241, 5, 111, 139, 117, 251, 79, 138, 85, 235, 32, 241, 249, 9, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 69, 211, 79, 153, 85, 154, 32, 249, 247, 7, 99, 135, 115, 173, 116, 238, 67, 128, 83, 184, 84, 221, 32, 247, 0, 18, 66, 3, 0, 0, 213, 0, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 248, 3, 97, 134, 65, 143, 32, 248, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 247, 3, 99, 135, 67, 128, 32, 247, 0, 173, 0, 0, 0, 0, 0, 0, 75, 67, 70, 0, 1, 1, 46, 72, 101, 110, 114, 105, 113, 117, 101, 32, 80, 101, 114, 111, 110, 255, 68, 79, 83, 32, 99, 111, 100, 101, 112, 97, 103, 101, 115, 32, 45, 32, 108, 105, 98, 114, 97, 114, 121, 32, 35, 50, 32, 111, 102, 32, 51, 170, 2, 9, 0, 0, 66, 71, 44, 186, 1, 66, 71, 7, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 104, 3, 153, 1, 0, 0, 0, 0, 104, 3, 174, 0, 0, 0, 0, 0, 87, 3, 151, 2, 0, 0, 0, 0, 87, 3, 174, 1, 0, 0, 0, 0, 90, 3, 167, 0, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 4, 2, 3, 0, 0, 35, 5, 2, 3, 0, 0, 207, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 38, 9, 2, 3, 0, 0, 36, 26, 2, 3, 0, 0, 91, 27, 2, 3, 0, 0, 93, 43, 2, 3, 0, 0, 124, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 0, 18, 66, 3, 0, 0, 213, 0, 3, 1, 1, 0, 63, 4, 1, 1, 0, 43, 5, 2, 5, 0, 34, 160, 7, 1, 1, 0, 61, 8, 1, 1, 0, 58, 9, 1, 1, 0, 47, 10, 3, 5, 0, 95, 0, 31, 11, 1, 1, 0, 239, 12, 1, 1, 0, 73, 13, 1, 0, 46, 86, 16, 1, 0, 44, 242, 17, 65, 0, 231, 232, 18, 66, 0, 168, 169, 207, 19, 65, 0, 183, 184, 20, 65, 0, 245, 246, 21, 65, 0, 249, 250, 22, 65, 0, 198, 199, 23, 65, 0, 227, 228, 24, 65, 0, 166, 167, 25, 65, 0, 243, 244, 26, 65, 0, 164, 165, 27, 1, 0, 59, 253, 30, 65, 0, 237, 238, 31, 193, 0, 222, 31, 224, 0, 32, 65, 0, 160, 161, 33, 65, 0, 214, 215, 34, 65, 0, 233, 234, 35, 65, 0, 172, 173, 36, 65, 0, 229, 230, 37, 65, 0, 212, 213, 38, 65, 0, 235, 236, 39, 65, 0, 210, 211, 40, 65, 0, 251, 252, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 0, 41, 40, 44, 65, 0, 156, 157, 45, 65, 0, 189, 190, 46, 65, 0, 158, 159, 47, 65, 0, 247, 248, 48, 65, 0, 170, 171, 49, 65, 0, 181, 182, 50, 65, 0, 216, 221, 51, 65, 0, 225, 226, 52, 65, 0, 208, 209, 53, 65, 0, 162, 163, 0, 5, 2, 7, 0, 0, 160, 18, 66, 3, 0, 0, 207, 54, 4, 31, 0, 0, 0, 0, 121, 0, 3, 1, 1, 0, 63, 4, 1, 1, 0, 43, 5, 1, 1, 0, 34, 7, 1, 1, 0, 61, 8, 1, 1, 0, 58, 9, 1, 1, 0, 47, 10, 3, 5, 0, 95, 0, 31, 11, 1, 1, 0, 239, 12, 1, 1, 0, 73, 13, 1, 0, 46, 86, 16, 1, 0, 44, 242, 17, 65, 0, 231, 232, 18, 65, 0, 168, 169, 19, 65, 0, 183, 184, 20, 65, 0, 245, 246, 21, 65, 0, 249, 250, 22, 65, 0, 198, 199, 23, 65, 0, 227, 228, 24, 65, 0, 166, 167, 25, 65, 0, 243, 244, 26, 65, 0, 164, 165, 27, 1, 0, 59, 253, 30, 65, 0, 237, 238, 31, 193, 0, 222, 31, 224, 0, 32, 65, 0, 160, 161, 33, 65, 0, 214, 215, 34, 65, 0, 233, 234, 35, 65, 0, 172, 173, 36, 65, 0, 229, 230, 37, 65, 0, 212, 213, 38, 65, 0, 235, 236, 39, 65, 0, 210, 211, 40, 65, 0, 251, 252, 42, 4, 31, 0, 0, 0, 0, 122, 43, 1, 0, 41, 40, 44, 65, 0, 156, 157, 45, 65, 0, 189, 190, 46, 65, 0, 158, 159, 47, 65, 0, 247, 248, 48, 65, 0, 170, 171, 49, 65, 0, 181, 182, 50, 65, 0, 216, 221, 51, 65, 0, 225, 226, 52, 65, 0, 208, 209, 53, 65, 0, 162, 163, 0, 54, 4, 31, 0, 0, 0, 0, 123, 0, 36, 114, 6, 4, 241, 0, 66, 71, 7, 4, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 104, 3, 97, 4, 0, 0, 0, 0, 104, 3, 120, 2, 0, 0, 0, 0, 87, 3, 99, 6, 0, 0, 0, 0, 87, 3, 126, 4, 0, 0, 0, 0, 90, 3, 104, 2, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 33, 49, 3, 1, 0, 34, 50, 4, 1, 0, 35, 51, 5, 1, 0, 207, 52, 6, 1, 0, 37, 53, 7, 1, 0, 38, 54, 8, 1, 0, 39, 55, 9, 1, 0, 40, 56, 10, 1, 0, 41, 57, 11, 1, 0, 36, 48, 12, 1, 0, 61, 45, 13, 2, 0, 95, 95, 31, 16, 197, 0, 106, 36, 74, 36, 10, 36, 0, 36, 0, 36, 0, 36, 17, 197, 0, 99, 46, 67, 46, 3, 46, 0, 46, 0, 46, 0, 46, 18, 197, 0, 117, 22, 85, 22, 21, 22, 0, 22, 0, 22, 0, 22, 19, 197, 0, 107, 37, 75, 37, 11, 37, 0, 37, 0, 37, 0, 37, 20, 197, 0, 101, 18, 69, 18, 5, 18, 0, 18, 0, 18, 0, 18, 21, 197, 0, 110, 49, 78, 49, 14, 49, 0, 49, 0, 49, 0, 49, 22, 197, 0, 103, 34, 71, 34, 7, 34, 0, 34, 0, 34, 0, 34, 23, 2, 0, 91, 91, 27, 24, 2, 0, 93, 93, 29, 25, 197, 0, 122, 44, 90, 44, 26, 44, 0, 44, 0, 44, 0, 44, 26, 197, 0, 104, 35, 72, 35, 8, 35, 0, 35, 0, 35, 0, 35, 27, 4, 4, 125, 123, 0, 42, 58, 30, 197, 0, 102, 33, 70, 33, 6, 33, 0, 33, 0, 33, 0, 33, 31, 197, 0, 121, 21, 89, 21, 25, 21, 0, 21, 0, 21, 0, 21, 32, 197, 0, 119, 17, 87, 17, 23, 17, 0, 17, 0, 17, 0, 17, 33, 197, 0, 97, 30, 65, 30, 1, 30, 0, 30, 0, 30, 0, 30, 34, 197, 0, 112, 25, 80, 25, 16, 25, 0, 25, 0, 25, 0, 25, 35, 197, 0, 114, 19, 82, 19, 18, 19, 0, 19, 0, 19, 0, 19, 36, 197, 0, 111, 24, 79, 24, 15, 24, 0, 24, 0, 24, 0, 24, 37, 197, 0, 108, 38, 76, 38, 12, 38, 0, 38, 0, 38, 0, 38, 38, 197, 0, 100, 32, 68, 32, 4, 32, 0, 32, 0, 32, 0, 32, 39, 197, 0, 118, 47, 86, 47, 22, 47, 0, 47, 0, 47, 0, 47, 40, 2, 0, 92, 124, 28, 41, 1, 0, 43, 59, 43, 1, 0, 62, 46, 44, 2, 0, 64, 94, 30, 45, 197, 0, 115, 31, 83, 31, 19, 31, 0, 31, 0, 31, 0, 31, 46, 197, 0, 109, 50, 77, 50, 13, 50, 0, 50, 0, 50, 0, 50, 47, 197, 0, 105, 23, 73, 23, 9, 23, 0, 23, 0, 23, 0, 23, 48, 197, 0, 116, 20, 84, 20, 20, 20, 0, 20, 0, 20, 0, 20, 49, 197, 0, 120, 45, 88, 45, 24, 45, 0, 45, 0, 45, 0, 45, 50, 197, 0, 98, 48, 66, 48, 2, 48, 0, 48, 0, 48, 0, 48, 51, 16, 0, 0, 52, 1, 0, 60, 44, 53, 1, 0, 63, 47, 86, 197, 0, 113, 16, 81, 16, 17, 16, 0, 16, 0, 16, 0, 16, 0, 20, 197, 0, 101, 18, 69, 18, 5, 18, 213, 18, 0, 18, 0, 18, 0, 5, 0, 1, 160, 13, 67, 4, 158, 159, 0, 95, 16, 197, 0, 189, 36, 190, 36, 10, 36, 0, 36, 0, 36, 0, 36, 17, 197, 0, 164, 46, 165, 46, 3, 46, 0, 46, 0, 46, 0, 46, 18, 197, 0, 231, 22, 232, 22, 21, 22, 0, 22, 0, 22, 0, 22, 19, 197, 0, 198, 37, 199, 37, 11, 37, 0, 37, 0, 37, 0, 37, 20, 197, 0, 168, 18, 169, 18, 5, 18, 207, 18, 0, 18, 0, 18, 21, 197, 0, 212, 49, 213, 49, 14, 49, 0, 49, 0, 49, 0, 49, 22, 197, 0, 172, 34, 173, 34, 7, 34, 0, 34, 0, 34, 0, 34, 23, 67, 4, 245, 246, 0, 91, 24, 67, 4, 249, 250, 0, 93, 25, 197, 0, 243, 44, 244, 44, 26, 44, 0, 44, 0, 44, 0, 44, 26, 197, 0, 181, 35, 182, 35, 8, 35, 0, 35, 0, 35, 0, 35, 27, 4, 4, 42, 58, 0, 125, 123, 30, 197, 0, 170, 33, 171, 33, 6, 33, 0, 33, 0, 33, 0, 33, 31, 197, 0, 241, 21, 242, 21, 25, 21, 0, 21, 0, 21, 0, 21, 32, 197, 0, 235, 17, 236, 17, 23, 17, 0, 17, 0, 17, 0, 17, 33, 197, 0, 160, 30, 161, 30, 1, 30, 0, 30, 0, 30, 0, 30, 34, 197, 0, 216, 25, 221, 25, 16, 25, 0, 25, 0, 25, 0, 25, 35, 197, 0, 225, 19, 226, 19, 18, 19, 0, 19, 0, 19, 0, 19, 36, 197, 0, 214, 24, 215, 24, 15, 24, 0, 24, 0, 24, 0, 24, 37, 197, 0, 208, 38, 209, 38, 12, 38, 0, 38, 0, 38, 0, 38, 38, 197, 0, 166, 32, 167, 32, 4, 32, 0, 32, 0, 32, 0, 32, 39, 197, 0, 233, 47, 234, 47, 22, 47, 0, 47, 0, 47, 0, 47, 40, 68, 4, 247, 248, 0, 92, 124, 41, 4, 7, 0, 0, 0, 152, 153, 42, 5, 63, 0, 0, 0, 0, 0, 120, 43, 4, 7, 0, 0, 0, 132, 133, 44, 68, 4, 251, 252, 0, 64, 94, 45, 197, 0, 227, 31, 228, 31, 19, 31, 0, 31, 0, 31, 0, 31, 46, 197, 0, 210, 50, 211, 50, 13, 50, 0, 50, 0, 50, 0, 50, 47, 197, 0, 183, 23, 184, 23, 9, 23, 0, 23, 0, 23, 0, 23, 48, 197, 0, 229, 20, 230, 20, 20, 20, 0, 20, 0, 20, 0, 20, 49, 197, 0, 237, 45, 238, 45, 24, 45, 0, 45, 0, 45, 0, 45, 50, 197, 0, 162, 48, 163, 48, 2, 48, 0, 48, 0, 48, 0, 48, 51, 68, 4, 156, 157, 0, 134, 135, 52, 4, 7, 0, 0, 0, 138, 139, 53, 4, 7, 0, 0, 0, 140, 141, 86, 197, 0, 222, 16, 224, 0, 17, 16, 0, 16, 0, 16, 0, 16, 0, 5, 0, 1, 160, 20, 197, 0, 101, 18, 69, 18, 5, 18, 207, 18, 0, 18, 0, 18, 54, 5, 63, 0, 0, 0, 0, 0, 121, 0, 13, 67, 4, 158, 159, 0, 95, 16, 197, 0, 189, 36, 190, 36, 10, 36, 0, 36, 0, 36, 0, 36, 17, 197, 0, 164, 46, 165, 46, 3, 46, 0, 46, 0, 46, 0, 46, 18, 197, 0, 231, 22, 232, 22, 21, 22, 0, 22, 0, 22, 0, 22, 19, 197, 0, 198, 37, 199, 37, 11, 37, 0, 37, 0, 37, 0, 37, 20, 197, 0, 168, 18, 169, 18, 5, 18, 0, 18, 0, 18, 0, 18, 21, 197, 0, 212, 49, 213, 49, 14, 49, 0, 49, 0, 49, 0, 49, 22, 197, 0, 172, 34, 173, 34, 7, 34, 0, 34, 0, 34, 0, 34, 23, 67, 4, 245, 246, 0, 91, 24, 67, 4, 249, 250, 0, 93, 25, 197, 0, 243, 44, 244, 44, 26, 44, 0, 44, 0, 44, 0, 44, 26, 197, 0, 181, 35, 182, 35, 8, 35, 0, 35, 0, 35, 0, 35, 27, 4, 4, 42, 58, 0, 125, 123, 30, 197, 0, 170, 33, 171, 33, 6, 33, 0, 33, 0, 33, 0, 33, 31, 197, 0, 241, 21, 242, 21, 25, 21, 0, 21, 0, 21, 0, 21, 32, 197, 0, 235, 17, 236, 17, 23, 17, 0, 17, 0, 17, 0, 17, 33, 197, 0, 160, 30, 161, 30, 1, 30, 0, 30, 0, 30, 0, 30, 34, 197, 0, 216, 25, 221, 25, 16, 25, 0, 25, 0, 25, 0, 25, 35, 197, 0, 225, 19, 226, 19, 18, 19, 0, 19, 0, 19, 0, 19, 36, 197, 0, 214, 24, 215, 24, 15, 24, 0, 24, 0, 24, 0, 24, 37, 197, 0, 208, 38, 209, 38, 12, 38, 0, 38, 0, 38, 0, 38, 38, 197, 0, 166, 32, 167, 32, 4, 32, 0, 32, 0, 32, 0, 32, 39, 197, 0, 233, 47, 234, 47, 22, 47, 0, 47, 0, 47, 0, 47, 40, 68, 4, 247, 248, 0, 92, 124, 41, 4, 7, 0, 0, 0, 152, 153, 42, 5, 63, 0, 0, 0, 0, 0, 122, 43, 4, 7, 0, 0, 0, 132, 133, 44, 68, 4, 251, 252, 0, 64, 94, 45, 197, 0, 227, 31, 228, 31, 19, 31, 0, 31, 0, 31, 0, 31, 46, 197, 0, 210, 50, 211, 50, 13, 50, 0, 50, 0, 50, 0, 50, 47, 197, 0, 183, 23, 184, 23, 9, 23, 0, 23, 0, 23, 0, 23, 48, 197, 0, 229, 20, 230, 20, 20, 20, 0, 20, 0, 20, 0, 20, 49, 197, 0, 237, 45, 238, 45, 24, 45, 0, 45, 0, 45, 0, 45, 50, 197, 0, 162, 48, 163, 48, 2, 48, 0, 48, 0, 48, 0, 48, 51, 68, 4, 156, 157, 0, 134, 135, 52, 4, 7, 0, 0, 0, 138, 139, 53, 4, 7, 0, 0, 0, 140, 141, 86, 197, 0, 222, 16, 224, 0, 17, 16, 0, 16, 0, 16, 0, 16, 0, 54, 5, 63, 0, 0, 0, 0, 0, 123, 0, 18, 231, 2, 9, 0, 0, 67, 69, 44, 185, 1, 67, 69, 5, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 67, 117, 114, 1, 226, 1, 0, 0, 67, 117, 151, 0, 0, 0, 0, 0, 59, 117, 206, 2, 0, 0, 0, 0, 59, 117, 243, 1, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 4, 2, 3, 0, 0, 35, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 38, 9, 2, 3, 0, 0, 36, 13, 2, 3, 0, 0, 61, 26, 2, 3, 0, 0, 91, 27, 2, 3, 0, 0, 93, 43, 2, 3, 0, 0, 124, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 1, 1, 0, 59, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 13, 1, 0, 254, 43, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 5, 2, 3, 0, 0, 253, 16, 67, 3, 0, 0, 214, 213, 18, 67, 3, 0, 0, 190, 189, 22, 65, 0, 117, 85, 24, 67, 0, 111, 79, 222, 221, 26, 67, 0, 249, 248, 91, 123, 27, 67, 0, 210, 209, 93, 125, 30, 67, 0, 97, 65, 199, 198, 31, 67, 3, 0, 0, 251, 250, 34, 67, 3, 0, 0, 182, 181, 41, 0, 1, 200, 44, 67, 3, 0, 0, 216, 215, 45, 67, 3, 0, 0, 212, 211, 46, 67, 3, 0, 0, 208, 207, 49, 67, 3, 0, 0, 184, 183, 54, 4, 31, 0, 0, 0, 0, 121, 57, 0, 0, 32, 0, 96, 7, 97, 243, 111, 245, 117, 247, 65, 242, 79, 244, 85, 246, 32, 96, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 1, 1, 0, 59, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 13, 1, 0, 254, 43, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 122, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 123, 0, 194, 25, 3, 4, 187, 1, 67, 69, 5, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 67, 117, 138, 1, 250, 1, 0, 0, 67, 117, 145, 0, 0, 0, 0, 0, 59, 117, 5, 3, 0, 0, 0, 0, 59, 117, 11, 2, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 4, 2, 3, 0, 0, 35, 5, 2, 3, 0, 0, 36, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 38, 9, 2, 3, 0, 0, 42, 26, 2, 3, 0, 0, 91, 27, 2, 3, 0, 0, 93, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 193, 0, 241, 53, 240, 0, 0, 5, 2, 3, 0, 0, 253, 16, 67, 3, 0, 0, 214, 213, 18, 67, 3, 0, 0, 190, 189, 22, 65, 0, 117, 85, 24, 67, 0, 111, 79, 222, 221, 26, 67, 0, 249, 248, 91, 123, 27, 67, 0, 210, 209, 93, 125, 30, 67, 0, 97, 65, 199, 198, 31, 67, 3, 0, 0, 251, 250, 34, 67, 3, 0, 0, 182, 181, 41, 0, 1, 200, 44, 67, 3, 0, 0, 216, 215, 45, 67, 3, 0, 0, 212, 211, 46, 67, 3, 0, 0, 208, 207, 49, 67, 3, 0, 0, 184, 183, 54, 4, 31, 0, 0, 0, 0, 121, 57, 0, 0, 32, 0, 96, 7, 97, 243, 111, 245, 117, 247, 65, 242, 79, 244, 85, 246, 32, 96, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 2, 0, 254, 43, 124, 42, 4, 31, 0, 0, 0, 0, 122, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 193, 0, 241, 53, 240, 0, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 123, 0, 200, 88, 4, 19, 0, 0, 71, 75, 44, 0, 0, 69, 76, 44, 63, 1, 71, 75, 44, 63, 1, 69, 76, 9, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 101, 3, 58, 2, 0, 0, 0, 0, 101, 3, 121, 1, 73, 2, 0, 0, 225, 2, 36, 3, 0, 0, 0, 0, 225, 2, 126, 2, 45, 3, 0, 0, 83, 3, 10, 4, 0, 0, 0, 0, 83, 3, 90, 3, 19, 4, 0, 0, 90, 3, 247, 0, 254, 0, 0, 0, 82, 3, 0, 0, 254, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 34, 7, 1, 1, 0, 38, 8, 1, 1, 0, 47, 9, 1, 1, 0, 40, 10, 1, 1, 0, 41, 11, 1, 1, 0, 61, 12, 1, 0, 39, 63, 13, 1, 0, 43, 42, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 30, 65, 0, 97, 65, 39, 1, 3, 203, 204, 40, 1, 3, 202, 201, 41, 3, 4, 92, 124, 0, 28, 43, 1, 1, 200, 64, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 51, 2, 0, 44, 59, 60, 52, 2, 0, 46, 58, 62, 53, 3, 4, 45, 95, 0, 31, 57, 0, 0, 32, 86, 1, 0, 60, 62, 0, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 4, 1, 1, 0, 156, 7, 1, 1, 0, 137, 12, 1, 1, 0, 248, 16, 1, 0, 136, 142, 17, 1, 0, 237, 138, 18, 66, 0, 222, 168, 135, 19, 65, 0, 235, 199, 20, 65, 0, 238, 208, 21, 65, 0, 242, 209, 22, 65, 0, 226, 172, 23, 65, 0, 227, 173, 24, 65, 0, 233, 190, 25, 65, 0, 234, 198, 26, 1, 1, 0, 174, 27, 1, 1, 0, 175, 30, 65, 0, 214, 164, 31, 65, 0, 236, 207, 32, 65, 0, 221, 167, 33, 65, 0, 243, 210, 34, 65, 0, 216, 166, 35, 65, 0, 225, 170, 36, 65, 0, 232, 189, 37, 65, 0, 228, 181, 38, 65, 0, 229, 182, 39, 2, 7, 200, 201, 202, 40, 1, 0, 140, 139, 41, 1, 0, 171, 241, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 0, 153, 154, 44, 193, 0, 224, 0, 169, 44, 45, 65, 0, 244, 211, 46, 65, 0, 246, 212, 47, 65, 0, 250, 213, 48, 65, 0, 215, 165, 49, 65, 0, 231, 184, 50, 65, 0, 230, 183, 86, 1, 0, 245, 151, 0, 18, 66, 3, 0, 0, 135, 54, 4, 31, 0, 0, 0, 0, 121, 0, 239, 15, 214, 155, 222, 157, 225, 158, 227, 159, 233, 162, 242, 163, 250, 253, 164, 134, 168, 141, 170, 143, 173, 144, 190, 146, 209, 149, 213, 152, 32, 239, 249, 5, 227, 160, 242, 251, 173, 145, 209, 150, 32, 249, 247, 3, 227, 161, 242, 252, 32, 247, 0, 12, 1, 1, 0, 248, 16, 1, 0, 249, 81, 17, 1, 0, 170, 87, 18, 65, 0, 156, 132, 19, 65, 0, 168, 144, 20, 65, 0, 171, 146, 21, 65, 0, 172, 147, 22, 65, 0, 159, 135, 23, 65, 0, 160, 136, 24, 65, 0, 166, 142, 25, 65, 0, 167, 143, 30, 65, 0, 152, 128, 31, 65, 0, 169, 145, 32, 65, 0, 155, 131, 33, 65, 0, 173, 148, 34, 65, 0, 154, 130, 35, 65, 0, 158, 134, 36, 65, 0, 165, 141, 37, 65, 0, 161, 137, 38, 65, 0, 162, 138, 39, 1, 3, 200, 201, 41, 1, 0, 96, 241, 42, 4, 31, 0, 0, 0, 0, 122, 43, 1, 0, 253, 124, 44, 65, 0, 157, 133, 45, 65, 0, 174, 149, 46, 65, 0, 175, 150, 47, 193, 0, 224, 0, 151, 47, 48, 65, 0, 153, 129, 49, 65, 0, 164, 140, 50, 65, 0, 163, 139, 86, 1, 0, 21, 124, 0, 54, 4, 31, 0, 0, 0, 0, 123, 0, 39, 15, 152, 225, 156, 226, 158, 227, 160, 229, 166, 230, 172, 231, 224, 233, 128, 234, 132, 235, 134, 236, 136, 237, 142, 238, 147, 239, 151, 240, 32, 39, 34, 5, 160, 228, 172, 232, 136, 244, 147, 245, 32, 34, 0, 12, 1, 1, 0, 248, 16, 16, 0, 0, 17, 1, 0, 237, 124, 18, 65, 0, 222, 168, 19, 65, 0, 235, 199, 20, 65, 0, 238, 208, 21, 65, 0, 242, 209, 22, 65, 0, 226, 172, 23, 65, 0, 227, 173, 24, 65, 0, 233, 190, 25, 65, 0, 234, 198, 26, 1, 1, 0, 174, 27, 1, 1, 0, 175, 30, 65, 0, 214, 164, 31, 65, 0, 236, 207, 32, 65, 0, 221, 167, 33, 65, 0, 243, 210, 34, 65, 0, 216, 166, 35, 65, 0, 225, 170, 36, 65, 0, 232, 189, 37, 65, 0, 228, 181, 38, 65, 0, 229, 182, 39, 2, 7, 200, 201, 202, 41, 1, 0, 171, 241, 42, 4, 31, 0, 0, 0, 0, 124, 43, 1, 0, 92, 124, 44, 193, 0, 224, 0, 169, 44, 45, 65, 0, 244, 211, 46, 65, 0, 246, 212, 47, 65, 0, 250, 213, 48, 65, 0, 215, 165, 49, 65, 0, 231, 184, 50, 65, 0, 230, 183, 86, 1, 0, 245, 124, 0, 54, 4, 31, 0, 0, 0, 0, 125, 0, 239, 15, 214, 155, 222, 157, 225, 158, 227, 159, 233, 162, 242, 163, 250, 253, 164, 134, 168, 141, 170, 143, 173, 144, 190, 146, 209, 149, 213, 152, 32, 239, 249, 3, 227, 160, 242, 251, 32, 249, 39, 3, 227, 161, 242, 252, 32, 39, 0, 66, 190, 4, 9, 220, 0, 71, 75, 44, 220, 0, 69, 76, 9, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 101, 3, 221, 1, 0, 0, 0, 0, 101, 3, 251, 0, 52, 2, 0, 0, 225, 2, 58, 3, 0, 0, 0, 0, 225, 2, 105, 2, 121, 3, 0, 0, 83, 3, 92, 4, 0, 0, 0, 0, 83, 3, 166, 3, 131, 4, 0, 0, 90, 3, 244, 0, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 253, 4, 2, 1, 0, 126, 252, 5, 2, 3, 0, 0, 156, 6, 2, 3, 0, 0, 245, 7, 2, 1, 0, 38, 20, 8, 1, 1, 0, 47, 9, 2, 1, 0, 40, 207, 10, 2, 1, 0, 41, 221, 11, 2, 1, 0, 61, 248, 12, 2, 0, 39, 63, 241, 13, 2, 0, 93, 91, 171, 26, 2, 0, 43, 42, 174, 27, 2, 0, 125, 123, 175, 39, 1, 0, 39, 96, 40, 16, 0, 0, 41, 3, 4, 92, 124, 0, 28, 43, 2, 0, 35, 64, 170, 51, 2, 0, 44, 59, 60, 52, 2, 0, 46, 58, 62, 53, 3, 4, 45, 95, 0, 31, 57, 0, 0, 32, 86, 1, 0, 60, 62, 0, 18, 66, 3, 0, 0, 213, 0, 3, 2, 3, 0, 0, 153, 4, 2, 1, 0, 156, 154, 5, 2, 3, 0, 0, 156, 6, 2, 3, 0, 0, 245, 7, 2, 3, 0, 0, 20, 9, 2, 7, 0, 0, 160, 10, 2, 3, 0, 0, 138, 11, 2, 3, 0, 0, 248, 12, 2, 3, 0, 0, 241, 13, 2, 3, 0, 0, 171, 16, 1, 0, 59, 58, 17, 1, 0, 237, 126, 18, 66, 0, 222, 168, 135, 19, 65, 0, 235, 199, 20, 65, 0, 238, 208, 21, 65, 0, 242, 209, 22, 65, 0, 226, 172, 23, 65, 0, 227, 173, 24, 65, 0, 233, 190, 25, 65, 0, 234, 198, 30, 65, 0, 214, 164, 31, 65, 0, 236, 207, 32, 65, 0, 221, 167, 33, 65, 0, 243, 210, 34, 65, 0, 216, 166, 35, 65, 0, 225, 170, 36, 65, 0, 232, 189, 37, 65, 0, 228, 181, 38, 65, 0, 229, 182, 39, 2, 7, 200, 201, 202, 40, 2, 7, 201, 202, 202, 41, 1, 0, 171, 241, 42, 4, 31, 0, 0, 0, 0, 120, 43, 2, 3, 0, 0, 137, 44, 193, 0, 224, 0, 169, 44, 45, 65, 0, 244, 211, 46, 65, 0, 246, 212, 47, 66, 0, 250, 213, 151, 48, 65, 0, 215, 165, 49, 65, 0, 231, 184, 50, 65, 0, 230, 183, 0, 3, 2, 3, 0, 0, 153, 4, 2, 3, 0, 0, 154, 5, 2, 3, 0, 0, 156, 6, 2, 3, 0, 0, 245, 7, 2, 3, 0, 0, 20, 9, 2, 7, 0, 0, 160, 10, 2, 3, 0, 0, 138, 11, 2, 3, 0, 0, 248, 12, 2, 3, 0, 0, 241, 13, 2, 3, 0, 0, 171, 18, 66, 3, 0, 0, 135, 43, 2, 3, 0, 0, 137, 47, 66, 0, 250, 213, 151, 54, 4, 31, 0, 0, 0, 0, 121, 0, 239, 15, 214, 155, 222, 157, 225, 158, 227, 159, 233, 162, 242, 163, 250, 253, 164, 134, 168, 141, 170, 143, 173, 144, 190, 146, 209, 149, 213, 152, 32, 239, 249, 5, 227, 160, 242, 251, 173, 145, 209, 150, 32, 249, 247, 3, 227, 161, 242, 252, 32, 247, 0, 4, 2, 7, 0, 0, 160, 5, 2, 7, 0, 0, 160, 6, 2, 3, 0, 0, 21, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 16, 16, 0, 0, 17, 1, 0, 170, 126, 18, 65, 0, 156, 132, 19, 65, 0, 168, 144, 20, 65, 0, 171, 146, 21, 65, 0, 172, 147, 22, 65, 0, 159, 135, 23, 65, 0, 160, 136, 24, 65, 0, 166, 142, 25, 65, 0, 167, 143, 26, 2, 7, 0, 0, 160, 27, 2, 7, 0, 0, 160, 30, 65, 0, 152, 128, 31, 65, 0, 169, 145, 32, 65, 0, 155, 131, 33, 65, 0, 173, 148, 34, 65, 0, 154, 130, 35, 65, 0, 158, 134, 36, 65, 0, 165, 141, 37, 65, 0, 161, 137, 38, 65, 0, 162, 138, 39, 1, 3, 200, 201, 40, 1, 3, 201, 201, 41, 1, 0, 92, 241, 42, 4, 31, 0, 0, 0, 0, 122, 43, 2, 5, 0, 248, 160, 44, 65, 0, 157, 133, 45, 65, 0, 174, 149, 46, 65, 0, 175, 150, 47, 193, 0, 224, 0, 151, 47, 48, 65, 0, 153, 129, 49, 65, 0, 164, 140, 50, 65, 0, 163, 139, 0, 4, 2, 7, 0, 0, 160, 5, 2, 7, 0, 0, 160, 6, 2, 3, 0, 0, 21, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 26, 2, 7, 0, 0, 160, 27, 2, 7, 0, 0, 160, 43, 2, 7, 0, 0, 160, 54, 4, 31, 0, 0, 0, 0, 123, 0, 39, 15, 152, 225, 156, 226, 158, 227, 160, 229, 166, 230, 172, 231, 224, 233, 128, 234, 132, 235, 134, 236, 136, 237, 142, 238, 147, 239, 151, 240, 32, 39, 34, 5, 160, 228, 172, 232, 136, 244, 147, 245, 32, 34, 0, 3, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 16, 16, 0, 0, 17, 1, 2, 237, 160, 18, 65, 0, 222, 168, 19, 65, 0, 235, 199, 20, 65, 0, 238, 208, 21, 65, 0, 242, 209, 22, 65, 0, 226, 172, 23, 65, 0, 227, 173, 24, 65, 0, 233, 190, 25, 65, 0, 234, 198, 30, 65, 0, 214, 164, 31, 65, 0, 236, 207, 32, 65, 0, 221, 167, 33, 65, 0, 243, 210, 34, 65, 0, 216, 166, 35, 65, 0, 225, 170, 36, 65, 0, 232, 189, 37, 65, 0, 228, 181, 38, 65, 0, 229, 182, 39, 2, 7, 200, 201, 202, 40, 2, 7, 201, 202, 202, 42, 4, 31, 0, 0, 0, 0, 124, 43, 2, 7, 0, 0, 160, 44, 193, 0, 224, 0, 169, 44, 45, 65, 0, 244, 211, 46, 65, 0, 246, 212, 47, 65, 0, 250, 213, 48, 65, 0, 215, 165, 49, 65, 0, 231, 184, 50, 65, 0, 230, 183, 0, 3, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 43, 2, 7, 0, 0, 160, 54, 4, 31, 0, 0, 0, 0, 125, 0, 239, 15, 214, 155, 222, 157, 225, 158, 227, 159, 233, 162, 242, 163, 250, 253, 164, 134, 168, 141, 170, 143, 173, 144, 190, 146, 209, 149, 213, 152, 32, 239, 249, 3, 227, 160, 242, 251, 32, 249, 39, 3, 227, 161, 242, 252, 32, 39, 0, 112, 36, 6, 9, 203, 1, 71, 75, 44, 203, 1, 69, 76, 9, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 101, 3, 204, 3, 0, 0, 0, 0, 101, 3, 18, 3, 11, 4, 0, 0, 225, 2, 7, 5, 0, 0, 0, 0, 225, 2, 64, 4, 218, 4, 0, 0, 83, 3, 249, 5, 0, 0, 0, 0, 83, 3, 34, 5, 200, 5, 0, 0, 90, 3, 176, 1, 151, 2, 0, 0, 82, 3, 207, 0, 151, 2, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 253, 7, 2, 3, 0, 0, 20, 11, 2, 3, 0, 0, 248, 12, 2, 3, 0, 0, 241, 16, 1, 0, 59, 58, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 2, 3, 0, 0, 174, 27, 2, 3, 0, 0, 175, 30, 65, 0, 97, 65, 39, 1, 3, 200, 201, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 57, 0, 0, 32, 0, 2, 3, 3, 0, 0, 173, 251, 4, 2, 3, 0, 0, 252, 5, 3, 3, 0, 0, 207, 156, 7, 2, 3, 0, 202, 172, 8, 2, 3, 0, 0, 171, 9, 2, 3, 0, 0, 243, 11, 2, 7, 0, 0, 160, 12, 2, 3, 0, 0, 190, 13, 3, 3, 0, 0, 158, 246, 16, 67, 0, 113, 81, 132, 142, 17, 67, 3, 0, 0, 134, 143, 18, 67, 0, 101, 69, 130, 144, 19, 66, 3, 0, 0, 169, 20, 67, 3, 0, 0, 231, 232, 21, 67, 0, 121, 89, 129, 154, 22, 67, 0, 117, 85, 163, 233, 23, 67, 0, 105, 73, 161, 214, 24, 195, 0, 111, 24, 79, 24, 162, 24, 224, 0, 25, 67, 3, 0, 0, 148, 153, 30, 67, 0, 97, 65, 160, 181, 31, 67, 3, 0, 0, 225, 245, 32, 67, 3, 0, 0, 208, 209, 38, 67, 3, 0, 0, 155, 157, 39, 3, 0, 59, 58, 244, 248, 40, 3, 15, 0, 0, 203, 204, 41, 1, 3, 200, 201, 43, 3, 3, 0, 0, 170, 221, 44, 67, 3, 0, 0, 145, 146, 46, 67, 0, 99, 67, 184, 189, 49, 67, 0, 110, 78, 164, 165, 50, 66, 3, 0, 0, 230, 51, 3, 3, 0, 0, 135, 128, 53, 2, 3, 0, 0, 168, 0, 2, 3, 3, 0, 0, 173, 251, 4, 2, 3, 0, 0, 252, 5, 3, 3, 0, 0, 207, 156, 6, 2, 3, 0, 0, 213, 7, 2, 3, 0, 202, 172, 8, 2, 3, 0, 0, 171, 9, 2, 3, 0, 0, 243, 11, 2, 7, 0, 0, 160, 12, 2, 3, 0, 0, 190, 13, 3, 3, 0, 0, 158, 246, 16, 67, 0, 113, 81, 132, 142, 17, 67, 3, 0, 0, 134, 143, 18, 67, 0, 101, 69, 130, 144, 19, 66, 3, 0, 0, 169, 20, 67, 3, 0, 0, 231, 232, 21, 67, 0, 121, 89, 129, 154, 22, 67, 0, 117, 85, 163, 233, 23, 67, 0, 105, 73, 161, 214, 24, 195, 0, 111, 24, 79, 24, 162, 24, 224, 0, 25, 67, 3, 0, 0, 148, 153, 30, 67, 0, 97, 65, 160, 181, 31, 67, 3, 0, 0, 225, 245, 32, 67, 3, 0, 0, 208, 209, 38, 67, 3, 0, 0, 155, 157, 39, 3, 0, 59, 58, 244, 248, 40, 3, 15, 0, 0, 203, 204, 41, 1, 3, 200, 201, 43, 3, 3, 0, 0, 170, 221, 44, 67, 3, 0, 0, 145, 146, 46, 67, 0, 99, 67, 184, 189, 49, 67, 0, 110, 78, 164, 165, 50, 66, 3, 0, 0, 230, 51, 3, 3, 0, 0, 135, 128, 53, 2, 3, 0, 0, 168, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 3, 2, 3, 0, 0, 153, 4, 2, 3, 0, 0, 154, 5, 2, 3, 0, 0, 156, 6, 2, 3, 0, 0, 245, 10, 2, 3, 0, 0, 138, 13, 2, 3, 0, 0, 171, 17, 1, 2, 237, 202, 18, 66, 0, 222, 168, 135, 19, 65, 0, 235, 199, 20, 65, 0, 238, 208, 21, 65, 0, 242, 209, 22, 65, 0, 226, 172, 23, 65, 0, 227, 173, 24, 65, 0, 233, 190, 25, 65, 0, 234, 198, 30, 65, 0, 214, 164, 31, 65, 0, 236, 207, 32, 65, 0, 221, 167, 33, 65, 0, 243, 210, 34, 65, 0, 216, 166, 35, 65, 0, 225, 170, 36, 65, 0, 232, 189, 37, 65, 0, 228, 181, 38, 65, 0, 229, 182, 39, 2, 7, 0, 0, 202, 42, 4, 31, 0, 0, 0, 0, 120, 43, 2, 3, 0, 0, 137, 44, 193, 0, 224, 0, 169, 44, 45, 65, 0, 244, 211, 46, 66, 0, 246, 212, 151, 47, 65, 0, 250, 213, 48, 65, 0, 215, 165, 49, 65, 0, 231, 184, 50, 65, 0, 230, 183, 0, 3, 2, 3, 0, 0, 153, 4, 2, 3, 0, 0, 154, 5, 2, 3, 0, 0, 156, 6, 2, 3, 0, 0, 245, 10, 2, 3, 0, 0, 138, 13, 2, 3, 0, 0, 171, 18, 66, 3, 0, 0, 135, 43, 2, 3, 0, 0, 137, 46, 66, 3, 0, 0, 151, 54, 4, 31, 0, 0, 0, 0, 121, 0, 239, 15, 214, 155, 222, 157, 225, 158, 227, 159, 233, 162, 242, 163, 250, 253, 164, 134, 168, 141, 170, 143, 173, 144, 190, 146, 209, 149, 213, 152, 32, 239, 249, 5, 227, 160, 242, 251, 173, 145, 209, 150, 32, 249, 247, 3, 227, 161, 242, 252, 32, 247, 0, 6, 2, 3, 0, 0, 21, 17, 1, 2, 170, 0, 18, 65, 0, 156, 132, 19, 65, 0, 168, 144, 20, 65, 0, 171, 146, 21, 65, 0, 172, 147, 22, 65, 0, 159, 135, 23, 65, 0, 160, 136, 24, 65, 0, 166, 142, 25, 65, 0, 167, 143, 26, 2, 7, 0, 0, 160, 27, 2, 7, 0, 0, 160, 30, 65, 0, 152, 128, 31, 65, 0, 169, 145, 32, 65, 0, 155, 131, 33, 65, 0, 173, 148, 34, 65, 0, 154, 130, 35, 65, 0, 158, 134, 36, 65, 0, 165, 141, 37, 65, 0, 161, 137, 38, 65], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 85495);
allocate([162, 138, 42, 4, 31, 0, 0, 0, 0, 122, 44, 65, 0, 157, 133, 45, 65, 0, 174, 149, 46, 65, 0, 175, 150, 47, 193, 0, 224, 0, 151, 47, 48, 65, 0, 153, 129, 49, 65, 0, 164, 140, 50, 65, 0, 163, 139, 0, 39, 15, 152, 225, 156, 226, 158, 227, 160, 229, 166, 230, 172, 231, 224, 233, 128, 234, 132, 235, 134, 236, 136, 237, 142, 238, 147, 239, 151, 240, 32, 39, 34, 5, 160, 228, 172, 232, 136, 244, 147, 245, 32, 34, 0, 6, 2, 3, 0, 0, 21, 26, 2, 7, 0, 0, 160, 27, 2, 7, 0, 0, 160, 54, 4, 31, 0, 0, 0, 0, 123, 0, 3, 2, 7, 0, 0, 160, 5, 2, 3, 0, 0, 156, 6, 2, 3, 0, 0, 245, 13, 2, 3, 0, 0, 171, 17, 1, 2, 237, 202, 18, 65, 0, 222, 168, 19, 65, 0, 235, 199, 20, 65, 0, 238, 208, 21, 65, 0, 242, 209, 22, 65, 0, 226, 172, 23, 65, 0, 227, 173, 24, 65, 0, 233, 190, 25, 65, 0, 234, 198, 30, 65, 0, 214, 164, 31, 65, 0, 236, 207, 32, 65, 0, 221, 167, 33, 65, 0, 243, 210, 34, 65, 0, 216, 166, 35, 65, 0, 225, 170, 36, 65, 0, 232, 189, 37, 65, 0, 228, 181, 38, 65, 0, 229, 182, 39, 2, 7, 0, 0, 202, 42, 4, 31, 0, 0, 0, 0, 124, 44, 193, 0, 224, 0, 169, 44, 45, 65, 0, 244, 211, 46, 65, 0, 246, 212, 47, 65, 0, 250, 213, 48, 65, 0, 215, 165, 49, 65, 0, 231, 184, 50, 65, 0, 230, 183, 0, 239, 15, 214, 155, 222, 157, 225, 158, 227, 159, 233, 162, 242, 163, 250, 253, 164, 134, 168, 141, 170, 143, 173, 144, 190, 146, 209, 149, 213, 152, 32, 239, 249, 3, 227, 160, 242, 251, 32, 249, 39, 3, 227, 161, 242, 252, 32, 39, 0, 3, 2, 7, 0, 0, 160, 5, 2, 3, 0, 0, 156, 6, 2, 3, 0, 0, 245, 13, 2, 3, 0, 0, 171, 54, 4, 31, 0, 0, 0, 0, 125, 0, 120, 52, 1, 9, 0, 0, 73, 83, 44, 202, 1, 73, 83, 4, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 90, 3, 216, 0, 229, 0, 0, 0, 82, 3, 0, 0, 229, 0, 0, 0, 93, 3, 2, 1, 13, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 4, 2, 3, 0, 0, 156, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 123, 9, 3, 1, 0, 40, 91, 27, 10, 3, 1, 0, 41, 93, 29, 11, 2, 1, 0, 61, 125, 12, 67, 0, 148, 153, 92, 28, 13, 3, 4, 45, 95, 0, 31, 16, 66, 3, 0, 0, 64, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 65, 0, 208, 209, 27, 2, 0, 39, 63, 126, 30, 65, 0, 97, 65, 39, 65, 0, 145, 146, 40, 3, 3, 200, 200, 94, 30, 41, 2, 0, 60, 62, 124, 43, 2, 0, 43, 42, 96, 51, 1, 1, 0, 59, 52, 1, 1, 0, 58, 53, 65, 0, 231, 232, 57, 0, 0, 32, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 0, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 0, 26, 65, 0, 140, 139, 53, 65, 0, 149, 141, 0, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 152, 65, 164, 69, 144, 73, 165, 79, 166, 85, 167, 89, 151, 32, 39, 0, 202, 238, 1, 9, 161, 0, 73, 83, 44, 197, 0, 73, 83, 4, 2, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 90, 3, 247, 0, 4, 1, 0, 0, 82, 3, 0, 0, 4, 1, 0, 0, 93, 3, 131, 1, 153, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 4, 2, 3, 0, 0, 156, 5, 2, 1, 0, 207, 36, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 123, 9, 3, 1, 0, 40, 91, 27, 10, 3, 1, 0, 41, 93, 29, 11, 2, 1, 0, 61, 125, 12, 67, 0, 148, 153, 92, 28, 13, 3, 4, 45, 95, 0, 31, 16, 66, 3, 0, 0, 64, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 65, 0, 208, 209, 27, 2, 4, 39, 63, 205, 30, 65, 0, 97, 65, 39, 65, 0, 145, 146, 40, 3, 7, 202, 202, 201, 30, 41, 2, 3, 204, 203, 248, 43, 2, 4, 43, 42, 200, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 50, 66, 3, 0, 0, 230, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 66, 0, 231, 232, 124, 57, 0, 0, 32, 86, 2, 0, 60, 62, 124, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 248, 3, 97, 134, 65, 143, 32, 248, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 0, 5, 1, 3, 0, 160, 26, 65, 0, 140, 139, 27, 2, 3, 0, 0, 126, 53, 65, 0, 149, 141, 0, 96, 3, 97, 133, 101, 138, 32, 96, 94, 5, 97, 131, 101, 136, 111, 147, 117, 150, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 152, 65, 164, 69, 144, 73, 165, 79, 166, 85, 167, 89, 151, 32, 39, 34, 8, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 248, 3, 97, 134, 65, 143, 32, 248, 0, 41, 98, 8, 9, 0, 0, 82, 79, 44, 77, 1, 82, 79, 11, 4, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0, 0, 84, 3, 15, 2, 137, 2, 0, 0, 82, 3, 0, 0, 136, 1, 0, 0, 90, 3, 129, 1, 136, 1, 0, 0, 80, 3, 74, 4, 0, 0, 0, 0, 80, 3, 74, 3, 0, 0, 0, 0, 101, 4, 195, 5, 0, 0, 0, 0, 101, 4, 196, 4, 0, 0, 0, 0, 57, 117, 55, 6, 0, 0, 0, 0, 58, 117, 222, 7, 0, 0, 0, 0, 58, 117, 192, 6, 201, 7, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 7, 0, 0, 200, 3, 1, 1, 0, 34, 4, 4, 15, 0, 0, 201, 0, 30, 5, 1, 1, 0, 207, 6, 2, 7, 0, 0, 202, 7, 1, 1, 0, 38, 8, 2, 5, 0, 47, 203, 9, 2, 1, 0, 40, 250, 10, 2, 5, 0, 41, 204, 11, 1, 1, 0, 61, 12, 2, 4, 43, 63, 205, 13, 2, 4, 39, 42, 206, 16, 66, 3, 0, 0, 92, 17, 66, 3, 0, 0, 124, 18, 66, 0, 101, 69, 246, 19, 66, 3, 0, 0, 158, 20, 66, 3, 0, 0, 36, 21, 197, 0, 122, 44, 90, 44, 225, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 117, 85, 23, 66, 0, 105, 73, 60, 24, 66, 0, 111, 79, 62, 26, 2, 3, 160, 160, 246, 27, 66, 0, 140, 215, 158, 30, 65, 0, 97, 65, 39, 2, 3, 160, 160, 36, 40, 2, 3, 160, 160, 225, 41, 1, 0, 93, 91, 43, 65, 0, 131, 182, 44, 197, 0, 121, 21, 89, 21, 0, 21, 0, 21, 25, 21, 0, 21, 46, 65, 0, 99, 67, 47, 66, 3, 0, 0, 64, 48, 66, 3, 0, 0, 123, 49, 66, 0, 110, 78, 125, 50, 66, 3, 0, 0, 245, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 4, 12, 45, 95, 0, 0, 31, 57, 0, 0, 32, 86, 1, 0, 60, 62, 0, 22, 66, 3, 0, 0, 213, 0, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 248, 3, 97, 134, 65, 143, 32, 248, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 247, 3, 99, 135, 67, 128, 32, 247, 0, 2, 2, 3, 0, 0, 126, 3, 2, 7, 0, 0, 200, 5, 2, 7, 0, 0, 202, 6, 2, 7, 0, 0, 203, 7, 2, 7, 0, 0, 204, 8, 2, 3, 0, 0, 96, 9, 2, 7, 0, 0, 205, 10, 2, 7, 0, 0, 206, 11, 2, 7, 0, 0, 207, 12, 2, 7, 0, 0, 208, 13, 2, 7, 0, 0, 209, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 22, 66, 3, 0, 0, 170, 26, 65, 0, 199, 198, 31, 66, 0, 115, 83, 208, 32, 66, 0, 100, 68, 209, 37, 66, 3, 0, 0, 136, 38, 66, 0, 108, 76, 157, 39, 65, 0, 173, 184, 40, 65, 0, 238, 221, 0, 243, 19, 99, 159, 100, 212, 101, 216, 108, 150, 110, 229, 114, 253, 115, 231, 116, 156, 122, 167, 67, 172, 68, 210, 69, 183, 76, 149, 78, 213, 82, 252, 83, 230, 84, 155, 90, 166, 32, 243, 94, 7, 97, 131, 105, 140, 111, 147, 65, 182, 73, 215, 79, 226, 32, 94, 244, 3, 97, 199, 65, 198, 32, 244, 248, 3, 117, 133, 85, 222, 32, 248, 242, 5, 97, 165, 101, 169, 65, 164, 69, 168, 32, 242, 250, 3, 122, 190, 90, 189, 32, 250, 239, 25, 97, 160, 99, 134, 101, 130, 105, 161, 108, 146, 110, 228, 111, 162, 114, 234, 115, 152, 117, 163, 121, 236, 122, 171, 65, 181, 67, 143, 69, 144, 73, 214, 76, 145, 78, 227, 79, 224, 82, 232, 83, 151, 85, 233, 89, 237, 90, 141, 32, 239, 241, 5, 111, 139, 117, 251, 79, 138, 85, 235, 32, 241, 249, 9, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 69, 211, 79, 153, 85, 154, 32, 249, 247, 7, 99, 135, 115, 173, 116, 238, 67, 128, 83, 184, 84, 221, 32, 247, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 1, 3, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 67, 0, 236, 156, 39, 42, 16, 65, 0, 238, 158, 17, 65, 0, 233, 153, 18, 66, 0, 165, 133, 250, 19, 194, 4, 224, 0, 144, 19, 160, 19, 20, 65, 0, 226, 146, 21, 197, 4, 167, 44, 135, 44, 160, 44, 0, 44, 26, 44, 0, 44, 22, 66, 0, 227, 147, 253, 23, 65, 0, 247, 246, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 66, 0, 249, 248, 250, 27, 66, 4, 168, 136, 160, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 243, 242, 35, 65, 0, 163, 131, 36, 65, 0, 166, 134, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 232, 152, 40, 66, 4, 230, 150, 160, 41, 67, 0, 245, 244, 93, 91, 42, 5, 63, 0, 0, 0, 0, 0, 123, 43, 65, 0, 239, 159, 44, 197, 0, 169, 21, 137, 21, 0, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 229, 149, 46, 65, 0, 231, 151, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 66, 4, 172, 140, 160, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 1, 3, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 18, 2, 3, 0, 0, 250, 19, 2, 7, 0, 0, 160, 21, 197, 4, 122, 44, 90, 44, 160, 44, 0, 44, 26, 44, 0, 44, 22, 2, 3, 0, 0, 253, 26, 2, 3, 0, 0, 250, 27, 16, 0, 0, 40, 2, 7, 0, 0, 160, 43, 16, 0, 0, 50, 2, 7, 0, 0, 160, 54, 5, 63, 0, 0, 0, 0, 0, 124, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 1, 1, 0, 253, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 67, 0, 236, 156, 39, 42, 16, 65, 0, 238, 158, 17, 65, 0, 233, 153, 18, 66, 0, 165, 133, 250, 19, 194, 4, 224, 0, 144, 19, 160, 19, 20, 65, 0, 226, 146, 21, 197, 4, 167, 44, 135, 44, 160, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 227, 147, 23, 65, 0, 247, 246, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 66, 0, 249, 248, 250, 27, 66, 4, 168, 136, 160, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 243, 242, 35, 65, 0, 163, 131, 36, 65, 0, 166, 134, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 232, 152, 40, 66, 4, 230, 150, 160, 41, 67, 0, 245, 244, 93, 91, 42, 5, 63, 0, 0, 0, 0, 0, 125, 43, 65, 0, 239, 159, 44, 197, 0, 169, 21, 137, 21, 0, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 229, 149, 46, 65, 0, 231, 151, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 66, 4, 172, 140, 160, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 1, 1, 0, 253, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 18, 2, 3, 0, 0, 250, 19, 2, 7, 0, 0, 160, 21, 197, 4, 122, 44, 90, 44, 160, 44, 0, 44, 26, 44, 0, 44, 26, 2, 3, 0, 0, 250, 27, 16, 0, 0, 40, 2, 7, 0, 0, 160, 43, 16, 0, 0, 50, 2, 7, 0, 0, 160, 54, 5, 63, 0, 0, 0, 0, 0, 126, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 2, 3, 0, 0, 213, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 18, 3, 3, 0, 0, 136, 210, 19, 2, 7, 0, 0, 160, 21, 197, 4, 122, 44, 90, 44, 160, 44, 0, 44, 26, 44, 0, 44, 22, 67, 3, 0, 0, 129, 154, 23, 65, 1, 0, 152, 24, 67, 3, 0, 0, 148, 153, 26, 66, 4, 132, 142, 160, 27, 66, 4, 141, 73, 160, 34, 67, 3, 0, 0, 167, 166, 39, 65, 0, 159, 158, 40, 66, 4, 243, 244, 160, 43, 65, 0, 135, 128, 0, 2, 2, 7, 0, 0, 160, 3, 1, 3, 0, 200, 4, 2, 7, 0, 0, 160, 5, 1, 3, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 67, 0, 236, 156, 39, 42, 16, 65, 0, 238, 158, 17, 65, 0, 233, 153, 18, 66, 4, 165, 133, 160, 19, 194, 4, 224, 0, 144, 19, 160, 19, 20, 65, 0, 226, 146, 21, 197, 4, 167, 44, 135, 44, 160, 44, 0, 44, 26, 44, 0, 44, 22, 66, 0, 227, 147, 253, 23, 65, 0, 168, 136, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 66, 4, 237, 157, 160, 27, 66, 4, 235, 155, 160, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 166, 134, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 232, 152, 40, 66, 4, 230, 150, 160, 41, 67, 0, 234, 154, 93, 91, 42, 5, 63, 0, 0, 0, 0, 0, 128, 43, 65, 0, 239, 159, 44, 197, 0, 169, 21, 137, 21, 0, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 251, 250, 46, 65, 0, 231, 151, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 66, 4, 172, 140, 160, 57, 0, 0, 32, 0, 34, 9, 160, 243, 165, 241, 174, 245, 227, 247, 128, 242, 133, 240, 142, 244, 147, 246, 32, 34, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 1, 3, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 18, 2, 7, 0, 0, 160, 19, 2, 7, 0, 0, 160, 21, 197, 4, 122, 44, 90, 44, 160, 44, 0, 44, 26, 44, 0, 44, 22, 2, 3, 0, 0, 253, 26, 2, 7, 0, 0, 160, 27, 16, 0, 0, 40, 2, 7, 0, 0, 160, 43, 16, 0, 0, 50, 2, 7, 0, 0, 160, 54, 5, 63, 0, 0, 0, 0, 0, 129, 0, 183, 191, 7, 4, 190, 1, 82, 79, 11, 4, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0, 0, 84, 3, 215, 1, 77, 2, 0, 0, 90, 3, 73, 1, 80, 1, 0, 0, 82, 3, 0, 0, 80, 1, 0, 0, 80, 3, 251, 3, 0, 0, 0, 0, 80, 3, 14, 3, 0, 0, 0, 0, 101, 4, 85, 5, 0, 0, 0, 0, 101, 4, 105, 4, 0, 0, 0, 0, 57, 117, 189, 5, 0, 0, 0, 0, 58, 117, 76, 7, 0, 0, 0, 0, 58, 117, 69, 6, 55, 7, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 7, 0, 0, 200, 3, 1, 1, 0, 34, 4, 4, 15, 0, 0, 201, 0, 30, 6, 2, 7, 0, 0, 202, 7, 1, 1, 0, 38, 8, 2, 5, 0, 47, 203, 9, 2, 1, 0, 40, 250, 10, 2, 5, 0, 41, 204, 11, 1, 1, 0, 61, 12, 2, 4, 43, 63, 205, 13, 2, 4, 39, 42, 206, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 66, 3, 160, 160, 123, 27, 66, 0, 140, 215, 125, 30, 65, 0, 97, 65, 39, 68, 11, 160, 160, 91, 0, 27, 40, 68, 11, 160, 160, 93, 0, 29, 41, 66, 0, 131, 182, 45, 43, 2, 3, 0, 0, 225, 44, 66, 3, 0, 0, 158, 45, 66, 3, 0, 0, 246, 46, 66, 0, 99, 67, 245, 49, 65, 0, 110, 78, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 4, 8, 45, 95, 64, 0, 31, 57, 0, 0, 32, 86, 2, 0, 158, 246, 245, 0, 18, 66, 3, 0, 0, 213, 0, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 248, 3, 97, 134, 65, 143, 32, 248, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 247, 3, 99, 135, 67, 128, 32, 247, 0, 2, 2, 3, 0, 0, 126, 3, 2, 7, 0, 0, 200, 5, 2, 7, 0, 0, 202, 6, 2, 7, 0, 0, 203, 7, 2, 7, 0, 0, 204, 8, 2, 3, 0, 0, 96, 9, 2, 7, 0, 0, 205, 10, 2, 7, 0, 0, 206, 11, 2, 7, 0, 0, 207, 12, 2, 7, 0, 0, 208, 13, 2, 7, 0, 0, 209, 18, 66, 3, 0, 0, 170, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 26, 65, 0, 199, 198, 31, 65, 0, 115, 83, 32, 65, 0, 100, 68, 38, 65, 0, 108, 76, 39, 65, 0, 173, 184, 40, 65, 0, 238, 221, 44, 65, 0, 122, 90, 0, 243, 19, 99, 159, 100, 212, 101, 216, 108, 150, 110, 229, 114, 253, 115, 231, 116, 156, 122, 167, 67, 172, 68, 210, 69, 183, 76, 149, 78, 213, 82, 252, 83, 230, 84, 155, 90, 166, 32, 243, 94, 7, 97, 131, 105, 140, 111, 147, 65, 182, 73, 215, 79, 226, 32, 94, 244, 3, 97, 199, 65, 198, 32, 244, 248, 3, 117, 133, 85, 222, 32, 248, 242, 5, 97, 165, 101, 169, 65, 164, 69, 168, 32, 242, 250, 3, 122, 190, 90, 189, 32, 250, 239, 25, 97, 160, 99, 134, 101, 130, 105, 161, 108, 146, 110, 228, 111, 162, 114, 234, 115, 152, 117, 163, 121, 236, 122, 171, 65, 181, 67, 143, 69, 144, 73, 214, 76, 145, 78, 227, 79, 224, 82, 232, 83, 151, 85, 233, 89, 237, 90, 141, 32, 239, 241, 5, 111, 139, 117, 251, 79, 138, 85, 235, 32, 241, 249, 9, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 69, 211, 79, 153, 85, 154, 32, 249, 247, 7, 99, 135, 115, 173, 116, 238, 67, 128, 83, 184, 84, 221, 32, 247, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 67, 0, 236, 156, 39, 42, 16, 65, 0, 238, 158, 17, 65, 0, 233, 153, 18, 66, 0, 165, 133, 253, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 169, 137, 22, 65, 0, 227, 147, 23, 65, 0, 247, 246, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 249, 248, 27, 65, 0, 168, 136, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 243, 242, 35, 65, 0, 163, 131, 36, 65, 0, 166, 134, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 232, 152, 40, 65, 0, 230, 150, 41, 65, 0, 239, 159, 42, 5, 63, 0, 0, 0, 0, 0, 123, 43, 2, 7, 0, 0, 160, 44, 66, 4, 167, 135, 160, 45, 66, 4, 229, 149, 160, 46, 66, 0, 231, 151, 21, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 66, 4, 172, 140, 160, 57, 0, 0, 32, 86, 66, 0, 245, 244, 21, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 18, 2, 3, 0, 0, 253, 27, 1, 3, 160, 160, 41, 1, 3, 160, 160, 43, 2, 7, 0, 0, 160, 44, 2, 7, 0, 0, 160, 45, 2, 7, 0, 0, 160, 46, 2, 3, 0, 0, 21, 50, 2, 7, 0, 0, 160, 54, 5, 63, 0, 0, 0, 0, 0, 124, 86, 2, 3, 160, 160, 21, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 67, 0, 236, 156, 39, 42, 16, 65, 0, 238, 158, 17, 65, 0, 233, 153, 18, 65, 0, 165, 133, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 169, 137, 22, 65, 0, 227, 147, 23, 65, 0, 247, 246, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 249, 248, 27, 65, 0, 168, 136, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 243, 242, 35, 65, 0, 163, 131, 36, 65, 0, 166, 134, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 232, 152, 40, 65, 0, 230, 150, 41, 65, 0, 239, 159, 42, 5, 63, 0, 0, 0, 0, 0, 125, 43, 2, 7, 0, 0, 160, 44, 66, 4, 167, 135, 160, 45, 66, 4, 229, 149, 160, 46, 66, 0, 231, 151, 21, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 66, 4, 172, 140, 160, 57, 0, 0, 32, 86, 66, 0, 245, 244, 21, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 27, 1, 3, 160, 160, 41, 1, 3, 160, 160, 43, 2, 7, 0, 0, 160, 44, 2, 7, 0, 0, 160, 45, 2, 7, 0, 0, 160, 46, 2, 3, 0, 0, 21, 50, 2, 7, 0, 0, 160, 54, 5, 63, 0, 0, 0, 0, 0, 126, 86, 2, 3, 160, 160, 21, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 2, 3, 0, 0, 213, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 18, 3, 3, 0, 0, 136, 210, 22, 67, 3, 0, 0, 129, 154, 23, 65, 1, 0, 152, 24, 67, 3, 0, 0, 148, 153, 26, 65, 0, 132, 142, 27, 65, 0, 141, 73, 34, 67, 3, 0, 0, 167, 166, 39, 65, 0, 159, 158, 40, 65, 0, 243, 244, 41, 1, 3, 160, 160, 43, 2, 7, 0, 0, 160, 44, 2, 7, 0, 0, 160, 45, 2, 7, 0, 0, 160, 86, 65, 0, 135, 128, 0, 2, 2, 7, 0, 0, 160, 3, 1, 3, 0, 200, 4, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 67, 0, 236, 156, 39, 42, 16, 65, 0, 238, 158, 17, 65, 0, 233, 153, 18, 66, 0, 165, 133, 253, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 169, 137, 22, 65, 0, 227, 147, 23, 65, 0, 168, 136, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 237, 157, 27, 65, 0, 235, 155, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 166, 134, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 232, 152, 40, 65, 0, 230, 150, 41, 65, 0, 239, 159, 42, 5, 63, 0, 0, 0, 0, 0, 128, 43, 2, 7, 0, 0, 160, 44, 66, 4, 167, 135, 160, 45, 66, 4, 251, 250, 160, 46, 66, 0, 231, 151, 21, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 66, 4, 172, 140, 160, 57, 0, 0, 32, 86, 66, 0, 234, 154, 21, 0, 34, 9, 160, 243, 165, 241, 174, 245, 227, 247, 128, 242, 133, 240, 142, 244, 147, 246, 32, 34, 0, 2, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 7, 0, 0, 160, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 12, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 18, 2, 3, 0, 0, 253, 27, 1, 3, 160, 160, 41, 1, 3, 160, 160, 43, 2, 7, 0, 0, 160, 44, 2, 7, 0, 0, 160, 45, 2, 7, 0, 0, 160, 46, 2, 3, 0, 0, 21, 50, 2, 7, 0, 0, 160, 54, 5, 63, 0, 0, 0, 0, 0, 129, 86, 2, 3, 160, 160, 21, 0, 213, 110, 4, 9, 0, 0, 82, 85, 44, 185, 1, 82, 85, 12, 2, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 40, 3, 171, 1, 0, 0, 0, 0, 40, 3, 213, 0, 0, 0, 0, 0, 98, 3, 148, 2, 0, 0, 0, 0, 98, 3, 191, 1, 0, 0, 0, 0, 104, 3, 118, 3, 0, 0, 0, 0, 104, 3, 162, 2, 0, 0, 0, 0, 87, 3, 92, 4, 0, 0, 0, 0, 87, 3, 138, 3, 0, 0, 0, 0, 90, 3, 199, 0, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 181, 1, 206, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 4, 2, 3, 0, 0, 35, 5, 2, 3, 0, 0, 207, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 38, 9, 2, 3, 0, 0, 36, 26, 2, 3, 0, 0, 91, 27, 2, 3, 0, 0, 93, 43, 2, 3, 0, 0, 124, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 0, 18, 66, 3, 0, 0, 213, 0, 5, 2, 7, 0, 0, 160, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 2, 5, 0, 59, 160, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 193, 0, 241, 41, 240, 0, 42, 3, 15, 0, 0, 0, 120, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 5, 2, 7, 0, 0, 160, 18, 66, 3, 0, 0, 253, 54, 3, 15, 0, 0, 0, 121, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 2, 1, 0, 59, 253, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 65, 0, 165, 133, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 193, 0, 241, 41, 240, 0, 42, 3, 15, 0, 0, 0, 122, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 5, 2, 3, 0, 0, 253, 54, 3, 15, 0, 0, 0, 123, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 239, 5, 2, 5, 0, 59, 160, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 189, 190, 17, 65, 0, 164, 165, 18, 65, 0, 231, 232, 19, 65, 0, 198, 199, 20, 66, 0, 168, 169, 207, 21, 65, 0, 212, 213, 22, 65, 0, 172, 173, 23, 65, 0, 245, 246, 24, 65, 0, 249, 250, 25, 65, 0, 243, 244, 26, 65, 0, 181, 182, 27, 65, 0, 158, 159, 30, 65, 0, 170, 171, 31, 65, 0, 241, 242, 32, 65, 0, 235, 236, 33, 65, 0, 160, 161, 34, 65, 0, 216, 221, 35, 65, 0, 225, 226, 36, 65, 0, 214, 215, 37, 65, 0, 208, 209, 38, 65, 0, 166, 167, 39, 65, 0, 233, 234, 40, 65, 0, 247, 248, 41, 65, 0, 132, 133, 42, 3, 15, 0, 0, 0, 124, 43, 1, 1, 0, 47, 44, 193, 0, 222, 44, 224, 0, 45, 65, 0, 251, 252, 46, 65, 0, 227, 228, 47, 65, 0, 210, 211, 48, 65, 0, 183, 184, 49, 65, 0, 229, 230, 50, 65, 0, 237, 238, 51, 65, 0, 162, 163, 52, 65, 0, 156, 157, 53, 1, 0, 46, 44, 0, 5, 2, 7, 0, 0, 160, 18, 66, 3, 0, 0, 207, 54, 3, 15, 0, 0, 0, 125, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 239, 5, 1, 1, 0, 59, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 189, 190, 17, 65, 0, 164, 165, 18, 65, 0, 231, 232, 19, 65, 0, 198, 199, 20, 65, 0, 168, 169, 21, 65, 0, 212, 213, 22, 65, 0, 172, 173, 23, 65, 0, 245, 246, 24, 65, 0, 249, 250, 25, 65, 0, 243, 244, 26, 65, 0, 181, 182, 27, 65, 0, 158, 159, 30, 65, 0, 170, 171, 31, 65, 0, 241, 242, 32, 65, 0, 235, 236, 33, 65, 0, 160, 161, 34, 65, 0, 216, 221, 35, 65, 0, 225, 226, 36, 65, 0, 214, 215, 37, 65, 0, 208, 209, 38, 65, 0, 166, 167, 39, 65, 0, 233, 234, 40, 65, 0, 247, 248, 41, 65, 0, 132, 133, 42, 3, 15, 0, 0, 0, 126, 43, 1, 1, 0, 47, 44, 193, 0, 222, 44, 224, 0, 45, 65, 0, 251, 252, 46, 65, 0, 227, 228, 47, 65, 0, 210, 211, 48, 65, 0, 183, 184, 49, 65, 0, 229, 230, 50, 65, 0, 237, 238, 51, 65, 0, 162, 163, 52, 65, 0, 156, 157, 53, 1, 0, 46, 44, 0, 54, 3, 15, 0, 0, 0, 127, 0, 50, 235, 4, 4, 187, 1, 82, 85, 12, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0, 0, 40, 3, 209, 1, 0, 0, 0, 0, 40, 3, 216, 0, 0, 0, 0, 0, 98, 3, 216, 2, 0, 0, 0, 0, 98, 3, 224, 1, 0, 0, 0, 0, 104, 3, 216, 3, 0, 0, 0, 0, 104, 3, 225, 2, 0, 0, 0, 0, 87, 3, 221, 4, 0, 0, 0, 0, 87, 3, 231, 3, 0, 0, 0, 0, 90, 3, 209, 0, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 181, 1, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 4, 2, 3, 0, 0, 35, 5, 2, 3, 0, 0, 36, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 38, 9, 3, 3, 0, 0, 42, 31, 13, 3, 7, 0, 0, 0, 28, 26, 2, 3, 0, 0, 91, 27, 2, 3, 0, 0, 93, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 0, 18, 66, 3, 0, 0, 213, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 193, 0, 241, 53, 240, 0, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 121, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 65, 0, 165, 133, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 122, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 193, 0, 241, 53, 240, 0, 0, 54, 4, 31, 0, 0, 0, 0, 123, 0, 2, 1, 0, 239, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 189, 190, 17, 65, 0, 164, 165, 18, 65, 0, 231, 232, 19, 65, 0, 198, 199, 20, 66, 0, 168, 169, 207, 21, 65, 0, 212, 213, 22, 65, 0, 172, 173, 23, 65, 0, 245, 246, 24, 65, 0, 249, 250, 25, 65, 0, 243, 244, 26, 65, 0, 181, 182, 27, 65, 0, 158, 159, 30, 65, 0, 170, 171, 31, 65, 0, 241, 242, 32, 65, 0, 235, 236, 33, 65, 0, 160, 161, 34, 65, 0, 216, 221, 35, 65, 0, 225, 226, 36, 65, 0, 214, 215, 37, 65, 0, 208, 209, 38, 65, 0, 166, 167, 39, 65, 0, 233, 234, 40, 65, 0, 247, 248, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 124, 43, 1, 0, 41, 40, 44, 193, 0, 222, 44, 224, 0, 45, 65, 0, 251, 252, 46, 65, 0, 227, 228, 47, 65, 0, 210, 211, 48, 65, 0, 183, 184, 49, 65, 0, 229, 230, 50, 65, 0, 237, 238, 51, 65, 0, 162, 163, 52, 65, 0, 156, 157, 53, 65, 0, 132, 133, 0, 18, 66, 3, 0, 0, 207, 54, 4, 31, 0, 0, 0, 0, 125, 0, 2, 1, 0, 239, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 189, 190, 17, 65, 0, 164, 165, 18, 65, 0, 231, 232, 19, 65, 0, 198, 199, 20, 65, 0, 168, 169, 21, 65, 0, 212, 213, 22, 65, 0, 172, 173, 23, 65, 0, 245, 246, 24, 65, 0, 249, 250, 25, 65, 0, 243, 244, 26, 65, 0, 181, 182, 27, 65, 0, 158, 159, 30, 65, 0, 170, 171, 31, 65, 0, 241, 242, 32, 65, 0, 235, 236, 33, 65, 0, 160, 161, 34, 65, 0, 216, 221, 35, 65, 0, 225, 226, 36, 65, 0, 214, 215, 37, 65, 0, 208, 209, 38, 65, 0, 166, 167, 39, 65, 0, 233, 234, 40, 65, 0, 247, 248, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 126, 43, 1, 0, 41, 40, 44, 193, 0, 222, 44, 224, 0, 45, 65, 0, 251, 252, 46, 65, 0, 227, 228, 47, 65, 0, 210, 211, 48, 65, 0, 183, 184, 49, 65, 0, 229, 230, 50, 65, 0, 237, 238, 51, 65, 0, 162, 163, 52, 65, 0, 156, 157, 53, 65, 0, 132, 133, 0, 54, 4, 31, 0, 0, 0, 0, 127, 0, 187, 254, 7, 9, 0, 0, 82, 88, 44, 185, 1, 82, 88, 15, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 0, 0, 0, 59, 117, 216, 1, 0, 0, 0, 0, 59, 117, 234, 0, 0, 0, 0, 0, 60, 117, 219, 2, 0, 0, 0, 0, 60, 117, 231, 1, 0, 0, 0, 0, 61, 117, 218, 3, 0, 0, 0, 0, 61, 117, 234, 2, 0, 0, 0, 0, 62, 117, 209, 4, 0, 0, 0, 0, 62, 117, 233, 3, 0, 0, 0, 0, 63, 117, 202, 5, 0, 0, 0, 0, 63, 117, 224, 4, 0, 0, 0, 0, 64, 117, 199, 6, 0, 0, 0, 0, 64, 117, 217, 5, 0, 0, 0, 0, 65, 117, 180, 7, 0, 0, 0, 0, 65, 117, 214, 6, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 4, 2, 3, 0, 0, 35, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 38, 9, 2, 3, 0, 0, 36, 12, 3, 3, 0, 0, 91, 123, 26, 3, 3, 0, 0, 91, 123, 27, 3, 3, 0, 0, 93, 125, 43, 2, 3, 0, 0, 124, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 1, 1, 0, 59, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 13, 2, 2, 254, 0, 61, 16, 65, 0, 169, 137, 17, 67, 0, 230, 150, 247, 246, 18, 67, 0, 227, 147, 184, 181, 19, 67, 0, 170, 138, 209, 207, 20, 66, 0, 165, 133, 253, 21, 67, 0, 173, 141, 251, 250, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 67, 0, 229, 149, 198, 190, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 67, 0, 160, 128, 213, 212, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 245, 244, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 67, 0, 166, 134, 249, 248, 40, 67, 0, 237, 157, 243, 242, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 121, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 2, 1, 0, 59, 253, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 67, 0, 169, 137, 210, 209, 17, 67, 0, 230, 150, 182, 181, 18, 67, 0, 227, 147, 247, 246, 19, 67, 0, 170, 138, 214, 213, 20, 67, 0, 165, 133, 251, 250, 21, 67, 0, 173, 141, 212, 211, 22, 67, 0, 163, 131, 216, 215, 23, 67, 0, 232, 152, 184, 183, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 67, 0, 229, 149, 190, 189, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 195, 0, 224, 0, 144, 35, 249, 35, 248, 35, 36, 67, 0, 174, 142, 243, 242, 37, 67, 0, 171, 139, 245, 244, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 122, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 67, 0, 231, 151, 199, 198, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 67, 0, 168, 136, 208, 207, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 123, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 2, 1, 0, 59, 253, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 67, 0, 230, 150, 212, 211, 18, 67, 0, 227, 147, 184, 181, 19, 67, 0, 170, 138, 199, 189, 20, 67, 0, 165, 133, 247, 246, 21, 67, 0, 173, 141, 251, 250, 22, 67, 0, 163, 131, 183, 182, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 67, 0, 167, 135, 214, 213, 26, 67, 0, 229, 149, 198, 190, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 67, 0, 160, 128, 243, 242, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 245, 244, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 67, 0, 166, 134, 210, 209, 40, 67, 0, 237, 157, 208, 207, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 124, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 67, 0, 225, 145, 216, 215, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 125, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 1, 1, 0, 59, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 67, 0, 227, 147, 247, 246, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 67, 0, 173, 141, 213, 212, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 67, 0, 167, 135, 198, 190, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 67, 0, 235, 155, 251, 250, 32, 65, 0, 162, 130, 33, 67, 0, 160, 128, 243, 242, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 245, 244, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 67, 0, 166, 134, 184, 181, 40, 65, 0, 237, 157, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 126, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 67, 0, 231, 151, 209, 207, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 67, 0, 168, 136, 249, 248, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 127, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 1, 1, 0, 59, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 67, 0, 169, 137, 222, 221, 17, 65, 0, 230, 150, 18, 67, 0, 227, 147, 247, 246, 19, 67, 0, 170, 138, 213, 212, 20, 66, 0, 165, 133, 253, 21, 67, 0, 173, 141, 209, 207, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 67, 0, 160, 128, 243, 242, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 245, 244, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 67, 0, 166, 134, 251, 250, 40, 67, 0, 237, 157, 198, 190, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 128, 43, 1, 1, 0, 47, 44, 67, 0, 239, 159, 184, 181, 45, 67, 0, 231, 151, 249, 248, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 129, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 2, 1, 0, 59, 253, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 67, 0, 227, 147, 247, 246, 19, 65, 0, 170, 138, 20, 67, 0, 165, 133, 221, 220, 21, 67, 0, 173, 141, 223, 222, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 67, 0, 235, 155, 251, 250, 32, 65, 0, 162, 130, 33, 67, 0, 160, 128, 243, 242, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 245, 244, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 67, 0, 237, 157, 198, 190, 41, 195, 0, 241, 41, 240, 0, 184, 41, 181, 41, 42, 4, 31, 0, 0, 0, 0, 130, 43, 1, 1, 0, 47, 44, 67, 0, 239, 159, 213, 212, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 67, 0, 168, 136, 249, 248, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 67, 0, 238, 158, 209, 207, 53, 1, 0, 46, 44, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 131, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 1, 1, 0, 59, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 67, 0, 173, 141, 184, 181, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 245, 244, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 67, 0, 237, 157, 198, 190, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 132, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 67, 0, 168, 136, 209, 207, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 18, 66, 3, 0, 0, 253, 22, 67, 3, 0, 0, 247, 246, 24, 67, 3, 0, 0, 245, 244, 30, 67, 3, 0, 0, 243, 242, 31, 67, 3, 0, 0, 251, 250, 44, 67, 3, 0, 0, 213, 212, 45, 67, 3, 0, 0, 222, 221, 46, 67, 3, 0, 0, 249, 248, 54, 4, 31, 0, 0, 0, 0, 133, 0, 146, 224, 8, 4, 187, 1, 82, 88, 15, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 0, 0, 0, 59, 117, 237, 1, 0, 0, 0, 0, 59, 117, 225, 0, 0, 0, 0, 0, 60, 117, 19, 3, 0, 0, 0, 0, 60, 117, 252, 1, 0, 0, 0, 0, 61, 117, 53, 4, 0, 0, 0, 0, 61, 117, 34, 3, 0, 0, 0, 0, 62, 117, 79, 5, 0, 0, 0, 0, 62, 117, 68, 4, 0, 0, 0, 0, 63, 117, 107, 6, 0, 0, 0, 0, 63, 117, 94, 5, 0, 0, 0, 0, 64, 117, 139, 7, 0, 0, 0, 0, 64, 117, 122, 6, 0, 0, 0, 0, 65, 117, 155, 8, 0, 0, 0, 0, 65, 117, 154, 7, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 4, 2, 3, 0, 0, 35, 5, 2, 3, 0, 0, 36, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 38, 9, 2, 3, 0, 0, 42, 26, 2, 3, 0, 0, 91, 27, 2, 3, 0, 0, 93, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 67, 0, 230, 150, 247, 246, 18, 67, 0, 227, 147, 184, 181, 19, 67, 0, 170, 138, 209, 207, 20, 66, 0, 165, 133, 253, 21, 67, 0, 173, 141, 251, 250, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 67, 0, 229, 149, 198, 190, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 67, 0, 160, 128, 213, 212, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 245, 244, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 67, 0, 166, 134, 249, 248, 40, 67, 0, 237, 157, 243, 242, 41, 2, 0, 254, 43, 124, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 95735);
allocate([236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 193, 0, 241, 53, 240, 0, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 121, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 2, 0, 34, 52, 253, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 67, 0, 169, 137, 210, 209, 17, 67, 0, 230, 150, 182, 181, 18, 67, 0, 227, 147, 247, 246, 19, 67, 0, 170, 138, 214, 213, 20, 67, 0, 165, 133, 251, 250, 21, 67, 0, 173, 141, 212, 211, 22, 67, 0, 163, 131, 216, 215, 23, 67, 0, 232, 152, 184, 183, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 67, 0, 229, 149, 190, 189, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 195, 0, 224, 0, 144, 35, 249, 35, 248, 35, 36, 67, 0, 174, 142, 243, 242, 37, 67, 0, 171, 139, 245, 244, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 122, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 67, 0, 231, 151, 199, 198, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 67, 0, 168, 136, 208, 207, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 193, 0, 241, 53, 240, 0, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 123, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 2, 0, 34, 52, 253, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 67, 0, 230, 150, 212, 211, 18, 67, 0, 227, 147, 184, 181, 19, 67, 0, 170, 138, 199, 189, 20, 67, 0, 165, 133, 247, 246, 21, 67, 0, 173, 141, 251, 250, 22, 67, 0, 163, 131, 183, 182, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 67, 0, 167, 135, 214, 213, 26, 67, 0, 229, 149, 198, 190, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 67, 0, 160, 128, 243, 242, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 245, 244, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 67, 0, 166, 134, 210, 209, 40, 67, 0, 237, 157, 208, 207, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 124, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 67, 0, 225, 145, 216, 215, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 193, 0, 241, 53, 240, 0, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 125, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 67, 0, 227, 147, 247, 246, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 67, 0, 173, 141, 213, 212, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 67, 0, 167, 135, 198, 190, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 67, 0, 235, 155, 251, 250, 32, 65, 0, 162, 130, 33, 67, 0, 160, 128, 243, 242, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 245, 244, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 67, 0, 166, 134, 184, 181, 40, 65, 0, 237, 157, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 126, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 67, 0, 231, 151, 209, 207, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 67, 0, 168, 136, 249, 248, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 193, 0, 241, 53, 240, 0, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 127, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 67, 0, 169, 137, 222, 221, 17, 65, 0, 230, 150, 18, 67, 0, 227, 147, 247, 246, 19, 67, 0, 170, 138, 213, 212, 20, 66, 0, 165, 133, 253, 21, 67, 0, 173, 141, 209, 207, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 67, 0, 160, 128, 243, 242, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 245, 244, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 67, 0, 166, 134, 251, 250, 40, 67, 0, 237, 157, 198, 190, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 128, 43, 1, 0, 41, 40, 44, 67, 0, 239, 159, 184, 181, 45, 67, 0, 231, 151, 249, 248, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 193, 0, 241, 53, 240, 0, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 129, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 2, 0, 34, 52, 253, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 67, 0, 227, 147, 247, 246, 19, 65, 0, 170, 138, 20, 67, 0, 165, 133, 221, 220, 21, 67, 0, 173, 141, 223, 222, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 67, 0, 235, 155, 251, 250, 32, 65, 0, 162, 130, 33, 67, 0, 160, 128, 243, 242, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 245, 244, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 67, 0, 237, 157, 198, 190, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 130, 43, 1, 0, 41, 40, 44, 67, 0, 239, 159, 213, 212, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 67, 0, 168, 136, 249, 248, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 67, 0, 238, 158, 209, 207, 53, 195, 0, 241, 53, 240, 0, 184, 53, 181, 53, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 131, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 67, 0, 173, 141, 184, 181, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 245, 244, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 67, 0, 237, 157, 198, 190, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 132, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 67, 0, 168, 136, 209, 207, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 193, 0, 241, 53, 240, 0, 0, 18, 66, 3, 0, 0, 253, 22, 67, 3, 0, 0, 247, 246, 24, 67, 3, 0, 0, 245, 244, 30, 67, 3, 0, 0, 243, 242, 31, 67, 3, 0, 0, 251, 250, 44, 67, 3, 0, 0, 213, 212, 45, 67, 3, 0, 0, 222, 221, 46, 67, 3, 0, 0, 249, 248, 54, 4, 31, 0, 0, 0, 0, 133, 0, 77, 78, 3, 9, 0, 0, 84, 82, 44, 179, 0, 84, 82, 5, 4, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 89, 3, 187, 1, 221, 1, 0, 0, 85, 3, 96, 2, 183, 2, 0, 0, 90, 3, 0, 0, 68, 1, 0, 0, 82, 3, 61, 1, 68, 1, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 62, 3, 2, 1, 0, 39, 156, 4, 3, 3, 0, 200, 35, 30, 5, 2, 1, 0, 43, 36, 6, 2, 3, 0, 0, 171, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 123, 9, 3, 1, 0, 40, 91, 27, 10, 3, 1, 0, 41, 93, 29, 11, 2, 1, 0, 61, 125, 12, 3, 0, 42, 63, 92, 28, 13, 3, 0, 45, 95, 124, 31, 16, 66, 3, 0, 0, 64, 18, 66, 0, 101, 69, 213, 19, 66, 3, 0, 0, 244, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 25, 66, 3, 0, 0, 156, 26, 2, 7, 160, 160, 201, 27, 66, 4, 129, 154, 202, 30, 68, 8, 97, 65, 145, 0, 146, 31, 66, 3, 0, 0, 225, 39, 2, 7, 160, 160, 203, 40, 197, 0, 105, 23, 73, 23, 0, 23, 9, 23, 0, 23, 0, 23, 41, 2, 0, 34, 130, 60, 43, 2, 4, 44, 59, 204, 44, 66, 3, 0, 0, 174, 45, 66, 3, 0, 0, 175, 49, 65, 0, 110, 78, 51, 66, 0, 148, 153, 60, 52, 66, 0, 135, 128, 62, 53, 2, 0, 46, 58, 124, 57, 0, 0, 32, 86, 2, 0, 60, 62, 124, 0, 18, 66, 7, 0, 0, 160, 0, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 0, 23, 68, 10, 141, 0, 105, 0, 152, 26, 65, 0, 167, 166, 39, 65, 0, 159, 158, 40, 197, 0, 105, 23, 152, 23, 0, 23, 9, 23, 0, 23, 0, 23, 0, 94, 13, 97, 131, 101, 136, 141, 140, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 152, 215, 79, 226, 85, 234, 32, 94, 249, 14, 97, 132, 101, 137, 141, 139, 105, 139, 111, 148, 117, 129, 121, 237, 65, 142, 69, 211, 73, 216, 152, 216, 79, 153, 85, 154, 32, 249, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 239, 13, 97, 160, 101, 130, 141, 161, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 152, 214, 79, 224, 85, 233, 32, 239, 96, 13, 97, 133, 101, 138, 141, 236, 105, 236, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 152, 222, 79, 227, 85, 235, 32, 96, 0, 18, 66, 7, 0, 0, 160, 19, 66, 3, 0, 0, 20, 22, 68, 11, 0, 0, 237, 0, 236, 23, 68, 10, 213, 0, 105, 0, 152, 26, 65, 0, 167, 166, 30, 68, 31, 0, 0, 160, 0, 160, 31, 65, 0, 115, 83, 34, 65, 0, 103, 71, 35, 65, 0, 104, 72, 36, 65, 0, 106, 74, 39, 65, 0, 173, 184, 40, 197, 0, 105, 23, 152, 23, 0, 23, 9, 23, 0, 23, 0, 23, 46, 65, 0, 99, 67, 0, 94, 23, 97, 131, 99, 134, 101, 136, 103, 155, 104, 169, 213, 140, 105, 140, 106, 159, 111, 147, 115, 199, 117, 150, 65, 182, 67, 143, 69, 210, 71, 157, 72, 168, 73, 215, 152, 215, 74, 172, 79, 226, 83, 198, 85, 234, 32, 94, 249, 13, 97, 132, 101, 137, 213, 139, 105, 139, 111, 148, 117, 129, 65, 142, 69, 211, 73, 216, 152, 216, 79, 153, 85, 154, 32, 249, 126, 3, 110, 164, 78, 165, 32, 126, 239, 13, 97, 160, 101, 130, 213, 161, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 152, 214, 79, 224, 85, 233, 32, 239, 96, 13, 97, 133, 101, 138, 213, 141, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 152, 222, 79, 227, 85, 235, 32, 96, 0, 80, 11, 5, 4, 184, 1, 84, 82, 5, 4, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 89, 3, 236, 2, 66, 3, 0, 0, 85, 3, 197, 3, 121, 4, 0, 0, 82, 3, 101, 2, 117, 2, 0, 0, 90, 3, 0, 0, 117, 2, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 4, 11, 0, 0, 251, 0, 173, 3, 2, 1, 0, 34, 253, 4, 4, 3, 0, 200, 35, 30, 252, 5, 4, 11, 0, 0, 172, 0, 207, 6, 2, 3, 0, 0, 171, 7, 2, 1, 0, 38, 243, 8, 2, 1, 0, 39, 123, 9, 3, 1, 0, 40, 91, 27, 10, 3, 1, 0, 41, 93, 29, 11, 2, 1, 0, 61, 125, 12, 4, 0, 47, 63, 92, 28, 168, 13, 3, 0, 45, 95, 124, 31, 16, 197, 0, 102, 33, 70, 33, 64, 33, 6, 33, 0, 33, 0, 33, 17, 197, 0, 103, 34, 71, 34, 0, 34, 7, 34, 0, 34, 0, 34, 18, 16, 0, 0, 19, 197, 0, 105, 23, 73, 23, 244, 23, 9, 23, 169, 23, 0, 23, 20, 197, 0, 111, 24, 79, 24, 0, 24, 15, 24, 0, 24, 0, 24, 21, 197, 0, 100, 32, 68, 32, 190, 32, 4, 32, 0, 32, 0, 32, 22, 197, 0, 114, 19, 82, 19, 0, 19, 18, 19, 0, 19, 0, 19, 23, 197, 0, 110, 49, 78, 49, 0, 49, 14, 49, 0, 49, 0, 49, 24, 197, 0, 104, 35, 72, 35, 155, 35, 8, 35, 157, 35, 0, 35, 25, 66, 3, 0, 0, 156, 26, 197, 4, 113, 16, 81, 16, 201, 16, 17, 16, 0, 16, 0, 16, 27, 197, 4, 119, 17, 87, 17, 202, 17, 23, 17, 0, 17, 0, 17, 30, 197, 0, 117, 22, 85, 22, 145, 22, 21, 22, 146, 22, 0, 22, 31, 197, 0, 105, 23, 73, 23, 225, 23, 9, 23, 245, 23, 0, 23, 32, 197, 0, 101, 18, 69, 18, 213, 18, 5, 18, 0, 18, 0, 18, 33, 197, 0, 97, 30, 65, 30, 0, 30, 1, 30, 166, 30, 0, 30, 34, 65, 0, 129, 154, 35, 197, 0, 116, 20, 84, 20, 0, 20, 20, 20, 0, 20, 0, 20, 36, 197, 0, 107, 37, 75, 37, 0, 37, 11, 37, 0, 37, 0, 37, 37, 197, 0, 109, 50, 77, 50, 0, 50, 13, 50, 0, 50, 0, 50, 39, 197, 4, 121, 21, 89, 21, 203, 21, 25, 21, 0, 21, 0, 21, 40, 16, 0, 0, 41, 2, 0, 43, 42, 170, 43, 197, 4, 120, 45, 88, 45, 204, 45, 24, 45, 0, 45, 0, 45, 44, 197, 0, 106, 36, 74, 36, 174, 36, 10, 36, 60, 36, 0, 36, 45, 68, 8, 148, 153, 175, 0, 62, 46, 197, 0, 118, 47, 86, 47, 189, 47, 22, 47, 184, 47, 0, 47, 47, 197, 0, 99, 46, 67, 46, 60, 46, 3, 46, 0, 46, 0, 46, 48, 66, 0, 135, 128, 62, 49, 197, 0, 122, 44, 90, 44, 124, 44, 26, 44, 0, 44, 0, 44, 50, 197, 0, 115, 31, 83, 31, 230, 31, 19, 31, 167, 31, 0, 31, 51, 197, 0, 98, 48, 66, 48, 158, 48, 2, 48, 0, 48, 0, 48, 52, 2, 1, 0, 58, 246, 53, 2, 0, 44, 59, 45, 57, 0, 0, 32, 86, 3, 0, 60, 62, 124, 28, 0, 32, 197, 4, 101, 18, 69, 18, 160, 18, 5, 18, 0, 18, 0, 18, 0, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 0, 18, 65, 0, 167, 166, 19, 197, 0, 141, 23, 73, 23, 244, 23, 9, 23, 169, 23, 0, 23, 31, 197, 0, 105, 23, 152, 23, 225, 23, 9, 23, 245, 23, 0, 23, 33, 197, 16, 97, 30, 65, 30, 0, 30, 1, 30, 160, 30, 0, 30, 40, 65, 0, 159, 158, 50, 197, 16, 115, 31, 83, 31, 230, 31, 19, 31, 160, 31, 0, 31, 51, 197, 0, 98, 48, 66, 48, 232, 48, 2, 48, 0, 48, 0, 48, 0, 94, 13, 97, 131, 101, 136, 141, 140, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 152, 215, 79, 226, 85, 234, 32, 94, 249, 14, 97, 132, 101, 137, 141, 139, 105, 139, 111, 148, 117, 129, 121, 237, 65, 142, 69, 211, 73, 216, 152, 216, 79, 153, 85, 154, 32, 249, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 239, 13, 97, 160, 101, 130, 141, 161, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 152, 214, 79, 224, 85, 233, 32, 239, 96, 13, 97, 133, 101, 138, 141, 236, 105, 236, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 152, 222, 79, 227, 85, 235, 32, 96, 0, 2, 4, 31, 0, 0, 160, 0, 160, 5, 2, 7, 0, 0, 160, 7, 2, 7, 0, 0, 160, 12, 4, 31, 0, 0, 0, 0, 160, 18, 65, 0, 167, 166, 19, 197, 20, 213, 23, 73, 23, 160, 23, 9, 23, 160, 23, 0, 23, 21, 197, 4, 100, 32, 68, 32, 160, 32, 4, 32, 0, 32, 0, 32, 24, 197, 20, 104, 35, 72, 35, 160, 35, 8, 35, 160, 35, 0, 35, 30, 197, 0, 117, 22, 85, 22, 237, 22, 21, 22, 236, 22, 0, 22, 31, 197, 0, 105, 23, 152, 23, 225, 23, 9, 23, 245, 23, 0, 23, 32, 197, 4, 101, 18, 69, 18, 160, 18, 5, 18, 0, 18, 0, 18, 33, 197, 16, 97, 30, 65, 30, 0, 30, 1, 30, 160, 30, 0, 30, 40, 65, 0, 173, 184, 41, 2, 7, 0, 0, 160, 46, 197, 20, 118, 47, 86, 47, 160, 47, 22, 47, 160, 47, 0, 47, 50, 197, 16, 115, 31, 83, 31, 230, 31, 19, 31, 160, 31, 0, 31, 0, 94, 23, 97, 131, 99, 134, 101, 136, 103, 155, 104, 169, 213, 140, 105, 140, 106, 159, 111, 147, 115, 199, 117, 150, 65, 182, 67, 143, 69, 210, 71, 157, 72, 168, 73, 215, 152, 215, 74, 172, 79, 226, 83, 198, 85, 234, 32, 94, 249, 13, 97, 132, 101, 137, 213, 139, 105, 139, 111, 148, 117, 129, 65, 142, 69, 211, 73, 216, 152, 216, 79, 153, 85, 154, 32, 249, 126, 3, 110, 164, 78, 165, 32, 126, 239, 13, 97, 160, 101, 130, 213, 161, 105, 161, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 152, 214, 79, 224, 85, 233, 32, 239, 96, 13, 97, 133, 101, 138, 213, 141, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 152, 222, 79, 227, 85, 235, 32, 96, 0, 47, 196, 2, 4, 0, 0, 84, 84, 5, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 61, 117, 107, 1, 0, 0, 0, 0, 61, 117, 139, 0, 0, 0, 0, 0, 66, 117, 76, 2, 162, 2, 0, 0, 66, 117, 122, 1, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 5, 2, 3, 0, 0, 36, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 91, 9, 2, 3, 0, 0, 93, 10, 2, 3, 0, 0, 123, 11, 2, 3, 0, 0, 125, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 0, 3, 1, 1, 0, 34, 5, 1, 1, 0, 59, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 67, 0, 245, 244, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 67, 0, 208, 207, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 67, 0, 184, 181, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 67, 0, 251, 250, 166, 134, 40, 65, 0, 237, 157, 41, 195, 0, 198, 41, 190, 41, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 120, 43, 2, 1, 0, 47, 124, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 67, 0, 210, 209, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 121, 0, 3, 1, 1, 0, 34, 5, 1, 1, 0, 59, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 122, 43, 2, 1, 0, 47, 124, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 7, 3, 3, 0, 0, 199, 198, 18, 66, 0, 101, 69, 253, 22, 67, 0, 117, 85, 247, 246, 23, 67, 0, 105, 189, 190, 73, 24, 67, 0, 111, 79, 245, 244, 30, 67, 0, 97, 65, 243, 242, 31, 67, 3, 0, 0, 251, 250, 34, 67, 3, 0, 0, 182, 181, 40, 0, 1, 200, 46, 67, 3, 0, 0, 249, 248, 49, 67, 3, 0, 0, 184, 183, 54, 4, 31, 0, 0, 0, 0, 123, 57, 0, 0, 32, 0, 39, 13, 97, 208, 101, 210, 190, 212, 105, 212, 111, 214, 117, 216, 65, 207, 69, 209, 73, 211, 189, 211, 79, 213, 85, 215, 32, 39, 0, 23, 24, 3, 4, 187, 1, 84, 84, 5, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 66, 117, 138, 1, 224, 1, 0, 0, 66, 117, 145, 0, 0, 0, 0, 0, 61, 117, 4, 3, 0, 0, 0, 0, 61, 117, 253, 1, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 4, 2, 3, 0, 0, 35, 5, 2, 3, 0, 0, 36, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 38, 9, 2, 3, 0, 0, 42, 26, 2, 3, 0, 0, 91, 27, 2, 3, 0, 0, 93, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 193, 0, 241, 53, 240, 0, 0, 7, 3, 3, 0, 0, 199, 198, 18, 66, 0, 101, 69, 253, 22, 67, 0, 117, 85, 247, 246, 23, 67, 0, 105, 189, 190, 73, 24, 67, 0, 111, 79, 245, 244, 30, 67, 0, 97, 65, 243, 242, 31, 67, 3, 0, 0, 251, 250, 34, 67, 3, 0, 0, 182, 181, 40, 0, 1, 200, 46, 67, 3, 0, 0, 249, 248, 49, 67, 3, 0, 0, 184, 183, 54, 4, 31, 0, 0, 0, 0, 121, 57, 0, 0, 32, 0, 39, 13, 97, 208, 101, 210, 190, 212, 105, 212, 111, 214, 117, 216, 65, 207, 69, 209, 73, 211, 189, 211, 79, 213, 85, 215, 32, 39, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 67, 0, 245, 244, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 67, 0, 208, 207, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 67, 0, 184, 181, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 67, 0, 251, 250, 166, 134, 40, 65, 0, 237, 157, 41, 1, 0, 124, 43, 42, 4, 31, 0, 0, 0, 0, 122, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 67, 0, 210, 209, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 195, 0, 198, 53, 190, 53, 241, 53, 240, 0, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 123, 0, 175, 114, 4, 19, 0, 0, 89, 67, 44, 0, 0, 83, 82, 44, 118, 0, 89, 67, 44, 118, 0, 83, 82, 11, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 104, 3, 218, 1, 0, 0, 0, 0, 104, 3, 27, 1, 176, 2, 0, 0, 87, 3, 167, 2, 0, 0, 0, 0, 87, 3, 239, 1, 176, 2, 0, 0, 80, 3, 121, 3, 0, 0, 0, 0, 80, 3, 189, 2, 0, 0, 0, 0, 101, 4, 79, 4, 0, 0, 0, 0, 101, 4, 142, 3, 0, 0, 0, 0, 90, 3, 20, 1, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 5, 2, 3, 0, 0, 207, 7, 2, 1, 0, 38, 94, 8, 2, 1, 0, 47, 38, 9, 2, 1, 0, 40, 36, 10, 2, 1, 0, 41, 60, 11, 2, 1, 0, 61, 62, 12, 1, 0, 39, 63, 13, 1, 0, 43, 42, 21, 196, 0, 122, 44, 90, 44, 0, 44, 26, 44, 0, 44, 26, 2, 3, 0, 0, 91, 27, 2, 0, 92, 92, 93, 39, 3, 4, 94, 94, 0, 30, 40, 3, 4, 93, 125, 0, 29, 41, 1, 0, 73, 86, 43, 2, 0, 64, 64, 124, 44, 196, 0, 121, 21, 89, 21, 0, 21, 25, 21, 0, 21, 51, 2, 0, 44, 59, 60, 52, 2, 0, 46, 58, 62, 53, 3, 0, 45, 95, 47, 31, 57, 0, 0, 32, 86, 1, 0, 60, 62, 0, 18, 66, 3, 0, 0, 213, 0, 5, 2, 7, 0, 0, 160, 12, 0, 1, 200, 16, 65, 0, 144, 145, 17, 65, 0, 146, 147, 18, 66, 0, 168, 169, 207, 19, 65, 0, 225, 226, 20, 65, 0, 229, 230, 21, 196, 0, 243, 44, 244, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 231, 232, 23, 65, 0, 183, 184, 24, 65, 0, 214, 215, 25, 65, 0, 216, 221, 26, 65, 0, 245, 246, 27, 65, 0, 128, 129, 30, 65, 0, 160, 161, 31, 65, 0, 227, 228, 32, 65, 0, 166, 167, 33, 65, 0, 170, 171, 34, 65, 0, 172, 173, 35, 65, 0, 181, 182, 36, 65, 0, 142, 143, 37, 65, 0, 198, 199, 38, 65, 0, 208, 209, 39, 65, 0, 251, 252, 40, 65, 0, 148, 149, 42, 4, 31, 0, 0, 0, 0, 120, 43, 65, 0, 233, 234, 44, 196, 0, 136, 21, 137, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 154, 155, 46, 65, 0, 164, 165, 47, 65, 0, 235, 236, 48, 65, 0, 162, 163, 49, 65, 0, 212, 213, 50, 65, 0, 210, 211, 0, 5, 2, 7, 0, 0, 160, 18, 66, 3, 0, 0, 207, 54, 4, 31, 0, 0, 0, 0, 121, 0, 12, 0, 1, 200, 16, 65, 0, 144, 145, 17, 65, 0, 146, 147, 18, 65, 0, 168, 169, 19, 65, 0, 225, 226, 20, 65, 0, 229, 230, 21, 196, 0, 243, 44, 244, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 231, 232, 23, 65, 0, 183, 184, 24, 65, 0, 214, 215, 25, 65, 0, 216, 221, 26, 65, 0, 245, 246, 27, 65, 0, 128, 129, 30, 65, 0, 160, 161, 31, 65, 0, 227, 228, 32, 65, 0, 166, 167, 33, 65, 0, 170, 171, 34, 65, 0, 172, 173, 35, 65, 0, 181, 182, 36, 65, 0, 142, 143, 37, 65, 0, 198, 199, 38, 65, 0, 208, 209, 39, 65, 0, 251, 252, 40, 65, 0, 148, 149, 42, 4, 31, 0, 0, 0, 0, 122, 43, 65, 0, 233, 234, 44, 196, 0, 136, 21, 137, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 154, 155, 46, 65, 0, 164, 165, 47, 65, 0, 235, 236, 48, 65, 0, 162, 163, 49, 65, 0, 212, 213, 50, 65, 0, 210, 211, 0, 54, 4, 31, 0, 0, 0, 0, 123, 0, 39, 5, 172, 130, 198, 150, 173, 131, 199, 151, 32, 39, 0, 16, 65, 0, 239, 159, 17, 65, 0, 249, 248, 18, 66, 0, 165, 133, 253, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 196, 0, 167, 44, 135, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 227, 147, 23, 65, 0, 247, 246, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 232, 152, 27, 65, 0, 235, 155, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 243, 242, 35, 65, 0, 163, 131, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 231, 151, 40, 65, 0, 238, 158, 41, 65, 0, 236, 156, 42, 4, 31, 0, 0, 0, 0, 124, 43, 65, 0, 166, 134, 44, 196, 0, 168, 21, 136, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 229, 149, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 0, 5, 2, 7, 0, 0, 160, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 125, 0, 5, 2, 3, 0, 0, 253, 16, 65, 0, 239, 159, 17, 65, 0, 249, 248, 18, 65, 0, 165, 133, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 196, 0, 167, 44, 135, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 227, 147, 23, 65, 0, 247, 246, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 232, 152, 27, 65, 0, 235, 155, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 243, 242, 35, 65, 0, 163, 131, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 231, 151, 40, 65, 0, 238, 158, 41, 65, 0, 236, 156, 42, 4, 31, 0, 0, 0, 0, 126, 43, 65, 0, 166, 134, 44, 196, 0, 168, 21, 136, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 229, 149, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 0, 5, 2, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 127, 0, 174, 106, 4, 9, 194, 1, 89, 67, 44, 194, 1, 83, 82, 11, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 104, 3, 238, 1, 0, 0, 0, 0, 104, 3, 52, 1, 0, 0, 0, 0, 87, 3, 187, 2, 0, 0, 0, 0, 87, 3, 2, 2, 0, 0, 0, 0, 80, 3, 133, 3, 0, 0, 0, 0, 80, 3, 201, 2, 0, 0, 0, 0, 101, 4, 83, 4, 0, 0, 0, 0, 101, 4, 152, 3, 0, 0, 0, 0, 90, 3, 45, 1, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 126, 3, 1, 1, 0, 34, 4, 3, 1, 0, 35, 94, 30, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 96, 9, 1, 1, 0, 40, 10, 1, 1, 0, 41, 11, 1, 1, 0, 61, 12, 1, 0, 39, 63, 13, 1, 0, 43, 42, 16, 66, 3, 0, 0, 92, 17, 66, 3, 0, 0, 124, 21, 196, 0, 122, 44, 90, 44, 0, 44, 26, 44, 0, 44, 33, 66, 3, 0, 0, 91, 34, 66, 3, 0, 0, 93, 39, 3, 4, 94, 94, 0, 30, 40, 1, 0, 245, 245, 41, 3, 4, 92, 124, 0, 28, 43, 1, 0, 64, 64, 44, 196, 0, 121, 21, 89, 21, 0, 21, 25, 21, 0, 21, 47, 66, 3, 0, 0, 64, 48, 66, 3, 0, 0, 123, 49, 66, 3, 0, 0, 125, 51, 1, 0, 44, 59, 52, 1, 0, 46, 58, 53, 3, 4, 45, 95, 0, 31, 86, 1, 0, 60, 62, 0, 18, 66, 3, 0, 0, 213, 0, 16, 65, 0, 144, 145, 17, 65, 0, 146, 147, 18, 66, 0, 168, 169, 207, 19, 65, 0, 225, 226, 20, 65, 0, 229, 230, 21, 196, 0, 243, 44, 244, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 231, 232, 23, 65, 0, 183, 184, 24, 65, 0, 214, 215, 25, 65, 0, 216, 221, 26, 66, 0, 245, 246, 131, 27, 66, 0, 128, 129, 130, 30, 65, 0, 160, 161, 31, 65, 0, 227, 228, 32, 65, 0, 166, 167, 33, 65, 0, 170, 171, 34, 65, 0, 172, 173, 35, 65, 0, 181, 182, 36, 65, 0, 142, 143, 37, 65, 0, 198, 199, 38, 65, 0, 208, 209, 39, 66, 0, 251, 252, 151, 40, 66, 0, 148, 149, 150, 42, 4, 31, 0, 0, 0, 0, 120, 43, 65, 0, 233, 234, 44, 196, 0, 136, 21, 137, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 154, 155, 46, 65, 0, 164, 165, 47, 65, 0, 235, 236, 48, 65, 0, 162, 163, 49, 65, 0, 212, 213, 50, 66, 0, 210, 211, 253, 0, 18, 66, 3, 0, 0, 207, 40, 1, 0, 253, 253, 54, 4, 31, 0, 0, 0, 0, 121, 0, 16, 65, 0, 144, 145, 17, 65, 0, 146, 147, 18, 65, 0, 168, 169, 19, 65, 0, 225, 226, 20, 65, 0, 229, 230, 21, 196, 0, 243, 44, 244, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 231, 232, 23, 65, 0, 183, 184, 24, 65, 0, 214, 215, 25, 65, 0, 216, 221, 26, 66, 0, 245, 246, 131, 27, 66, 0, 128, 129, 130, 30, 65, 0, 160, 161, 31, 65, 0, 227, 228, 32, 65, 0, 166, 167, 33, 65, 0, 170, 171, 34, 65, 0, 172, 173, 35, 65, 0, 181, 182, 36, 65, 0, 142, 143, 37, 65, 0, 198, 199, 38, 65, 0, 208, 209, 39, 66, 0, 251, 252, 151, 40, 66, 0, 148, 149, 150, 42, 4, 31, 0, 0, 0, 0, 122, 43, 65, 0, 233, 234, 44, 196, 0, 136, 21, 137, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 154, 155, 46, 65, 0, 164, 165, 47, 65, 0, 235, 236, 48, 65, 0, 162, 163, 49, 65, 0, 212, 213, 50, 66, 0, 210, 211, 253, 0, 40, 1, 0, 253, 253, 54, 4, 31, 0, 0, 0, 0, 123, 0, 16, 65, 0, 239, 159, 17, 65, 0, 249, 248, 18, 66, 0, 165, 133, 253, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 196, 0, 167, 44, 135, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 227, 147, 23, 65, 0, 247, 246, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 232, 152, 27, 65, 0, 235, 155, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 243, 242, 35, 65, 0, 163, 131, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 231, 151, 40, 65, 0, 238, 158, 41, 65, 0, 236, 156, 42, 4, 31, 0, 0, 0, 0, 124, 43, 65, 0, 166, 134, 44, 196, 0, 168, 21, 136, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 229, 149, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 0, 18, 66, 3, 0, 0, 253, 40, 16, 0, 0, 54, 4, 31, 0, 0, 0, 0, 125, 0, 16, 65, 0, 239, 159, 17, 65, 0, 249, 248, 18, 65, 0, 165, 133, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 196, 0, 167, 44, 135, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 227, 147, 23, 65, 0, 247, 246, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 232, 152, 27, 65, 0, 235, 155, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 243, 242, 35, 65, 0, 163, 131, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 231, 151, 40, 65, 0, 238, 158, 41, 65, 0, 236, 156, 42, 4, 31, 0, 0, 0, 0, 126, 43, 65, 0, 166, 134, 44, 196, 0, 168, 21, 136, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 229, 149, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 0, 40, 16, 0, 0, 54, 4, 31, 0, 0, 0, 0, 127, 0, 175, 0, 0, 0, 75, 67, 70, 0, 1, 1, 46, 72, 101, 110, 114, 105, 113, 117, 101, 32, 80, 101, 114, 111, 110, 255, 68, 79, 83, 32, 99, 111, 100, 101, 112, 97, 103, 101, 115, 32, 45, 32, 108, 105, 98, 114, 97, 114, 121, 32, 35, 51, 32, 111, 102, 32, 51, 108, 2, 4, 0, 0, 65, 90, 5, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 98, 235, 89, 1, 0, 0, 0, 0, 98, 235, 164, 0, 0, 0, 0, 0, 98, 227, 94, 2, 0, 0, 0, 0, 98, 227, 147, 1, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 4, 2, 1, 0, 39, 35, 5, 3, 3, 0, 160, 36, 78, 6, 1, 1, 0, 58, 8, 2, 3, 0, 0, 38, 9, 2, 1, 0, 59, 42, 10, 2, 1, 0, 63, 123, 11, 2, 1, 0, 37, 125, 41, 3, 0, 41, 40, 93, 91, 43, 2, 0, 44, 124, 92, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 53, 2, 0, 46, 63, 47, 0, 7, 1, 1, 0, 44, 8, 1, 1, 0, 46, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 65, 0, 165, 133, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 42, 4, 31, 0, 0, 0, 0, 120, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 0, 7, 1, 1, 0, 243, 8, 1, 1, 0, 241, 17, 67, 0, 245, 244, 119, 87, 26, 65, 0, 252, 251, 27, 65, 0, 247, 246, 39, 65, 0, 254, 253, 40, 65, 0, 249, 248, 51, 65, 0, 243, 242, 52, 193, 0, 241, 52, 240, 0, 54, 4, 31, 0, 0, 0, 0, 121, 0, 7, 1, 1, 0, 44, 8, 1, 1, 0, 46, 16, 67, 0, 106, 74, 169, 137, 17, 67, 0, 253, 89, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 65, 0, 165, 133, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 67, 0, 104, 252, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 67, 0, 243, 242, 234, 154, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 67, 0, 245, 244, 237, 157, 42, 4, 31, 0, 0, 0, 0, 122, 44, 67, 0, 247, 246, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 67, 0, 249, 248, 236, 156, 51, 67, 4, 161, 129, 0, 62, 52, 195, 0, 241, 52, 240, 0, 238, 52, 158, 52, 0, 54, 4, 31, 0, 0, 0, 0, 123, 0, 236, 193, 4, 19, 0, 0, 66, 76, 44, 0, 0, 66, 89, 44, 207, 1, 66, 76, 44, 207, 1, 66, 89, 11, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 81, 3, 202, 1, 0, 0, 0, 0, 81, 3, 224, 0, 0, 0, 0, 0, 107, 4, 200, 2, 0, 0, 0, 0, 107, 4, 223, 1, 0, 0, 0, 0, 104, 3, 180, 3, 0, 0, 0, 0, 104, 3, 215, 2, 0, 0, 0, 0, 87, 3, 164, 4, 0, 0, 0, 0, 87, 3, 201, 3, 0, 0, 0, 0, 90, 3, 217, 0, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 4, 2, 3, 0, 0, 35, 5, 2, 3, 0, 0, 207, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 38, 9, 2, 3, 0, 0, 36, 10, 2, 3, 0, 0, 174, 11, 2, 3, 0, 0, 175, 26, 2, 3, 0, 0, 91, 27, 2, 3, 0, 0, 93, 43, 2, 3, 0, 0, 124, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 53, 2, 3, 0, 0, 47, 0, 18, 66, 3, 0, 0, 213, 0, 3, 1, 1, 0, 34, 5, 2, 5, 0, 59, 160, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 10, 2, 7, 0, 0, 160, 11, 2, 7, 0, 0, 160, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 66, 0, 227, 147, 251, 19, 65, 0, 170, 138, 20, 67, 0, 165, 133, 243, 242, 21, 65, 0, 173, 141, 22, 67, 0, 163, 131, 253, 252, 23, 67, 0, 232, 152, 233, 153, 24, 65, 0, 247, 246, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 1, 0, 39, 39, 30, 65, 0, 228, 148, 31, 67, 0, 235, 155, 234, 154, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 67, 0, 237, 157, 245, 244, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 67, 0, 249, 248, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 5, 2, 7, 0, 0, 160, 18, 66, 3, 0, 0, 251, 54, 4, 31, 0, 0, 0, 0, 121, 0, 3, 1, 1, 0, 34, 5, 2, 1, 0, 59, 251, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 10, 2, 7, 0, 0, 160, 11, 2, 7, 0, 0, 160, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 67, 0, 165, 133, 243, 242, 21, 65, 0, 173, 141, 22, 67, 0, 163, 131, 253, 252, 23, 67, 0, 232, 152, 233, 153, 24, 65, 0, 247, 246, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 1, 0, 39, 39, 30, 65, 0, 228, 148, 31, 67, 0, 235, 155, 234, 154, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 67, 0, 237, 157, 245, 244, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 122, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 67, 0, 249, 248, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 5, 2, 3, 0, 0, 251, 54, 4, 31, 0, 0, 0, 0, 123, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 239, 5, 2, 5, 0, 59, 160, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 189, 190, 17, 65, 0, 164, 165, 18, 66, 0, 231, 232, 207, 19, 65, 0, 198, 199, 20, 67, 0, 168, 169, 134, 135, 21, 65, 0, 212, 213, 22, 65, 0, 172, 173, 23, 67, 0, 245, 246, 249, 250, 24, 65, 0, 152, 153, 25, 65, 0, 243, 244, 26, 65, 0, 181, 182, 27, 1, 0, 39, 39, 30, 65, 0, 170, 171, 31, 67, 0, 241, 242, 158, 159, 32, 65, 0, 235, 236, 33, 65, 0, 160, 161, 34, 65, 0, 216, 221, 35, 65, 0, 225, 226, 36, 65, 0, 214, 215, 37, 65, 0, 208, 209, 38, 65, 0, 166, 167, 39, 65, 0, 233, 234, 40, 65, 0, 247, 248, 41, 65, 0, 132, 133, 42, 4, 31, 0, 0, 0, 0, 124, 43, 1, 1, 0, 47, 44, 193, 0, 222, 44, 224, 0, 45, 65, 0, 251, 252, 46, 65, 0, 227, 228, 47, 65, 0, 210, 211, 48, 67, 0, 138, 139, 183, 184, 49, 65, 0, 229, 230, 50, 65, 0, 237, 238, 51, 65, 0, 162, 163, 52, 65, 0, 156, 157, 53, 1, 0, 46, 44, 0, 5, 2, 7, 0, 0, 160, 18, 66, 3, 0, 0, 207, 54, 4, 31, 0, 0, 0, 0, 125, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 239, 5, 1, 1, 0, 59, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 189, 190, 17, 65, 0, 164, 165, 18, 65, 0, 231, 232, 19, 65, 0, 198, 199, 20, 67, 0, 168, 169, 134, 135, 21, 65, 0, 212, 213, 22, 65, 0, 172, 173, 23, 67, 0, 245, 246, 249, 250, 24, 65, 0, 152, 153, 25, 65, 0, 243, 244, 26, 65, 0, 181, 182, 27, 1, 0, 39, 39, 30, 65, 0, 170, 171, 31, 67, 0, 241, 242, 158, 159, 32, 65, 0, 235, 236, 33, 65, 0, 160, 161, 34, 65, 0, 216, 221, 35, 65, 0, 225, 226, 36, 65, 0, 214, 215, 37, 65, 0, 208, 209, 38, 65, 0, 166, 167, 39, 65, 0, 233, 234, 40, 65, 0, 247, 248, 41, 65, 0, 132, 133, 42, 4, 31, 0, 0, 0, 0, 126, 43, 1, 1, 0, 47, 44, 193, 0, 222, 44, 224, 0, 45, 65, 0, 251, 252, 46, 65, 0, 227, 228, 47, 65, 0, 210, 211, 48, 67, 0, 138, 139, 183, 184, 49, 65, 0, 229, 230, 50, 65, 0, 237, 238, 51, 65, 0, 162, 163, 52, 65, 0, 156, 157, 53, 1, 0, 46, 44, 0, 54, 4, 31, 0, 0, 0, 0, 127, 0, 67, 8, 2, 4, 0, 0, 66, 78, 2, 4, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75, 117, 68, 0, 110, 1, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 65, 0, 38, 49, 3, 66, 0, 130, 50, 126, 4, 66, 0, 34, 51, 35, 5, 66, 1, 203, 52, 123, 6, 68, 8, 40, 53, 91, 0, 27, 7, 68, 8, 45, 54, 124, 0, 31, 8, 66, 4, 138, 55, 200, 9, 68, 8, 95, 56, 92, 0, 28, 10, 66, 0, 135, 57, 94, 11, 66, 0, 133, 48, 64, 12, 68, 8, 41, 248, 93, 0, 29, 13, 66, 3, 0, 0, 125, 16, 197, 0, 97, 30, 65, 30, 145, 30, 146, 30, 1, 30, 0, 30, 17, 197, 0, 122, 44, 90, 44, 132, 44, 142, 44, 26, 44, 0, 44, 18, 67, 0, 101, 69, 198, 199, 19, 3, 3, 0, 0, 148, 153, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 67, 0, 105, 73, 225, 238, 24, 67, 0, 111, 79, 228, 229, 25, 3, 3, 0, 0, 247, 239, 26, 68, 15, 201, 202, 0, 0, 30, 27, 67, 6, 36, 160, 0, 213, 30, 197, 0, 113, 16, 81, 16, 0, 16, 0, 16, 17, 16, 0, 16, 31, 3, 3, 0, 0, 249, 221, 32, 3, 3, 0, 0, 168, 173, 38, 3, 3, 0, 0, 171, 172, 39, 197, 0, 109, 50, 77, 50, 0, 50, 0, 50, 13, 50, 0, 50, 40, 65, 2, 151, 204, 41, 65, 0, 158, 159, 43, 67, 0, 155, 157, 42, 230, 44, 197, 0, 119, 17, 87, 17, 0, 17, 0, 17, 23, 17, 0, 17, 46, 65, 0, 99, 67, 49, 67, 0, 110, 78, 164, 165, 50, 65, 0, 44, 63, 51, 67, 0, 59, 46, 60, 174, 52, 67, 0, 58, 47, 62, 175, 53, 65, 0, 33, 245, 57, 0, 0, 32, 86, 65, 0, 60, 62, 0, 96, 15, 97, 133, 101, 138, 158, 208, 105, 141, 111, 149, 155, 250, 117, 151, 65, 183, 69, 212, 159, 209, 73, 222, 79, 227, 157, 251, 85, 235, 32, 96, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 34, 9, 101, 137, 105, 139, 117, 129, 121, 152, 69, 211, 73, 216, 85, 154, 89, 243, 32, 34, 39, 19, 97, 160, 101, 130, 158, 241, 105, 161, 111, 162, 155, 236, 117, 163, 110, 156, 99, 135, 65, 181, 69, 144, 159, 242, 73, 214, 79, 224, 157, 237, 85, 233, 78, 207, 67, 128, 32, 39, 37, 15, 97, 134, 101, 166, 158, 231, 105, 169, 111, 189, 155, 252, 117, 244, 65, 143, 69, 167, 159, 232, 73, 184, 79, 190, 157, 253, 85, 246, 32, 37, 0, 205, 75, 3, 19, 0, 0, 69, 84, 44, 0, 0, 69, 69, 44, 198, 1, 69, 84, 44, 198, 1, 69, 69, 6, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 7, 3, 24, 1, 64, 1, 0, 0, 82, 3, 209, 2, 214, 2, 0, 0, 90, 3, 192, 2, 214, 2, 0, 0, 91, 3, 49, 2, 83, 2, 0, 0, 92, 4, 181, 1, 196, 1, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 105975);
allocate([0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 34, 64, 64, 4, 3, 3, 0, 0, 156, 156, 5, 3, 1, 0, 207, 36, 36, 7, 1, 1, 0, 38, 8, 3, 1, 0, 47, 123, 123, 9, 4, 1, 0, 40, 91, 91, 27, 10, 4, 1, 0, 41, 93, 93, 29, 11, 3, 1, 0, 61, 125, 125, 12, 4, 0, 43, 63, 92, 92, 28, 13, 1, 3, 203, 200, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 65, 0, 129, 154, 27, 67, 0, 228, 229, 245, 245, 30, 65, 0, 97, 65, 31, 65, 0, 115, 83, 39, 65, 0, 148, 153, 40, 68, 4, 132, 142, 202, 94, 30, 41, 1, 3, 204, 201, 43, 3, 0, 39, 42, 171, 171, 44, 65, 0, 122, 90, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 4, 0, 45, 95, 124, 124, 31, 57, 0, 0, 32, 86, 3, 0, 60, 62, 124, 124, 0, 5, 1, 1, 0, 159, 19, 65, 0, 114, 82, 31, 67, 3, 0, 0, 213, 190, 34, 65, 0, 103, 71, 37, 65, 0, 107, 75, 38, 65, 0, 108, 76, 44, 67, 3, 0, 0, 216, 207, 0, 96, 11, 97, 131, 101, 137, 105, 140, 111, 147, 117, 215, 65, 160, 69, 237, 73, 161, 79, 226, 85, 199, 32, 96, 126, 3, 111, 228, 79, 229, 32, 126, 94, 19, 97, 208, 101, 210, 105, 212, 117, 214, 103, 133, 107, 233, 108, 235, 110, 236, 114, 139, 65, 181, 69, 183, 73, 189, 85, 198, 71, 149, 75, 232, 76, 234, 78, 238, 82, 138, 32, 94, 239, 13, 99, 135, 101, 130, 110, 231, 111, 162, 115, 152, 122, 165, 67, 128, 69, 144, 78, 227, 79, 224, 83, 151, 90, 141, 32, 239, 39, 7, 99, 209, 115, 213, 122, 216, 67, 182, 83, 190, 90, 207, 32, 39, 0, 31, 67, 3, 0, 0, 208, 209, 44, 67, 3, 0, 0, 231, 232, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 118, 5, 115, 208, 122, 231, 83, 209, 90, 232, 32, 118, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 31, 67, 3, 0, 0, 249, 221, 43, 3, 15, 0, 0, 160, 160, 44, 67, 3, 0, 0, 247, 239, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 118, 5, 115, 249, 122, 247, 83, 221, 90, 239, 32, 118, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 41, 0, 1, 160, 0, 41, 0, 1, 160, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 0, 134, 224, 1, 4, 0, 0, 70, 79, 4, 2, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 82, 3, 0, 0, 252, 0, 0, 0, 90, 3, 239, 0, 252, 0, 0, 0, 93, 3, 119, 1, 152, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 4, 2, 3, 0, 0, 156, 5, 2, 1, 0, 207, 36, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 123, 9, 3, 1, 0, 40, 91, 27, 10, 3, 1, 0, 41, 93, 29, 11, 2, 1, 0, 61, 125, 12, 1, 0, 43, 63, 13, 2, 3, 203, 200, 124, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 66, 4, 134, 143, 204, 27, 66, 4, 208, 209, 201, 30, 65, 0, 97, 65, 39, 65, 0, 145, 146, 40, 67, 4, 155, 157, 202, 30, 41, 1, 0, 171, 245, 43, 1, 0, 39, 42, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 50, 66, 3, 0, 0, 230, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 53, 3, 0, 45, 95, 92, 31, 57, 0, 0, 32, 86, 3, 0, 60, 62, 92, 28, 0, 6, 2, 3, 0, 0, 213, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 5, 1, 3, 0, 160, 13, 0, 1, 202, 26, 66, 7, 0, 0, 203, 27, 66, 0, 140, 139, 126, 40, 66, 7, 0, 0, 201, 41, 1, 0, 171, 21, 0, 96, 3, 97, 133, 101, 138, 32, 96, 94, 5, 97, 131, 101, 136, 111, 147, 117, 150, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 152, 65, 164, 69, 144, 73, 165, 79, 166, 85, 167, 89, 151, 32, 39, 34, 8, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 0, 251, 94, 1, 4, 0, 0, 72, 89, 3, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131, 3, 80, 1, 0, 0, 0, 0, 131, 3, 68, 0, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 67, 0, 165, 164, 49, 33, 3, 67, 0, 231, 230, 50, 64, 4, 67, 0, 147, 146, 51, 35, 5, 67, 0, 161, 160, 52, 36, 6, 67, 0, 169, 168, 53, 37, 7, 66, 0, 233, 232, 54, 8, 195, 0, 241, 8, 240, 0, 55, 126, 38, 126, 9, 67, 0, 243, 242, 56, 42, 10, 66, 0, 141, 140, 57, 11, 66, 0, 163, 162, 48, 13, 3, 0, 40, 41, 61, 43, 16, 65, 0, 247, 246, 17, 65, 0, 131, 130, 18, 65, 0, 235, 234, 19, 65, 0, 167, 166, 20, 193, 0, 225, 20, 224, 0, 21, 65, 0, 245, 244, 22, 65, 0, 157, 156, 23, 65, 0, 143, 142, 24, 65, 0, 145, 144, 25, 65, 0, 155, 154, 26, 67, 0, 251, 250, 91, 123, 27, 67, 0, 253, 252, 93, 125, 30, 65, 0, 237, 236, 31, 65, 0, 133, 132, 32, 65, 0, 137, 136, 33, 65, 0, 129, 128, 34, 65, 0, 171, 170, 35, 65, 0, 149, 148, 36, 65, 0, 239, 238, 37, 65, 0, 159, 158, 38, 65, 0, 229, 228, 39, 1, 0, 58, 221, 40, 2, 0, 39, 254, 34, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 0, 222, 21, 44, 65, 0, 135, 134, 45, 65, 0, 227, 226, 46, 65, 0, 139, 138, 47, 65, 0, 151, 150, 48, 65, 0, 249, 248, 49, 65, 0, 153, 152, 50, 65, 0, 173, 172, 51, 2, 1, 0, 174, 60, 52, 2, 1, 0, 175, 62, 53, 3, 0, 223, 220, 47, 63, 0, 54, 4, 31, 0, 0, 0, 0, 121, 0, 45, 96, 3, 4, 0, 0, 75, 65, 7, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 181, 233, 120, 1, 0, 0, 0, 0, 181, 233, 167, 0, 0, 0, 0, 0, 181, 237, 85, 2, 0, 0, 0, 0, 181, 237, 129, 1, 0, 0, 0, 0, 56, 117, 76, 3, 0, 0, 0, 0, 56, 117, 94, 2, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 4, 2, 3, 0, 0, 35, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 38, 9, 2, 3, 0, 0, 36, 26, 2, 3, 0, 0, 91, 27, 2, 3, 0, 0, 93, 43, 2, 3, 0, 0, 124, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 53, 2, 3, 0, 0, 47, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 37, 5, 1, 1, 0, 59, 6, 1, 1, 0, 58, 7, 1, 1, 0, 44, 8, 1, 1, 0, 46, 16, 1, 0, 150, 150, 17, 1, 0, 154, 154, 18, 1, 0, 147, 147, 19, 1, 0, 137, 137, 20, 1, 0, 132, 132, 21, 1, 0, 140, 140, 22, 1, 0, 130, 130, 23, 1, 0, 152, 152, 24, 1, 0, 156, 156, 25, 1, 0, 134, 134, 26, 1, 0, 158, 158, 27, 1, 0, 155, 155, 30, 1, 0, 148, 148, 31, 1, 0, 135, 135, 32, 1, 0, 133, 133, 33, 1, 0, 128, 128, 34, 1, 0, 142, 142, 35, 1, 0, 144, 144, 36, 1, 0, 141, 141, 37, 1, 0, 138, 138, 38, 1, 0, 131, 131, 39, 1, 0, 143, 143, 40, 1, 0, 151, 151, 41, 1, 0, 162, 162, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 0, 160, 160, 44, 1, 0, 157, 157, 45, 1, 0, 153, 153, 46, 1, 0, 145, 145, 47, 1, 0, 139, 139, 48, 1, 0, 136, 136, 49, 1, 0, 146, 146, 50, 1, 0, 149, 149, 51, 1, 0, 129, 129, 52, 1, 0, 159, 159, 0, 54, 4, 31, 0, 0, 0, 0, 121, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 37, 5, 1, 1, 0, 59, 6, 1, 1, 0, 58, 7, 1, 1, 0, 44, 8, 1, 1, 0, 46, 16, 65, 0, 230, 150, 17, 65, 0, 234, 154, 18, 65, 0, 227, 147, 19, 65, 0, 169, 137, 20, 65, 0, 164, 132, 21, 65, 0, 172, 140, 22, 65, 0, 162, 130, 23, 65, 0, 232, 152, 24, 65, 0, 236, 156, 25, 65, 0, 166, 134, 26, 65, 0, 238, 158, 27, 65, 0, 235, 155, 30, 65, 0, 228, 148, 31, 65, 0, 167, 135, 32, 65, 0, 165, 133, 33, 65, 0, 160, 128, 34, 65, 0, 174, 142, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 173, 141, 37, 65, 0, 170, 138, 38, 65, 0, 163, 131, 39, 65, 0, 175, 143, 40, 65, 0, 231, 151, 41, 16, 0, 0, 42, 4, 31, 0, 0, 0, 0, 122, 43, 193, 0, 240, 43, 240, 0, 44, 65, 0, 237, 157, 45, 65, 0, 233, 153, 46, 65, 0, 225, 145, 47, 65, 0, 171, 139, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 229, 149, 51, 65, 0, 161, 129, 52, 65, 0, 239, 159, 0, 54, 4, 31, 0, 0, 0, 0, 123, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 37, 5, 1, 1, 0, 59, 6, 1, 1, 0, 58, 7, 1, 1, 0, 44, 8, 1, 1, 0, 46, 16, 65, 0, 169, 137, 17, 67, 0, 230, 150, 246, 247, 18, 67, 0, 227, 147, 211, 212, 19, 67, 0, 170, 138, 209, 210, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 67, 0, 163, 131, 181, 182, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 67, 0, 167, 135, 207, 208, 26, 67, 0, 229, 149, 213, 214, 27, 67, 0, 234, 154, 244, 245, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 67, 0, 160, 128, 250, 251, 34, 67, 0, 175, 143, 215, 216, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 67, 0, 166, 134, 183, 184, 40, 66, 0, 237, 157, 254, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 124, 44, 67, 0, 239, 159, 198, 199, 45, 67, 0, 231, 151, 189, 190, 46, 67, 0, 225, 145, 248, 249, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 67, 0, 226, 146, 242, 243, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 0, 6, 2, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 125, 0, 188, 111, 1, 4, 0, 0, 75, 75, 3, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 227, 50, 1, 0, 0, 0, 0, 40, 227, 68, 0, 65, 1, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 4, 2, 1, 0, 252, 35, 5, 2, 5, 0, 59, 160, 7, 2, 1, 0, 58, 94, 8, 2, 1, 0, 63, 38, 9, 2, 3, 0, 0, 36, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 66, 0, 229, 149, 91, 27, 66, 0, 234, 154, 93, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 131, 3, 200, 41, 0, 41, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 120, 43, 2, 1, 0, 47, 124, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 66, 0, 161, 129, 60, 52, 66, 0, 238, 158, 62, 53, 1, 0, 46, 44, 57, 0, 0, 32, 0, 18, 2, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 121, 0, 96, 19, 160, 209, 163, 211, 168, 245, 169, 247, 170, 213, 173, 215, 174, 243, 227, 221, 229, 223, 128, 208, 131, 210, 136, 244, 137, 246, 138, 212, 141, 214, 142, 242, 147, 220, 149, 222, 32, 96, 0, 25, 68, 1, 4, 0, 0, 75, 89, 3, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 227, 48, 1, 0, 0, 0, 0, 40, 227, 68, 0, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 4, 2, 1, 0, 252, 35, 5, 2, 5, 0, 59, 160, 7, 2, 1, 0, 58, 94, 8, 2, 1, 0, 63, 38, 9, 2, 3, 0, 0, 36, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 67, 0, 227, 147, 221, 220, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 67, 0, 173, 141, 215, 214, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 66, 0, 229, 149, 91, 27, 66, 0, 234, 154, 93, 30, 65, 0, 228, 148, 31, 65, 0, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 67, 0, 174, 142, 243, 242, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 120, 43, 2, 1, 0, 47, 124, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 66, 0, 161, 129, 60, 52, 66, 0, 238, 158, 62, 53, 1, 0, 46, 44, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 121, 0, 57, 96, 5, 9, 0, 0, 76, 84, 44, 212, 0, 76, 84, 11, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 7, 3, 196, 0, 0, 0, 0, 0, 2, 3, 242, 0, 0, 0, 0, 0, 5, 3, 32, 1, 0, 0, 0, 0, 6, 3, 196, 0, 0, 0, 0, 0, 9, 3, 80, 1, 196, 1, 0, 0, 10, 3, 85, 2, 199, 2, 0, 0, 3, 3, 88, 3, 0, 0, 0, 0, 3, 3, 144, 3, 0, 0, 0, 0, 4, 3, 87, 4, 0, 0, 0, 0, 4, 3, 141, 4, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 0, 0, 49, 33, 3, 3, 3, 0, 0, 50, 64, 4, 3, 3, 0, 0, 51, 35, 5, 3, 3, 0, 0, 52, 36, 6, 3, 3, 0, 0, 53, 37, 7, 3, 3, 0, 0, 54, 94, 8, 3, 3, 0, 0, 55, 38, 9, 3, 3, 0, 0, 56, 42, 13, 3, 3, 0, 0, 61, 43, 0, 2, 65, 0, 208, 181, 3, 65, 0, 209, 182, 4, 65, 0, 210, 183, 5, 65, 0, 211, 184, 6, 65, 0, 212, 189, 7, 65, 0, 213, 190, 8, 65, 0, 214, 198, 9, 65, 0, 215, 199, 13, 65, 0, 216, 207, 0, 2, 65, 0, 133, 143, 3, 65, 0, 135, 128, 4, 65, 0, 138, 139, 5, 65, 0, 130, 144, 6, 65, 0, 141, 173, 7, 65, 0, 158, 159, 8, 65, 0, 151, 167, 9, 65, 0, 150, 166, 13, 65, 0, 145, 146, 0, 2, 65, 0, 221, 220, 3, 65, 0, 223, 222, 4, 193, 0, 241, 4, 240, 0, 5, 65, 0, 243, 242, 6, 65, 0, 245, 244, 7, 65, 0, 247, 246, 8, 65, 0, 249, 248, 9, 65, 0, 251, 250, 13, 65, 0, 253, 252, 0, 2, 65, 0, 221, 220, 3, 65, 0, 223, 222, 4, 193, 0, 241, 4, 240, 0, 5, 65, 0, 243, 242, 6, 65, 0, 245, 244, 7, 65, 0, 247, 246, 8, 65, 0, 249, 248, 9, 65, 0, 251, 250, 13, 65, 0, 253, 252, 18, 65, 0, 101, 69, 19, 65, 0, 114, 82, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 30, 65, 0, 97, 65, 36, 65, 2, 106, 0, 38, 65, 0, 108, 76, 40, 0, 1, 202, 41, 1, 3, 200, 201, 49, 65, 0, 110, 78, 50, 65, 0, 109, 77, 57, 0, 0, 32, 0, 96, 11, 97, 131, 101, 165, 105, 233, 111, 236, 117, 136, 65, 160, 69, 141, 73, 232, 79, 238, 85, 173, 32, 96, 126, 33, 97, 134, 221, 181, 101, 133, 241, 214, 243, 139, 105, 159, 245, 231, 108, 230, 109, 190, 110, 212, 111, 228, 114, 175, 117, 198, 249, 239, 251, 184, 121, 164, 65, 143, 220, 189, 69, 149, 240, 156, 242, 138, 73, 208, 244, 227, 76, 166, 77, 167, 78, 168, 79, 229, 82, 174, 85, 158, 248, 171, 250, 169, 89, 163, 32, 126, 39, 25, 97, 135, 221, 137, 101, 130, 241, 216, 243, 155, 105, 140, 245, 235, 111, 162, 117, 152, 249, 172, 251, 145, 121, 147, 65, 128, 220, 237, 69, 144, 240, 150, 242, 157, 73, 161, 244, 234, 79, 224, 85, 151, 248, 170, 250, 146, 89, 226, 32, 39, 0, 2, 65, 0, 208, 181, 3, 65, 0, 209, 182, 4, 65, 0, 210, 183, 5, 65, 0, 211, 184, 6, 65, 0, 212, 189, 7, 65, 0, 213, 190, 8, 65, 0, 214, 198, 9, 65, 0, 215, 199, 13, 65, 0, 216, 207, 18, 65, 0, 101, 69, 19, 65, 0, 114, 82, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 30, 65, 0, 97, 65, 36, 65, 2, 106, 0, 38, 65, 0, 108, 76, 40, 0, 1, 202, 41, 1, 3, 200, 201, 49, 65, 0, 110, 78, 50, 65, 0, 109, 77, 57, 0, 0, 32, 0, 96, 11, 97, 131, 101, 165, 105, 233, 111, 236, 117, 136, 65, 160, 69, 141, 73, 232, 79, 238, 85, 173, 32, 96, 126, 33, 97, 134, 208, 241, 101, 133, 210, 252, 211, 139, 105, 159, 212, 231, 108, 230, 109, 245, 110, 251, 111, 228, 114, 175, 117, 246, 214, 239, 215, 243, 121, 164, 65, 143, 181, 244, 69, 149, 183, 156, 184, 138, 73, 248, 189, 227, 76, 166, 77, 167, 78, 168, 79, 229, 82, 174, 85, 158, 198, 171, 199, 169, 89, 163, 32, 126, 39, 25, 97, 135, 208, 137, 101, 130, 210, 253, 211, 155, 105, 140, 212, 235, 111, 162, 117, 152, 214, 172, 215, 145, 121, 147, 65, 128, 181, 237, 69, 144, 183, 150, 184, 157, 73, 161, 189, 234, 79, 224, 85, 151, 198, 170, 199, 146, 89, 226, 32, 39, 0, 2, 65, 0, 221, 220, 3, 65, 0, 223, 222, 4, 193, 0, 241, 4, 240, 0, 5, 65, 0, 243, 242, 6, 65, 0, 245, 244, 7, 65, 0, 247, 246, 8, 65, 0, 249, 248, 9, 65, 0, 251, 250, 13, 65, 0, 253, 252, 54, 4, 31, 0, 0, 0, 0, 127, 0, 2, 1, 3, 160, 160, 3, 65, 0, 231, 151, 4, 1, 3, 160, 160, 5, 65, 0, 237, 157, 6, 1, 3, 160, 160, 7, 65, 0, 232, 152, 8, 65, 0, 238, 158, 9, 1, 3, 160, 160, 13, 65, 0, 166, 134, 16, 65, 0, 239, 159, 17, 65, 0, 233, 153, 18, 65, 0, 165, 133, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 235, 155, 22, 65, 0, 227, 147, 23, 65, 0, 168, 136, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 67, 0, 234, 154, 91, 123, 27, 67, 0, 236, 156, 93, 125, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 42, 4, 31, 0, 0, 0, 0, 126, 44, 65, 0, 167, 135, 45, 16, 0, 0, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 0, 2, 65, 0, 208, 181, 3, 65, 0, 209, 182, 4, 65, 0, 210, 183, 5, 65, 0, 211, 184, 6, 65, 0, 212, 189, 7, 65, 0, 213, 190, 8, 65, 0, 214, 198, 9, 65, 0, 215, 199, 13, 65, 0, 216, 207, 54, 4, 31, 0, 0, 0, 0, 129, 0, 2, 1, 3, 160, 160, 3, 65, 0, 231, 151, 4, 193, 0, 241, 4, 240, 0, 5, 65, 0, 237, 157, 6, 1, 3, 160, 160, 7, 65, 0, 232, 152, 8, 65, 0, 238, 158, 9, 1, 3, 160, 160, 13, 65, 0, 166, 134, 16, 65, 0, 239, 159, 17, 65, 0, 233, 153, 18, 65, 0, 165, 133, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 235, 155, 22, 65, 0, 227, 147, 23, 65, 0, 168, 136, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 67, 0, 234, 154, 91, 123, 27, 67, 0, 236, 156, 93, 125, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 42, 4, 31, 0, 0, 0, 0, 128, 44, 65, 0, 167, 135, 45, 16, 0, 0, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 0, 193, 154, 3, 4, 210, 0, 76, 84, 9, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 7, 3, 0, 0, 0, 0, 0, 0, 2, 3, 187, 0, 0, 0, 0, 0, 5, 3, 2, 1, 0, 0, 0, 0, 6, 3, 76, 1, 0, 0, 0, 0, 3, 3, 84, 1, 0, 0, 0, 0, 3, 3, 167, 1, 0, 0, 0, 0, 4, 3, 113, 2, 0, 0, 0, 0, 4, 3, 192, 2, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 16, 67, 3, 0, 0, 215, 199, 17, 67, 3, 0, 0, 211, 184, 18, 67, 3, 0, 0, 210, 183, 22, 67, 3, 0, 0, 214, 198, 23, 67, 3, 0, 0, 212, 189, 30, 67, 3, 0, 0, 208, 181, 31, 67, 3, 0, 0, 213, 190, 40, 3, 3, 0, 0, 242, 166, 44, 67, 3, 0, 0, 216, 207, 46, 67, 3, 0, 0, 209, 182, 0, 16, 67, 3, 0, 0, 150, 166, 17, 67, 3, 0, 0, 130, 144, 18, 67, 3, 0, 0, 138, 139, 22, 67, 3, 0, 0, 151, 167, 23, 67, 3, 0, 0, 141, 173, 30, 67, 3, 0, 0, 133, 143, 31, 67, 3, 0, 0, 158, 159, 40, 3, 3, 0, 0, 169, 157, 44, 67, 3, 0, 0, 145, 146, 46, 67, 3, 0, 0, 135, 128, 0, 16, 67, 3, 0, 0, 251, 250, 17, 67, 3, 0, 0, 243, 242, 18, 195, 0, 101, 18, 69, 18, 241, 18, 240, 0, 22, 67, 3, 0, 0, 249, 248, 23, 67, 3, 0, 0, 245, 244, 30, 67, 3, 0, 0, 221, 220, 31, 67, 3, 0, 0, 247, 246, 40, 2, 3, 0, 0, 183, 44, 67, 3, 0, 0, 253, 252, 46, 67, 3, 0, 0, 223, 222, 0, 40, 3, 15, 0, 0, 160, 160, 0, 16, 67, 3, 0, 0, 251, 250, 17, 67, 3, 0, 0, 243, 242, 18, 195, 0, 101, 18, 69, 18, 241, 18, 240, 0, 22, 67, 3, 0, 0, 249, 248, 23, 67, 3, 0, 0, 245, 244, 30, 67, 3, 0, 0, 221, 220, 31, 67, 3, 0, 0, 247, 246, 40, 3, 15, 0, 0, 160, 160, 44, 67, 3, 0, 0, 253, 252, 46, 67, 3, 0, 0, 223, 222, 54, 4, 31, 0, 0, 0, 0, 125, 0, 12, 67, 0, 234, 154, 45, 95, 13, 67, 0, 236, 156, 61, 43, 16, 67, 12, 238, 158, 160, 160, 17, 67, 12, 237, 157, 160, 160, 18, 67, 12, 165, 133, 160, 160, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 235, 155, 22, 67, 12, 227, 147, 160, 160, 23, 67, 12, 168, 136, 160, 160, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 67, 0, 231, 151, 91, 123, 27, 67, 0, 232, 152, 93, 125, 30, 67, 12, 160, 128, 160, 160, 31, 67, 12, 225, 145, 160, 160, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 40, 67, 0, 239, 159, 39, 34, 42, 4, 31, 0, 0, 0, 0, 124, 43, 67, 0, 166, 134, 92, 124, 44, 67, 12, 167, 135, 160, 160, 45, 65, 0, 233, 153, 46, 68, 28, 230, 150, 160, 0, 60, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 0, 16, 67, 3, 0, 0, 215, 199, 17, 67, 3, 0, 0, 211, 184, 18, 67, 3, 0, 0, 210, 183, 22, 67, 3, 0, 0, 214, 198, 23, 67, 3, 0, 0, 212, 189, 30, 67, 3, 0, 0, 208, 181, 31, 67, 3, 0, 0, 213, 190, 40, 3, 3, 0, 0, 244, 245, 44, 67, 3, 0, 0, 216, 207, 46, 67, 3, 0, 0, 209, 182, 54, 4, 31, 0, 0, 0, 0, 127, 0, 12, 67, 0, 234, 154, 45, 95, 13, 67, 0, 236, 156, 61, 43, 16, 67, 12, 238, 158, 160, 160, 17, 67, 12, 237, 157, 160, 160, 18, 67, 12, 165, 133, 160, 160, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 235, 155, 22, 67, 12, 227, 147, 160, 160, 23, 67, 12, 168, 136, 160, 160, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 67, 0, 231, 151, 91, 123, 27, 67, 0, 232, 152, 93, 125, 30, 67, 12, 160, 128, 160, 160, 31, 67, 12, 225, 145, 160, 160, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 40, 67, 0, 239, 159, 39, 34, 41, 195, 0, 241, 41, 240, 0, 96, 41, 126, 41, 42, 4, 31, 0, 0, 0, 0, 126, 43, 67, 0, 166, 134, 92, 124, 44, 67, 12, 167, 135, 160, 160, 45, 65, 0, 233, 153, 46, 68, 28, 230, 150, 160, 0, 60, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 0, 111, 136, 5, 4, 211, 0, 76, 84, 11, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 7, 3, 0, 0, 0, 0, 0, 0, 2, 3, 19, 1, 0, 0, 0, 0, 5, 3, 70, 1, 0, 0, 0, 0, 6, 3, 123, 1, 0, 0, 0, 0, 3, 3, 129, 1, 0, 0, 0, 0, 3, 3, 194, 1, 0, 0, 0, 0, 4, 3, 124, 2, 0, 0, 0, 0, 4, 3, 183, 2, 0, 0, 0, 0, 9, 3, 115, 3, 237, 3, 0, 0, 10, 3, 126, 4, 242, 4, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 33, 49, 3, 2, 0, 34, 50, 64, 4, 2, 0, 47, 51, 35, 5, 2, 0, 59, 52, 36, 6, 2, 0, 58, 53, 37, 7, 2, 0, 44, 54, 94, 8, 2, 0, 46, 55, 38, 9, 2, 0, 63, 56, 42, 10, 1, 0, 40, 57, 11, 1, 0, 41, 48, 12, 1, 0, 95, 45, 13, 1, 0, 43, 61, 16, 67, 0, 208, 181, 113, 81, 17, 67, 0, 216, 207, 119, 87, 26, 67, 0, 212, 189, 91, 123, 27, 3, 0, 242, 166, 93, 125, 39, 67, 0, 214, 198, 59, 58, 40, 67, 0, 211, 184, 39, 34, 43, 1, 0, 124, 92, 45, 67, 0, 215, 199, 120, 88, 51, 67, 0, 209, 182, 44, 60, 52, 67, 0, 213, 190, 46, 62, 53, 67, 0, 210, 183, 47, 63, 0, 16, 65, 0, 133, 143, 17, 65, 0, 145, 146, 26, 65, 0, 141, 173, 27, 1, 0, 169, 157, 39, 65, 0, 151, 167, 40, 65, 0, 130, 144, 45, 65, 0, 150, 166, 51, 65, 0, 135, 128, 52, 65, 0, 158, 159, 53, 65, 0, 138, 139, 0, 16, 65, 0, 221, 220, 17, 65, 0, 253, 252, 26, 65, 0, 245, 244, 27, 1, 0, 183, 166, 39, 65, 0, 249, 248, 40, 65, 0, 243, 242, 45, 65, 0, 251, 250, 51, 65, 0, 223, 222, 52, 65, 0, 247, 246, 53, 193, 0, 241, 53, 240, 0, 0, 27, 1, 3, 160, 160, 0, 16, 65, 0, 221, 220, 17, 65, 0, 253, 252, 26, 65, 0, 245, 244, 27, 1, 3, 160, 160, 39, 65, 0, 249, 248, 40, 65, 0, 243, 242, 45, 65, 0, 251, 250, 51, 65, 0, 223, 222, 52, 65, 0, 247, 246, 53, 193, 0, 241, 53, 240, 0, 54, 4, 31, 0, 0, 0, 0, 125, 86, 16, 0, 0, 0, 16, 67, 12, 239, 159, 160, 160, 17, 67, 12, 166, 134, 160, 160, 18, 65, 0, 165, 133, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 235, 155, 22, 65, 0, 227, 147, 23, 65, 0, 168, 136, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 234, 154, 27, 65, 0, 236, 156, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 238, 158, 40, 65, 0, 237, 157, 42, 4, 31, 0, 0, 0, 0, 124, 44, 65, 0, 167, 135, 45, 67, 12, 233, 153, 160, 160, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 51, 65, 0, 231, 151, 52, 65, 0, 232, 152, 53, 1, 3, 160, 160, 86, 16, 0, 0, 0, 16, 65, 0, 208, 181, 17, 65, 0, 216, 207, 26, 65, 0, 212, 189, 27, 1, 0, 244, 245, 39, 65, 0, 214, 198, 40, 65, 0, 211, 184, 45, 65, 0, 215, 199, 51, 65, 0, 209, 182, 52, 65, 0, 213, 190, 53, 65, 0, 210, 183, 54, 4, 31, 0, 0, 0, 0, 127, 0, 16, 67, 12, 239, 159, 160, 160, 17, 67, 12, 166, 134, 160, 160, 18, 65, 0, 165, 133, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 235, 155, 22, 65, 0, 227, 147, 23, 65, 0, 168, 136, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 234, 154, 27, 65, 0, 236, 156, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 238, 158, 40, 65, 0, 237, 157, 42, 4, 31, 0, 0, 0, 0, 126, 44, 65, 0, 167, 135, 45, 67, 12, 233, 153, 160, 160, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 51, 65, 0, 231, 151, 52, 65, 0, 232, 152, 53, 193, 0, 241, 53, 240, 0, 86, 16, 0, 0, 0, 16, 65, 0, 221, 220, 17, 65, 0, 253, 252, 18, 65, 0, 101, 69, 19, 65, 0, 114, 82, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 65, 0, 245, 244, 27, 1, 0, 213, 183, 30, 65, 0, 97, 65, 36, 65, 2, 106, 0, 38, 65, 0, 108, 76, 39, 65, 0, 249, 248, 40, 65, 0, 243, 242, 41, 2, 7, 200, 201, 202, 45, 65, 0, 251, 250, 49, 65, 0, 110, 78, 50, 65, 0, 109, 77, 51, 65, 0, 223, 222, 52, 65, 0, 247, 246, 53, 193, 0, 241, 53, 240, 0, 57, 0, 0, 32, 86, 16, 0, 0, 0, 96, 11, 97, 131, 101, 165, 105, 233, 111, 236, 117, 136, 65, 160, 69, 141, 73, 232, 79, 238, 85, 173, 32, 96, 126, 33, 97, 134, 221, 181, 101, 133, 241, 214, 243, 139, 105, 159, 245, 231, 108, 230, 109, 190, 110, 212, 111, 228, 114, 175, 117, 198, 249, 239, 251, 184, 121, 164, 65, 143, 220, 189, 69, 149, 240, 156, 242, 138, 73, 208, 244, 227, 76, 166, 77, 167, 78, 168, 79, 229, 82, 174, 85, 158, 248, 171, 250, 169, 89, 163, 32, 126, 39, 25, 97, 135, 221, 137, 101, 130, 241, 216, 243, 155, 105, 140, 245, 235, 111, 162, 117, 152, 249, 172, 251, 145, 121, 147, 65, 128, 220, 237, 69, 144, 240, 150, 242, 157, 73, 161, 244, 234, 79, 224, 85, 151, 248, 170, 250, 146, 89, 226, 32, 39, 0, 16, 65, 0, 208, 181, 17, 65, 0, 216, 207, 18, 65, 0, 101, 69, 19, 65, 0, 114, 82, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 65, 0, 212, 189, 27, 1, 0, 247, 242, 30, 65, 0, 97, 65, 36, 65, 2, 106, 0, 38, 65, 0, 108, 76, 39, 65, 0, 214, 198, 40, 65, 0, 211, 184, 41, 2, 7, 200, 201, 202, 45, 65, 0, 215, 199, 49, 65, 0, 110, 78, 50, 65, 0, 109, 77, 51, 65, 0, 209, 182, 52, 65, 0, 213, 190, 53, 65, 0, 210, 183, 57, 0, 0, 32, 0, 96, 11, 97, 131, 101, 165, 105, 233, 111, 236, 117, 136, 65, 160, 69, 141, 73, 232, 79, 238, 85, 173, 32, 96, 126, 33, 97, 134, 208, 241, 101, 133, 210, 252, 211, 139, 105, 159, 212, 231, 108, 230, 109, 245, 110, 251, 111, 228, 114, 175, 117, 246, 214, 239, 215, 243, 121, 164, 65, 143, 181, 244, 69, 149, 183, 156, 184, 138, 73, 248, 189, 227, 76, 166, 77, 167, 78, 168, 79, 229, 82, 174, 85, 158, 198, 171, 199, 169, 89, 163, 32, 126, 39, 25, 97, 135, 208, 137, 101, 130, 210, 253, 211, 155, 105, 140, 212, 235, 111, 162, 117, 152, 214, 172, 215, 145, 121, 147, 65, 128, 181, 237, 69, 144, 183, 150, 184, 157, 73, 161, 189, 234, 79, 224, 85, 151, 198, 170, 199, 146, 89, 226, 32, 39, 0, 25, 34, 6, 4, 221, 0, 76, 84, 11, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 7, 3, 0, 0, 0, 0, 0, 0, 2, 3, 64, 1, 0, 0, 0, 0, 3, 3, 136, 1, 0, 0, 0, 0, 3, 3, 218, 1, 0, 0, 0, 0, 4, 3, 193, 2, 0, 0, 0, 0, 4, 3, 233, 2, 0, 0, 0, 0, 5, 3, 210, 3, 0, 0, 0, 0, 6, 3, 22, 4, 0, 0, 0, 0, 9, 3, 54, 4, 183, 4, 0, 0, 10, 3, 72, 5, 140, 5, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 33, 49, 64, 3, 3, 0, 45, 50, 95, 31, 4, 2, 0, 47, 51, 35, 5, 2, 0, 59, 52, 36, 6, 2, 0, 58, 53, 245, 7, 2, 0, 44, 54, 94, 8, 2, 0, 46, 55, 38, 9, 2, 0, 61, 56, 42, 10, 3, 0, 40, 57, 91, 27, 11, 3, 0, 41, 48, 93, 29, 12, 2, 0, 63, 43, 39, 13, 196, 0, 120, 45, 88, 45, 37, 131, 24, 45, 0, 131, 16, 65, 0, 208, 181, 17, 65, 0, 216, 207, 26, 66, 0, 212, 189, 123, 27, 196, 0, 119, 17, 87, 17, 125, 17, 23, 17, 0, 17, 33, 65, 0, 213, 190, 39, 65, 0, 214, 198, 40, 66, 0, 211, 184, 34, 41, 2, 0, 96, 126, 239, 43, 196, 0, 113, 16, 81, 16, 124, 16, 17, 16, 0, 16, 45, 65, 0, 215, 199, 51, 66, 0, 209, 182, 247, 52, 196, 0, 102, 33, 70, 33, 242, 33, 6, 33, 0, 33, 53, 67, 0, 210, 183, 92, 28, 57, 0, 0, 32, 86, 2, 0, 60, 62, 45, 0, 6, 2, 3, 0, 0, 21, 16, 65, 0, 133, 143, 17, 65, 0, 145, 146, 26, 65, 0, 141, 173, 33, 65, 0, 158, 159, 39, 65, 0, 151, 167, 40, 65, 0, 130, 144, 41, 2, 7, 0, 0, 160, 45, 65, 0, 150, 166, 51, 66, 0, 135, 128, 157, 52, 196, 0, 102, 33, 70, 33, 169, 33, 6, 33, 0, 33, 53, 65, 0, 138, 139, 0, 6, 2, 3, 0, 0, 21, 16, 65, 0, 221, 220, 17, 65, 0, 253, 252, 26, 65, 0, 245, 244, 33, 65, 0, 247, 246, 39, 65, 0, 249, 248, 40, 65, 0, 243, 242, 41, 2, 7, 0, 0, 160, 45, 65, 0, 251, 250, 51, 66, 4, 223, 222, 160, 52, 196, 4, 102, 33, 70, 33, 160, 33, 6, 33, 0, 33, 53, 193, 0, 241, 53, 240, 0, 54, 4, 31, 0, 0, 0, 0, 123, 0, 6, 2, 3, 0, 0, 21, 13, 132, 3, 160, 45, 160, 45, 37, 131, 24, 45, 0, 131, 16, 65, 0, 239, 159, 17, 65, 0, 166, 134, 18, 65, 0, 165, 133, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 235, 155, 22, 65, 0, 227, 147, 23, 65, 0, 168, 136, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 234, 154, 27, 196, 0, 236, 17, 156, 17, 125, 17, 23, 17, 0, 17, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 232, 152, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 238, 158, 40, 65, 0, 237, 157, 41, 2, 7, 0, 0, 160, 42, 4, 31, 0, 0, 0, 0, 122, 43, 132, 3, 160, 16, 160, 16, 0, 16, 17, 16, 0, 16, 44, 65, 0, 167, 135, 45, 65, 0, 233, 153, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 51, 66, 4, 231, 151, 160, 52, 196, 4, 228, 33, 148, 33, 160, 33, 6, 33, 0, 33, 53, 1, 3, 160, 160, 0, 6, 2, 3, 0, 0, 21, 41, 2, 7, 0, 0, 160, 51, 66, 3, 0, 0, 244, 52, 196, 0, 102, 33, 70, 33, 245, 33, 6, 33, 0, 33, 54, 4, 31, 0, 0, 0, 0, 125, 0, 6, 2, 3, 0, 0, 21, 13, 132, 3, 160, 45, 160, 45, 37, 131, 24, 45, 0, 131, 16, 65, 0, 239, 159, 17, 65, 0, 166, 134, 18, 65, 0, 165, 133, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 235, 155, 22, 65, 0, 227, 147, 23, 65, 0, 168, 136, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 234, 154, 27, 196, 0, 236, 17, 156, 17, 125, 17, 23, 17, 0, 17, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 232, 152, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 238, 158, 40, 65, 0, 237, 157, 41, 2, 7, 0, 0, 160, 42, 4, 31, 0, 0, 0, 0, 124, 43, 132, 3, 160, 16, 160, 16, 0, 16, 17, 16, 0, 16, 44, 65, 0, 167, 135, 45, 65, 0, 233, 153, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 51, 66, 0, 231, 151, 244, 52, 196, 0, 228, 33, 148, 33, 245, 33, 6, 33, 0, 33, 53, 193, 0, 241, 53, 240, 0, 0, 6, 2, 3, 0, 0, 190, 16, 65, 0, 221, 220, 17, 65, 0, 253, 252, 26, 65, 0, 245, 244, 33, 65, 0, 247, 246, 39, 65, 0, 249, 248, 40, 65, 0, 243, 242, 45, 65, 0, 251, 250, 51, 66, 0, 223, 222, 213, 52, 196, 0, 102, 33, 70, 33, 183, 33, 6, 33, 0, 33, 53, 193, 0, 241, 53, 240, 0, 0, 6, 2, 3, 0, 0, 21, 41, 2, 7, 0, 0, 160, 51, 66, 7, 0, 0, 160, 52, 196, 4, 102, 33, 70, 33, 160, 33, 6, 33, 0, 33, 0, 6, 2, 3, 0, 0, 21, 16, 65, 0, 221, 220, 17, 65, 0, 253, 252, 18, 65, 0, 101, 69, 19, 65, 0, 114, 82, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 65, 0, 245, 244, 30, 65, 0, 97, 65, 33, 65, 0, 247, 246, 36, 65, 2, 106, 0, 38, 65, 0, 108, 76, 39, 65, 0, 249, 248, 40, 65, 0, 243, 242, 41, 2, 7, 200, 201, 202, 45, 65, 0, 251, 250, 49, 65, 0, 110, 78, 50, 65, 0, 109, 77, 51, 66, 0, 223, 222, 213, 52, 196, 0, 102, 33, 70, 33, 183, 33, 6, 33, 0, 33, 53, 193, 0, 241, 53, 240, 0, 0, 96, 11, 97, 131, 101, 165, 105, 233, 111, 236, 117, 136, 65, 160, 69, 141, 73, 232, 79, 238, 85, 173, 32, 96, 126, 33, 97, 134, 221, 181, 101, 133, 241, 214, 243, 139, 105, 159, 245, 231, 108, 230, 109, 190, 110, 212, 111, 228, 114, 175, 117, 198, 249, 239, 251, 184, 121, 164, 65, 143, 220, 189, 69, 149, 240, 156, 242, 138, 73, 208, 244, 227, 76, 166, 77, 167, 78, 168, 79, 229, 82, 174, 85, 158, 248, 171, 250, 169, 89, 163, 32, 126, 39, 25, 97, 135, 221, 137, 101, 130, 241, 216, 243, 155, 105, 140, 245, 235, 111, 162, 117, 152, 249, 172, 251, 145, 121, 147, 65, 128, 220, 237, 69, 144, 240, 150, 242, 157, 73, 161, 244, 234, 79, 224, 85, 151, 248, 170, 250, 146, 89, 226, 32, 39, 0, 6, 2, 3, 0, 0, 21, 18, 65, 0, 101, 69, 19, 65, 0, 114, 82, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 30, 65, 0, 97, 65, 36, 65, 2, 106, 0, 38, 65, 0, 108, 76, 41, 2, 7, 200, 201, 202, 49, 65, 0, 110, 78, 50, 65, 0, 109, 77, 0, 96, 11, 97, 131, 101, 165, 105, 233, 111, 236, 117, 136, 65, 160, 69, 141, 73, 232, 79, 238, 85, 173, 32, 96, 126, 33, 97, 134, 208, 241, 101, 133, 210, 252, 211, 139, 105, 159, 212, 231, 108, 230, 109, 245, 110, 251, 111, 228, 114, 175, 117, 246, 214, 239, 215, 243, 121, 164, 65, 143, 181, 244, 69, 149, 183, 156, 184, 138, 73, 248, 189, 227, 76, 166, 77, 167, 78, 168, 79, 229, 82, 174, 85, 158, 198, 171, 199, 169, 89, 163, 32, 126, 39, 25, 97, 135, 208, 137, 101, 130, 210, 253, 211, 155, 105, 140, 212, 235, 111, 162, 117, 152, 214, 172, 215, 145, 121, 147, 65, 128, 181, 237, 69, 144, 183, 150, 184, 157, 73, 161, 189, 234, 79, 224, 85, 151, 198, 170, 199, 146, 89, 226, 32, 39, 0, 6, 90, 8, 4, 200, 1, 76, 84, 15, 2, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 0, 7, 3, 27, 1, 0, 0, 0, 0, 7, 3, 35, 1, 0, 0, 0, 0, 5, 3, 148, 1, 0, 0, 0, 0, 5, 3, 216, 1, 0, 0, 0, 0, 2, 3, 96, 2, 0, 0, 0, 0, 2, 3, 164, 2, 0, 0, 0, 0, 6, 3, 51, 3, 0, 0, 0, 0, 6, 3, 113, 3, 0, 0, 0, 0, 3, 3, 249, 3, 0, 0, 0, 0, 3, 3, 132, 4, 0, 0, 0, 0, 3, 3, 47, 5, 0, 0, 0, 0, 4, 3, 51, 6, 0, 0, 0, 0, 4, 3, 168, 6, 0, 0, 0, 0, 4, 3, 79, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 172, 3, 2, 3, 0, 0, 171, 4, 2, 3, 0, 0, 243, 5, 2, 3, 0, 0, 159, 6, 2, 3, 0, 0, 150, 7, 2, 3, 0, 0, 248, 8, 2, 3, 0, 0, 245, 9, 2, 3, 0, 0, 158, 10, 2, 3, 0, 0, 174, 11, 2, 3, 0, 0, 175, 13, 2, 3, 0, 0, 241, 16, 66, 3, 0, 0, 251, 17, 66, 3, 0, 0, 253, 18, 66, 3, 0, 0, 252, 19, 66, 3, 0, 0, 169, 31, 66, 3, 0, 0, 225, 38, 66, 3, 0, 0, 156, 49, 66, 3, 0, 0, 170, 52, 2, 3, 0, 0, 250, 53, 2, 3, 0, 0, 246, 86, 2, 0, 253, 252, 251, 0, 54, 3, 15, 0, 0, 0, 121, 0, 2, 1, 0, 33, 49, 3, 1, 0, 34, 50, 4, 1, 0, 47, 51, 5, 1, 0, 59, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 63, 56, 10, 1, 0, 40, 57, 11, 1, 0, 41, 48, 13, 1, 0, 43, 61, 16, 65, 0, 208, 181, 17, 65, 0, 216, 207, 26, 65, 0, 212, 189, 27, 1, 0, 247, 242, 39, 65, 0, 214, 198, 40, 65, 0, 211, 184, 42, 3, 15, 0, 0, 0, 120, 45, 65, 0, 215, 199, 51, 65, 0, 209, 182, 52, 65, 0, 213, 190, 53, 65, 0, 210, 183, 0, 4, 2, 3, 0, 0, 184, 7, 2, 3, 0, 0, 208, 8, 2, 3, 0, 0, 190, 13, 2, 3, 0, 0, 181, 16, 66, 3, 0, 0, 212, 17, 66, 3, 0, 0, 216, 18, 66, 3, 0, 0, 214, 52, 2, 3, 0, 0, 211, 53, 2, 3, 0, 0, 198, 54, 3, 15, 0, 0, 0, 123, 86, 2, 0, 216, 214, 212, 0, 2, 1, 0, 33, 49, 3, 1, 0, 34, 50, 4, 2, 0, 47, 51, 184, 5, 1, 0, 59, 52, 6, 1, 0, 58, 53, 7, 2, 0, 44, 54, 208, 8, 2, 0, 46, 55, 190, 9, 1, 0, 63, 56, 10, 1, 0, 40, 57, 11, 1, 0, 41, 48, 13, 2, 0, 43, 61, 181, 16, 66, 0, 221, 220, 212, 17, 66, 0, 253, 252, 216, 18, 66, 3, 0, 0, 214, 26, 65, 0, 245, 244, 27, 1, 0, 213, 183, 39, 65, 0, 249, 248, 40, 65, 0, 243, 242, 42, 3, 15, 0, 0, 0, 122, 45, 65, 0, 251, 250, 51, 65, 0, 223, 222, 52, 66, 0, 247, 246, 211, 53, 194, 0, 241, 53, 240, 0, 198, 53, 86, 2, 0, 216, 214, 212, 0, 4, 2, 7, 0, 0, 160, 5, 2, 7, 0, 0, 160, 6, 2, 3, 0, 0, 155, 8, 2, 3, 0, 0, 21, 9, 2, 7, 0, 0, 160, 16, 66, 7, 0, 0, 160, 18, 66, 7, 0, 0, 160, 19, 66, 7, 0, 0, 160, 38, 66, 7, 0, 0, 160, 54, 3, 15, 0, 0, 0, 125, 86, 2, 7, 0, 160, 160, 0, 2, 1, 0, 33, 49, 3, 1, 0, 34, 50, 4, 2, 4, 47, 51, 160, 5, 2, 4, 59, 52, 160, 6, 2, 0, 58, 53, 155, 7, 1, 0, 44, 54, 8, 2, 0, 46, 55, 21, 9, 2, 4, 63, 56, 160, 10, 1, 0, 40, 57, 11, 1, 0, 41, 48, 13, 1, 0, 43, 61, 16, 66, 4, 133, 143, 160, 17, 65, 0, 145, 146, 18, 66, 7, 0, 0, 160, 19, 66, 7, 0, 0, 160, 26, 65, 0, 141, 173, 27, 1, 0, 157, 169, 38, 66, 7, 0, 0, 160, 39, 65, 0, 151, 167, 40, 65, 0, 130, 144, 42, 3, 15, 0, 0, 0, 124, 45, 65, 0, 150, 166, 51, 65, 0, 135, 128, 52, 65, 0, 158, 159, 53, 65, 0, 138, 139, 86, 2, 7, 0, 160, 160, 0, 4, 2, 7, 0, 0, 160, 5, 2, 7, 0, 0, 160, 6, 2, 3, 0, 0, 155, 8, 2, 3, 0, 0, 21, 9, 2, 7, 0, 0, 160, 16, 66, 7, 0, 0, 160, 18, 66, 7, 0, 0, 160, 19, 66, 7, 0, 0, 160, 54, 3, 15, 0, 0, 0, 127, 86, 2, 6, 253, 160, 160, 0, 2, 1, 0, 33, 49, 3, 1, 0, 34, 50, 4, 2, 4, 47, 51, 160, 5, 2, 4, 59, 52, 160, 6, 2, 0, 58, 53, 155, 7, 1, 0, 44, 54, 8, 2, 0, 46, 55, 21, 9, 2, 4, 63, 56, 160, 10, 1, 0, 40, 57, 11, 1, 0, 41, 48, 13, 1, 0, 43, 61, 16, 66, 4, 208, 181, 160, 17, 65, 0, 216, 207, 18, 66, 7, 0, 0, 160, 19, 66, 7, 0, 0, 160, 26, 65, 0, 212, 189, 27, 16, 0, 0, 39, 65, 0, 214, 198, 40, 65, 0, 211, 184, 42, 3, 15, 0, 0, 0, 126, 45, 65, 0, 215, 199, 51, 65, 0, 209, 182, 52, 65, 0, 213, 190, 53, 65, 0, 210, 183, 86, 2, 7, 0, 160, 160, 0, 2, 2, 7, 0, 0, 160, 3, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 7, 2, 7, 0, 0, 160, 8, 2, 3, 0, 0, 21, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 11, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 16, 66, 7, 0, 0, 160, 17, 66, 7, 0, 0, 160, 18, 66, 7, 0, 0, 160, 19, 66, 7, 0, 0, 160, 29, 3, 15, 0, 0, 0, 130, 31, 66, 7, 0, 0, 160, 38, 66, 7, 0, 0, 160, 49, 66, 7, 0, 0, 160, 52, 2, 7, 0, 0, 160, 53, 2, 7, 0, 0, 160, 54, 3, 15, 0, 0, 0, 129, 86, 16, 0, 0, 0, 2, 2, 4, 33, 49, 160, 3, 2, 4, 34, 50, 160, 4, 2, 4, 47, 51, 160, 5, 2, 4, 59, 52, 160, 6, 2, 4, 58, 53, 160, 7, 2, 4, 44, 54, 160, 8, 2, 0, 46, 55, 21, 9, 2, 4, 63, 56, 160, 10, 2, 4, 40, 57, 160, 11, 2, 4, 41, 48, 160, 13, 2, 4, 43, 61, 160, 16, 66, 4, 221, 220, 160, 17, 66, 4, 253, 252, 160, 18, 66, 7, 0, 0, 160, 19, 66, 7, 0, 0, 160, 26, 65, 0, 245, 244, 27, 16, 0, 0, 29, 3, 15, 0, 0, 0, 130, 31, 66, 7, 0, 0, 160, 38, 66, 7, 0, 0, 160, 39, 65, 0, 249, 248, 40, 65, 0, 243, 242, 42, 3, 15, 0, 0, 0, 128, 45, 65, 0, 251, 250, 49, 66, 7, 0, 0, 160, 51, 65, 0, 223, 222, 52, 66, 4, 247, 246, 160, 53, 194, 4, 241, 53, 240, 0, 160, 53, 86, 16, 0, 0, 0, 2, 2, 4, 33, 49, 160, 3, 2, 4, 34, 50, 160, 4, 2, 4, 47, 51, 160, 5, 2, 4, 59, 52, 160, 6, 2, 4, 58, 53, 160, 7, 2, 4, 44, 54, 160, 8, 2, 0, 46, 55, 21, 9, 2, 4, 63, 56, 160, 10, 2, 4, 40, 57, 160, 11, 2, 4, 41, 48, 160, 13, 2, 4, 43, 61, 160, 16, 66, 4, 239, 159, 160, 17, 66, 4, 166, 134, 160, 18, 66, 4, 165, 133, 160, 19, 194, 4, 224, 0, 144, 19, 160, 19, 20, 65, 0, 226, 146, 21, 65, 0, 235, 155, 22, 65, 0, 227, 147, 23, 65, 0, 168, 136, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 234, 154, 27, 65, 0, 236, 156, 30, 65, 0, 160, 128, 31, 66, 4, 225, 145, 160, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 66, 4, 171, 139, 160, 39, 65, 0, 238, 158, 40, 65, 0, 237, 157, 42, 3, 15, 0, 0, 0, 128, 44, 65, 0, 167, 135, 45, 65, 0, 233, 153, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 66, 4, 173, 141, 160, 50, 65, 0, 172, 140, 51, 65, 0, 231, 151, 52, 66, 4, 232, 152, 160, 53, 16, 0, 0, 54, 3, 15, 0, 0, 0, 129, 86, 16, 0, 0, 0, 2, 2, 7, 0, 0, 160, 3, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 2, 7, 0, 0, 160, 6, 2, 7, 0, 0, 160, 8, 2, 3, 0, 0, 21, 9, 2, 7, 0, 0, 160, 10, 2, 7, 0, 0, 160, 11, 2, 7, 0, 0, 160, 13, 2, 7, 0, 0, 160, 16, 66, 7, 0, 0, 160, 18, 66, 7, 0, 0, 160, 19, 66, 7, 0, 0, 160, 29, 3, 15, 0, 0, 0, 133, 31, 66, 7, 0, 0, 160, 38, 66, 7, 0, 0, 160, 49, 66, 7, 0, 0, 160, 54, 3, 15, 0, 0, 0, 132, 86, 2, 7, 0, 160, 160, 0, 2, 2, 4, 33, 49, 160, 3, 2, 4, 34, 50, 160, 4, 2, 4, 47, 51, 160, 5, 2, 4, 59, 52, 160, 6, 2, 4, 58, 53, 160, 7, 1, 0, 44, 54, 8, 2, 0, 46, 55, 21, 9, 2, 4, 63, 56, 160, 10, 2, 4, 40, 57, 160, 11, 2, 4, 41, 48, 160, 13, 2, 4, 43, 61, 160, 16, 66, 4, 208, 181, 160, 17, 65, 0, 216, 207, 18, 66, 7, 0, 0, 160, 19, 66, 7], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 116215);
allocate([160, 26, 65, 0, 212, 189, 27, 1, 0, 244, 245, 29, 3, 15, 0, 0, 0, 133, 31, 66, 7, 0, 0, 160, 38, 66, 7, 0, 0, 160, 39, 65, 0, 214, 198, 40, 65, 0, 211, 184, 42, 3, 15, 0, 0, 0, 131, 45, 65, 0, 215, 199, 49, 66, 7, 0, 0, 160, 51, 65, 0, 209, 182, 52, 65, 0, 213, 190, 53, 65, 0, 210, 183, 86, 2, 7, 0, 160, 160, 0, 2, 2, 4, 33, 49, 160, 3, 2, 4, 34, 50, 160, 4, 2, 4, 47, 51, 160, 5, 2, 4, 59, 52, 160, 6, 2, 4, 58, 53, 160, 7, 1, 0, 44, 54, 8, 2, 0, 46, 55, 21, 9, 2, 4, 63, 56, 160, 10, 2, 4, 40, 57, 160, 11, 2, 4, 41, 48, 160, 13, 2, 4, 43, 61, 160, 16, 66, 4, 239, 159, 160, 17, 65, 0, 166, 134, 18, 66, 4, 165, 133, 160, 19, 194, 4, 224, 0, 144, 19, 160, 19, 20, 65, 0, 226, 146, 21, 65, 0, 235, 155, 22, 65, 0, 227, 147, 23, 65, 0, 168, 136, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 234, 154, 27, 65, 0, 236, 156, 30, 65, 0, 160, 128, 31, 66, 4, 225, 145, 160, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 66, 4, 171, 139, 160, 39, 65, 0, 238, 158, 40, 65, 0, 237, 157, 42, 3, 15, 0, 0, 0, 131, 44, 65, 0, 167, 135, 45, 65, 0, 233, 153, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 66, 4, 173, 141, 160, 50, 65, 0, 172, 140, 51, 65, 0, 231, 151, 52, 65, 0, 232, 152, 53, 193, 0, 241, 53, 240, 0, 54, 3, 15, 0, 0, 0, 132, 86, 2, 7, 0, 160, 160, 0, 128, 138, 4, 4, 0, 0, 76, 86, 7, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 7, 3, 209, 0, 31, 1, 0, 0, 2, 3, 100, 1, 206, 1, 0, 0, 5, 3, 239, 1, 61, 2, 0, 0, 93, 4, 130, 2, 208, 2, 0, 0, 98, 239, 21, 3, 0, 0, 0, 0, 98, 239, 160, 3, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 255, 3, 2, 3, 0, 0, 174, 4, 2, 3, 0, 0, 175, 9, 3, 7, 0, 0, 0, 158, 18, 67, 0, 101, 69, 137, 237, 22, 65, 0, 117, 85, 23, 67, 3, 0, 0, 140, 161, 24, 67, 0, 111, 79, 228, 229, 30, 67, 0, 97, 65, 131, 160, 31, 65, 0, 115, 83, 34, 67, 3, 0, 0, 133, 149, 40, 3, 15, 0, 0, 202, 203, 41, 2, 3, 0, 201, 45, 43, 2, 1, 200, 124, 92, 44, 65, 0, 122, 90, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 57, 0, 0, 32, 0, 5, 3, 7, 0, 0, 0, 245, 6, 3, 7, 0, 0, 0, 248, 8, 3, 7, 0, 0, 0, 241, 19, 67, 3, 0, 0, 139, 138, 22, 67, 3, 0, 0, 215, 199, 31, 67, 3, 0, 0, 213, 190, 37, 67, 3, 0, 0, 233, 232, 38, 67, 3, 0, 0, 235, 234, 44, 67, 3, 0, 0, 216, 207, 46, 67, 3, 0, 0, 209, 182, 49, 67, 3, 0, 0, 236, 238, 0, 248, 7, 97, 134, 101, 211, 122, 164, 65, 143, 69, 184, 90, 163, 32, 248, 126, 3, 111, 228, 79, 229, 32, 126, 239, 13, 99, 135, 101, 130, 110, 231, 111, 162, 115, 152, 122, 165, 67, 128, 69, 144, 78, 227, 79, 224, 83, 151, 90, 141, 32, 239, 34, 7, 97, 132, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 0, 5, 3, 7, 0, 0, 0, 21, 6, 3, 7, 0, 0, 0, 248, 8, 3, 7, 0, 0, 0, 241, 9, 3, 15, 0, 0, 0, 160, 18, 67, 3, 0, 0, 136, 137, 22, 67, 3, 0, 0, 150, 166, 24, 67, 3, 0, 0, 147, 149, 31, 67, 3, 0, 0, 158, 159, 34, 67, 3, 0, 0, 152, 168, 37, 67, 3, 0, 0, 162, 163, 38, 67, 3, 0, 0, 134, 156, 40, 3, 15, 0, 0, 160, 202, 44, 67, 3, 0, 0, 145, 146, 46, 67, 3, 0, 0, 135, 128, 49, 67, 3, 0, 0, 164, 165, 0, 250, 3, 101, 130, 69, 144, 32, 250, 126, 3, 111, 147, 79, 149, 32, 126, 34, 7, 97, 132, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 0, 5, 3, 7, 0, 0, 0, 190, 6, 3, 7, 0, 0, 0, 208, 8, 3, 7, 0, 0, 0, 181, 19, 67, 3, 0, 0, 139, 138, 22, 67, 3, 0, 0, 251, 250, 31, 67, 3, 0, 0, 247, 246, 37, 67, 3, 0, 0, 233, 232, 38, 67, 3, 0, 0, 235, 234, 44, 67, 3, 0, 0, 253, 252, 46, 67, 3, 0, 0, 223, 222, 49, 67, 3, 0, 0, 236, 238, 0, 211, 7, 97, 134, 101, 243, 122, 164, 65, 143, 69, 242, 90, 163, 32, 211, 126, 3, 111, 228, 79, 229, 32, 126, 239, 13, 99, 135, 101, 130, 110, 231, 111, 162, 115, 152, 122, 165, 67, 128, 69, 144, 78, 227, 79, 224, 83, 151, 90, 141, 32, 239, 34, 7, 97, 132, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 0, 5, 3, 7, 0, 0, 0, 21, 6, 3, 7, 0, 0, 0, 248, 8, 3, 7, 0, 0, 0, 241, 19, 67, 3, 0, 0, 251, 252, 22, 67, 3, 0, 0, 150, 234, 31, 67, 3, 0, 0, 231, 230, 37, 67, 3, 0, 0, 233, 232, 38, 67, 3, 0, 0, 236, 156, 44, 67, 3, 0, 0, 167, 166, 46, 67, 3, 0, 0, 159, 172, 49, 67, 3, 0, 0, 239, 238, 0, 248, 7, 97, 134, 101, 138, 122, 146, 65, 143, 69, 170, 90, 145, 32, 248, 126, 3, 111, 228, 79, 229, 32, 126, 39, 13, 99, 135, 101, 130, 110, 155, 111, 162, 115, 152, 122, 171, 67, 128, 69, 144, 78, 227, 79, 224, 83, 151, 90, 141, 32, 39, 34, 7, 97, 132, 111, 148, 117, 129, 65, 142, 79, 153, 85, 154, 32, 34, 0, 3, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 3, 7, 0, 0, 0, 21, 9, 3, 15, 0, 0, 0, 160, 18, 195, 0, 101, 18, 69, 18, 241, 18, 240, 0, 22, 67, 3, 0, 0, 221, 222, 23, 67, 3, 0, 0, 216, 215, 24, 67, 15, 0, 0, 160, 160, 30, 67, 3, 0, 0, 198, 181, 31, 67, 3, 0, 0, 253, 208, 34, 67, 3, 0, 0, 214, 242, 37, 67, 3, 0, 0, 243, 244, 38, 67, 3, 0, 0, 245, 246, 40, 3, 15, 0, 0, 160, 160, 41, 1, 1, 0, 126, 43, 0, 1, 160, 44, 67, 3, 0, 0, 247, 248, 46, 67, 3, 0, 0, 210, 211, 49, 67, 3, 0, 0, 183, 252, 54, 4, 31, 0, 0, 0, 0, 125, 0, 3, 2, 7, 0, 0, 160, 4, 2, 7, 0, 0, 160, 5, 3, 7, 0, 0, 0, 21, 9, 3, 15, 0, 0, 0, 160, 16, 65, 0, 239, 159, 17, 65, 0, 232, 152, 18, 67, 12, 165, 133, 160, 160, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 235, 155, 22, 65, 0, 227, 147, 23, 67, 12, 168, 136, 160, 160, 24, 67, 12, 174, 142, 160, 160, 25, 65, 0, 175, 143, 26, 67, 0, 237, 157, 91, 123, 27, 67, 0, 238, 158, 93, 125, 30, 67, 12, 160, 128, 160, 160, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 67, 12, 163, 131, 160, 160, 35, 65, 0, 229, 149, 36, 65, 0, 169, 137, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 39, 65, 0, 231, 151, 40, 67, 0, 236, 156, 39, 34, 41, 67, 0, 234, 154, 96, 126, 42, 4, 31, 0, 0, 0, 0, 124, 43, 67, 0, 233, 153, 92, 124, 44, 65, 0, 167, 135, 45, 65, 0, 166, 134, 46, 65, 0, 230, 150, 47, 65, 0, 162, 130, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 51, 2, 3, 0, 0, 59, 52, 2, 3, 0, 0, 58, 0, 12, 253, 5, 4, 199, 1, 76, 86, 12, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0, 0, 7, 3, 146, 0, 0, 0, 0, 0, 7, 3, 155, 0, 0, 0, 0, 0, 2, 3, 122, 1, 0, 0, 0, 0, 2, 3, 136, 1, 0, 0, 0, 0, 5, 3, 94, 2, 0, 0, 0, 0, 5, 3, 107, 2, 0, 0, 0, 0, 93, 4, 74, 3, 0, 0, 0, 0, 93, 4, 88, 3, 0, 0, 0, 0, 98, 239, 55, 4, 0, 0, 0, 0, 98, 239, 81, 4, 0, 0, 0, 0, 98, 239, 39, 5, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 43, 1, 0, 248, 167, 0, 54, 4, 31, 0, 0, 0, 0, 121, 0, 3, 1, 1, 0, 174, 4, 1, 1, 0, 175, 5, 1, 1, 0, 245, 7, 1, 1, 0, 47, 9, 1, 1, 0, 158, 13, 65, 0, 102, 70, 16, 65, 0, 215, 199, 17, 65, 0, 103, 71, 18, 65, 0, 106, 74, 19, 67, 3, 0, 0, 139, 138, 20, 65, 0, 109, 77, 21, 65, 0, 118, 86, 22, 65, 0, 110, 78, 23, 65, 0, 122, 90, 24, 65, 0, 137, 237, 25, 65, 0, 209, 182, 26, 65, 0, 216, 207, 27, 65, 0, 104, 72, 30, 65, 0, 213, 190, 31, 65, 0, 117, 85, 32, 65, 0, 115, 83, 33, 65, 0, 105, 73, 34, 65, 0, 108, 76, 35, 65, 0, 100, 68, 36, 65, 0, 97, 65, 37, 65, 0, 116, 84, 38, 65, 0, 101, 69, 39, 65, 0, 99, 67, 40, 1, 0, 39, 248, 41, 1, 0, 45, 63, 42, 4, 31, 0, 0, 0, 0, 120, 43, 65, 0, 233, 232, 44, 65, 0, 236, 238, 45, 65, 0, 98, 66, 46, 65, 0, 140, 161, 47, 65, 0, 107, 75, 48, 65, 0, 112, 80, 49, 67, 0, 111, 79, 147, 226, 50, 65, 0, 131, 160, 51, 1, 1, 0, 59, 52, 1, 1, 0, 58, 53, 65, 0, 235, 234, 86, 65, 0, 133, 149, 0, 43, 1, 3, 0, 160, 54, 4, 31, 0, 0, 0, 0, 123, 0, 3, 1, 1, 0, 174, 4, 1, 1, 0, 175, 5, 1, 1, 0, 21, 7, 1, 1, 0, 47, 9, 1, 3, 0, 160, 13, 65, 0, 102, 70, 16, 65, 0, 150, 166, 17, 65, 0, 103, 71, 18, 65, 0, 106, 74, 20, 65, 0, 109, 77, 21, 65, 0, 118, 86, 22, 65, 0, 110, 78, 23, 65, 0, 122, 90, 24, 65, 0, 136, 137, 25, 65, 0, 135, 128, 26, 65, 0, 145, 146, 27, 65, 0, 104, 72, 30, 65, 0, 158, 159, 31, 65, 0, 117, 85, 32, 65, 0, 115, 83, 33, 65, 0, 105, 73, 34, 65, 0, 108, 76, 35, 65, 0, 100, 68, 36, 65, 0, 97, 65, 37, 65, 0, 116, 84, 38, 65, 0, 101, 69, 39, 65, 0, 99, 67, 40, 1, 0, 39, 248, 41, 1, 0, 45, 63, 42, 4, 31, 0, 0, 0, 0, 122, 43, 65, 0, 162, 163, 44, 65, 0, 164, 165, 45, 65, 0, 98, 66, 46, 65, 0, 140, 161, 47, 65, 0, 107, 75, 48, 65, 0, 112, 80, 49, 65, 0, 111, 79, 50, 65, 0, 131, 160, 51, 1, 1, 0, 59, 52, 1, 1, 0, 58, 53, 65, 0, 134, 156, 86, 65, 0, 152, 168, 0, 43, 0, 0, 208, 54, 4, 31, 0, 0, 0, 0, 125, 0, 3, 1, 1, 0, 174, 4, 1, 1, 0, 175, 5, 1, 1, 0, 190, 7, 1, 1, 0, 47, 9, 1, 1, 0, 158, 13, 65, 0, 102, 70, 16, 65, 0, 251, 250, 17, 65, 0, 103, 71, 18, 65, 0, 106, 74, 19, 67, 3, 0, 0, 139, 138, 20, 65, 0, 109, 77, 21, 65, 0, 118, 86, 22, 65, 0, 110, 78, 23, 65, 0, 122, 90, 24, 65, 0, 137, 237, 25, 65, 0, 223, 222, 26, 65, 0, 253, 252, 27, 65, 0, 104, 72, 30, 65, 0, 247, 246, 31, 65, 0, 117, 85, 32, 65, 0, 115, 83, 33, 65, 0, 105, 73, 34, 65, 0, 108, 76, 35, 65, 0, 100, 68, 36, 65, 0, 97, 65, 37, 65, 0, 116, 84, 38, 65, 0, 101, 69, 39, 65, 0, 99, 67, 40, 1, 0, 39, 208, 41, 1, 0, 45, 63, 42, 4, 31, 0, 0, 0, 0, 124, 43, 65, 0, 233, 232, 44, 65, 0, 236, 238, 45, 65, 0, 98, 66, 46, 65, 0, 140, 161, 47, 65, 0, 107, 75, 48, 65, 0, 112, 80, 49, 67, 0, 111, 79, 147, 226, 50, 65, 0, 131, 160, 51, 1, 1, 0, 59, 52, 1, 1, 0, 58, 53, 65, 0, 235, 234, 86, 65, 0, 133, 149, 0, 43, 1, 3, 0, 160, 54, 4, 31, 0, 0, 0, 0, 127, 0, 3, 1, 1, 0, 174, 4, 1, 1, 0, 175, 5, 1, 1, 0, 21, 7, 1, 1, 0, 47, 9, 1, 1, 0, 158, 13, 65, 0, 102, 70, 16, 65, 0, 150, 234, 17, 65, 0, 103, 71, 18, 65, 0, 106, 74, 19, 67, 0, 114, 82, 251, 252, 20, 65, 0, 109, 77, 21, 65, 0, 118, 86, 22, 65, 0, 110, 78, 23, 65, 0, 122, 90, 24, 65, 0, 137, 237, 25, 65, 0, 159, 172, 26, 65, 0, 167, 166, 27, 65, 0, 104, 72, 30, 65, 0, 231, 230, 31, 65, 0, 117, 85, 32, 65, 0, 115, 83, 33, 65, 0, 105, 73, 34, 65, 0, 108, 76, 35, 65, 0, 100, 68, 36, 65, 0, 97, 65, 37, 65, 0, 116, 84, 38, 65, 0, 101, 69, 39, 65, 0, 99, 67, 40, 1, 0, 39, 248, 41, 1, 0, 45, 63, 42, 4, 31, 0, 0, 0, 0, 126, 43, 65, 0, 233, 232, 44, 65, 0, 239, 238, 45, 65, 0, 98, 66, 46, 65, 0, 140, 161, 47, 65, 0, 107, 75, 48, 65, 0, 112, 80, 49, 67, 0, 111, 79, 147, 226, 50, 65, 0, 131, 160, 51, 1, 1, 0, 59, 52, 1, 1, 0, 58, 53, 65, 0, 236, 156, 86, 65, 0, 133, 149, 0, 29, 4, 31, 0, 0, 0, 0, 130, 40, 1, 3, 0, 160, 43, 16, 0, 0, 54, 4, 31, 0, 0, 0, 0, 129, 0, 5, 1, 1, 0, 21, 7, 1, 1, 0, 47, 13, 65, 0, 102, 70, 16, 65, 0, 221, 222, 17, 65, 0, 103, 71, 18, 65, 0, 106, 74, 19, 65, 0, 114, 82, 20, 65, 0, 109, 77, 21, 65, 0, 118, 86, 22, 65, 0, 110, 78, 23, 65, 0, 122, 90, 24, 193, 0, 241, 24, 240, 0, 25, 65, 0, 210, 211, 26, 65, 0, 247, 248, 27, 65, 0, 104, 72, 29, 4, 31, 0, 0, 0, 0, 130, 30, 65, 0, 253, 208, 31, 65, 0, 117, 85, 32, 65, 0, 115, 83, 33, 65, 0, 105, 73, 34, 65, 0, 108, 76, 35, 65, 0, 100, 68, 36, 65, 0, 97, 65, 37, 65, 0, 116, 84, 38, 65, 0, 101, 69, 39, 65, 0, 99, 67, 40, 1, 3, 0, 160, 41, 1, 0, 45, 63, 42, 4, 31, 0, 0, 0, 0, 128, 43, 65, 0, 243, 244, 44, 65, 0, 183, 252, 45, 65, 0, 98, 66, 46, 65, 0, 216, 215, 47, 65, 0, 107, 75, 48, 65, 0, 112, 80, 49, 65, 0, 111, 79, 50, 65, 0, 198, 181, 51, 1, 1, 0, 59, 52, 1, 1, 0, 58, 53, 65, 0, 245, 246, 86, 65, 0, 214, 242, 0, 5, 1, 1, 0, 21, 7, 1, 1, 0, 47, 13, 65, 0, 228, 148, 16, 65, 0, 238, 158, 17, 65, 0, 163, 131, 18, 65, 0, 169, 137, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 172, 140, 21, 65, 0, 162, 130, 22, 65, 0, 173, 141, 23, 65, 0, 167, 135, 24, 65, 0, 237, 157, 25, 65, 0, 231, 151, 26, 65, 0, 166, 134, 27, 65, 0, 229, 149, 30, 65, 0, 232, 152, 31, 65, 0, 227, 147, 32, 65, 0, 225, 145, 33, 65, 0, 168, 136, 34, 65, 0, 171, 139, 35, 65, 0, 164, 132, 36, 65, 0, 160, 128, 37, 65, 0, 226, 146, 38, 65, 0, 165, 133, 39, 65, 0, 230, 150, 40, 1, 3, 0, 160, 41, 1, 0, 45, 63, 42, 4, 31, 0, 0, 0, 0, 128, 43, 65, 0, 234, 154, 44, 65, 0, 233, 153, 45, 65, 0, 161, 129, 46, 65, 0, 235, 155, 47, 65, 0, 170, 138, 48, 65, 0, 175, 143, 49, 65, 0, 174, 142, 50, 65, 0, 239, 159, 51, 1, 1, 0, 59, 52, 1, 1, 0, 58, 53, 65, 0, 236, 156, 54, 4, 31, 0, 0, 0, 0, 129, 0, 236, 103, 3, 9, 0, 0, 77, 75, 44, 193, 1, 77, 75, 8, 4, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 104, 3, 235, 1, 0, 0, 0, 0, 104, 3, 44, 1, 0, 0, 0, 0, 87, 3, 78, 3, 0, 0, 0, 0, 87, 3, 144, 2, 0, 0, 0, 0, 90, 3, 37, 1, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 57, 117, 0, 2, 83, 2, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 126, 3, 1, 1, 0, 34, 4, 4, 9, 0, 35, 94, 0, 30, 7, 1, 1, 0, 38, 8, 2, 1, 0, 47, 96, 9, 1, 1, 0, 40, 10, 1, 1, 0, 41, 11, 1, 1, 0, 61, 12, 1, 0, 39, 63, 13, 1, 0, 43, 42, 16, 66, 3, 0, 0, 92, 17, 66, 3, 0, 0, 124, 21, 197, 0, 122, 44, 90, 44, 0, 44, 0, 44, 26, 44, 0, 44, 33, 66, 3, 0, 0, 91, 34, 66, 3, 0, 0, 93, 39, 4, 12, 94, 94, 0, 0, 30, 40, 1, 0, 245, 245, 41, 4, 12, 92, 124, 0, 0, 28, 43, 1, 0, 64, 64, 44, 197, 0, 121, 21, 89, 21, 0, 21, 0, 21, 25, 21, 0, 21, 47, 66, 3, 0, 0, 64, 48, 66, 3, 0, 0, 123, 49, 66, 3, 0, 0, 125, 51, 1, 0, 44, 59, 52, 1, 0, 46, 58, 53, 4, 12, 45, 95, 0, 0, 31, 86, 1, 0, 60, 62, 0, 18, 66, 3, 0, 0, 213, 0, 16, 65, 0, 144, 145, 17, 65, 0, 146, 147, 18, 66, 0, 168, 169, 207, 19, 65, 0, 225, 226, 20, 65, 0, 229, 230, 21, 197, 0, 243, 44, 244, 44, 0, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 231, 232, 23, 65, 0, 183, 184, 24, 65, 0, 214, 215, 25, 65, 0, 216, 221, 26, 66, 0, 245, 246, 129, 27, 66, 0, 130, 131, 128, 30, 65, 0, 160, 161, 31, 65, 0, 227, 228, 32, 65, 0, 166, 167, 33, 65, 0, 170, 171, 34, 65, 0, 172, 173, 35, 65, 0, 181, 182, 36, 65, 0, 142, 143, 37, 65, 0, 198, 199, 38, 65, 0, 208, 209, 39, 66, 0, 251, 252, 149, 40, 66, 0, 150, 151, 148, 42, 5, 63, 0, 0, 0, 0, 0, 120, 43, 65, 0, 233, 234, 44, 197, 0, 136, 21, 137, 21, 0, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 154, 155, 46, 65, 0, 164, 165, 47, 65, 0, 235, 236, 48, 65, 0, 162, 163, 49, 65, 0, 212, 213, 50, 66, 0, 210, 211, 253, 0, 18, 66, 3, 0, 0, 207, 40, 1, 0, 253, 253, 54, 5, 63, 0, 0, 0, 0, 0, 121, 0, 3, 1, 3, 0, 200, 12, 0, 1, 201, 18, 66, 0, 101, 69, 213, 21, 197, 0, 122, 44, 90, 44, 0, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 117, 85, 23, 67, 0, 105, 73, 141, 152, 24, 65, 0, 111, 79, 30, 65, 0, 97, 65, 31, 67, 0, 115, 83, 159, 158, 34, 67, 0, 103, 71, 167, 166, 39, 1, 3, 202, 202, 46, 67, 0, 99, 67, 135, 128, 57, 0, 0, 32, 0, 34, 9, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 69, 211, 79, 153, 85, 154, 32, 34, 39, 5, 99, 134, 103, 208, 67, 143, 71, 209, 32, 39, 94, 13, 97, 131, 99, 172, 105, 140, 115, 231, 117, 150, 122, 168, 65, 182, 67, 173, 73, 215, 83, 230, 85, 234, 90, 169, 32, 94, 0, 16, 65, 0, 144, 145, 17, 65, 0, 146, 147, 18, 65, 0, 168, 169, 19, 65, 0, 225, 226, 20, 65, 0, 229, 230, 21, 197, 0, 243, 44, 244, 44, 0, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 231, 232, 23, 65, 0, 183, 184, 24, 65, 0, 214, 215, 25, 65, 0, 216, 221, 26, 66, 0, 245, 246, 129, 27, 66, 0, 130, 131, 128, 30, 65, 0, 160, 161, 31, 65, 0, 227, 228, 32, 65, 0, 166, 167, 33, 65, 0, 170, 171, 34, 65, 0, 172, 173, 35, 65, 0, 181, 182, 36, 65, 0, 142, 143, 37, 65, 0, 198, 199, 38, 65, 0, 208, 209, 39, 66, 0, 251, 252, 149, 40, 66, 0, 150, 151, 148, 42, 5, 63, 0, 0, 0, 0, 0, 122, 43, 65, 0, 233, 234, 44, 197, 0, 136, 21, 137, 21, 0, 21, 0, 21, 25, 21, 0, 21, 45, 65, 0, 154, 155, 46, 65, 0, 164, 165, 47, 65, 0, 235, 236, 48, 65, 0, 162, 163, 49, 65, 0, 212, 213, 50, 66, 0, 210, 211, 253, 0, 40, 1, 0, 253, 253, 54, 5, 63, 0, 0, 0, 0, 0, 123, 0, 72, 97, 1, 9, 0, 0, 77, 78, 44, 0, 0, 77, 79, 3, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 227, 72, 1, 0, 0, 0, 0, 40, 227, 68, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 252, 49, 33, 3, 2, 0, 45, 50, 64, 4, 2, 0, 34, 51, 35, 5, 2, 0, 36, 52, 59, 6, 1, 0, 58, 53, 7, 2, 0, 46, 54, 94, 8, 3, 0, 95, 55, 38, 31, 9, 2, 0, 44, 56, 42, 10, 2, 0, 37, 57, 40, 11, 2, 0, 63, 48, 41, 12, 66, 0, 165, 133, 253, 13, 65, 0, 233, 153, 16, 65, 0, 228, 148, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 166, 134, 20, 65, 0, 237, 157, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 221, 220, 25, 65, 0, 167, 135, 26, 66, 0, 170, 138, 91, 27, 66, 0, 234, 154, 93, 30, 65, 0, 169, 137, 31, 65, 0, 235, 155, 32, 65, 0, 161, 129, 33, 65, 0, 243, 242, 34, 65, 0, 160, 128, 35, 65, 0, 229, 149, 36, 193, 0, 224, 0, 144, 35, 37, 65, 0, 174, 142, 38, 65, 0, 171, 139, 39, 65, 0, 164, 132, 40, 66, 0, 175, 143, 39, 41, 1, 0, 61, 43, 42, 4, 31, 0, 0, 0, 0, 120, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 193, 0, 241, 46, 240, 0, 47, 65, 0, 225, 145, 48, 65, 0, 172, 140, 49, 65, 0, 168, 136, 50, 65, 0, 226, 146, 51, 66, 0, 236, 156, 60, 52, 66, 0, 162, 130, 62, 53, 66, 0, 238, 158, 47, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 121, 0, 87, 168, 0, 9, 0, 0, 77, 84, 44, 0, 0, 77, 76, 2, 3, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 3, 60, 0, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 124, 3, 1, 1, 0, 34, 4, 2, 3, 0, 160, 156, 18, 67, 3, 0, 0, 138, 212, 22, 67, 3, 0, 0, 151, 235, 23, 67, 3, 0, 0, 141, 222, 24, 67, 3, 0, 0, 149, 227, 26, 67, 0, 229, 228, 91, 123, 27, 67, 0, 232, 231, 93, 125, 30, 67, 3, 0, 0, 133, 183, 40, 1, 1, 0, 64, 41, 66, 0, 145, 146, 96, 43, 1, 0, 35, 126, 53, 4, 11, 0, 0, 92, 0, 28, 86, 67, 0, 190, 189, 92, 124, 0, 49, 126, 0, 9, 47, 0, 77, 84, 44, 47, 0, 77, 76, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 3, 52, 0, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 18, 3, 3, 0, 0, 138, 212, 22, 3, 3, 0, 0, 151, 235, 23, 3, 3, 0, 0, 141, 222, 24, 3, 3, 0, 0, 149, 227, 26, 67, 0, 229, 228, 91, 123, 27, 67, 0, 232, 231, 93, 125, 30, 3, 3, 0, 0, 133, 183, 41, 67, 0, 145, 146, 96, 126, 43, 67, 0, 190, 189, 92, 124, 0, 176, 244, 1, 4, 0, 0, 78, 69, 2, 4, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 117, 68, 0, 138, 1, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 65, 0, 38, 49, 3, 66, 4, 130, 50, 201, 4, 66, 0, 34, 51, 35, 5, 66, 0, 39, 52, 123, 6, 68, 8, 40, 53, 91, 0, 27, 7, 68, 8, 45, 54, 124, 0, 31, 8, 66, 4, 138, 55, 200, 9, 68, 8, 95, 56, 92, 0, 28, 10, 66, 0, 135, 57, 94, 11, 66, 0, 133, 48, 64, 12, 68, 8, 41, 248, 93, 0, 29, 13, 66, 3, 0, 0, 125, 16, 197, 0, 97, 30, 65, 30, 145, 30, 146, 30, 1, 30, 0, 30, 17, 197, 0, 122, 44, 90, 44, 247, 44, 239, 44, 26, 44, 0, 44, 18, 67, 0, 101, 69, 225, 238, 20, 3, 3, 0, 0, 158, 159, 21, 67, 0, 121, 89, 236, 237, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 67, 0, 111, 79, 171, 172, 26, 68, 15, 202, 203, 0, 0, 30, 27, 67, 0, 36, 156, 207, 213, 30, 197, 0, 113, 16, 81, 16, 132, 16, 142, 16, 17, 16, 0, 16, 31, 67, 0, 115, 83, 141, 222, 32, 3, 3, 0, 0, 149, 227, 33, 3, 3, 0, 0, 208, 209, 34, 67, 0, 103, 71, 168, 173, 36, 65, 0, 106, 74, 37, 3, 3, 0, 0, 231, 232, 38, 3, 3, 0, 0, 155, 157, 39, 197, 0, 109, 50, 77, 50, 0, 50, 0, 50, 13, 50, 0, 50, 40, 65, 0, 151, 37, 41, 65, 0, 130, 144, 43, 65, 0, 42, 230, 44, 197, 0, 119, 17, 87, 17, 0, 17, 0, 17, 23, 17, 0, 17, 46, 3, 3, 0, 0, 135, 128, 48, 3, 3, 0, 0, 241, 242, 49, 67, 0, 110, 78, 250, 251, 50, 67, 0, 44, 63, 252, 253, 51, 67, 0, 59, 46, 60, 174, 52, 67, 0, 58, 47, 62, 175, 53, 65, 0, 33, 245, 57, 0, 0, 32, 86, 65, 0, 60, 62, 0, 96, 7, 97, 133, 101, 138, 117, 151, 65, 183, 69, 212, 85, 235, 32, 96, 126, 13, 97, 198, 101, 189, 105, 169, 111, 228, 117, 244, 110, 164, 65, 199, 69, 190, 73, 184, 79, 229, 85, 246, 78, 165, 32, 126, 94, 17, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 103, 134, 106, 166, 115, 249, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 71, 143, 74, 167, 83, 221, 32, 94, 34, 9, 101, 137, 105, 139, 117, 129, 121, 152, 69, 211, 73, 216, 85, 154, 89, 243, 32, 34, 0, 81, 32, 1, 4, 0, 0, 78, 71, 2, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 53, 117, 52, 0, 178, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 5, 3, 1, 0, 225, 36, 156, 6, 2, 3, 0, 0, 213, 7, 1, 3, 0, 202, 17, 67, 3, 0, 0, 189, 190, 18, 67, 0, 101, 69, 241, 242, 21, 67, 3, 0, 0, 247, 239, 22, 67, 0, 117, 85, 158, 159, 23, 67, 0, 105, 73, 155, 157, 24, 67, 0, 111, 79, 252, 253, 25, 67, 3, 0, 0, 250, 251, 30, 65, 0, 97, 65, 31, 65, 0, 115, 83, 32, 67, 3, 0, 0, 208, 209, 36, 67, 3, 0, 0, 148, 153, 37, 67, 3, 0, 0, 231, 232, 40, 0, 1, 203, 41, 1, 3, 200, 201, 48, 67, 3, 0, 0, 198, 199, 49, 67, 0, 110, 78, 164, 165, 57, 0, 0, 32, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 13, 101, 166, 105, 132, 110, 228, 111, 168, 115, 249, 117, 134, 69, 167, 73, 142, 78, 229, 79, 169, 83, 221, 85, 143, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 110, 236, 111, 162, 117, 163, 65, 181, 69, 144, 73, 214, 78, 237, 79, 224, 85, 233, 32, 39, 0, 223, 252, 1, 4, 0, 0, 80, 72, 4, 2, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 90, 3, 34, 1, 41, 1, 0, 0, 82, 3, 0, 0, 41, 1, 0, 0, 181, 1, 160, 1, 172, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 166, 124, 3, 2, 1, 0, 34, 64, 4, 2, 1, 0, 47, 35, 5, 2, 1, 0, 40, 172, 6, 2, 1, 0, 41, 171, 7, 2, 1, 0, 173, 170, 8, 3, 1, 0, 33, 95, 31, 9, 2, 1, 0, 168, 35, 10, 2, 1, 0, 63, 245, 11, 3, 3, 0, 160, 92, 28, 12, 2, 0, 45, 43, 42, 13, 2, 7, 204, 204, 201, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 2, 0, 246, 158, 91, 27, 2, 3, 200, 200, 93, 30, 66, 0, 97, 65, 36, 31, 66, 3, 0, 0, 38, 32, 66, 3, 0, 0, 64, 33, 66, 3, 0, 0, 91, 34, 66, 3, 0, 0, 93, 35, 66, 3, 0, 0, 124, 36, 66, 3, 0, 0, 156, 37, 66, 3, 0, 0, 241, 39, 66, 0, 164, 165, 126, 40, 66, 0, 135, 128, 123, 41, 3, 0, 39, 250, 92, 28, 43, 66, 3, 203, 203, 125, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 51, 2, 1, 0, 59, 60, 52, 2, 5, 0, 58, 202, 53, 2, 0, 61, 37, 62, 57, 0, 0, 32, 86, 1, 0, 60, 62, 0, 18, 66, 3, 0, 0, 213, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 0, 10, 2, 3, 0, 0, 21, 26, 1, 3, 0, 160, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 7, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 216, 181, 0, 9, 0, 0, 83, 81, 44, 196, 1, 83, 81, 5, 2, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 84, 3, 148, 0, 0, 0, 0, 0, 90, 3, 141, 0, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 181, 1, 160, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 245, 8, 2, 3, 0, 0, 123, 9, 2, 3, 0, 0, 125, 10, 3, 3, 0, 0, 91, 27, 11, 3, 3, 0, 0, 93, 29, 26, 65, 0, 137, 211, 27, 1, 0, 39, 64, 40, 65, 0, 135, 128, 41, 2, 0, 96, 170, 124, 43, 3, 0, 35, 126, 92, 28, 0, 18, 66, 3, 0, 0, 213, 0, 18, 66, 3, 0, 0, 170, 41, 1, 3, 0, 160, 0, 4, 1, 1, 0, 21, 26, 65, 2, 137, 160, 0, 168, 97, 3, 4, 192, 1, 83, 81, 5, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 84, 3, 48, 2, 155, 2, 0, 0, 82, 3, 0, 0, 54, 1, 0, 0, 90, 3, 47, 1, 54, 1, 0, 0, 181, 1, 189, 1, 213, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 2, 7, 0, 0, 200, 3, 1, 1, 0, 34, 4, 3, 7, 0, 0, 201, 30, 6, 2, 7, 0, 0, 202, 8, 2, 7, 0, 0, 203, 9, 2, 3, 0, 0, 250, 10, 2, 7, 0, 0, 204, 12, 2, 7, 0, 0, 205, 13, 2, 7, 0, 0, 206, 16, 66, 3, 0, 0, 92, 17, 66, 3, 0, 0, 124, 18, 65, 0, 101, 69, 21, 196, 0, 122, 44, 90, 44, 0, 44, 26, 44, 0, 44, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 66, 0, 135, 128, 246, 27, 2, 0, 64, 39, 158, 30, 65, 0, 97, 65, 33, 66, 3, 0, 0, 91, 34, 66, 3, 0, 0, 93, 39, 66, 0, 137, 211, 36, 40, 3, 0, 91, 123, 225, 27, 41, 3, 4, 92, 124, 0, 28, 43, 3, 0, 93, 125, 207, 29, 44, 196, 0, 121, 21, 89, 21, 0, 21, 25, 21, 0, 21, 46, 65, 0, 99, 67, 47, 66, 3, 0, 0, 64, 48, 66, 3, 0, 0, 123, 49, 66, 0, 110, 78, 125, 50, 66, 3, 0, 0, 245, 51, 2, 1, 0, 59, 60, 52, 2, 1, 0, 58, 62, 57, 0, 0, 32, 86, 1, 0, 60, 62, 0, 18, 66, 3, 0, 0, 213, 0, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 248, 3, 97, 134, 65, 143, 32, 248, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 239, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 239, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 249, 247, 3, 99, 135, 67, 128, 32, 247, 0, 27, 2, 7, 0, 0, 160, 39, 65, 2, 137, 160, 43, 2, 7, 0, 0, 160, 50, 66, 3, 0, 0, 21, 0, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 248, 3, 97, 134, 65, 143, 32, 248, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 39, 7, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 44, 3, 99, 135, 67, 128, 32, 44, 0, 2, 2, 3, 0, 0, 126, 3, 2, 7, 0, 0, 200, 5, 2, 7, 0, 0, 202, 6, 2, 7, 0, 0, 203, 7, 2, 7, 0, 0, 204, 8, 2, 3, 0, 0, 96, 9, 2, 7, 0, 0, 205, 10, 2, 7, 0, 0, 206, 11, 2, 7, 0, 0, 207, 12, 2, 7, 0, 0, 208, 13, 2, 7, 0, 0, 209, 18, 66, 3, 0, 0, 170, 19, 65, 0, 114, 82, 20, 65, 0, 116, 84, 31, 66, 0, 115, 83, 208, 32, 66, 0, 100, 68, 209, 37, 66, 3, 0, 0, 136, 38, 66, 0, 108, 76, 157, 0, 243, 19, 99, 159, 100, 212, 101, 216, 108, 150, 110, 229, 114, 253, 115, 231, 116, 156, 122, 167, 67, 172, 68, 210, 69, 183, 76, 149, 78, 213, 82, 252, 83, 230, 84, 155, 90, 166, 32, 243, 94, 7, 97, 131, 105, 140, 111, 147, 65, 182, 73, 215, 79, 226, 32, 94, 244, 3, 97, 199, 65, 198, 32, 244, 248, 3, 117, 133, 85, 222, 32, 248, 242, 5, 97, 165, 101, 169, 65, 164, 69, 168, 32, 242, 250, 3, 122, 190, 90, 189, 32, 250, 239, 25, 97, 160, 99, 134, 101, 130, 105, 161, 108, 146, 110, 228, 111, 162, 114, 234, 115, 152, 117, 163, 121, 236, 122, 171, 65, 181, 67, 143, 69, 144, 73, 214, 76, 145, 78, 227, 79, 224, 82, 232, 83, 151, 85, 233, 89, 237, 90, 141, 32, 239, 241, 5, 111, 139, 117, 251, 79, 138, 85, 235, 32, 241, 249, 9, 97, 132, 101, 137, 111, 148, 117, 129, 65, 142, 69, 211, 79, 153, 85, 154, 32, 249, 247, 7, 99, 135, 115, 173, 116, 238, 67, 128, 83, 184, 84, 221, 32, 247, 0, 7, 85, 1, 4, 0, 0, 84, 74, 3, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 117, 65, 1, 0, 0, 0, 0, 50, 117, 68, 0, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 4, 2, 1, 0, 252, 35, 5, 2, 5, 0, 59, 160, 7, 2, 1, 0, 58, 94, 8, 2, 1, 0, 63, 38, 9, 2, 3, 0, 0, 36, 12, 67, 0, 243, 242, 45, 95, 13, 67, 0, 247, 246, 61, 43, 16, 65, 0, 169, 137, 17, 67, 0, 249, 248, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 67, 0, 251, 250, 233, 153, 25, 65, 0, 167, 135, 26, 66, 0, 229, 149, 91, 27, 66, 0, 234, 154, 93, 30, 65, 0, 228, 148, 31, 67, 0, 222, 221, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 120, 43, 2, 1, 0, 47, 124, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 67, 0, 245, 244, 236, 156, 51, 66, 0, 161, 129, 60, 52, 66, 0, 238, 158, 62, 53, 2, 0, 46, 44, 47, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 121, 0, 82, 111, 1, 4, 0, 0, 84, 77, 4, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 84, 3, 105, 0, 0, 0, 0, 0, 98, 231, 97, 1, 0, 0, 0, 0, 98, 231, 160, 0, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 26, 3, 3, 0, 0, 91, 123, 27, 3, 3, 0, 0, 93, 125, 41, 3, 3, 0, 0, 96, 126, 43, 3, 3, 0, 0, 92, 124, 0, 16, 67, 0, 132, 142, 113, 81, 18, 66, 3, 0, 0, 170, 26, 65, 0, 229, 213, 27, 65, 0, 148, 153, 41, 65, 0, 167, 166, 43, 65, 0, 173, 184, 45, 67, 0, 236, 237, 120, 88, 46, 67, 0, 135, 128, 99, 67, 47, 67, 0, 129, 154, 118, 86, 0, 12, 195, 0, 241, 12, 240, 0, 45, 130, 95, 130, 13, 67, 0, 235, 155, 61, 43, 16, 65, 0, 243, 242, 17, 65, 0, 162, 130, 18, 65, 0, 165, 133, 19, 193, 0, 224, 0, 144, 19, 20, 65, 0, 226, 146, 21, 65, 0, 169, 137, 22, 65, 0, 227, 147, 23, 65, 0, 168, 136, 24, 65, 0, 174, 142, 25, 65, 0, 175, 143, 26, 65, 0, 251, 250, 27, 65, 0, 245, 244, 30, 65, 0, 160, 128, 31, 65, 0, 225, 145, 32, 65, 0, 164, 132, 33, 65, 0, 228, 148, 34, 65, 0, 163, 131, 35, 65, 0, 229, 149, 36, 65, 0, 166, 134, 37, 65, 0, 170, 138, 38, 65, 0, 171, 139, 40, 67, 0, 237, 157, 39, 34, 41, 65, 0, 249, 248, 42, 4, 31, 0, 0, 0, 0, 121, 43, 65, 0, 232, 152, 44, 65, 0, 167, 135, 45, 65, 0, 239, 159, 46, 65, 0, 231, 151, 47, 65, 0, 247, 246, 48, 65, 0, 161, 129, 49, 65, 0, 173, 141, 50, 65, 0, 172, 140, 53, 67, 0, 238, 158, 47, 63, 0, 54, 4, 31, 0, 0, 0, 0, 122, 0, 133, 131, 6, 9, 0, 0, 85, 82, 44, 0, 0, 85, 65, 15, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 0, 0, 0, 80, 3, 210, 1, 0, 0, 0, 0, 80, 3, 244, 0, 0, 0, 0, 0, 101, 4, 196, 2, 0, 0, 0, 0, 101, 4, 231, 1, 0, 0, 0, 0, 81, 3, 172, 3, 0, 0, 0, 0, 81, 3, 211, 2, 0, 0, 0, 0, 107, 4, 153, 4, 0, 0, 0, 0, 107, 4, 193, 3, 0, 0, 0, 0, 40, 3, 127, 5, 0, 0, 0, 0, 40, 3, 168, 4, 0, 0, 0, 0, 98, 3, 106, 6, 0, 0, 0, 0, 98, 3, 148, 5, 0, 0, 0, 0, 90, 3, 237, 0, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 4, 2, 3, 0, 0, 35, 5, 2, 3, 0, 0, 207, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 38, 9, 2, 3, 0, 0, 36, 26, 2, 3, 0, 0, 91, 27, 2, 3, 0, 0, 93, 43, 2, 3, 0, 0, 124, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 53, 2, 3, 0, 0, 47, 0, 18, 66, 3, 0, 0, 213, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 2, 5, 0, 59, 160, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 67, 0, 163, 131, 243, 242, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 249, 248, 30, 65, 0, 228, 148, 31, 65, 0, 247, 246, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 245, 244, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 86, 65, 0, 243, 242, 0, 5, 2, 7, 0, 0, 160, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 121, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 2, 1, 0, 59, 253, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 65, 0, 165, 133, 21, 65, 0, 173, 141, 22, 67, 0, 163, 131, 243, 242, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 249, 248, 30, 65, 0, 228, 148, 31, 65, 0, 247, 246, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 245, 244, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 122, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 86, 65, 0, 243, 242, 0, 5, 2, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 123, 0, 3, 1, 1, 0, 34, 5, 2, 5, 0, 59, 160, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 251, 21, 65, 0, 173, 141, 22, 67, 0, 163, 131, 253, 252, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 245, 244, 30, 65, 0, 228, 148, 31, 65, 0, 249, 248, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 243, 242, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 124, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 86, 65, 0, 253, 252, 0, 5, 2, 7, 0, 0, 160, 18, 66, 3, 0, 0, 251, 54, 4, 31, 0, 0, 0, 0, 125, 0, 3, 1, 1, 0, 34, 5, 2, 1, 0, 59, 251, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 65, 0, 165, 133, 21, 65, 0, 173, 141, 22, 67, 0, 163, 131, 253, 252, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 245, 244, 30, 65, 0, 228, 148, 31, 65, 0, 249, 248, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 243, 242, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 126, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 86, 65, 0, 253, 252, 0, 5, 2, 3, 0, 0, 251, 54, 4, 31, 0, 0, 0, 0, 127, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 2, 5, 0, 59, 160, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 245, 244, 30, 65, 0, 228, 148, 31, 65, 0, 105, 73, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 243, 242, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 128, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 5, 2, 7, 0, 0, 160, 18, 2, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 129, 0, 3, 1, 1, 0, 34, 4, 1, 1, 0, 252, 5, 2, 1, 0, 59, 253, 7, 1, 1, 0, 58, 8, 1, 1, 0, 63, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 65, 0, 165, 133, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 245, 244, 30, 65, 0, 228, 148, 31, 65, 0, 105, 73, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 243, 242, 41, 193, 0, 241, 41, 240, 0, 42, 4, 31, 0, 0, 0, 0, 130, 43, 1, 1, 0, 47, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 1, 0, 46, 44, 0, 5, 2, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 131, 0, 81, 7, 7, 9, 209, 1, 85, 82, 44, 209, 1, 85, 65, 15, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 0, 0, 0, 80, 3, 231, 1, 0, 0, 0, 0, 80, 3, 240, 0, 0, 0, 0, 0, 101, 4, 236, 2, 0, 0, 0, 0, 101, 4, 246, 1, 0, 0, 0, 0, 81, 3, 236, 3, 0, 0, 0, 0, 81, 3, 245, 2, 0, 0, 0, 0, 107, 4, 241, 4, 0, 0, 0, 0, 107, 4, 251, 3, 0, 0, 0, 0, 40, 3, 240, 5, 0, 0, 0, 0, 40, 3, 250, 4, 0, 0, 0, 0, 98, 3, 244, 6, 0, 0, 0, 0, 98, 3, 255, 5, 0, 0, 0, 0, 90, 3, 233, 0, 0, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 64, 4, 2, 3, 0, 0, 35, 5, 2, 3, 0, 0, 36, 7, 2, 3, 0, 0, 94, 8, 2, 3, 0, 0, 38, 9, 3, 3, 0, 0, 42, 31, 13, 3, 7, 0, 0, 0, 28, 26, 2, 3, 0, 0, 91, 27, 2, 3, 0, 0, 93, 51, 2, 3, 0, 0, 60, 52, 2, 3, 0, 0, 62, 0, 18, 66, 3, 0, 0, 213, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 243, 242, 30, 65, 0, 228, 148, 31, 65, 0, 168, 136, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 245, 244, 41, 1, 0, 96, 43, 42, 4, 31, 0, 0, 0, 0, 120, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 247, 246, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 65, 0, 249, 248, 0, 18, 66, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 121, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 65, 0, 165, 133, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 243, 242, 30, 65, 0, 228, 148, 31, 65, 0, 168, 136, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 245, 244, 41, 1, 0, 96, 43, 42, 4, 31, 0, 0, 0, 0, 122, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 247, 246, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 65, 0, 249, 248, 0, 54, 4, 31, 0, 0, 0, 0, 123, 0, 2, 1, 0, 33, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 251, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 253, 252, 30, 65, 0, 228, 148, 31, 65, 0, 168, 136, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 126455);
allocate([174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 243, 242, 41, 1, 0, 96, 43, 42, 4, 31, 0, 0, 0, 0, 124, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 249, 248, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 65, 0, 245, 244, 0, 18, 66, 3, 0, 0, 251, 54, 4, 31, 0, 0, 0, 0, 125, 0, 2, 1, 0, 33, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 65, 0, 165, 133, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 65, 0, 253, 252, 30, 65, 0, 228, 148, 31, 65, 0, 168, 136, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 243, 242, 41, 1, 0, 96, 43, 42, 4, 31, 0, 0, 0, 0, 126, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 249, 248, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 65, 0, 245, 244, 0, 54, 4, 31, 0, 0, 0, 0, 127, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 66, 0, 165, 133, 253, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 16, 0, 0, 30, 65, 0, 228, 148, 31, 65, 0, 168, 136, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 243, 242, 41, 1, 0, 96, 43, 42, 4, 31, 0, 0, 0, 0, 128, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 105, 73, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 65, 0, 245, 244, 0, 18, 2, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 129, 0, 2, 1, 0, 252, 49, 3, 1, 0, 45, 50, 4, 1, 0, 47, 51, 5, 1, 0, 34, 52, 6, 1, 0, 58, 53, 7, 1, 0, 44, 54, 8, 1, 0, 46, 55, 9, 1, 0, 95, 56, 10, 1, 0, 63, 57, 11, 1, 0, 37, 48, 12, 1, 0, 33, 61, 13, 1, 0, 59, 92, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 65, 0, 165, 133, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 65, 0, 233, 153, 25, 65, 0, 167, 135, 26, 65, 0, 229, 149, 27, 16, 0, 0, 30, 65, 0, 228, 148, 31, 65, 0, 168, 136, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 243, 242, 41, 1, 0, 96, 43, 42, 4, 31, 0, 0, 0, 0, 130, 43, 1, 0, 41, 40, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 105, 73, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 65, 0, 161, 129, 52, 65, 0, 238, 158, 53, 65, 0, 245, 244, 0, 54, 4, 31, 0, 0, 0, 0, 131, 0, 254, 152, 9, 9, 0, 0, 85, 88, 44, 103, 0, 85, 88, 9, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 90, 3, 168, 0, 173, 3, 0, 0, 82, 3, 168, 1, 173, 3, 0, 0, 181, 1, 162, 2, 94, 3, 0, 0, 69, 117, 40, 4, 143, 4, 0, 0, 71, 117, 20, 5, 163, 5, 0, 0, 72, 117, 56, 6, 190, 6, 0, 0, 73, 117, 79, 7, 6, 8, 0, 0, 74, 117, 131, 8, 241, 8, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 7, 1, 3, 0, 202, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 30, 65, 0, 97, 65, 40, 1, 3, 203, 204, 41, 1, 3, 200, 201, 46, 65, 0, 99, 67, 49, 65, 0, 110, 78, 57, 0, 0, 32, 0, 2, 3, 3, 0, 0, 173, 251, 3, 2, 3, 0, 0, 253, 4, 2, 3, 0, 0, 252, 5, 3, 3, 0, 0, 207, 156, 6, 2, 3, 0, 0, 213, 7, 2, 3, 0, 0, 172, 8, 2, 3, 0, 0, 171, 9, 2, 3, 0, 0, 243, 12, 2, 3, 0, 0, 190, 13, 3, 3, 0, 0, 158, 246, 16, 3, 3, 0, 0, 132, 142, 17, 3, 3, 0, 0, 134, 143, 18, 3, 3, 0, 0, 130, 144, 19, 2, 3, 0, 0, 169, 20, 3, 3, 0, 0, 231, 232, 21, 3, 3, 0, 0, 129, 154, 22, 3, 3, 0, 0, 163, 233, 23, 3, 3, 0, 0, 161, 214, 24, 131, 3, 0, 24, 0, 24, 162, 24, 224, 0, 25, 3, 3, 0, 0, 148, 153, 26, 2, 3, 0, 0, 174, 27, 2, 3, 0, 0, 175, 30, 3, 3, 0, 0, 160, 181, 31, 3, 3, 0, 0, 225, 245, 32, 3, 3, 0, 0, 208, 209, 33, 2, 3, 0, 0, 159, 38, 3, 3, 0, 0, 155, 157, 39, 3, 3, 0, 0, 244, 248, 40, 3, 3, 0, 0, 239, 249, 41, 2, 3, 0, 0, 238, 43, 3, 3, 0, 0, 170, 221, 44, 3, 3, 0, 0, 145, 146, 46, 3, 3, 0, 0, 184, 189, 49, 3, 3, 0, 0, 164, 165, 50, 2, 3, 0, 0, 230, 51, 3, 3, 0, 0, 135, 128, 52, 2, 3, 0, 0, 250, 53, 2, 3, 0, 0, 168, 0, 2, 3, 3, 0, 0, 173, 251, 3, 2, 3, 0, 0, 253, 4, 2, 3, 0, 0, 252, 5, 3, 3, 0, 0, 207, 156, 7, 2, 3, 0, 0, 172, 8, 2, 3, 0, 0, 171, 9, 2, 3, 0, 0, 243, 12, 2, 3, 0, 0, 190, 13, 3, 3, 0, 0, 158, 246, 16, 3, 3, 0, 0, 132, 142, 17, 3, 3, 0, 0, 134, 143, 18, 3, 3, 0, 0, 130, 144, 19, 2, 3, 0, 0, 169, 20, 3, 3, 0, 0, 231, 232, 21, 3, 3, 0, 0, 129, 154, 22, 3, 3, 0, 0, 163, 233, 23, 3, 3, 0, 0, 161, 214, 24, 131, 3, 0, 24, 0, 24, 162, 24, 224, 0, 25, 3, 3, 0, 0, 148, 153, 26, 2, 3, 0, 0, 174, 27, 2, 3, 0, 0, 175, 30, 3, 3, 0, 0, 160, 181, 31, 3, 3, 0, 0, 225, 245, 32, 3, 3, 0, 0, 208, 209, 33, 2, 3, 0, 0, 159, 38, 3, 3, 0, 0, 155, 157, 39, 3, 3, 0, 0, 244, 248, 40, 3, 3, 0, 0, 239, 249, 41, 2, 3, 0, 0, 238, 43, 3, 3, 0, 0, 170, 221, 44, 3, 3, 0, 0, 145, 146, 46, 3, 3, 0, 0, 184, 189, 49, 3, 3, 0, 0, 164, 165, 50, 2, 3, 0, 0, 230, 51, 3, 3, 0, 0, 135, 128, 52, 2, 3, 0, 0, 250, 53, 2, 3, 0, 0, 168, 0, 2, 2, 3, 0, 0, 173, 3, 2, 3, 0, 0, 253, 5, 3, 7, 0, 0, 0, 156, 7, 2, 3, 0, 0, 172, 8, 2, 3, 0, 0, 171, 12, 2, 3, 0, 0, 157, 13, 3, 7, 0, 0, 0, 246, 16, 3, 3, 0, 0, 132, 142, 17, 3, 3, 0, 0, 134, 143, 18, 3, 3, 0, 0, 130, 144, 21, 3, 3, 0, 0, 129, 154, 22, 2, 3, 0, 0, 163, 23, 2, 3, 0, 0, 161, 24, 2, 3, 0, 0, 162, 25, 3, 3, 0, 0, 148, 153, 26, 2, 3, 0, 0, 174, 27, 2, 3, 0, 0, 175, 30, 2, 3, 0, 0, 160, 31, 3, 3, 0, 0, 225, 21, 33, 2, 3, 0, 0, 159, 39, 3, 3, 0, 0, 20, 248, 43, 2, 3, 0, 0, 170, 44, 3, 3, 0, 0, 145, 146, 46, 3, 7, 0, 0, 0, 155, 49, 3, 3, 0, 0, 164, 165, 50, 2, 3, 0, 0, 230, 51, 3, 3, 0, 0, 135, 128, 52, 2, 3, 0, 0, 250, 53, 2, 3, 0, 0, 168, 0, 96, 6, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 32, 96, 126, 3, 110, 164, 78, 165, 32, 126, 94, 6, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 32, 94, 39, 9, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 67, 128, 69, 144, 32, 39, 34, 10, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 79, 153, 85, 154, 32, 34, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 239, 15, 97, 160, 99, 135, 101, 130, 105, 161, 111, 162, 117, 163, 121, 236, 65, 181, 67, 128, 69, 144, 73, 214, 79, 224, 85, 233, 89, 237, 32, 39, 249, 12, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 32, 34, 0, 5, 3, 3, 0, 0, 207, 156, 6, 2, 3, 0, 0, 213, 12, 2, 3, 0, 0, 190, 17, 3, 3, 0, 0, 134, 143, 19, 2, 3, 0, 0, 169, 24, 3, 3, 0, 0, 171, 172, 26, 2, 3, 204, 0, 174, 27, 2, 3, 205, 0, 175, 30, 3, 3, 0, 0, 145, 146, 31, 3, 7, 0, 0, 0, 245, 38, 65, 0, 108, 76, 39, 3, 3, 0, 0, 244, 248, 40, 1, 2, 39, 203, 43, 3, 3, 0, 0, 170, 221, 46, 3, 3, 0, 0, 184, 189, 50, 66, 0, 109, 77, 230, 0, 96, 7, 97, 133, 101, 138, 117, 151, 65, 183, 69, 212, 85, 235, 32, 96, 126, 9, 97, 198, 110, 164, 111, 228, 117, 231, 65, 199, 78, 165, 79, 229, 85, 232, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 34, 9, 101, 137, 105, 139, 117, 129, 121, 152, 69, 211, 73, 216, 85, 154, 89, 243, 32, 34, 39, 13, 97, 238, 101, 208, 105, 246, 110, 236, 111, 250, 117, 252, 65, 239, 69, 209, 73, 247, 78, 237, 79, 251, 85, 253, 32, 91, 45, 11, 99, 135, 108, 155, 109, 158, 110, 166, 111, 241, 67, 128, 76, 157, 77, 159, 78, 167, 79, 242, 32, 93, 0, 2, 3, 7, 0, 0, 0, 251, 3, 2, 3, 0, 0, 253, 4, 2, 3, 0, 0, 252, 5, 3, 3, 0, 0, 207, 156, 6, 2, 3, 0, 0, 213, 13, 3, 7, 0, 0, 0, 246, 17, 65, 0, 119, 87, 20, 65, 0, 116, 84, 24, 3, 3, 0, 0, 171, 172, 26, 2, 3, 0, 0, 166, 27, 2, 3, 0, 0, 167, 30, 3, 3, 0, 0, 145, 146, 31, 67, 0, 115, 83, 225, 245, 32, 65, 0, 100, 68, 36, 2, 3, 0, 0, 242, 38, 65, 0, 108, 76, 39, 3, 3, 0, 0, 244, 248, 41, 2, 3, 0, 0, 238, 43, 2, 3, 0, 0, 170, 49, 3, 3, 0, 0, 189, 190, 50, 2, 3, 0, 0, 230, 51, 2, 3, 0, 0, 174, 52, 2, 3, 0, 0, 175, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 23, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 119, 247, 115, 249, 100, 208, 108, 155, 110, 158, 116, 231, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 83, 221, 87, 239, 68, 209, 76, 157, 78, 159, 84, 232, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 99, 135, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 67, 128, 32, 39, 34, 15, 97, 132, 101, 137, 105, 139, 110, 169, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 78, 184, 79, 153, 85, 154, 89, 243, 32, 34, 0, 2, 2, 3, 0, 0, 173, 6, 2, 3, 0, 0, 213, 18, 3, 3, 0, 0, 250, 251, 21, 3, 3, 0, 0, 236, 237, 24, 3, 3, 0, 0, 171, 172, 26, 67, 0, 134, 143, 91, 123, 27, 67, 0, 155, 157, 93, 125, 30, 3, 3, 0, 0, 145, 146, 31, 3, 7, 0, 0, 0, 245, 32, 3, 3, 0, 0, 208, 209, 34, 3, 3, 0, 0, 169, 184, 36, 3, 3, 0, 0, 189, 190, 39, 3, 7, 0, 0, 0, 248, 43, 2, 7, 0, 0, 205, 48, 3, 3, 0, 0, 231, 232, 49, 3, 3, 0, 0, 166, 167, 50, 2, 3, 0, 0, 230, 51, 2, 3, 0, 0, 174, 52, 2, 3, 0, 0, 175, 53, 2, 3, 0, 0, 168, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 5, 97, 198, 110, 164, 65, 199, 78, 165, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 99, 135, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 67, 128, 32, 39, 34, 17, 97, 132, 101, 137, 134, 241, 105, 139, 111, 148, 155, 158, 117, 129, 121, 152, 65, 142, 69, 211, 143, 242, 73, 216, 79, 153, 157, 159, 85, 154, 89, 243, 32, 34, 170, 9, 97, 156, 105, 244, 111, 225, 155, 252, 65, 207, 73, 246, 79, 238, 157, 253, 32, 170, 0, 5, 2, 3, 0, 0, 207, 6, 2, 3, 0, 0, 213, 17, 3, 3, 0, 0, 148, 153, 18, 3, 3, 0, 0, 134, 143, 19, 3, 3, 0, 0, 156, 230, 21, 3, 3, 0, 0, 236, 237, 22, 3, 3, 0, 0, 225, 238, 23, 3, 3, 0, 0, 132, 142, 24, 3, 3, 0, 0, 171, 172, 25, 3, 3, 0, 0, 155, 157, 26, 2, 3, 0, 0, 166, 27, 2, 3, 0, 0, 167, 30, 3, 3, 0, 0, 145, 146, 31, 3, 7, 0, 0, 0, 245, 32, 3, 3, 0, 0, 208, 209, 33, 3, 3, 0, 0, 159, 158, 34, 3, 3, 0, 0, 169, 184, 35, 3, 3, 0, 0, 189, 190, 36, 3, 3, 0, 0, 247, 239, 39, 3, 7, 0, 0, 0, 248, 43, 2, 3, 0, 0, 170, 46, 3, 3, 0, 0, 250, 251, 47, 3, 3, 0, 0, 249, 221, 48, 3, 3, 0, 0, 231, 232, 49, 3, 3, 0, 0, 168, 173, 51, 2, 3, 0, 0, 174, 52, 2, 3, 0, 0, 175, 0, 96, 11, 97, 133, 101, 138, 105, 141, 111, 149, 117, 151, 65, 183, 69, 212, 73, 222, 79, 227, 85, 235, 32, 96, 126, 13, 97, 198, 101, 252, 105, 241, 111, 228, 117, 244, 110, 164, 65, 199, 69, 253, 73, 242, 79, 229, 85, 246, 78, 165, 32, 126, 94, 11, 97, 131, 101, 136, 105, 140, 111, 147, 117, 150, 65, 182, 69, 210, 73, 215, 79, 226, 85, 234, 32, 94, 39, 13, 97, 160, 101, 130, 105, 161, 111, 162, 117, 163, 99, 135, 65, 181, 69, 144, 73, 214, 79, 224, 85, 233, 67, 128, 32, 39, 34, 9, 101, 137, 105, 139, 117, 129, 121, 152, 69, 211, 73, 216, 85, 154, 89, 243, 32, 34, 0, 2, 2, 3, 0, 0, 173, 5, 3, 3, 0, 0, 207, 156, 6, 2, 3, 0, 0, 213, 16, 2, 3, 0, 0, 166, 24, 3, 3, 0, 0, 171, 172, 25, 2, 3, 0, 0, 167, 26, 67, 0, 158, 159, 91, 123, 27, 67, 0, 155, 157, 93, 125, 30, 3, 3, 0, 0, 145, 146, 31, 3, 7, 0, 0, 0, 245, 39, 3, 7, 0, 0, 0, 248, 41, 2, 7, 0, 0, 205, 43, 2, 3, 0, 0, 170, 50, 2, 3, 0, 0, 230, 51, 2, 3, 0, 0, 174, 52, 2, 3, 0, 0, 175, 53, 2, 3, 0, 0, 168, 0, 96, 7, 97, 133, 101, 138, 117, 151, 65, 183, 69, 212, 85, 235, 32, 96, 126, 7, 97, 198, 110, 164, 111, 228, 65, 199, 78, 165, 79, 229, 32, 126, 94, 15, 97, 131, 101, 136, 158, 208, 105, 140, 111, 147, 155, 250, 117, 150, 65, 182, 69, 210, 159, 209, 73, 215, 79, 226, 157, 251, 85, 234, 32, 94, 39, 17, 97, 160, 101, 130, 158, 241, 105, 161, 111, 162, 155, 236, 117, 163, 99, 135, 65, 181, 69, 144, 159, 242, 73, 214, 79, 224, 157, 237, 85, 233, 67, 128, 32, 39, 34, 13, 97, 132, 101, 137, 105, 139, 111, 148, 117, 129, 121, 152, 65, 142, 69, 211, 73, 216, 79, 153, 85, 154, 89, 243, 32, 34, 238, 13, 97, 134, 101, 189, 158, 231, 105, 169, 111, 244, 155, 252, 65, 143, 69, 190, 159, 232, 73, 184, 79, 246, 157, 253, 32, 238, 0, 73, 77, 1, 4, 0, 0, 85, 90, 3, 3, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 243, 57, 1, 0, 0, 0, 0, 98, 243, 68, 0, 0, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0, 34, 64, 4, 2, 1, 0, 252, 35, 5, 2, 1, 0, 59, 253, 7, 2, 1, 0, 58, 94, 8, 2, 1, 0, 63, 38, 9, 2, 3, 0, 0, 36, 12, 67, 0, 243, 242, 45, 95, 13, 67, 0, 249, 248, 61, 43, 16, 65, 0, 169, 137, 17, 65, 0, 230, 150, 18, 65, 0, 227, 147, 19, 65, 0, 170, 138, 20, 65, 0, 165, 133, 21, 65, 0, 173, 141, 22, 65, 0, 163, 131, 23, 65, 0, 232, 152, 24, 67, 0, 247, 246, 233, 153, 25, 65, 0, 167, 135, 26, 66, 0, 229, 149, 91, 27, 66, 0, 234, 154, 93, 30, 65, 0, 228, 148, 31, 67, 0, 245, 244, 235, 155, 32, 65, 0, 162, 130, 33, 65, 0, 160, 128, 34, 65, 0, 175, 143, 35, 193, 0, 224, 0, 144, 35, 36, 65, 0, 174, 142, 37, 65, 0, 171, 139, 38, 65, 0, 164, 132, 39, 65, 0, 166, 134, 40, 65, 0, 237, 157, 41, 65, 0, 241, 240, 42, 4, 31, 0, 0, 0, 0, 120, 43, 2, 1, 0, 47, 124, 44, 65, 0, 239, 159, 45, 65, 0, 231, 151, 46, 65, 0, 225, 145, 47, 65, 0, 172, 140, 48, 65, 0, 168, 136, 49, 65, 0, 226, 146, 50, 65, 0, 236, 156, 51, 66, 0, 161, 129, 60, 52, 66, 0, 238, 158, 62, 53, 1, 0, 46, 44, 0, 5, 2, 3, 0, 0, 253, 54, 4, 31, 0, 0, 0, 0, 121, 0, 56, 190, 1, 9, 0, 0, 86, 73, 44, 205, 1, 86, 73, 2, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 117, 52, 0, 175, 0, 0, 0, 0, 8, 0, 64, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 2, 67, 0, 229, 197, 49, 33, 3, 67, 0, 226, 194, 50, 64, 4, 67, 0, 234, 202, 51, 35, 5, 67, 0, 244, 212, 52, 36, 6, 3, 3, 200, 200, 53, 37, 7, 3, 3, 201, 201, 54, 94, 8, 3, 3, 202, 202, 55, 38, 9, 3, 3, 203, 203, 56, 42, 10, 3, 3, 204, 204, 57, 40, 11, 195, 0, 240, 0, 208, 11, 48, 129, 41, 129, 18, 65, 0, 101, 69, 21, 65, 0, 121, 89, 22, 65, 0, 117, 85, 23, 65, 0, 105, 73, 24, 65, 0, 111, 79, 26, 67, 0, 223, 191, 91, 123, 27, 67, 0, 189, 180, 93, 125, 30, 65, 0, 97, 65, 57, 0, 0, 32, 0, 96, 25, 97, 224, 229, 162, 226, 165, 101, 232, 234, 171, 105, 236, 111, 242, 244, 176, 189, 182, 117, 249, 223, 215, 121, 207, 65, 192, 197, 130, 194, 133, 69, 200, 202, 139, 73, 204, 79, 210, 212, 144, 180, 150, 85, 217, 191, 187, 89, 159, 32, 96, 34, 25, 97, 228, 229, 198, 226, 166, 101, 235, 234, 172, 105, 239, 111, 246, 244, 177, 189, 183, 117, 252, 223, 216, 121, 214, 65, 196, 197, 2, 194, 134, 69, 203, 202, 140, 73, 155, 79, 153, 212, 145, 180, 151, 85, 156, 191, 188, 89, 20, 32, 34, 126, 25, 97, 227, 229, 199, 226, 231, 101, 168, 234, 173, 105, 238, 111, 245, 244, 178, 189, 222, 117, 251, 223, 230, 121, 219, 65, 195, 197, 5, 194, 6, 69, 136, 202, 141, 73, 206, 79, 160, 212, 146, 180, 179, 85, 157, 191, 255, 89, 25, 32, 126, 39, 25, 97, 225, 229, 161, 226, 164, 101, 233, 234, 170, 105, 237, 111, 243, 244, 175, 189, 190, 117, 250, 223, 209, 121, 253, 65, 193, 197, 129, 194, 132, 69, 201, 202, 138, 73, 205, 79, 211, 212, 143, 180, 149, 85, 218, 191, 186, 89, 221, 32, 39, 46, 25, 97, 213, 229, 163, 226, 167, 101, 169, 234, 174, 105, 184, 111, 247, 244, 181, 189, 254, 117, 248, 223, 241, 121, 220, 65, 128, 197, 131, 194, 135, 69, 137, 202, 142, 73, 152, 79, 154, 212, 147, 180, 148, 85, 158, 191, 185, 89, 30, 32, 46, 0, 92], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 136695);
allocate([37, 115, 46, 107, 108, 0, 0, 0, 107, 101, 121, 98, 111, 97, 114, 100, 46, 115, 121, 115, 0, 0, 0, 0, 107, 101, 121, 98, 114, 100, 50, 46, 115, 121, 115, 0, 0, 0, 0, 0, 107, 101, 121, 98, 114, 100, 51, 46, 115, 121, 115], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 206360);
allocate([69, 71, 65, 50, 46, 67, 80, 73, 0, 0, 0, 0, 0, 0, 0, 0, 69, 71, 65, 51, 46, 67, 80, 73, 0, 0, 0, 0, 0, 0, 0, 0, 69, 71, 65, 52, 46, 67, 80, 73, 0, 0, 0, 0, 0, 0, 0, 0, 69, 71, 65, 53, 46, 67, 80, 73, 0, 0, 0, 0, 0, 0, 0, 0, 69, 71, 65, 54, 46, 67, 80, 73, 0, 0, 0, 0, 0, 0, 0, 0, 69, 71, 65, 55, 46, 67, 80, 73, 0, 0, 0, 0, 0, 0, 0, 0, 69, 71, 65, 56, 46, 67, 80, 73, 0, 0, 0, 0, 0, 0, 0, 0, 69, 71, 65, 57, 46, 67, 80, 73, 0, 0, 0, 0, 0, 0, 0, 0, 69, 71, 65, 49, 48, 46, 67, 80, 73, 0, 0, 0, 0, 0, 0, 0, 78, 111, 32, 109, 97, 116, 99, 104, 105, 110, 103, 32, 99, 112, 105, 32, 102, 105, 108, 101, 32, 102, 111, 114, 32, 99, 111, 100, 101, 112, 97, 103, 101, 32, 37, 105], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 271952);
allocate([85, 80, 88, 45, 99, 111, 109, 112, 114, 101, 115, 115, 101, 100, 32, 99, 112, 105, 32, 102, 105, 108, 101, 44, 32, 98, 117, 116, 32, 117, 112, 120, 45, 118, 101, 114, 115, 105, 111, 110, 32, 116, 111, 111, 32, 111, 108, 100, 0, 0, 0, 0, 0, 0, 0, 0, 83, 105, 122, 101, 32, 111, 102, 32, 99, 112, 120, 45, 99, 111, 109, 112, 114, 101, 115, 115, 101, 100, 32, 100, 97, 116, 97, 32, 116, 111, 111, 32, 98, 105, 103, 0, 0, 0, 0, 0, 78, 111, 116, 32, 101, 110, 111, 117, 103, 104, 32, 102, 114, 101, 101, 32, 108, 111, 119, 32, 109, 101, 109, 111, 114, 121, 32, 116, 111, 32, 117, 110, 112, 97, 99, 107, 32, 100, 97, 116, 97, 0, 0, 0, 0, 0, 0, 0, 85, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 40, 5, 0, 34, 0, 0, 0, 35, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 107, 101, 121, 98, 111, 97, 114, 100, 108, 97, 121, 111, 117, 116, 0, 0, 69, 114, 114, 111, 114, 32, 108, 111, 97, 100, 105, 110, 103, 32, 107, 101, 121, 98, 111, 97, 114, 100, 32, 108, 97, 121, 111, 117, 116, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 32, 107, 101, 121, 98, 111, 97, 114, 100, 32, 108, 97, 121, 111, 117, 116, 32, 108, 111, 97, 100, 101, 100, 32, 119, 105, 116, 104, 32, 109, 97, 105, 110, 32, 108, 97, 110, 103, 117, 97, 103, 101, 32, 99, 111, 100, 101, 32, 37, 115, 32, 102, 111, 114, 32, 108, 97, 121, 111, 117, 116, 32, 37, 115, 0, 0, 0, 0, 0, 49, 56, 68, 79, 83, 95, 75, 101, 121, 98, 111, 97, 114, 100, 76, 97, 121, 111, 117, 116, 0, 0, 0, 0, 49, 49, 77, 111, 100, 117, 108, 101, 95, 98, 97, 115, 101, 0, 0, 0, 64, 81, 202, 1, 104, 40, 5, 0, 32, 82, 202, 1, 80, 40, 5, 0, 120, 40, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 40, 5, 0, 36, 0, 0, 0, 37, 0, 0, 0, 19], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 337672);
allocate([126, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 77, 83, 67, 68, 48, 48, 49, 32, 0, 0, 0, 0, 0, 0, 0, 0, 67, 68, 48, 48, 49, 0, 0, 0, 77, 83, 67, 68, 69, 88, 58, 32, 71, 101, 116, 68, 105, 114, 69, 110, 116, 114, 121, 58, 32, 78, 111, 116, 32, 97, 110, 32, 73, 83, 79, 32, 57, 57, 54, 48, 32, 67, 68, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 77, 5, 0, 1, 0, 0, 0, 38, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 12, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 49, 51, 100, 101, 118, 105, 99, 101, 95, 77, 83, 67, 68, 69, 88, 0, 32, 82, 202, 1, 128, 77, 5, 0, 72, 83, 5, 0, 0, 0, 0, 0, 77, 83, 67, 68, 48, 48, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 114, 105, 118, 101, 32, 37, 99, 58, 32, 100, 105, 115, 107, 32, 37, 100, 32, 111, 102, 32, 37, 100, 32, 110, 111, 119, 32, 97, 99, 116, 105, 118, 101, 0, 0, 0, 0, 0, 0, 114, 98, 43, 0, 0, 0, 0, 0, 87, 97, 114, 110, 105, 110, 103, 58, 32, 102, 105, 108, 101, 32, 99, 114, 101, 97, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 58, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 114, 98, 0, 0, 0, 0, 0, 0, 87, 97, 114, 110, 105, 110, 103, 58, 32, 102, 105, 108, 101, 32, 37, 115, 32, 101, 120, 105, 115, 116, 115, 32, 97, 110, 100, 32, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 111, 112, 101, 110, 32, 105, 110, 32, 119, 114, 105, 116, 101, 32, 109, 111, 100, 101, 46, 10, 80, 108, 101, 97, 115, 101, 32, 82, 101, 109, 111, 118, 101, 32, 119, 114, 105, 116, 101, 45, 112, 114, 111, 116, 101, 99, 116, 105, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 81, 5, 0, 4, 0, 0, 0, 39, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 14, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 4, 0, 0, 0, 25, 0, 0, 0, 22, 0, 0, 0, 22, 0, 0, 0, 2, 0, 0, 0, 6, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 11, 0, 0, 0, 7, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 108, 111, 99, 97, 108, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 81, 5, 0, 1, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 184, 81, 5, 0, 4, 0, 0, 0, 41, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 23, 0, 0, 0, 17, 0, 0, 0, 24, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 4, 0, 0, 0, 25, 0, 0, 0, 22, 0, 0, 0, 22, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 11, 0, 0, 0, 7, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 67, 68, 82, 111, 109, 32, 0, 0, 57, 108, 111, 99, 97, 108, 70, 105, 108, 101, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 104, 81, 5, 0, 56, 96, 0, 0, 0, 0, 0, 0, 49, 48, 108, 111, 99, 97, 108, 68, 114, 105, 118, 101, 0, 0, 0, 0, 32, 82, 202, 1, 136, 81, 5, 0, 112, 96, 0, 0, 0, 0, 0, 0, 49, 48, 99, 100, 114, 111, 109, 68, 114, 105, 118, 101, 0, 0, 0, 0, 32, 82, 202, 1, 168, 81, 5, 0, 152, 81, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 67, 32, 32, 32, 32, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 73, 110, 118, 97, 108, 105, 100, 32, 108, 105, 110, 107, 32, 115, 116, 97, 116, 101, 32, 37, 120, 32, 119, 104, 101, 110, 32, 114, 101, 99, 111, 110, 102, 105, 103, 117, 114, 105, 110, 103, 32, 77, 67, 66, 32, 99, 104, 97, 105, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 32, 100, 101, 102, 97, 117, 108, 116, 32, 105, 110, 116, 0, 0, 0, 0, 0, 104, 83, 5, 0, 1, 0, 0, 0, 42, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 12, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 79, 77, 49, 0, 0, 0, 0, 76, 80, 84, 49, 0, 0, 0, 0, 65, 85, 88, 0, 0, 0, 0, 0, 80, 82, 78, 0, 0, 0, 0, 0, 68, 79, 83, 58, 84, 111, 111, 32, 109, 97, 110, 121, 32, 100, 101, 118, 105, 99, 101, 115, 32, 97, 100, 100, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 83, 5, 0, 1, 0, 0, 0, 43, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 12, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 49, 48, 68, 79, 83, 95, 68, 101, 118, 105, 99, 101, 0, 0, 0, 0, 32, 82, 202, 1, 56, 83, 5, 0, 56, 96, 0, 0, 0, 0, 0, 0, 49, 48, 100, 101, 118, 105, 99, 101, 95, 67, 79, 78, 0, 0, 0, 0, 32, 82, 202, 1, 88, 83, 5, 0, 72, 83, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 83, 5, 0, 1, 0, 0, 0, 44, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 12, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 76, 80, 84, 49, 0, 0, 0, 0, 49, 49, 100, 101, 118, 105, 99, 101, 95, 76, 80, 84, 49, 0, 0, 0, 49, 48, 100, 101, 118, 105, 99, 101, 95, 78, 85, 76, 0, 0, 0, 0, 32, 82, 202, 1, 216, 83, 5, 0, 72, 83, 5, 0, 0, 0, 0, 0, 32, 82, 202, 1, 200, 83, 5, 0, 232, 83, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 83, 5, 0, 1, 0, 0, 0, 45, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 36, 0, 0, 0, 38, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 12, 0, 0, 0, 22, 0, 0, 0, 23], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 346784);
allocate([64, 85, 6, 0, 46, 0, 0, 0, 47, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 32, 73, 110, 116, 32, 50, 48, 0, 0, 0, 0, 0, 0, 68, 79, 83, 32, 73, 110, 116, 32, 50, 49, 0, 0, 0, 0, 0, 0, 68, 79, 83, 32, 73, 110, 116, 32, 50, 53, 0, 0, 0, 0, 0, 0, 68, 79, 83, 32, 73, 110, 116, 32, 50, 54, 0, 0, 0, 0, 0, 0, 68, 79, 83, 32, 73, 110, 116, 32, 50, 55, 0, 0, 0, 0, 0, 0, 68, 79, 83, 32, 73, 110, 116, 32, 50, 56, 0, 0, 0, 0, 0, 0, 67, 79, 78, 32, 79, 117, 116, 112, 117, 116, 32, 73, 110, 116, 32, 50, 57, 0, 0, 0, 0, 0, 0, 0, 51, 68, 79, 83, 0, 0, 0, 0, 32, 82, 202, 1, 56, 85, 6, 0, 120, 40, 5, 0, 0, 0, 0, 0, 68, 79, 83, 58, 85, 110, 104, 97, 110, 100, 108, 101, 100, 32, 99, 97, 108, 108, 32, 37, 48, 50, 88, 0, 68, 79, 83, 58, 73, 108, 108, 101, 103, 97, 108, 32, 48, 120, 51, 51, 32, 67, 97, 108, 108, 32, 37, 50, 88, 0, 0, 0, 0, 0, 0, 0, 85, 110, 104, 97, 110, 100, 108, 101, 100, 32, 68, 111, 115, 32, 50, 49, 32, 99, 97, 108, 108, 32, 37, 48, 50, 88, 0, 0, 0, 0, 0, 0, 68, 79, 83, 58, 48, 120, 54, 53, 32, 66, 117, 102, 102, 101, 114, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 58, 48, 120, 54, 53, 58, 85, 110, 104, 97, 110, 100, 108, 101, 100, 32, 99, 111, 117, 110, 116, 114, 121, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 99, 97, 108, 108, 32, 37, 50, 88, 0, 68, 79, 83, 58, 73, 108, 108, 101, 103, 97, 108, 32, 71, 101, 116, 32, 83, 101, 114, 105, 97, 108, 32, 78, 117, 109, 98, 101, 114, 32, 99, 97, 108, 108, 32, 37, 50, 88, 0, 0, 68, 79, 83, 66, 79, 88, 0, 0, 32, 86, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 58, 69, 120, 101, 99, 32, 101, 114, 114, 111, 114, 32, 105, 110, 32, 109, 101, 109, 111, 114, 121, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 32, 73, 110, 116, 32, 50, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 32, 73, 110, 116, 32, 50, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 86, 6, 0, 48, 0, 0, 0, 49, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 58, 67, 97, 110, 39, 116, 32, 111, 112, 101, 110, 32, 66, 97, 116, 99, 104, 70, 105, 108, 101, 32, 37, 115, 0, 0, 0, 57, 66, 97, 116, 99, 104, 70, 105, 108, 101, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 232, 86, 6, 0, 37, 115, 10, 0, 0, 0, 0, 0, 122, 58, 92, 99, 111, 110, 102, 105, 103, 32, 0, 0, 0, 0, 0, 0, 184, 222, 6, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 88, 3, 7, 0, 192, 222, 6, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 184, 1, 7, 0, 200, 222, 6, 0, 1, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 48, 11, 7, 0, 208, 222, 6, 0, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 208, 8, 7, 0, 216, 222, 6, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 184, 1, 7, 0, 224, 222, 6, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 200, 9, 7, 0, 232, 222, 6, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 48, 3, 7, 0, 240, 222, 6, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 168, 8, 7, 0, 152, 73, 7, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 112, 8, 7, 0, 248, 222, 6, 0, 1, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 112, 8, 7, 0, 0, 223, 6, 0, 1, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 112, 8, 7, 0, 8, 223, 6, 0, 1, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 136, 3, 7, 0, 16, 223, 6, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 216, 3, 7, 0, 24, 223, 6, 0, 1, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 168, 5, 7, 0, 32, 223, 6, 0, 1, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 8, 4, 7, 0, 40, 223, 6, 0, 1, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 88, 5, 7, 0, 48, 223, 6, 0, 1, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 104, 9, 7, 0, 64, 223, 6, 0, 1, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 104, 9, 7, 0, 72, 223, 6, 0, 1, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 48, 4, 7, 0, 80, 223, 6, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 48, 4, 7, 0, 144, 224, 6, 0, 1, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 120, 11, 7, 0, 88, 223, 6, 0, 1, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 216, 249, 6, 0, 96, 223, 6, 0, 1, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 168, 4, 7, 0, 104, 223, 6, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 168, 4, 7, 0, 112, 223, 6, 0, 1, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 192, 6, 7, 0, 120, 223, 6, 0, 1, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 120, 7, 7, 0, 128, 223, 6, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 120, 7, 7, 0, 136, 223, 6, 0, 1, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 32, 5, 7, 0, 192, 72, 7, 0, 1, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 240, 5, 7, 0, 144, 223, 6, 0, 1, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 32, 9, 7, 0, 152, 223, 6, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 64, 6, 7, 0, 160, 223, 6, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 176, 11, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 76, 83, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 67, 76, 83, 10, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 68, 69, 76, 69, 84, 69, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 68, 69, 76, 69, 84, 69, 10, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 72, 69, 76, 80, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 0, 72, 69, 76, 80, 10, 0, 0, 0, 65, 76, 76, 0, 0, 0, 0, 0, 60, 27, 91, 51, 52, 59, 49, 109, 37, 45, 56, 115, 27, 91, 48, 109, 62, 32, 37, 115, 0, 0, 0, 0, 82, 69, 78, 65, 77, 69, 10, 0, 79, 70, 70, 0, 0, 0, 0, 0, 79, 78, 0, 0, 0, 0, 0, 0, 47, 63, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 69, 67, 72, 79, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 0, 69, 67, 72, 79, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 69, 88, 73, 84, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 0, 69, 88, 73, 84, 10, 0, 0, 0, 67, 72, 68, 73, 82, 10, 0, 0, 37, 99, 58, 92, 37, 115, 10, 0, 92, 47, 0, 0, 0, 0, 0, 0, 126, 49, 0, 0, 0, 0, 0, 0, 77, 75, 68, 73, 82, 10, 0, 0, 82, 77, 68, 73, 82, 10, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 68, 73, 82, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 68, 73, 82, 10, 0, 0, 0, 0, 68, 73, 82, 67, 77, 68, 0, 0, 87, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 87, 80, 0, 0, 0, 0, 0, 0, 80, 87, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 0, 65, 68, 0, 0, 0, 0, 0, 0, 42, 46, 42, 0, 0, 0, 0, 0, 92, 42, 46, 42, 0, 0, 0, 0, 46, 42, 0, 0, 0, 0, 0, 0, 46, 46, 0, 0, 0, 0, 0, 0, 91, 37, 115, 93, 0, 0, 0, 0, 37, 45, 56, 115, 32, 37, 45, 51, 115, 32, 32, 32, 37, 45, 49, 54, 115, 32, 37, 48, 50, 100, 45, 37, 48, 50, 100, 45, 37, 48, 52, 100, 32, 37, 50, 100, 58, 37, 48, 50, 100, 10, 0, 0, 0, 0, 0, 0, 60, 68, 73, 82, 62, 0, 0, 0, 37, 45, 49, 54, 115, 0, 0, 0, 37, 45, 56, 115, 32, 37, 45, 51, 115, 32, 32, 32, 37, 49, 54, 115, 32, 37, 48, 50, 100, 45, 37, 48, 50, 100, 45, 37, 48, 52, 100, 32, 37, 50, 100, 58, 37, 48, 50, 100, 10, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 79, 80, 89, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 0, 67, 79, 80, 89, 10, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 0, 45, 89], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 414884);
allocate([32, 37, 115, 10, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 83, 69, 84, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 83, 69, 84, 10, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 73, 70, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 73, 70, 10, 0, 0, 0, 0, 0, 78, 79, 84, 0, 0, 0, 0, 0, 69, 82, 82, 79, 82, 76, 69, 86, 69, 76, 0, 0, 0, 0, 0, 0, 69, 88, 73, 83, 84, 32, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 71, 79, 84, 79, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 0, 71, 79, 84, 79, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 83, 72, 73, 70, 84, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 83, 72, 73, 70, 84, 10, 0, 0, 84, 89, 80, 69, 10, 0, 0, 0, 82, 69, 77, 10, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 80, 65, 85, 83, 69, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 80, 65, 85, 83, 69, 10, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 65, 76, 76, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 0, 67, 65, 76, 76, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 83, 85, 66, 83, 84, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 83, 85, 66, 83, 84, 10, 0, 0, 77, 79, 85, 78, 84, 32, 0, 0, 47, 68, 0, 0, 0, 0, 0, 0, 47, 100, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 76, 79, 65, 68, 72, 73, 71, 72, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 76, 79, 65, 68, 72, 73, 71, 72, 10, 0, 0, 0, 0, 0, 0, 0, 67, 72, 79, 73, 67, 69, 10, 0, 121, 110, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 37, 99, 44, 0, 0, 0, 0, 0, 37, 99, 93, 63, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 65, 84, 84, 82, 73, 66, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 65, 84, 84, 82, 73, 66, 10, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 80, 65, 84, 72, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 0, 80, 65, 84, 72, 10, 0, 0, 0, 115, 101, 116, 32, 80, 65, 84, 72, 61, 0, 0, 0, 0, 0, 0, 0, 80, 65, 84, 72, 61, 40, 110, 117, 108, 108, 41, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 86, 69, 82, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 86, 69, 82, 10, 0, 0, 0, 0, 115, 101, 116, 0, 0, 0, 0, 0, 37, 100, 44, 37, 48, 51, 100, 44, 37, 48, 51, 100, 44, 37, 48, 51, 100, 0, 0, 0, 0, 0, 0, 0, 37, 100, 44, 37, 48, 51, 100, 44, 37, 48, 51, 100, 0, 0, 0, 0, 37, 100, 44, 37, 48, 51, 100, 0, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 73, 82, 0, 0, 0, 0, 0, 67, 72, 68, 73, 82, 0, 0, 0, 65, 84, 84, 82, 73, 66, 0, 0, 67, 65, 76, 76, 0, 0, 0, 0, 67, 68, 0, 0, 0, 0, 0, 0, 67, 72, 79, 73, 67, 69, 0, 0, 67, 76, 83, 0, 0, 0, 0, 0, 67, 79, 80, 89, 0, 0, 0, 0, 68, 69, 76, 69, 84, 69, 0, 0, 69, 82, 65, 83, 69, 0, 0, 0, 69, 67, 72, 79, 0, 0, 0, 0, 69, 88, 73, 84, 0, 0, 0, 0, 71, 79, 84, 79, 0, 0, 0, 0, 72, 69, 76, 80, 0, 0, 0, 0, 73, 70, 0, 0, 0, 0, 0, 0, 76, 79, 65, 68, 72, 73, 71, 72, 0, 0, 0, 0, 0, 0, 0, 0, 76, 72, 0, 0, 0, 0, 0, 0, 77, 75, 68, 73, 82, 0, 0, 0, 77, 68, 0, 0, 0, 0, 0, 0, 80, 65, 85, 83, 69, 0, 0, 0, 82, 77, 68, 73, 82, 0, 0, 0, 82, 68, 0, 0, 0, 0, 0, 0, 82, 69, 77, 0, 0, 0, 0, 0, 82, 69, 78, 65, 77, 69, 0, 0, 82, 69, 78, 0, 0, 0, 0, 0, 83, 69, 84, 0, 0, 0, 0, 0, 83, 85, 66, 83, 84, 0, 0, 0, 84, 89, 80, 69, 0, 0, 0, 0, 86, 69, 82, 0, 0, 0, 0, 0, 37, 99, 58, 92, 37, 115, 62, 0, 69, 109, 117, 108, 97, 116, 105, 111, 110, 32, 101, 110, 100, 101, 100, 32, 98, 101, 99, 97, 117, 115, 101, 32, 105, 110, 116, 101, 114, 97, 99, 116, 105, 118, 101, 32, 115, 104, 101, 108, 108, 32, 105, 115, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 58, 92, 0, 0, 0, 0, 0, 0, 46, 67, 79, 77, 0, 0, 0, 0, 46, 99, 111, 109, 0, 0, 0, 0, 46, 69, 88, 69, 0, 0, 0, 0, 46, 101, 120, 101, 0, 0, 0, 0, 46, 98, 97, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 65, 84, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 111, 101, 120, 101, 99, 58, 32, 97, 108, 108, 114, 101, 97, 100, 121, 32, 99, 114, 101, 97, 116, 101, 100, 32, 37, 115, 0, 0, 0, 115, 101, 116, 32, 0, 0, 0, 0, 65, 85, 84, 79, 69, 88, 69, 67, 46, 66, 65, 84], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 449576);
allocate([83, 89, 83, 84, 69, 77, 58, 65, 117, 116, 111, 101, 120, 101, 99, 46, 98, 97, 116, 32, 102, 105, 108, 101, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 0, 0, 0, 0, 0, 0, 37, 115, 13, 10, 0, 0, 0, 0, 0, 0, 0, 0, 120, 12, 7, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 58, 77, 117, 108, 116, 105, 112, 108, 101, 32, 99, 111, 109, 109, 97, 110, 100, 32, 111, 110, 32, 49, 32, 108, 105, 110, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 0, 83, 72, 69, 76, 76, 58, 82, 101, 100, 105, 114, 101, 99, 116, 32, 105, 110, 112, 117, 116, 32, 102, 114, 111, 109, 32, 37, 115, 0, 0, 0, 0, 83, 72, 69, 76, 76, 58, 82, 101, 100, 105, 114, 101, 99, 116, 32, 111, 117, 116, 112, 117, 116, 32, 116, 111, 32, 37, 115, 0, 0, 0, 0, 0, 99, 111, 110, 0, 0, 0, 0, 0, 47, 67, 0, 0, 0, 0, 0, 0, 13, 10, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 83, 84, 65, 82, 84, 85, 80, 95, 66, 69, 71, 73, 78, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 83, 84, 65, 82, 84, 85, 80, 95, 67, 71, 65, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 83, 84, 65, 82, 84, 85, 80, 95, 72, 69, 82, 67, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 83, 84, 65, 82, 84, 85, 80, 95, 69, 78, 68, 0, 0, 0, 0, 0, 0, 0, 47, 73, 78, 73, 84, 0, 0, 0, 83, 72, 69, 76, 76, 95, 83, 89, 78, 84, 65, 88, 69, 82, 82, 79, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 73, 76, 76, 69, 71, 65, 76, 95, 80, 65, 84, 72, 0, 0, 0, 0, 0, 0, 73, 108, 108, 101, 103, 97, 108, 32, 80, 97, 116, 104, 46, 10, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 72, 69, 76, 80, 0, 0, 73, 102, 32, 121, 111, 117, 32, 119, 97, 110, 116, 32, 97, 32, 108, 105, 115, 116, 32, 111, 102, 32, 97, 108, 108, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 99, 111, 109, 109, 97, 110, 100, 115, 32, 116, 121, 112, 101, 32, 27, 91, 51, 51, 59, 49, 109, 104, 101, 108, 112, 32, 47, 97, 108, 108, 27, 91, 48, 109, 32, 46, 10, 65, 32, 115, 104, 111, 114, 116, 32, 108, 105, 115, 116, 32, 111, 102, 32, 116, 104, 101, 32, 109, 111, 115, 116, 32, 111, 102, 116, 101, 110, 32, 117, 115, 101, 100, 32, 99, 111, 109, 109, 97, 110, 100, 115, 58, 10, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 69, 67, 72, 79, 95, 79, 78, 0, 0, 0, 0, 0, 0, 0, 69, 67, 72, 79, 32, 105, 115, 32, 111, 110, 46, 10, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 69, 67, 72, 79, 95, 79, 70, 70, 0, 0, 0, 0, 0, 0, 69, 67, 72, 79, 32, 105, 115, 32, 111, 102, 102, 46, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 73, 76, 76, 69, 71, 65, 76, 95, 83, 87, 73, 84, 67, 72, 0, 0, 0, 0, 73, 108, 108, 101, 103, 97, 108, 32, 115, 119, 105, 116, 99, 104, 58, 32, 37, 115, 46, 10, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 77, 73, 83, 83, 73, 78, 71, 95, 80, 65, 82, 65, 77, 69, 84, 69, 82, 0, 82, 101, 113, 117, 105, 114, 101, 100, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 32, 109, 105, 115, 115, 105, 110, 103, 46, 10, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 72, 68, 73, 82, 95, 69, 82, 82, 79, 82, 0, 0, 0, 85, 110, 97, 98, 108, 101, 32, 116, 111, 32, 99, 104, 97, 110, 103, 101, 32, 116, 111, 58, 32, 37, 115, 46, 10, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 72, 68, 73, 82, 95, 72, 73, 78, 84, 0, 0, 0, 0, 84, 111, 32, 99, 104, 97, 110, 103, 101, 32, 116, 111, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 32, 100, 114, 105, 118, 101, 32, 116, 121, 112, 101, 32, 27, 91, 51, 49, 109, 37, 99, 58, 27, 91, 48, 109, 10, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 72, 68, 73, 82, 95, 72, 73, 78, 84, 95, 50, 0, 0, 100, 105, 114, 101, 99, 116, 111, 114, 121, 110, 97, 109, 101, 32, 105, 115, 32, 108, 111, 110, 103, 101, 114, 32, 116, 104, 97, 110, 32, 56, 32, 99, 104, 97, 114, 97, 99, 116, 101, 114, 115, 32, 97, 110, 100, 47, 111, 114, 32, 99, 111, 110, 116, 97, 105, 110, 115, 32, 115, 112, 97, 99, 101, 115, 46, 10, 84, 114, 121, 32, 27, 91, 51, 49, 109, 99, 100, 32, 37, 115, 27, 91, 48, 109, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 72, 68, 73, 82, 95, 72, 73, 78, 84, 95, 51, 0, 0, 89, 111, 117, 32, 97, 114, 101, 32, 115, 116, 105, 108, 108, 32, 111, 110, 32, 100, 114, 105, 118, 101, 32, 90, 58, 44, 32, 99, 104, 97, 110, 103, 101, 32, 116, 111, 32, 97, 32, 109, 111, 117, 110, 116, 101, 100, 32, 100, 114, 105, 118, 101, 32, 119, 105, 116, 104, 32, 27, 91, 51, 49, 109, 67, 58, 27, 91, 48, 109, 46, 10, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 77, 75, 68, 73, 82, 95, 69, 82, 82, 79, 82, 0, 0, 0, 85, 110, 97, 98, 108, 101, 32, 116, 111, 32, 109, 97, 107, 101, 58, 32, 37, 115, 46, 10, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 82, 77, 68, 73, 82, 95, 69, 82, 82, 79, 82, 0, 0, 0, 85, 110, 97, 98, 108, 101, 32, 116, 111, 32, 114, 101, 109, 111, 118, 101, 58, 32, 37, 115, 46, 10, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 68, 69, 76, 95, 69, 82, 82, 79, 82, 0, 0, 0, 0, 0, 85, 110, 97, 98, 108, 101, 32, 116, 111, 32, 100, 101, 108, 101, 116, 101, 58, 32, 37, 115, 46, 10, 0, 0, 84, 104, 101, 32, 115, 121, 110, 116, 97, 120, 32, 111, 102, 32, 116, 104, 101, 32, 99, 111, 109, 109, 97, 110, 100, 32, 105, 115, 32, 105, 110, 99, 111, 114, 114, 101, 99, 116, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 83, 69, 84, 95, 78, 79, 84, 95, 83, 69, 84, 0, 0, 0, 69, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 32, 118, 97, 114, 105, 97, 98, 108, 101, 32, 37, 115, 32, 110, 111, 116, 32, 100, 101, 102, 105, 110, 101, 100, 46, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 83, 69, 84, 95, 79, 85, 84, 95, 79, 70, 95, 83, 80, 65, 67, 69, 0, 0, 0, 0, 0, 0, 78, 111, 116, 32, 101, 110, 111, 117, 103, 104, 32, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 32, 115, 112, 97, 99, 101, 32, 108, 101, 102, 116, 46, 10, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 73, 70, 95, 69, 88, 73, 83, 84, 95, 77, 73, 83, 83, 73, 78, 71, 95, 70, 73, 76, 69, 78, 65, 77, 69, 0, 0, 0, 0, 0, 73, 70, 32, 69, 88, 73, 83, 84, 58, 32, 77, 105, 115, 115, 105, 110, 103, 32, 102, 105, 108, 101, 110, 97, 109, 101, 46, 10, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 73, 70, 95, 69, 82, 82, 79, 82, 76, 69, 86, 69, 76, 95, 77, 73, 83, 83, 73, 78, 71, 95, 78, 85, 77, 66, 69, 82, 0, 0, 73, 70, 32, 69, 82, 82, 79, 82, 76, 69, 86, 69, 76, 58, 32, 77, 105, 115, 115, 105, 110, 103, 32, 110, 117, 109, 98, 101, 114, 46, 10, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 73, 70, 95, 69, 82, 82, 79, 82, 76, 69, 86, 69, 76, 95, 73, 78, 86, 65, 76, 73, 68, 95, 78, 85, 77, 66, 69, 82, 0, 0, 73, 70, 32, 69, 82, 82, 79, 82, 76, 69, 86, 69, 76, 58, 32, 73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 46, 10, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 71, 79, 84, 79, 95, 77, 73, 83, 83, 73, 78, 71, 95, 76, 65, 66, 69, 76, 0, 0, 0, 0, 78, 111, 32, 108, 97, 98, 101, 108, 32, 115, 117, 112, 112, 108, 105, 101, 100, 32, 116, 111, 32, 71, 79, 84, 79, 32, 99, 111, 109, 109, 97, 110, 100, 46, 10, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 71, 79, 84, 79, 95, 76, 65, 66, 69, 76, 95, 78, 79, 84, 95, 70, 79, 85, 78, 68, 0, 0, 71, 79, 84, 79, 58, 32, 76, 97, 98, 101, 108, 32, 37, 115, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 46, 10, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 70, 73, 76, 69, 95, 78, 79, 84, 95, 70, 79, 85, 78, 68, 0, 0, 0, 0, 0, 0, 0, 0, 70, 105, 108, 101, 32, 37, 115, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 46, 10, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 70, 73, 76, 69, 95, 69, 88, 73, 83, 84, 83, 0, 0, 0, 70, 105, 108, 101, 32, 37, 115, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 68, 73, 82, 95, 73, 78, 84, 82, 79, 0, 0, 0, 0, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 111, 102, 32, 37, 115, 46, 10, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 68, 73, 82, 95, 66, 89, 84, 69, 83, 95, 85, 83, 69, 68, 0, 0, 0, 0, 0, 0, 0, 0, 37, 53, 100, 32, 70, 105, 108, 101, 40, 115, 41, 32, 37, 49, 55, 115, 32, 66, 121, 116, 101, 115, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 68, 73, 82, 95, 66, 89, 84, 69, 83, 95, 70, 82, 69, 69, 0, 0, 0, 0, 0, 0, 0, 0, 37, 53, 100, 32, 68, 105, 114, 40, 115, 41, 32, 32, 37, 49, 55, 115, 32, 66, 121, 116, 101, 115, 32, 102, 114, 101, 101, 46, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 69, 88, 69, 67, 85, 84, 69, 95, 68, 82, 73, 86, 69, 95, 78, 79, 84, 95, 70, 79, 85, 78, 68, 0, 0, 0, 68, 114, 105, 118, 101, 32, 37, 99, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 33, 10, 89, 111, 117, 32, 109, 117, 115, 116, 32, 27, 91, 51, 49, 109, 109, 111, 117, 110, 116, 27, 91, 48, 109, 32, 105, 116, 32, 102, 105, 114, 115, 116, 46, 32, 84, 121, 112, 101, 32, 27, 91, 49, 59, 51, 51, 109, 105, 110, 116, 114, 111, 27, 91, 48, 109, 32, 111, 114, 32, 27, 91, 49, 59, 51, 51, 109, 105, 110, 116, 114, 111, 32, 109, 111, 117, 110, 116, 27, 91, 48, 109, 32, 102, 111, 114, 32, 109, 111, 114, 101, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 46, 10, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 69, 88, 69, 67, 85, 84, 69, 95, 73, 76, 76, 69, 71, 65, 76, 95, 67, 79, 77, 77, 65, 78, 68, 0, 0, 0, 73, 108, 108, 101, 103, 97, 108, 32, 99, 111, 109, 109, 97, 110, 100, 58, 32, 37, 115, 46, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 80, 65, 85, 83, 69, 0, 80, 114, 101, 115, 115, 32, 97, 110, 121, 32, 107, 101, 121, 32, 116, 111, 32, 99, 111, 110, 116, 105, 110, 117, 101, 46, 10, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 80, 65, 85, 83, 69, 95, 72, 69, 76, 80, 0, 0, 0, 0, 87, 97, 105, 116, 115, 32, 102, 111, 114, 32, 49, 32, 107, 101, 121, 115, 116, 114, 111, 107, 101, 32, 116, 111, 32, 99, 111, 110, 116, 105, 110, 117, 101, 46, 10, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 79, 80, 89, 95, 70, 65, 73, 76, 85, 82, 69, 0, 0, 67, 111, 112, 121, 32, 102, 97, 105, 108, 117, 114, 101, 32, 58, 32, 37, 115, 46, 10, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 79, 80, 89, 95, 83, 85, 67, 67, 69, 83, 83, 0, 0, 32, 32, 32, 37, 100, 32, 70, 105, 108, 101, 40, 115, 41, 32, 99, 111, 112, 105, 101, 100, 46, 10, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 83, 85, 66, 83, 84, 95, 78, 79, 95, 82, 69, 77, 79, 86, 69, 0, 0, 0, 0, 0, 0, 0, 82, 101, 109, 111, 118, 105, 110, 103, 32, 100, 114, 105, 118, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 46, 32, 68, 111, 105, 110, 103, 32, 110, 111, 116, 104, 105, 110, 103, 46, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 83, 85, 66, 83, 84, 95, 70, 65, 73, 76, 85, 82, 69, 0, 83, 85, 66, 83, 84, 32, 102, 97, 105, 108, 101, 100, 46, 32, 89, 111, 117, 32, 101, 105, 116, 104, 101, 114, 32, 109, 97, 100, 101, 32, 97, 110, 32, 101, 114, 114, 111, 114, 32, 105, 110, 32, 121, 111, 117, 114, 32, 99, 111, 109, 109, 97, 110, 100, 108, 105, 110, 101, 32, 111, 114, 32, 116, 104, 101, 32, 116, 97, 114, 103, 101, 116, 32, 100, 114, 105, 118, 101, 32, 105, 115, 32, 97, 108, 114, 101, 97, 100, 121, 32, 117, 115, 101, 100, 46, 10, 73, 116, 39, 115, 32, 111, 110, 108, 121, 32, 112, 111, 115, 115, 105, 98, 108, 101, 32, 116, 111, 32, 117, 115, 101, 32, 83, 85, 66, 83, 84, 32, 111, 110, 32, 76, 111, 99, 97, 108, 32, 100, 114, 105, 118, 101, 115, 0, 27, 91, 52, 52, 59, 49, 109, 201, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 187, 10, 186, 32, 27, 91, 51, 50, 109, 87, 101, 108, 99, 111, 109, 101, 32, 116, 111, 32, 68, 79, 83, 66, 111, 120, 32, 118, 37, 45, 56, 115, 27, 91, 51, 55, 109, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 186, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 186, 32, 70, 111, 114, 32, 97, 32, 115, 104, 111, 114, 116, 32, 105, 110, 116, 114, 111, 100, 117, 99, 116, 105, 111, 110, 32, 102, 111, 114, 32, 110, 101, 119, 32, 117, 115, 101, 114, 115, 32, 116, 121, 112, 101, 58, 32, 27, 91, 51, 51, 109, 73, 78, 84, 82, 79, 27, 91, 51, 55, 109, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 186, 32, 70, 111, 114, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 115, 104, 101, 108, 108, 32, 99, 111, 109, 109, 97, 110, 100, 115, 32, 116, 121, 112, 101, 58, 32, 27, 91, 51, 51, 109, 72, 69, 76, 80, 27, 91, 51, 55, 109, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 186, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 186, 32, 84, 111, 32, 97, 100, 106, 117, 115, 116, 32, 116, 104, 101, 32, 101, 109, 117, 108, 97, 116, 101, 100, 32, 67, 80, 85, 32, 115, 112, 101, 101, 100, 44, 32, 117, 115, 101, 32, 27, 91, 51, 49, 109, 99, 116, 114, 108, 45, 70, 49, 49, 27, 91, 51, 55, 109, 32, 97, 110, 100, 32, 27, 91, 51, 49, 109, 99, 116, 114, 108, 45, 70, 49, 50, 27, 91, 51, 55, 109, 46, 32, 32, 32, 32, 32, 32, 32, 186, 10, 186, 32, 84, 111, 32, 97, 99, 116, 105, 118, 97, 116, 101, 32, 116, 104, 101, 32, 107, 101, 121, 109, 97, 112, 112, 101, 114, 32, 27, 91, 51, 49, 109, 99, 116, 114, 108, 45, 70, 49, 27, 91, 51, 55, 109, 46, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 186, 32, 70, 111, 114, 32, 109, 111, 114, 101, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 114, 101, 97, 100, 32, 116, 104, 101, 32, 27, 91, 51, 54, 109, 82, 69, 65, 68, 77, 69, 27, 91, 51, 55, 109, 32, 102, 105, 108, 101, 32, 105, 110, 32, 116, 104, 101, 32, 68, 79, 83, 66, 111, 120, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 46, 32, 186, 10, 186, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 0, 186, 32, 68, 79, 83, 66, 111, 120, 32, 115, 117, 112, 112, 111, 114, 116, 115, 32, 67, 111, 109, 112, 111, 115, 105, 116, 101, 32, 67, 71, 65, 32, 109, 111, 100, 101, 46, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 186, 32, 85, 115, 101, 32, 27, 91, 51, 49, 109, 40, 97, 108, 116, 45, 41, 70, 49, 49, 27, 91, 51, 55, 109, 32, 116, 111, 32, 99, 104, 97, 110, 103, 101, 32, 116, 104, 101, 32, 99, 111, 108, 111, 117, 114, 115, 32, 119, 104, 101, 110, 32, 105, 110, 32, 116, 104, 105, 115, 32, 109, 111, 100, 101, 46, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 186, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 0, 186, 32, 85, 115, 101, 32, 27, 91, 51, 49, 109, 70, 49, 49, 27, 91, 51, 55, 109, 32, 116, 111, 32, 99, 121, 99, 108, 101, 32, 116, 104, 114, 111, 117, 103, 104, 32, 119, 104, 105, 116, 101, 44, 32, 97, 109, 98, 101, 114, 44, 32, 97, 110, 100, 32, 103, 114, 101, 101, 110, 32, 109, 111, 110, 111, 99, 104, 114, 111, 109, 101, 32, 99, 111, 108, 111, 114, 46, 32, 186, 10, 186, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 0, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 83, 84, 65, 82, 84, 85, 80, 95, 68, 69, 66, 85, 71, 0, 0, 0, 0, 0, 186, 32, 80, 114, 101, 115, 115, 32, 27, 91, 51, 49, 109, 97, 108, 116, 45, 80, 97, 117, 115, 101, 27, 91, 51, 55, 109, 32, 116, 111, 32, 101, 110, 116, 101, 114, 32, 116, 104, 101, 32, 100, 101, 98, 117, 103, 103, 101, 114, 32, 111, 114, 32, 115, 116, 97, 114, 116, 32, 116, 104, 101, 32, 101, 120, 101, 32, 119, 105, 116, 104, 32, 27, 91, 51, 51, 109, 68, 69, 66, 85, 71, 27, 91, 51, 55, 109, 46, 32, 186, 10, 186, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 0, 0, 0, 0, 0, 0, 186, 32, 27, 91, 51, 50, 109, 72, 65, 86, 69, 32, 70, 85, 78, 33, 27, 91, 51, 55, 109, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 186, 32, 27, 91, 51, 50, 109, 84, 104, 101, 32, 68, 79, 83, 66, 111, 120, 32, 84, 101, 97, 109, 32, 27, 91, 51, 51, 109, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 100, 111, 115, 98, 111, 120, 46, 99, 111, 109, 27, 91, 51, 55, 109, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186, 10, 200, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 188, 27, 91, 48, 109, 10, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 72, 68, 73, 82, 95, 72, 69, 76, 80, 0, 0, 0, 0, 68, 105, 115, 112, 108, 97, 121, 115, 47, 99, 104, 97, 110, 103, 101, 115, 32, 116, 104, 101, 32, 99, 117, 114, 114, 101, 110, 116, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 72, 68, 73, 82, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 67, 72, 68, 73, 82, 32, 91, 100, 114, 105, 118, 101, 58, 93, 91, 112, 97, 116, 104, 93, 10, 67, 72, 68, 73, 82, 32, 91, 46, 46, 93, 10, 67, 68, 32, 91, 100, 114, 105, 118, 101, 58, 93, 91, 112, 97, 116, 104, 93, 10, 67, 68, 32, 91, 46, 46, 93, 10, 10, 32, 32, 46, 46, 32, 32, 32, 83, 112, 101, 99, 105, 102, 105, 101, 115, 32, 116, 104, 97, 116, 32, 121, 111, 117, 32, 119, 97, 110, 116, 32, 116, 111, 32, 99, 104, 97, 110, 103, 101, 32, 116, 111, 32, 116, 104, 101, 32, 112, 97, 114, 101, 110, 116, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 46, 10, 10, 84, 121, 112, 101, 32, 67, 68, 32, 100, 114, 105, 118, 101, 58, 32, 116, 111, 32, 100, 105, 115, 112, 108, 97, 121, 32, 116, 104, 101, 32, 99, 117, 114, 114, 101, 110, 116, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 105, 110, 32, 116, 104, 101, 32, 115, 112, 101, 99, 105, 102, 105, 101, 100, 32, 100, 114, 105, 118, 101, 46, 10, 84, 121, 112, 101, 32, 67, 68, 32, 119, 105, 116, 104, 111, 117, 116, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 32, 116, 111, 32, 100, 105, 115, 112, 108, 97, 121, 32, 116, 104, 101, 32, 99, 117, 114, 114, 101, 110, 116, 32, 100, 114, 105, 118, 101, 32, 97, 110, 100, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 46, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 76, 83, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 0, 67, 108, 101, 97, 114, 32, 115, 99, 114, 101, 101, 110, 46, 10, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 68, 73, 82, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 86, 105, 101, 119, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 69, 67, 72, 79, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 68, 105, 115, 112, 108, 97, 121, 32, 109, 101, 115, 115, 97, 103, 101, 115, 32, 97, 110, 100, 32, 101, 110, 97, 98, 108, 101, 47, 100, 105, 115, 97, 98, 108, 101, 32, 99, 111, 109, 109, 97, 110, 100, 32, 101, 99, 104, 111, 105, 110, 103, 46, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 69, 88, 73, 84, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 69, 120, 105, 116, 32, 102, 114, 111, 109, 32, 116, 104, 101, 32, 115, 104, 101, 108, 108, 46, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 72, 69, 76, 80, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 83, 104, 111, 119, 32, 104, 101, 108, 112, 46, 10, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 77, 75, 68, 73, 82, 95, 72, 69, 76, 80, 0, 0, 0, 0, 77, 97, 107, 101, 32, 68, 105, 114, 101, 99, 116, 111, 114, 121, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 77, 75, 68, 73, 82, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 77, 75, 68, 73, 82, 32, 91, 100, 114, 105, 118, 101, 58, 93, 91, 112, 97, 116, 104, 93, 10, 77, 68, 32, 91, 100, 114, 105, 118, 101, 58, 93, 91, 112, 97, 116, 104, 93, 10, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 82, 77, 68, 73, 82, 95, 72, 69, 76, 80, 0, 0, 0, 0, 82, 101, 109, 111, 118, 101, 32, 68, 105, 114, 101, 99, 116, 111, 114, 121, 46, 10, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 82, 77, 68, 73, 82, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 82, 77, 68, 73, 82, 32, 91, 100, 114, 105, 118, 101, 58, 93, 91, 112, 97, 116, 104, 93, 10, 82, 68, 32, 91, 100, 114, 105, 118, 101, 58, 93, 91, 112, 97, 116, 104, 93, 10, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 83, 69, 84, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 0, 67, 104, 97, 110, 103, 101, 32, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 32, 118, 97, 114, 105, 97, 98, 108, 101, 115, 46, 10, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 73, 70, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 0, 0, 80, 101, 114, 102, 111, 114, 109, 115, 32, 99, 111, 110, 100, 105, 116, 105, 111, 110, 97, 108, 32, 112, 114, 111, 99, 101, 115, 115, 105, 110, 103, 32, 105, 110, 32, 98, 97, 116, 99, 104, 32, 112, 114, 111, 103, 114, 97, 109, 115, 46, 10, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 71, 79, 84, 79, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 74, 117, 109, 112, 32, 116, 111, 32, 97, 32, 108, 97, 98, 101, 108, 101, 100, 32, 108, 105, 110, 101, 32, 105, 110, 32, 97, 32, 98, 97, 116, 99, 104, 32, 115, 99, 114, 105, 112, 116, 46, 10, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 83, 72, 73, 70, 84, 95, 72, 69, 76, 80, 0, 0, 0, 0, 76, 101, 102, 116, 115, 104, 105, 102, 116, 32, 99, 111, 109, 109, 97, 110, 100, 108, 105, 110, 101, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 32, 105, 110, 32, 97, 32, 98, 97, 116, 99, 104, 32, 115, 99, 114, 105, 112, 116, 46, 10, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 84, 89, 80, 69, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 68, 105, 115, 112, 108, 97, 121, 32, 116, 104, 101, 32, 99, 111, 110, 116, 101, 110, 116, 115, 32, 111, 102, 32, 97, 32, 116, 101, 120, 116, 45, 102, 105, 108, 101, 46, 10, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 84, 89, 80, 69, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 0, 0, 84, 89, 80, 69, 32, 91, 100, 114, 105, 118, 101, 58, 93, 91, 112, 97, 116, 104, 93, 91, 102, 105, 108, 101, 110, 97, 109, 101, 93, 10, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 82, 69, 77, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 0, 65, 100, 100, 32, 99, 111, 109, 109, 101, 110, 116, 115, 32, 105, 110, 32, 97, 32, 98, 97, 116, 99, 104, 32, 102, 105, 108, 101, 46, 10, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 82, 69, 77, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 82, 69, 77, 32, 91, 99, 111, 109, 109, 101, 110, 116, 93, 10, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 78, 79, 95, 87, 73, 76, 68, 0, 0, 0, 0, 0, 0, 0, 84, 104, 105, 115, 32, 105, 115, 32, 97, 32, 115, 105, 109, 112, 108, 101, 32, 118, 101, 114, 115, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 32, 99, 111, 109, 109, 97, 110, 100, 44, 32, 110, 111, 32, 119, 105, 108, 100, 99, 97, 114, 100, 115, 32, 97, 108, 108, 111, 119, 101, 100, 33, 10, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 82, 69, 78, 65, 77, 69, 95, 72, 69, 76, 80, 0, 0, 0, 82, 101, 110, 97, 109, 101, 115, 32, 111, 110, 101, 32, 111, 114, 32, 109, 111, 114, 101, 32, 102, 105, 108, 101, 115, 46, 10, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 82, 69, 78, 65, 77, 69, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 82, 69, 78, 65, 77, 69, 32, 91, 100, 114, 105, 118, 101, 58, 93, 91, 112, 97, 116, 104, 93, 102, 105, 108, 101, 110, 97, 109, 101, 49, 32, 102, 105, 108, 101, 110, 97, 109, 101, 50, 46, 10, 82, 69, 78, 32, 91, 100, 114, 105, 118, 101, 58, 93, 91, 112, 97, 116, 104, 93, 102, 105, 108, 101, 110, 97, 109, 101, 49, 32, 102, 105, 108, 101, 110, 97, 109, 101, 50, 46, 10, 10, 78, 111, 116, 101, 32, 116, 104, 97, 116, 32, 121, 111, 117, 32, 99, 97, 110, 32, 110, 111, 116, 32, 115, 112, 101, 99, 105, 102, 121, 32, 97, 32, 110, 101, 119, 32, 100, 114, 105, 118, 101, 32, 111, 114, 32, 112, 97, 116, 104, 32, 102, 111, 114, 32, 121, 111, 117, 114, 32, 100, 101, 115, 116, 105, 110, 97, 116, 105, 111, 110, 32, 102, 105, 108, 101, 46, 10, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 68, 69, 76, 69, 84, 69, 95, 72, 69, 76, 80, 0, 0, 0, 82, 101, 109, 111, 118, 101, 115, 32, 111, 110, 101, 32, 111, 114, 32, 109, 111, 114, 101, 32, 102, 105, 108, 101, 115, 46, 10, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 79, 80, 89, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 67, 111, 112, 121, 32, 102, 105, 108, 101, 115, 46, 10, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 65, 76, 76, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 83, 116, 97, 114, 116, 32, 97, 32, 98, 97, 116, 99, 104, 32, 102, 105, 108, 101, 32, 102, 114, 111, 109, 32, 119, 105, 116, 104, 105, 110, 32, 97, 110, 111, 116, 104, 101, 114, 32, 98, 97, 116, 99, 104, 32, 102, 105, 108, 101, 46, 10, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 83, 85, 66, 83, 84, 95, 72, 69, 76, 80, 0, 0, 0, 0, 65, 115, 115, 105, 103, 110, 32, 97, 110, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 116, 111, 32, 97, 32, 100, 114, 105, 118, 101, 46, 10, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 76, 79, 65, 68, 72, 73, 71, 72, 95, 72, 69, 76, 80, 0, 76, 111, 97, 100, 115, 32, 97, 32, 112, 114, 111, 103, 114, 97, 109, 32, 105, 110, 116, 111, 32, 117, 112, 112, 101, 114, 32, 109, 101, 109, 111, 114, 121, 32, 40, 114, 101, 113, 117, 105, 114, 101, 115, 32, 120, 109, 115, 61, 116, 114, 117, 101, 44, 117, 109, 98, 61, 116, 114, 117, 101, 41, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 72, 79, 73, 67, 69, 95, 72, 69, 76, 80, 0, 0, 0, 87, 97, 105, 116, 115, 32, 102, 111, 114, 32, 97, 32, 107, 101, 121, 112, 114, 101, 115, 115, 32, 97, 110, 100, 32, 115, 101, 116, 115, 32, 69, 82, 82, 79, 82, 76, 69, 86, 69, 76, 46, 10, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 67, 72, 79, 73, 67, 69, 95, 72, 69, 76, 80, 95, 76, 79, 78, 71, 0, 0, 0, 0, 0, 0, 67, 72, 79, 73, 67, 69, 32, 91, 47, 67, 58, 99, 104, 111, 105, 99, 101, 115, 93, 32, 91, 47, 78, 93, 32, 91, 47, 83, 93, 32, 116, 101, 120, 116, 10, 32, 32, 47, 67, 91, 58, 93, 99, 104, 111, 105, 99, 101, 115, 32, 32, 45, 32, 32, 83, 112, 101, 99, 105, 102, 105, 101, 115, 32, 97, 108, 108, 111, 119, 97, 98, 108, 101, 32, 107, 101, 121, 115, 46, 32, 32, 68, 101, 102, 97, 117, 108, 116, 32, 105, 115, 58, 32, 121, 110, 46, 10, 32, 32, 47, 78, 32, 32, 45, 32, 32, 68, 111, 32, 110, 111, 116, 32, 100, 105, 115, 112, 108, 97, 121, 32, 116, 104, 101, 32, 99, 104, 111, 105, 99, 101, 115, 32, 97, 116, 32, 101, 110, 100, 32, 111, 102, 32, 112, 114, 111, 109, 112, 116, 46, 10, 32, 32, 47, 83, 32, 32, 45, 32, 32, 69, 110, 97, 98, 108, 101, 115, 32, 99, 97, 115, 101, 45, 115, 101, 110, 115, 105, 116, 105, 118, 101, 32, 99, 104, 111, 105, 99, 101, 115, 32, 116, 111, 32, 98, 101, 32, 115, 101, 108, 101, 99, 116, 101, 100, 46, 10, 32, 32, 116, 101, 120, 116, 32, 32, 45, 32, 32, 84, 104, 101, 32, 116, 101, 120, 116, 32, 116, 111, 32, 100, 105, 115, 112, 108, 97, 121, 32, 97, 115, 32, 97, 32, 112, 114, 111, 109, 112, 116, 46, 10, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 65, 84, 84, 82, 73, 66, 95, 72, 69, 76, 80, 0, 0, 0, 68, 111, 101, 115, 32, 110, 111, 116, 104, 105, 110, 103, 46, 32, 80, 114, 111, 118, 105, 100, 101, 100, 32, 102, 111, 114, 32, 99, 111, 109, 112, 97, 116, 105, 98, 105, 108, 105, 116, 121, 46, 10, 0, 0, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 80, 65, 84, 72, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 80, 114, 111, 118, 105, 100, 101, 100, 32, 102, 111, 114, 32, 99, 111, 109, 112, 97, 116, 105, 98, 105, 108, 105, 116, 121, 46, 10, 0, 0, 0, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 86, 69, 82, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 0, 86, 105, 101, 119, 32, 97, 110, 100, 32, 115, 101, 116, 32, 116, 104, 101, 32, 114, 101, 112, 111, 114, 116, 101, 100, 32, 68, 79, 83, 32, 118, 101, 114, 115, 105, 111, 110, 46, 10, 0, 83, 72, 69, 76, 76, 95, 67, 77, 68, 95, 86, 69, 82, 95, 86, 69, 82, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 66, 111, 120, 32, 118, 101, 114, 115, 105, 111, 110, 32, 37, 115, 46, 32, 82, 101, 112, 111, 114, 116, 101, 100, 32, 68, 79, 83, 32, 118, 101, 114, 115, 105, 111, 110, 32, 37, 100, 46, 37, 48, 50, 100, 46, 10, 0, 0, 0, 0, 0, 0, 0, 115, 104, 101, 108, 108, 32, 115, 116, 111, 112, 0, 0, 0, 0, 0, 0, 67, 79, 77, 77, 65, 78, 68, 46, 67, 79, 77, 0, 0, 0, 0, 0, 67, 79, 78, 0, 0, 0, 0, 0, 57, 68, 79, 83, 95, 83, 104, 101, 108, 108, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 104, 12, 7, 0, 24, 138, 0, 0, 0, 0, 0, 0, 47, 73, 78, 73, 84, 32, 65, 85, 84, 79, 69, 88, 69, 67, 46, 66, 65, 84, 0, 0, 0, 0, 0, 0, 90, 58, 92, 67, 79, 77, 77, 65, 78, 68, 46, 67, 79, 77, 0, 0, 67, 79, 77, 83, 80, 69, 67, 61, 90, 58, 92, 67, 79, 77, 77, 65, 78, 68, 46, 67, 79, 77, 0, 0, 80, 65, 84, 72, 61, 90, 58, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 13, 7, 0, 53, 0, 0, 0, 54, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 45, 110, 111, 97, 117, 116, 111, 101, 120, 101, 99, 0, 0, 0, 0, 0, 101, 99, 104, 111, 32, 111, 102, 102, 0, 0, 0, 0, 0, 0, 0, 0, 64, 101, 99, 104, 111, 32, 111, 102, 102, 0, 0, 0, 0, 0, 0, 0, 45, 99, 0, 0, 0, 0, 0, 0, 45, 101, 120, 105, 116, 0, 0, 0, 122, 58, 92, 99, 111, 110, 102, 105, 103, 46, 99, 111, 109, 32, 45, 115, 101, 99, 117, 114, 101, 109, 111, 100, 101, 0, 0, 0, 0, 0, 0, 0, 77, 79, 85, 78, 84, 32, 67, 32, 34, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 67, 58, 0, 0, 0, 0, 0, 0, 46, 66, 65, 84, 0, 0, 0, 0, 67, 65, 76, 76, 32, 0, 0, 0, 101, 120, 105, 116, 0, 0, 0, 0, 46, 73, 77, 71, 0, 0, 0, 0, 46, 73, 77, 65, 0, 0, 0, 0, 66, 79, 79, 84, 32, 0, 0, 0, 46, 73, 83, 79, 0, 0, 0, 0, 46, 67, 85, 69, 0, 0, 0, 0, 73, 77, 71, 77, 79, 85, 78, 84, 32, 68, 32, 34, 0, 0, 0, 0, 34, 32, 45, 116, 32, 105, 115, 111, 0, 0, 0, 0, 0, 0, 0, 0, 56, 65, 85, 84, 79, 69, 88, 69, 67, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 208, 13, 7, 0, 120, 40, 5], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 454888);
allocate([188, 0, 4, 187, 64, 0, 180, 74, 205, 33, 254, 56, 0, 0, 184, 0, 76, 205, 33, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 83, 95, 77, 97, 107, 101, 70, 105, 108, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 115, 105, 122, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 32, 40, 37, 100, 41, 0, 0, 0, 37, 115, 61, 37, 115, 0, 0, 0, 45, 119, 114, 105, 116, 101, 99, 111, 110, 102, 0, 0, 0, 0, 0, 0, 45, 119, 99, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 67, 79, 78, 70, 73, 71, 95, 83, 69, 67, 85, 82, 69, 95, 68, 73, 83, 65, 76, 76, 79, 87, 0, 0, 119, 98, 43, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 67, 79, 78, 70, 73, 71, 95, 70, 73, 76, 69, 95, 69, 82, 82, 79, 82, 0, 0, 0, 0, 0, 0, 0, 45, 119, 114, 105, 116, 101, 108, 97, 110, 103, 0, 0, 0, 0, 0, 0, 45, 119, 108, 0, 0, 0, 0, 0, 45, 115, 101, 99, 117, 114, 101, 109, 111, 100, 101, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 67, 79, 78, 70, 73, 71, 95, 83, 69, 67, 85, 82, 69, 95, 79, 78, 0, 0, 0, 0, 0, 0, 0, 0, 45, 103, 101, 116, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 67, 79, 78, 70, 73, 71, 95, 71, 69, 84, 95, 83, 89, 78, 84, 65, 88, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 67, 79, 78, 70, 73, 71, 95, 83, 69, 67, 84, 73, 79, 78, 95, 69, 82, 82, 79, 82, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 67, 79, 78, 70, 73, 71, 95, 78, 79, 95, 80, 82, 79, 80, 69, 82, 84, 89, 0, 0, 0, 0, 0, 0, 67, 79, 78, 70, 73, 71, 0, 0, 45, 115, 101, 116, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 67, 79, 78, 70, 73, 71, 95, 85, 83, 65, 71, 69, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 67, 79, 78, 70, 73, 71, 95, 80, 82, 79, 80, 69, 82, 84, 89, 95, 69, 82, 82, 79, 82, 0, 0, 0, 105, 110, 116, 101, 114, 110, 97, 108, 32, 112, 114, 111, 103, 114, 97, 109, 0, 0, 0, 0, 0, 0, 0, 0, 67, 79, 78, 70, 73, 71, 46, 67, 79, 77, 0, 0, 0, 0, 0, 0, 67, 97, 110, 39, 116, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 32, 37, 115, 10, 0, 0, 0, 0, 0, 67, 111, 110, 102, 105, 103, 32, 116, 111, 111, 108, 58, 10, 85, 115, 101, 32, 45, 119, 114, 105, 116, 101, 99, 111, 110, 102, 32, 102, 105, 108, 101, 110, 97, 109, 101, 32, 116, 111, 32, 119, 114, 105, 116, 101, 32, 116, 104, 101, 32, 99, 117, 114, 114, 101, 110, 116, 32, 99, 111, 110, 102, 105, 103, 46, 10, 85, 115, 101, 32, 45, 119, 114, 105, 116, 101, 108, 97, 110, 103, 32, 102, 105, 108, 101, 110, 97, 109, 101, 32, 116, 111, 32, 119, 114, 105, 116, 101, 32, 116, 104, 101, 32, 99, 117, 114, 114, 101, 110, 116, 32, 108, 97, 110, 103, 117, 97, 103, 101, 32, 115, 116, 114, 105, 110, 103, 115, 46, 10, 0, 0, 0, 0, 0, 0, 0, 83, 119, 105, 116, 99, 104, 101, 100, 32, 116, 111, 32, 115, 101, 99, 117, 114, 101, 32, 109, 111, 100, 101, 46, 10, 0, 0, 0, 0, 0, 0, 0, 84, 104, 105, 115, 32, 111, 112, 101, 114, 97, 116, 105, 111, 110, 32, 105, 115, 32, 110, 111, 116, 32, 112, 101, 114, 109, 105, 116, 116, 101, 100, 32, 105, 110, 32, 115, 101, 99, 117, 114, 101, 32, 109, 111, 100, 101, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 83, 101, 99, 116, 105, 111, 110, 32, 37, 115, 32, 100, 111, 101, 115, 110, 39, 116, 32, 101, 120, 105, 115, 116, 46, 10, 0, 0, 0, 0, 0, 0, 78, 111, 32, 115, 117, 99, 104, 32, 115, 101, 99, 116, 105, 111, 110, 32, 111, 114, 32, 112, 114, 111, 112, 101, 114, 116, 121, 46, 10, 0, 0, 0, 84, 104, 101, 114, 101, 32, 105, 115, 32, 110, 111, 32, 112, 114, 111, 112, 101, 114, 116, 121, 32, 37, 115, 32, 105, 110, 32, 115, 101, 99, 116, 105, 111, 110, 32, 37, 115, 46, 10, 0, 67, 111, 114, 114, 101, 99, 116, 32, 115, 121, 110, 116, 97, 120, 58, 32, 99, 111, 110, 102, 105, 103, 32, 45, 103, 101, 116, 32, 34, 115, 101, 99, 116, 105, 111, 110, 32, 112, 114, 111, 112, 101, 114, 116, 121, 34, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 21, 7, 0, 10, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 54, 67, 79, 78, 70, 73, 71, 0, 32, 82, 202, 1, 136, 21, 7, 0, 24, 138, 0, 0, 0, 0, 0, 0, 115, 111, 109, 101, 116, 104, 105, 110, 103, 32, 105, 115, 32, 109, 101, 115, 115, 105, 110, 103, 32, 119, 105, 116, 104, 32, 116, 104, 101, 32, 109, 101, 109, 111, 114, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 101, 115, 115, 97, 103, 101, 32, 110, 111, 116, 32, 70, 111, 117, 110, 100, 33, 10, 0, 0, 0, 0, 0, 58, 37, 115, 10, 37, 115, 10, 46, 10, 0, 0, 0, 0, 0, 0, 0, 45, 108, 97, 110, 103, 0, 0, 0, 108, 97, 110, 103, 117, 97, 103, 101, 0, 0, 0, 0, 0, 0, 0, 0, 77, 83, 71, 58, 67, 97, 110, 39, 116, 32, 108, 111, 97, 100, 32, 109, 101, 115, 115, 97, 103, 101, 115, 58, 32, 37, 115, 0, 0, 0, 0, 0, 126, 47, 46, 100, 111, 115, 98, 111, 120, 0, 0, 0, 0, 0, 0, 0, 100, 111, 115, 98, 111, 120, 45, 48, 46, 55, 52, 46, 99, 111, 110, 102, 0, 0, 0, 0, 0, 0, 0, 0, 72, 79, 77, 69], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 463360);
allocate([99, 111, 109, 112, 97, 114, 105, 110, 103, 32, 115, 116, 117, 102, 102, 32, 116, 104, 97, 116, 32, 100, 111, 101, 115, 110, 39, 116, 32, 109, 97, 107, 101, 32, 115, 101, 110, 115, 101, 0, 84, 111, 83, 116, 114, 105, 110, 103, 32, 109, 101, 115, 115, 101, 100, 32, 117, 112, 32, 63, 0, 0, 0, 0, 34, 37, 115, 34, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 118, 97, 108, 105, 100, 32, 118, 97, 108, 117, 101, 32, 102, 111, 114, 32, 118, 97, 114, 105, 97, 98, 108, 101, 58, 32, 37, 115, 46, 10, 73, 116, 32, 109, 105, 103, 104, 116, 32, 110, 111, 119, 32, 98, 101, 32, 114, 101, 115, 101, 116, 32, 116, 111, 32, 116, 104, 101, 32, 100, 101, 102, 97, 117, 108, 116, 32, 118, 97, 108, 117, 101, 58, 32, 37, 115, 0, 0, 0, 0, 0, 0, 67, 79, 78, 70, 73, 71, 95, 0, 37, 115, 32, 108, 105, 101, 115, 32, 111, 117, 116, 115, 105, 100, 101, 32, 116, 104, 101, 32, 114, 97, 110, 103, 101, 32, 37, 115, 45, 37, 115, 32, 102, 111, 114, 32, 118, 97, 114, 105, 97, 98, 108, 101, 58, 32, 37, 115, 46, 10, 73, 116, 32, 109, 105, 103, 104, 116, 32, 110, 111, 119, 32, 98, 101, 32, 114, 101, 115, 101, 116, 32, 116, 111, 32, 116, 104, 101, 32, 100, 101, 102, 97, 117, 108, 116, 32, 118, 97, 108, 117, 101, 58, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 0, 34, 37, 115, 34, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 118, 97, 108, 105, 100, 32, 118, 97, 108, 117, 101, 32, 102, 111, 114, 32, 118, 97, 114, 105, 97, 98, 108, 101, 58, 32, 37, 115, 46, 10, 73, 116, 32, 109, 105, 103, 104, 116, 32, 110, 111, 119, 32, 98, 101, 32, 114, 101, 115, 101, 116, 32, 105, 116, 32, 116, 111, 32, 100, 101, 102, 97, 117, 108, 116, 32, 118, 97, 108, 117, 101, 58, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 56, 80, 114, 111, 112, 101, 114, 116, 121, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 240, 33, 7, 0, 57, 80, 114, 111, 112, 95, 112, 97, 116, 104, 0, 0, 0, 0, 0, 0, 49, 49, 80, 114, 111, 112, 95, 115, 116, 114, 105, 110, 103, 0, 0, 0, 32, 82, 202, 1, 24, 34, 7, 0, 0, 34, 7, 0, 0, 0, 0, 0, 32, 82, 202, 1, 8, 34, 7, 0, 40, 34, 7, 0, 0, 0, 0, 0, 49, 51, 80, 114, 111, 112, 95, 109, 117, 108, 116, 105, 118, 97, 108, 0, 32, 82, 202, 1, 72, 34, 7, 0, 0, 34, 7, 0, 0, 0, 0, 0, 50, 48, 80, 114, 111, 112, 95, 109, 117, 108, 116, 105, 118, 97, 108, 95, 114, 101, 109, 97, 105, 110, 0, 0, 32, 82, 202, 1, 104, 34, 7, 0, 88, 34, 7, 0, 0, 0, 0, 0, 32, 13, 9, 12, 10, 0, 0, 0, 37, 115, 61, 37, 115, 10, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 119, 43, 116, 0, 0, 0, 0, 0, 67, 79, 78, 70, 73, 71, 70, 73, 76, 69, 95, 73, 78, 84, 82, 79, 0, 0, 0, 0, 0, 0, 0, 0, 55, 83, 101, 99, 116, 105, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 200, 34, 7, 0, 49, 50, 83, 101, 99, 116, 105, 111, 110, 95, 112, 114, 111, 112, 0, 0, 32, 82, 202, 1, 224, 34, 7, 0, 216, 34, 7, 0, 0, 0, 0, 0, 91, 37, 115, 93, 10, 0, 0, 0, 10, 35, 32, 37, 42, 115, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 35, 32, 37, 42, 115, 58, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 37, 115, 37, 115, 58, 0, 0, 0, 67, 79, 78, 70, 73, 71, 95, 83, 85, 71, 71, 69, 83, 84, 69, 68, 95, 86, 65, 76, 85, 69, 83, 0, 32, 37, 115, 0, 0, 0, 0, 0, 95, 67, 79, 78, 70, 73, 71, 70, 73, 76, 69, 95, 72, 69, 76, 80, 0, 0, 0, 0, 0, 0, 0, 0, 35, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 0, 240, 34, 7, 0, 1, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 112, 114, 105, 109, 97, 114, 121, 0, 97, 100, 100, 105, 116, 105, 111, 110, 97, 108, 0, 0, 0, 0, 0, 0, 67, 79, 78, 70, 73, 71, 58, 76, 111, 97, 100, 105, 110, 103, 32, 37, 115, 32, 115, 101, 116, 116, 105, 110, 103, 115, 32, 102, 114, 111, 109, 32, 99, 111, 110, 102, 105, 103, 32, 102, 105, 108, 101, 32, 37, 115, 0, 0, 68, 79, 83, 66, 79, 88, 95, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 7, 0, 1, 0, 0, 0, 39, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 36, 7, 0, 31, 0, 0, 0, 40, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 56, 80, 114, 111, 112, 95, 105, 110, 116, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 48, 36, 7, 0, 0, 34, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 36, 7, 0, 32, 0, 0, 0, 39, 0, 0, 0, 59, 0, 0, 0, 63, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 57, 80, 114, 111, 112, 95, 98, 111, 111, 108, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 112, 36, 7, 0, 0, 34, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 34, 7, 0, 33, 0, 0, 0, 41, 0, 0, 0, 59, 0, 0, 0, 64, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 34, 7, 0, 34, 0, 0, 0, 41, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 7, 0, 35, 0, 0, 0, 39, 0, 0, 0, 59, 0, 0, 0, 67, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 56, 80, 114, 111, 112, 95, 104, 101, 120, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 240, 36, 7, 0, 0, 34, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 34, 7, 0, 36, 0, 0, 0, 39, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 34, 7, 0, 37, 0, 0, 0, 39, 0, 0, 0, 68, 0, 0, 0, 70, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 37, 7, 0, 2, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 49, 50, 83, 101, 99, 116, 105, 111, 110, 95, 108, 105, 110, 101, 0, 0, 32, 82, 202, 1, 112, 37, 7, 0, 216, 34, 7, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 32, 38, 7, 0, 73, 0, 0, 0, 74, 0, 0, 0, 148, 255, 255, 255, 148, 255, 255, 255, 32, 38, 7, 0, 75, 0, 0, 0, 76, 0, 0, 0, 156, 37, 7, 0, 212, 37, 7, 0, 232, 37, 7, 0, 176, 37, 7, 0, 108, 0, 0, 0, 0, 0, 0, 0, 128, 38, 202, 1, 77, 0, 0, 0, 78, 0, 0, 0, 148, 255, 255, 255, 148, 255, 255, 255, 128, 38, 202, 1, 79, 0, 0, 0, 80, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 52, 98, 97, 115, 105, 99, 95, 105, 102, 115, 116, 114, 101, 97, 109, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 0, 32, 82, 202, 1, 240, 37, 7, 0, 128, 38, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 160, 38, 7, 0, 81, 0, 0, 0, 82, 0, 0, 0, 40, 0, 0, 0, 42, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 30, 0, 0, 0, 44, 0, 0, 0, 31, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 51, 98, 97, 115, 105, 99, 95, 102, 105, 108, 101, 98, 117, 102, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 0, 0, 32, 82, 202, 1, 112, 38, 7, 0, 8, 38, 202, 1, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 88, 39, 7, 0, 83, 0, 0, 0, 84, 0, 0, 0, 200, 255, 255, 255, 200, 255, 255, 255, 88, 39, 7, 0, 85, 0, 0, 0, 86, 0, 0, 0, 188, 38, 7, 0, 244, 38, 7, 0, 8, 39, 7, 0, 208, 38, 7, 0, 56, 0, 0, 0, 0, 0, 0, 0, 16, 39, 202, 1, 87, 0, 0, 0, 88, 0, 0, 0, 200, 255, 255, 255, 200, 255, 255, 255, 16, 39, 202, 1, 89, 0, 0, 0, 90, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 57, 98, 97, 115, 105, 99, 95, 111, 115, 116, 114, 105, 110, 103, 115, 116, 114, 101, 97, 109, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 0, 0, 32, 82, 202, 1, 16, 39, 7, 0, 16, 39, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 240, 39, 7, 0, 91, 0, 0, 0, 92, 0, 0, 0, 41, 0, 0, 0, 45, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 45, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 46, 0, 0, 0, 44, 0, 0, 0, 32, 0, 0, 0, 44, 0, 0, 0, 33, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 53, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 98, 117, 102, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 168, 39, 7, 0, 8, 38, 202, 1, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 168, 40, 7, 0, 93, 0, 0, 0, 94, 0, 0, 0, 196, 255, 255, 255, 196, 255, 255, 255, 168, 40, 7, 0, 95, 0, 0, 0, 96, 0, 0, 0, 12, 40, 7, 0, 68, 40, 7, 0, 88, 40, 7, 0, 32, 40, 7, 0, 60, 0, 0, 0, 0, 0, 0, 0, 128, 38, 202, 1, 77, 0, 0, 0, 78, 0, 0, 0, 196, 255, 255, 255, 196, 255, 255, 255, 128, 38, 202, 1, 79, 0, 0, 0, 80, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 57, 98, 97, 115, 105, 99, 95, 105, 115, 116, 114, 105, 110, 103, 115, 116, 114, 101, 97, 109, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 0, 0, 32, 82, 202, 1, 96, 40, 7, 0, 128, 38, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 216, 34, 7, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 83, 67, 32, 51, 58, 73, 76, 76, 69, 71, 65, 76, 32, 79, 80, 67, 79, 68, 69, 32, 103, 114, 111, 117, 112, 32, 37, 100, 32, 115, 117, 98, 102, 117, 110, 99, 116, 105, 111, 110, 32, 37, 100], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 467064);
allocate([97, 115, 112, 101, 99, 116, 0, 0, 102, 114, 97, 109, 101, 115, 107, 105, 112, 0, 0, 0, 0, 0, 0, 0, 45, 115, 99, 97, 108, 101, 114, 0, 115, 99, 97, 108, 101, 114, 61, 0, 45, 102, 111, 114, 99, 101, 115, 99, 97, 108, 101, 114, 0, 0, 0, 0, 32, 102, 111, 114, 99, 101, 100, 0, 115, 99, 97, 108, 101, 114, 0, 0, 102, 111, 114, 99, 101, 0, 0, 0, 102, 111, 114, 99, 101, 100, 0, 0, 110, 111, 114, 109, 97, 108, 50, 120, 0, 0, 0, 0, 0, 0, 0, 0, 110, 111, 114, 109, 97, 108, 51, 120, 0, 0, 0, 0, 0, 0, 0, 0, 97, 100, 118, 109, 97, 109, 101, 50, 120, 0, 0, 0, 0, 0, 0, 0, 97, 100, 118, 109, 97, 109, 101, 51, 120, 0, 0, 0, 0, 0, 0, 0, 97, 100, 118, 105, 110, 116, 101, 114, 112, 50, 120, 0, 0, 0, 0, 0, 97, 100, 118, 105, 110, 116, 101, 114, 112, 51, 120, 0, 0, 0, 0, 0, 104, 113, 50, 120, 0, 0, 0, 0, 104, 113, 51, 120, 0, 0, 0, 0, 50, 120, 115, 97, 105, 0, 0, 0, 115, 117, 112, 101, 114, 50, 120, 115, 97, 105, 0, 0, 0, 0, 0, 0, 115, 117, 112, 101, 114, 101, 97, 103, 108, 101, 0, 0, 0, 0, 0, 0, 116, 118, 50, 120, 0, 0, 0, 0, 116, 118, 51, 120, 0, 0, 0, 0, 114, 103, 98, 50, 120, 0, 0, 0, 114, 103, 98, 51, 120, 0, 0, 0, 115, 99, 97, 110, 50, 120, 0, 0, 115, 99, 97, 110, 51, 120, 0, 0, 100, 101, 99, 102, 115, 107, 105, 112, 0, 0, 0, 0, 0, 0, 0, 0, 68, 101, 99, 32, 70, 115, 107, 105, 112, 0, 0, 0, 0, 0, 0, 0, 105, 110, 99, 102, 115, 107, 105, 112, 0, 0, 0, 0, 0, 0, 0, 0, 73, 110, 99, 32, 70, 115, 107, 105, 112, 0, 0, 0, 0, 0, 0, 0, 70, 114, 97, 109, 101, 32, 83, 107, 105, 112, 32, 97, 116, 32, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 85, 110, 104, 97, 110, 100, 108, 101, 100, 32, 71, 70, 88, 95, 67, 97, 108, 108, 66, 97, 99, 107, 82, 101, 115, 101, 116, 32, 37, 100, 0, 0, 83, 99, 97, 108, 101, 114, 32, 99, 97, 110, 39, 116, 32, 104, 97, 110, 100, 108, 101, 32, 116, 104, 105, 115, 32, 114, 101, 115, 111, 108, 117, 116, 105, 111, 110, 44, 32, 103, 111, 105, 110, 103, 32, 98, 97, 99, 107, 32, 116, 111, 32, 110, 111, 114, 109, 97, 108, 0, 0, 0, 0, 0, 0, 0, 70, 97, 105, 108, 101, 100, 32, 116, 111, 32, 99, 114, 101, 97, 116, 101, 32, 97, 32, 114, 101, 110, 100, 101, 114, 105, 110, 103, 32, 111, 117, 116, 112, 117, 116, 0, 0, 0, 0, 0, 82, 69, 78, 68, 69, 82, 58, 87, 114, 111, 110, 103, 32, 115, 111, 117, 114, 99, 101, 32, 98, 112, 112, 32, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 97, 110, 100, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 32, 118, 105, 100, 101, 111, 32, 109, 111, 100, 101, 32, 102, 111, 114, 32, 109, 97, 112, 112, 101, 114, 58, 32, 37, 115, 0, 0, 0, 0, 0, 0, 255, 255, 255, 0, 255, 0, 0, 0, 16, 48, 255, 0, 0, 255, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 97, 112, 112, 101, 114, 0, 0, 77, 97, 112, 112, 101, 114, 0, 0, 56, 62, 7, 0, 58, 4, 0, 0, 64, 62, 7, 0, 59, 4, 0, 0, 72, 62, 7, 0, 60, 4, 0, 0, 80, 62, 7, 0, 61, 4, 0, 0, 88, 62, 7, 0, 62, 4, 0, 0, 96, 62, 7, 0, 63, 4, 0, 0, 104, 62, 7, 0, 64, 4, 0, 0, 112, 62, 7, 0, 65, 4, 0, 0, 120, 62, 7, 0, 66, 4, 0, 0, 128, 62, 7, 0, 67, 4, 0, 0, 136, 62, 7, 0, 68, 4, 0, 0, 144, 62, 7, 0, 69, 4, 0, 0, 152, 62, 7, 0, 49, 0, 0, 0, 160, 62, 7, 0, 50, 0, 0, 0, 168, 62, 7, 0, 51, 0, 0, 0, 176, 62, 7, 0, 52, 0, 0, 0, 184, 62, 7, 0, 53, 0, 0, 0, 192, 62, 7, 0, 54, 0, 0, 0, 200, 62, 7, 0, 55, 0, 0, 0, 208, 62, 7, 0, 56, 0, 0, 0, 216, 62, 7, 0, 57, 0, 0, 0, 224, 62, 7, 0, 48, 0, 0, 0, 232, 62, 7, 0, 97, 0, 0, 0, 240, 62, 7, 0, 98, 0, 0, 0, 248, 62, 7, 0, 99, 0, 0, 0, 0, 63, 7, 0, 100, 0, 0, 0, 8, 63, 7, 0, 101, 0, 0, 0, 16, 63, 7, 0, 102, 0, 0, 0, 24, 63, 7, 0, 103, 0, 0, 0, 32, 63, 7, 0, 104, 0, 0, 0, 40, 63, 7, 0, 105, 0, 0, 0, 48, 63, 7, 0, 106, 0, 0, 0, 56, 63, 7, 0, 107, 0, 0, 0, 24, 41, 202, 1, 108, 0, 0, 0, 64, 63, 7, 0, 109, 0, 0, 0, 72, 63, 7, 0, 110, 0, 0, 0, 80, 63, 7, 0, 111, 0, 0, 0, 88, 63, 7, 0, 112, 0, 0, 0, 96, 63, 7, 0, 113, 0, 0, 0, 0, 24, 89, 0, 114, 0, 0, 0, 104, 63, 7, 0, 115, 0, 0, 0, 112, 63, 7, 0, 116, 0, 0, 0, 120, 63, 7, 0, 117, 0, 0, 0, 128, 63, 7, 0, 118, 0, 0, 0, 136, 63, 7, 0, 119, 0, 0, 0, 144, 63, 7, 0, 120, 0, 0, 0, 152, 63, 7, 0, 121, 0, 0, 0, 160, 63, 7, 0, 122, 0, 0, 0, 168, 63, 7, 0, 32, 0, 0, 0, 176, 63, 7, 0, 27, 0, 0, 0, 184, 63, 7, 0, 61, 0, 0, 0, 192, 63, 7, 0, 96, 0, 0, 0, 200, 63, 7, 0, 9, 0, 0, 0, 208, 63, 7, 0, 13, 0, 0, 0, 216, 63, 7, 0, 8, 0, 0, 0, 224, 63, 7, 0, 91, 0, 0, 0, 240, 63, 7, 0, 93, 0, 0, 0, 0, 64, 7, 0, 45, 0, 0, 0, 8, 64, 7, 0, 57, 4, 0, 0, 24, 64, 7, 0, 59, 0, 0, 0, 40, 64, 7, 0, 222, 0, 0, 0, 48, 64, 7, 0, 92, 0, 0, 0, 64, 64, 7, 0, 225, 4, 0, 0, 72, 64, 7, 0, 229, 4, 0, 0, 80, 64, 7, 0, 226, 4, 0, 0, 88, 64, 7, 0, 230, 4, 0, 0, 96, 64, 7, 0, 224, 4, 0, 0, 104, 64, 7, 0, 228, 4, 0, 0, 112, 64, 7, 0, 44, 0, 0, 0, 120, 64, 7, 0, 46, 0, 0, 0, 128, 64, 7, 0, 47, 0, 0, 0, 136, 64, 7, 0, 70, 4, 0, 0, 152, 64, 7, 0, 145, 0, 0, 0, 224, 19, 89, 0, 72, 4, 0, 0, 168, 64, 7, 0, 78, 4, 0, 0, 184, 64, 7, 0, 75, 4, 0, 0, 192, 64, 7, 0, 73, 4, 0, 0, 200, 64, 7, 0, 74, 4, 0, 0, 208, 64, 7, 0, 127, 0, 0, 0, 216, 64, 7, 0, 77, 4, 0, 0, 224, 64, 7, 0, 82, 4, 0, 0, 232, 64, 7, 0, 80, 4, 0, 0, 240, 64, 7, 0, 81, 4, 0, 0, 248, 64, 7, 0, 79, 4, 0, 0, 0, 65, 7, 0, 98, 4, 0, 0, 8, 65, 7, 0, 89, 4, 0, 0, 16, 65, 7, 0, 90, 4, 0, 0, 24, 65, 7, 0, 91, 4, 0, 0, 32, 65, 7, 0, 92, 4, 0, 0, 40, 65, 7, 0, 93, 4, 0, 0, 48, 65, 7, 0, 94, 4, 0, 0, 56, 65, 7, 0, 95, 4, 0, 0, 64, 65, 7, 0, 96, 4, 0, 0, 72, 65, 7, 0, 97, 4, 0, 0, 80, 65, 7, 0, 83, 4, 0, 0, 88, 65, 7, 0, 84, 4, 0, 0, 104, 65, 7, 0, 85, 4, 0, 0, 120, 65, 7, 0, 86, 4, 0, 0, 136, 65, 7, 0, 87, 4, 0, 0, 144, 65, 7, 0, 99, 4, 0, 0, 160, 65, 7, 0, 88, 4, 0, 0, 176, 65, 7, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 101, 121, 95, 37, 115, 32, 34, 107, 101, 121, 32, 37, 100, 34, 0, 109, 111, 100, 95, 49, 32, 34, 107, 101, 121, 32, 37, 100, 34, 0, 0, 109, 111, 100, 95, 50, 32, 34, 107, 101, 121, 32, 37, 100, 34, 0, 0, 106, 98, 117, 116, 116, 111, 110, 95, 48, 95, 48, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 98, 117, 116, 116, 111, 110, 32, 48, 34, 32, 0, 106, 98, 117, 116, 116, 111, 110, 95, 48, 95, 49, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 98, 117, 116, 116, 111, 110, 32, 49, 34, 32, 0, 106, 98, 117, 116, 116, 111, 110, 95, 48, 95, 50, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 98, 117, 116, 116, 111, 110, 32, 50, 34, 32, 0, 106, 98, 117, 116, 116, 111, 110, 95, 48, 95, 51, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 98, 117, 116, 116, 111, 110, 32, 51, 34, 32, 0, 106, 98, 117, 116, 116, 111, 110, 95, 48, 95, 52, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 98, 117, 116, 116, 111, 110, 32, 52, 34, 32, 0, 106, 98, 117, 116, 116, 111, 110, 95, 48, 95, 53, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 98, 117, 116, 116, 111, 110, 32, 53, 34, 32, 0, 106, 98, 117, 116, 116, 111, 110, 95, 49, 95, 48, 32, 34, 115, 116, 105, 99, 107, 95, 49, 32, 98, 117, 116, 116, 111, 110, 32, 48, 34, 32, 0, 106, 98, 117, 116, 116, 111, 110, 95, 49, 95, 49, 32, 34, 115, 116, 105, 99, 107, 95, 49, 32, 98, 117, 116, 116, 111, 110, 32, 49, 34, 32, 0, 106, 97, 120, 105, 115, 95, 48, 95, 48, 45, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 97, 120, 105, 115, 32, 48, 32, 48, 34, 32, 0, 0, 106, 97, 120, 105, 115, 95, 48, 95, 48, 43, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 97, 120, 105, 115, 32, 48, 32, 49, 34, 32, 0, 0, 106, 97, 120, 105, 115, 95, 48, 95, 49, 45, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 97, 120, 105, 115, 32, 49, 32, 48, 34, 32, 0, 0, 106, 97, 120, 105, 115, 95, 48, 95, 49, 43, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 97, 120, 105, 115, 32, 49, 32, 49, 34, 32, 0, 0, 106, 97, 120, 105, 115, 95, 48, 95, 50, 45, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 97, 120, 105, 115, 32, 50, 32, 48, 34, 32, 0, 0, 106, 97, 120, 105, 115, 95, 48, 95, 50, 43, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 97, 120, 105, 115, 32, 50, 32, 49, 34, 32, 0, 0, 106, 97, 120, 105, 115, 95, 48, 95, 51, 45, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 97, 120, 105, 115, 32, 51, 32, 48, 34, 32, 0, 0, 106, 97, 120, 105, 115, 95, 48, 95, 51, 43, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 97, 120, 105, 115, 32, 51, 32, 49, 34, 32, 0, 0, 106, 97, 120, 105, 115, 95, 49, 95, 48, 45, 32, 34, 115, 116, 105, 99, 107, 95, 49, 32, 97, 120, 105, 115, 32, 48, 32, 48, 34, 32, 0, 0, 106, 97, 120, 105, 115, 95, 49, 95, 48, 43, 32, 34, 115, 116, 105, 99, 107, 95, 49, 32, 97, 120, 105, 115, 32, 48, 32, 49, 34, 32, 0, 0, 106, 97, 120, 105, 115, 95, 49, 95, 49, 45, 32, 34, 115, 116, 105, 99, 107, 95, 49, 32, 97, 120, 105, 115, 32, 49, 32, 48, 34, 32, 0, 0, 106, 97, 120, 105, 115, 95, 49, 95, 49, 43, 32, 34, 115, 116, 105, 99, 107, 95, 49, 32, 97, 120, 105, 115, 32, 49, 32, 49, 34, 32, 0, 0, 106, 104, 97, 116, 95, 48, 95, 48, 95, 48, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 104, 97, 116, 32, 48, 32, 49, 34, 32, 0, 0, 0, 106, 104, 97, 116, 95, 48, 95, 48, 95, 49, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 104, 97, 116, 32, 48, 32, 50, 34, 32, 0, 0, 0, 106, 104, 97, 116, 95, 48, 95, 48, 95, 50, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 104, 97, 116, 32, 48, 32, 52, 34, 32, 0, 0, 0, 106, 104, 97, 116, 95, 48, 95, 48, 95, 51, 32, 34, 115, 116, 105, 99, 107, 95, 48, 32, 104, 97, 116, 32, 48, 32, 56, 34, 32, 0, 0, 0, 37, 115, 32, 34, 107, 101, 121, 32, 37, 100, 37, 115, 37, 115, 37, 115, 34, 0, 0, 0, 0, 0, 0, 0, 32, 109, 111, 100, 49, 0, 0, 0, 32, 109, 111, 100, 50, 0, 0, 0, 32, 109, 111, 100, 51, 0, 0, 0, 67, 97, 110, 39, 116, 32, 102, 105, 110, 100, 32, 109, 97, 116, 99, 104, 105, 110, 103, 32, 101, 118, 101, 110, 116, 32, 102, 111, 114, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 0, 109, 111, 100, 49, 0, 0, 0, 0, 109, 111, 100, 50, 0, 0, 0, 0, 109, 111, 100, 51, 0, 0, 0, 0, 104, 111, 108, 100, 0, 0, 0, 0, 102, 49, 0, 0, 0, 0, 0, 0, 102, 50, 0, 0, 0, 0, 0, 0, 102, 51, 0, 0, 0, 0, 0, 0, 102, 52, 0, 0, 0, 0, 0, 0, 102, 53, 0, 0, 0, 0, 0, 0, 102, 54, 0, 0, 0, 0, 0, 0, 102, 55, 0, 0, 0, 0, 0, 0, 102, 56, 0, 0, 0, 0, 0, 0, 102, 57, 0, 0, 0, 0, 0, 0, 102, 49, 48, 0, 0, 0, 0, 0, 102, 49, 49, 0, 0, 0, 0, 0, 102, 49, 50, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 53, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, 0, 99, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 111, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 113, 0, 0, 0, 0, 0, 0, 0, 115, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 119, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 115, 112, 97, 99, 101, 0, 0, 0, 101, 115, 99, 0, 0, 0, 0, 0, 101, 113, 117, 97, 108, 115, 0, 0, 103, 114, 97, 118, 101, 0, 0, 0, 116, 97, 98, 0, 0, 0, 0, 0, 101, 110, 116, 101, 114, 0, 0, 0, 98, 115, 112, 97, 99, 101, 0, 0, 108, 98, 114, 97, 99, 107, 101, 116, 0, 0, 0, 0, 0, 0, 0, 0, 114, 98, 114, 97, 99, 107, 101, 116, 0, 0, 0, 0, 0, 0, 0, 0, 109, 105, 110, 117, 115, 0, 0, 0, 99, 97, 112, 115, 108, 111, 99, 107, 0, 0, 0, 0, 0, 0, 0, 0, 115, 101, 109, 105, 99, 111, 108, 111, 110, 0, 0, 0, 0, 0, 0, 0, 113, 117, 111, 116, 101, 0, 0, 0, 98, 97, 99, 107, 115, 108, 97, 115, 104, 0, 0, 0, 0, 0, 0, 0, 108, 115, 104, 105, 102, 116, 0, 0, 114, 115, 104, 105, 102, 116, 0, 0, 108, 97, 108, 116, 0, 0, 0, 0, 114, 97, 108, 116, 0, 0, 0, 0, 108, 99, 116, 114, 108, 0, 0, 0, 114, 99, 116, 114, 108, 0, 0, 0, 99, 111, 109, 109, 97, 0, 0, 0, 112, 101, 114, 105, 111, 100, 0, 0, 115, 108, 97, 115, 104, 0, 0, 0, 112, 114, 105, 110, 116, 115, 99, 114, 101, 101, 110, 0, 0, 0, 0, 0, 115, 99, 114, 111, 108, 108, 108, 111, 99, 107, 0, 0, 0, 0, 0, 0, 112, 97, 103, 101, 100, 111, 119, 110, 0, 0, 0, 0, 0, 0, 0, 0, 112, 97, 103, 101, 117, 112, 0, 0, 105, 110, 115, 101, 114, 116, 0, 0, 104, 111, 109, 101, 0, 0, 0, 0, 100, 101, 108, 101, 116, 101, 0, 0, 101, 110, 100, 0, 0, 0, 0, 0, 117, 112, 0, 0, 0, 0, 0, 0, 108, 101, 102, 116, 0, 0, 0, 0, 100, 111, 119, 110, 0, 0, 0, 0, 114, 105, 103, 104, 116, 0, 0, 0, 107, 112, 95, 48, 0, 0, 0, 0, 107, 112, 95, 49, 0, 0, 0, 0, 107, 112, 95, 50, 0, 0, 0, 0, 107, 112, 95, 51, 0, 0, 0, 0, 107, 112, 95, 52, 0, 0, 0, 0, 107, 112, 95, 53, 0, 0, 0, 0, 107, 112, 95, 54, 0, 0, 0, 0, 107, 112, 95, 55, 0, 0, 0, 0, 107, 112, 95, 56, 0, 0, 0, 0, 107, 112, 95, 57, 0, 0, 0, 0, 110, 117, 109, 108, 111, 99, 107, 0, 107, 112, 95, 100, 105, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 107, 112, 95, 109, 117, 108, 116, 105, 112, 108, 121, 0, 0, 0, 0, 0, 107, 112, 95, 109, 105, 110, 117, 115, 0, 0, 0, 0, 0, 0, 0, 0, 107, 112, 95, 112, 108, 117, 115, 0, 107, 112, 95, 112, 101, 114, 105, 111, 100, 0, 0, 0, 0, 0, 0, 0, 107, 112, 95, 101, 110, 116, 101, 114, 0, 0, 0, 0, 0, 0, 0, 0, 108, 101, 115, 115, 116, 104, 97, 110, 0, 0, 0, 0, 0, 0, 0, 0, 114, 116, 0, 0, 0, 0, 0, 0, 77, 65, 80, 80, 69, 82, 58, 32, 76, 111, 97, 100, 105, 110, 103, 32, 109, 97, 112, 112, 101, 114, 32, 115, 101, 116, 116, 105, 110, 103, 115, 32, 102, 114, 111, 109, 32, 37, 115, 0, 0, 0, 0, 0, 104, 66, 7, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 49, 50, 67, 67, 72, 66, 105, 110, 100, 71, 114, 111, 117, 112, 0, 0, 49, 53, 67, 83, 116, 105, 99, 107, 66, 105, 110, 100, 71, 114, 111, 117, 112, 0, 0, 0, 0, 0, 0, 0, 49, 48, 67, 66, 105, 110, 100, 71, 114, 111, 117, 112, 0, 0, 0, 0, 64, 81, 202, 1, 64, 66, 7, 0, 32, 82, 202, 1, 40, 66, 7, 0, 80, 66, 7, 0, 0, 0, 0, 0, 32, 82, 202, 1, 24, 66, 7, 0, 88, 66, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 12, 0, 0, 0, 91, 109, 105, 115, 115, 105, 110, 103, 32, 106, 111, 121, 115, 116, 105, 99, 107, 93, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 16, 0, 0, 0, 0, 1, 0, 0, 32, 0, 0, 0, 0, 2, 0, 0, 136, 136, 0, 0, 0, 128, 0, 0, 0, 8, 0, 0, 128, 0, 0, 0, 8, 0, 0, 0, 64, 84, 0, 0, 0, 64, 0, 0, 0, 4, 0, 0, 64, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 80, 67, 7, 0, 102, 0, 0, 0, 103, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 77, 65, 80, 80, 69, 82, 58, 74, 79, 89, 83, 84, 73, 67, 75, 58, 73, 110, 118, 97, 108, 105, 100, 32, 104, 97, 116, 32, 112, 111, 115, 105, 116, 105, 111, 110, 0, 0, 0, 0, 57, 67, 74, 72, 97, 116, 66, 105, 110, 100, 0, 0, 0, 0, 0, 0, 53, 67, 66, 105, 110, 100, 0, 0, 64, 81, 202, 1, 64, 67, 7, 0, 32, 82, 202, 1, 48, 67, 7, 0, 72, 67, 7, 0, 0, 0, 0, 0, 37, 115, 32, 72, 97, 116, 32, 37, 100, 32, 37, 115, 0, 0, 0, 0, 37, 115, 32, 104, 97, 116, 32, 37, 100, 32, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 72, 67, 7, 0, 102, 0, 0, 0, 104, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 192, 67, 7, 0, 102, 0, 0, 0, 105, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 49, 50, 67, 74, 66, 117, 116, 116, 111, 110, 66, 105, 110, 100, 0, 0, 32, 82, 202, 1, 176, 67, 7, 0, 72, 67, 7, 0, 0, 0, 0, 0, 37, 115, 32, 66, 117, 116, 116, 111, 110, 32, 37, 100, 0, 0, 0, 0, 37, 115, 32, 98, 117, 116, 116, 111, 110, 32, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 24, 68, 7, 0, 102, 0, 0, 0, 106, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 49, 48, 67, 74, 65, 120, 105, 115, 66, 105, 110, 100, 0, 0, 0, 0, 32, 82, 202, 1, 8, 68, 7, 0, 72, 67, 7, 0, 0, 0, 0, 0, 37, 115, 32, 65, 120, 105, 115, 32, 37, 100, 37, 115, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 37, 115, 32, 97, 120, 105, 115, 32, 37, 100, 32, 37, 100, 0, 0, 0, 97, 120, 105, 115, 0, 0, 0, 0, 98, 117, 116, 116, 111, 110, 0, 0, 104, 97, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 66, 7, 0, 34, 0, 0, 0, 35, 0, 0, 0, 37, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 99, 0, 0, 0, 107, 0, 0, 0, 108, 0, 0, 0, 115, 116, 105, 99, 107, 95, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 85, 115, 105, 110, 103, 32, 106, 111, 121, 115, 116, 105, 99, 107, 32, 37, 115, 32, 119, 105, 116, 104, 32, 37, 100, 32, 97, 120, 101, 115, 44, 32, 37, 100, 32, 98, 117, 116, 116, 111, 110, 115, 32, 97, 110, 100, 32, 37, 100, 32, 104, 97, 116, 40, 115, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 66, 7, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 69, 7, 0, 34, 0, 0, 0, 35, 0, 0, 0, 38, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 99, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 49, 51, 67, 70, 67, 83, 66, 105, 110, 100, 71, 114, 111, 117, 112, 0, 32, 82, 202, 1, 56, 69, 7, 0, 88, 66, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 69, 7, 0, 34, 0, 0, 0, 35, 0, 0, 0, 39, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 99, 0, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 49, 53, 67, 52, 65, 120, 105, 115, 66, 105, 110, 100, 71, 114, 111, 117, 112, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 128, 69, 7, 0, 88, 66, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 69, 7, 0, 40, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 107, 101, 121, 0, 0, 0, 0, 0, 49, 51, 67, 75, 101, 121, 66, 105, 110, 100, 71, 114, 111, 117, 112, 0, 32, 82, 202, 1, 216, 69, 7, 0, 80, 66, 7, 0, 0, 0, 0, 0, 75, 101, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 70, 7, 0, 102, 0, 0, 0, 117, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 56, 67, 75, 101, 121, 66, 105, 110, 100, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 24, 70, 7, 0, 72, 67, 7, 0, 0, 0, 0, 0, 75, 101, 121, 32, 37, 115, 0, 0, 107, 101, 121, 32, 37, 100, 0, 0, 69, 83, 67, 0, 0, 0, 0, 0, 192, 79, 7, 0, 56, 62, 7, 0, 37, 0, 0, 0, 200, 79, 7, 0, 64, 62, 7, 0, 38, 0, 0, 0, 208, 79, 7, 0, 72, 62, 7, 0, 39, 0, 0, 0, 216, 79, 7, 0, 80, 62, 7, 0, 40, 0, 0, 0, 224, 79, 7, 0, 88, 62, 7, 0, 41, 0, 0, 0, 232, 79, 7, 0, 96, 62, 7, 0, 42, 0, 0, 0, 240, 79, 7, 0, 104, 62, 7, 0, 43, 0, 0, 0, 248, 79, 7, 0, 112, 62, 7, 0, 44, 0, 0, 0, 0, 80, 7, 0, 120, 62, 7, 0, 45, 0, 0, 0, 8, 80, 7, 0, 128, 62, 7, 0, 46, 0, 0, 0, 16, 80, 7, 0, 136, 62, 7, 0, 47, 0, 0, 0, 24, 80, 7, 0, 144, 62, 7, 0, 48, 0, 0, 0, 88, 79, 7, 0, 192, 63, 7, 0, 63, 0, 0, 0, 96, 79, 7, 0, 152, 62, 7, 0, 1, 0, 0, 0, 104, 79, 7, 0, 160, 62, 7, 0, 2, 0, 0, 0, 112, 79, 7, 0, 168, 62, 7, 0, 3, 0, 0, 0, 120, 79, 7, 0, 176, 62, 7, 0, 4, 0, 0, 0, 128, 79, 7, 0, 184, 62, 7, 0, 5, 0, 0, 0, 136, 79, 7, 0, 192, 62, 7, 0, 6, 0, 0, 0, 144, 79, 7, 0, 200, 62, 7, 0, 7, 0, 0, 0, 152, 79, 7, 0, 208, 62, 7, 0, 8, 0, 0, 0, 160, 79, 7, 0, 216, 62, 7, 0, 9, 0, 0, 0, 168, 79, 7, 0, 224, 62, 7, 0, 10, 0, 0, 0, 176, 79, 7, 0, 0, 64, 7, 0, 64, 0, 0, 0, 184, 79, 7, 0, 184, 63, 7, 0, 65, 0, 0, 0, 184, 73, 7, 0, 216, 63, 7, 0, 51, 0, 0, 0, 84, 65, 66, 0, 0, 0, 0, 0, 96, 63, 7, 0, 96, 63, 7, 0, 11, 0, 0, 0, 136, 63, 7, 0, 136, 63, 7, 0, 12, 0, 0, 0, 8, 63, 7, 0, 8, 63, 7, 0, 13, 0, 0, 0, 0, 24, 89, 0, 0, 24, 89, 0, 14, 0, 0, 0, 112, 63, 7, 0, 112, 63, 7, 0, 15, 0, 0, 0, 152, 63, 7, 0, 152, 63, 7, 0, 16, 0, 0, 0, 120, 63, 7, 0, 120, 63, 7, 0, 17, 0, 0, 0, 40, 63, 7, 0, 40, 63, 7, 0, 18, 0, 0, 0, 80, 63, 7, 0, 80, 63, 7, 0, 19, 0, 0, 0, 88, 63, 7, 0, 88, 63, 7, 0, 20, 0, 0, 0, 72, 79, 7, 0, 224, 63, 7, 0, 67, 0, 0, 0, 80, 79, 7, 0, 240, 63, 7, 0, 68, 0, 0, 0, 69, 78, 84, 69, 82, 0, 0, 0, 67, 76, 67, 75, 0, 0, 0, 0, 232, 62, 7, 0, 232, 62, 7, 0, 21, 0, 0, 0, 104, 63, 7, 0, 104, 63, 7, 0, 22, 0, 0, 0, 0, 63, 7, 0, 0, 63, 7, 0, 23, 0, 0, 0, 16, 63, 7, 0, 16, 63, 7, 0, 24, 0, 0, 0, 24, 63, 7, 0, 24, 63, 7, 0, 25, 0, 0, 0, 32, 63, 7, 0, 32, 63, 7, 0, 26, 0, 0, 0, 48, 63, 7, 0, 48, 63, 7, 0, 27, 0, 0, 0, 56, 63, 7, 0, 56, 63, 7, 0, 28, 0, 0, 0, 24, 41, 202, 1, 24, 41, 202, 1, 29, 0, 0, 0, 48, 79, 7, 0, 24, 64, 7, 0, 69, 0, 0, 0, 56, 79, 7, 0, 40, 64, 7, 0, 70, 0, 0, 0, 64, 79, 7, 0, 48, 64, 7, 0, 66, 0, 0, 0, 83, 72, 73, 70, 84, 0, 0, 0, 40, 79, 7, 0, 176, 65, 7, 0, 74, 0, 0, 0, 160, 63, 7, 0, 160, 63, 7, 0, 30, 0, 0, 0, 144, 63, 7, 0, 144, 63, 7, 0, 31, 0, 0, 0, 248, 62, 7, 0, 248, 62, 7, 0, 32, 0, 0, 0, 128, 63, 7, 0, 128, 63, 7, 0, 33, 0, 0, 0, 240, 62, 7, 0, 240, 62, 7, 0, 34, 0, 0, 0, 72, 63, 7, 0, 72, 63, 7, 0, 35, 0, 0, 0, 64, 63, 7, 0, 64, 63, 7, 0, 36, 0, 0, 0, 112, 243, 177, 1, 112, 64, 7, 0, 72, 0, 0, 0, 80, 104, 202, 1, 120, 64, 7, 0, 71, 0, 0, 0, 216, 73, 7, 0, 128, 64, 7, 0, 73, 0, 0, 0, 0, 0, 0, 0, 67, 84, 82, 76, 0, 0, 0, 0, 65, 76, 84, 0, 0, 0, 0, 0, 83, 80, 65, 67, 69, 0, 0, 0, 80, 82, 84, 0, 0, 0, 0, 0, 83, 67, 76, 0, 0, 0, 0, 0, 80, 65, 85, 0, 0, 0, 0, 0, 73, 78, 83, 0, 0, 0, 0, 0, 72, 79, 77, 0, 0, 0, 0, 0, 80, 85, 80, 0, 0, 0, 0, 0, 68, 69, 76, 0, 0, 0, 0, 0, 69, 78, 68, 0, 0, 0, 0, 0, 80, 68, 78, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 78, 85, 77, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 69, 78, 84, 0, 0, 0, 0, 0, 89, 45, 0, 0, 0, 0, 0, 0, 89, 43, 0, 0, 0, 0, 0, 0, 88, 45, 0, 0, 0, 0, 0, 0, 88, 43, 0, 0, 0, 0, 0, 0, 85, 80, 0, 0, 0, 0, 0, 0, 76, 70, 84, 0, 0, 0, 0, 0, 68, 87, 78, 0, 0, 0, 0, 0, 82, 71, 84, 0, 0, 0, 0, 0, 74, 111, 121, 115, 116, 105, 99, 107, 32, 49, 0, 0, 0, 0, 0, 0, 74, 111, 121, 115, 116, 105, 99, 107, 32, 50, 0, 0, 0, 0, 0, 0, 68, 105, 115, 97, 98, 108, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 65, 120, 105, 115, 32, 49, 47, 50, 0, 0, 0, 0, 0, 0, 0, 0, 65, 120, 105, 115, 32, 51, 47, 52, 0, 0, 0, 0, 0, 0, 0, 0, 72, 97, 116, 47, 68, 45, 112, 97, 100, 0, 0, 0, 0, 0, 0, 0, 65, 120, 105, 115, 32, 51, 0, 0, 77, 111, 100, 49, 0, 0, 0, 0, 77, 111, 100, 50, 0, 0, 0, 0, 77, 111, 100, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 78, 101, 120, 116, 0, 0, 0, 0, 65, 100, 100, 0, 0, 0, 0, 0, 68, 101, 108, 0, 0, 0, 0, 0, 83, 97, 118, 101, 0, 0, 0, 0, 69, 120, 105, 116, 0, 0, 0, 0, 66, 105, 110, 100, 32, 84, 105, 116, 108, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 75, 7, 0, 118, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 46, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 49, 49, 67, 66, 105, 110, 100, 66, 117, 116, 116, 111, 110, 0, 0, 0, 49, 49, 67, 84, 101, 120, 116, 66, 117, 116, 116, 111, 110, 0, 0, 0, 55, 67, 66, 117, 116, 116, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 136, 75, 7, 0, 32, 82, 202, 1, 120, 75, 7, 0, 152, 75, 7, 0, 0, 0, 0, 0, 32, 82, 202, 1, 104, 75, 7, 0, 160, 75, 7, 0, 0, 0, 0, 0, 80, 114, 101, 115, 115, 32, 97, 32, 107, 101, 121, 47, 106, 111, 121, 115, 116, 105, 99, 107, 32, 98, 117, 116, 116, 111, 110, 32, 111, 114, 32, 109, 111, 118, 101, 32, 116, 104, 101, 32, 106, 111, 121, 115, 116, 105, 99, 107, 46, 0, 0, 0, 0, 0, 0, 0, 119, 116, 43, 0, 0, 0, 0, 0, 67, 97, 110, 39, 116, 32, 111, 112, 101, 110, 32, 37, 115, 32, 102, 111, 114, 32, 115, 97, 118, 105, 110, 103, 32, 116, 104, 101, 32, 109, 97, 112, 112, 105, 110, 103, 115, 0, 0, 0, 37, 115, 32, 0, 0, 0, 0, 0, 34, 37, 115, 34, 32, 0, 0, 0, 77, 97, 112, 112, 101, 114, 32, 102, 105, 108, 101, 32, 115, 97, 118, 101, 100, 46, 0, 0, 0, 0, 0, 0, 32, 104, 111, 108, 100, 0, 0, 0, 66, 73, 78, 68, 58, 37, 115, 0, 0, 0, 0, 0, 160, 75, 7, 0, 118, 0, 0, 0, 122, 0, 0, 0, 120, 0, 0, 0, 46, 0, 0, 0, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 75, 7, 0, 118, 0, 0, 0, 124, 0, 0, 0, 125, 0, 0, 0, 46, 0, 0, 0, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 208, 76, 7, 0, 118, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 46, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 49, 50, 67, 67, 104, 101, 99, 107, 66, 117, 116, 116, 111, 110, 0, 0, 32, 82, 202, 1, 192, 76, 7, 0, 160, 75, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 77, 7, 0, 118, 0, 0, 0, 129, 0, 0, 0, 130, 0, 0, 0, 46, 0, 0, 0, 123, 0, 0, 0, 0, 0, 0, 0, 49, 52, 67, 67, 97, 112, 116, 105, 111, 110, 66, 117, 116, 116, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 0, 77, 7, 0, 152, 75, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 77, 7, 0, 118, 0, 0, 0, 131, 0, 0, 0, 120, 0, 0, 0, 46, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 49, 50, 67, 69, 118, 101, 110, 116, 66, 117, 116, 116, 111, 110, 0, 0, 32, 82, 202, 1, 72, 77, 7, 0, 160, 75, 7, 0, 0, 0, 0, 0, 109, 111, 100, 95, 37, 100, 0, 0, 0, 0, 0, 0, 216, 77, 7, 0, 133, 0, 0, 0, 134, 0, 0, 0, 50, 0, 0, 0, 3, 0, 0, 0, 51, 0, 0, 0, 51, 0, 0, 0, 57, 67, 77, 111, 100, 69, 118, 101, 110, 116, 0, 0, 0, 0, 0, 0, 49, 53, 67, 84, 114, 105, 103, 103, 101, 114, 101, 100, 69, 118, 101, 110, 116, 0, 0, 0, 0, 0, 0, 0, 54, 67, 69, 118, 101, 110, 116, 0, 64, 81, 202, 1, 184, 77, 7, 0, 32, 82, 202, 1, 160, 77, 7, 0, 192, 77, 7, 0, 0, 0, 0, 0, 32, 82, 202, 1, 144, 77, 7, 0, 200, 77, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 77, 7, 0, 133, 0, 0, 0, 135, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 106, 104, 97, 116, 95, 37, 100, 95, 37, 100, 95, 37, 100, 0, 0, 0, 0, 0, 0, 0, 72, 78, 7, 0, 133, 0, 0, 0, 136, 0, 0, 0, 52, 0, 0, 0, 3, 0, 0, 0, 51, 0, 0, 0, 51, 0, 0, 0, 49, 48, 67, 74, 72, 97, 116, 69, 118, 101, 110, 116, 0, 0, 0, 0, 32, 82, 202, 1, 56, 78, 7, 0, 200, 77, 7, 0, 0, 0, 0, 0, 106, 97, 120, 105, 115, 95, 37, 100, 95, 37, 100, 37, 115, 0, 0, 0, 0, 0, 0, 0, 200, 78, 7, 0, 133, 0, 0, 0, 137, 0, 0, 0, 53, 0, 0, 0, 4, 0, 0, 0, 54, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 138, 0, 0, 0, 49, 49, 67, 74, 65, 120, 105, 115, 69, 118, 101, 110, 116, 0, 0, 0, 49, 54, 67, 67, 111, 110, 116, 105, 110, 117, 111, 117, 115, 69, 118, 101, 110, 116, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 160, 78, 7, 0, 192, 77, 7, 0, 0, 0, 0, 0, 32, 82, 202, 1, 144, 78, 7, 0, 184, 78, 7, 0, 0, 0, 0, 0, 106, 98, 117, 116, 116, 111, 110, 95, 37, 100, 95, 37, 100, 0, 0, 0, 0, 0, 0, 0, 24, 79, 7, 0, 133, 0, 0, 0, 139, 0, 0, 0, 55, 0, 0, 0, 3, 0, 0, 0, 51, 0, 0, 0, 51, 0, 0, 0, 49, 51, 67, 74, 66, 117, 116, 116, 111, 110, 69, 118, 101, 110, 116, 0, 32, 82, 202, 1, 8, 79, 7, 0, 200, 77, 7, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 96, 126, 0, 0, 0, 0, 0, 0, 49, 33, 0, 0, 0, 0, 0, 0, 50, 64, 0, 0, 0, 0, 0, 0, 51, 35, 0, 0, 0, 0, 0, 0, 52, 36, 0, 0, 0, 0, 0, 0, 53, 37, 0, 0, 0, 0, 0, 0, 54, 94, 0, 0, 0, 0, 0, 0, 55, 38, 0, 0, 0, 0, 0, 0, 56, 42, 0, 0, 0, 0, 0, 0, 57, 40, 0, 0, 0, 0, 0, 0, 48, 41, 0, 0, 0, 0, 0, 0, 45, 95, 0, 0, 0, 0, 0, 0, 61, 43, 0, 0, 0, 0, 0, 0, 70, 49, 0, 0, 0, 0, 0, 0, 70, 50, 0, 0, 0, 0, 0, 0, 70, 51, 0, 0, 0, 0, 0, 0, 70, 52, 0, 0, 0, 0, 0, 0, 70, 53, 0, 0, 0, 0, 0, 0, 70, 54, 0, 0, 0, 0, 0, 0, 70, 55, 0, 0, 0, 0, 0, 0, 70, 56, 0, 0, 0, 0, 0, 0, 70, 57, 0, 0, 0, 0, 0, 0, 70, 49, 48, 0, 0, 0, 0, 0, 70, 49, 49, 0, 0, 0, 0, 0, 70, 49, 50, 0, 0, 0, 0, 0, 107, 101, 121, 95, 0, 0, 0, 0, 0, 0, 0, 0, 88, 80, 7, 0, 133, 0, 0, 0, 140, 0, 0, 0, 56, 0, 0, 0, 3, 0, 0, 0, 51, 0, 0, 0, 51, 0, 0, 0, 57, 67, 75, 101, 121, 69, 118, 101, 110, 116, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 72, 80, 7, 0, 200, 77, 7, 0, 0, 0, 0, 0, 84, 119, 111, 32, 111, 114, 32, 109, 111, 114, 101, 32, 106, 111, 121, 115, 116, 105, 99, 107, 115, 32, 114, 101, 112, 111, 114, 116, 101, 100, 44, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 105, 110, 103, 32, 119, 105, 116, 104, 32, 50, 97, 120, 105, 115, 0, 79, 110, 101, 32, 106, 111, 121, 115, 116, 105, 99, 107, 32, 114, 101, 112, 111, 114, 116, 101, 100, 44, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 105, 110, 103, 32, 119, 105, 116, 104, 32, 52, 97, 120, 105, 115, 0, 0, 79, 110, 101, 32, 106, 111, 121, 115, 116, 105, 99, 107, 32, 114, 101, 112, 111, 114, 116, 101, 100, 44, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 105, 110, 103, 32, 119, 105, 116, 104, 32, 52, 97, 120, 105, 115, 95, 50, 0, 0, 0, 0, 0, 0, 0, 0, 69, 86, 69, 78, 84, 58, 37, 115, 0, 0, 0, 0, 0, 0, 0, 0, 83, 101, 108, 101, 99, 116, 32, 97, 110, 32, 101, 118, 101, 110, 116, 32, 116, 111, 32, 99, 104, 97, 110, 103, 101, 46, 0, 0, 0, 0, 0, 0, 83, 101, 108, 101, 99, 116, 32, 97, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 32, 101, 118, 101, 110, 116, 32, 111, 114, 32, 104, 105, 116, 32, 116, 104, 101, 32, 65, 100, 100, 47, 68, 101, 108, 47, 78, 101, 120, 116, 32, 98, 117, 116, 116, 111, 110, 115, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 81, 7, 0, 133, 0, 0, 0, 141, 0, 0, 0, 57, 0, 0, 0, 3, 0, 0, 0, 51, 0, 0, 0, 51, 0, 0, 0, 49, 51, 67, 72, 97, 110, 100, 108, 101, 114, 69, 118, 101, 110, 116, 0, 32, 82, 202, 1, 152, 81, 7, 0, 200, 77, 7], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 471992);
allocate([142, 0, 0, 0, 143, 0, 0, 0, 144, 0, 0, 0, 145, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 147, 0, 0, 0, 148, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 150, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 153, 0, 0, 0, 154, 0, 0, 0, 142, 0, 0, 0, 155, 0, 0, 0, 156, 0, 0, 0, 157, 0, 0, 0, 78, 111, 114, 109, 97, 108, 0, 0, 64, 211, 87, 0, 15, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 158, 0, 0, 0, 159, 0, 0, 0, 160, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 163, 0, 0, 0, 164, 0, 0, 0, 0, 0, 0, 0, 165, 0, 0, 0, 166, 0, 0, 0, 167, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 169, 0, 0, 0, 170, 0, 0, 0, 158, 0, 0, 0, 171, 0, 0, 0, 172, 0, 0, 0, 173, 0, 0, 0, 174, 0, 0, 0, 175, 0, 0, 0, 176, 0, 0, 0, 177, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0, 0, 179, 0, 0, 0, 180, 0, 0, 0, 0, 0, 0, 0, 181, 0, 0, 0, 182, 0, 0, 0, 183, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0, 0, 185, 0, 0, 0, 186, 0, 0, 0, 174, 0, 0, 0, 187, 0, 0, 0, 188, 0, 0, 0, 189, 0, 0, 0, 64, 211, 87, 0, 15, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 190, 0, 0, 0, 191, 0, 0, 0, 192, 0, 0, 0, 193, 0, 0, 0, 0, 0, 0, 0, 194, 0, 0, 0, 195, 0, 0, 0, 196, 0, 0, 0, 0, 0, 0, 0, 197, 0, 0, 0, 198, 0, 0, 0, 199, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 201, 0, 0, 0, 202, 0, 0, 0, 190, 0, 0, 0, 203, 0, 0, 0, 204, 0, 0, 0, 205, 0, 0, 0, 206, 0, 0, 0, 207, 0, 0, 0, 208, 0, 0, 0, 209, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0, 0, 211, 0, 0, 0, 212, 0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 214, 0, 0, 0, 215, 0, 0, 0, 0, 0, 0, 0, 216, 0, 0, 0, 217, 0, 0, 0, 218, 0, 0, 0, 206, 0, 0, 0, 219, 0, 0, 0, 220, 0, 0, 0, 221, 0, 0, 0, 64, 211, 87, 0, 15, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 222, 0, 0, 0, 223, 0, 0, 0, 224, 0, 0, 0, 225, 0, 0, 0, 0, 0, 0, 0, 226, 0, 0, 0, 227, 0, 0, 0, 228, 0, 0, 0, 0, 0, 0, 0, 229, 0, 0, 0, 230, 0, 0, 0, 231, 0, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 233, 0, 0, 0, 234, 0, 0, 0, 222, 0, 0, 0, 235, 0, 0, 0, 236, 0, 0, 0, 237, 0, 0, 0, 238, 0, 0, 0, 239, 0, 0, 0, 240, 0, 0, 0, 241, 0, 0, 0, 0, 0, 0, 0, 242, 0, 0, 0, 243, 0, 0, 0, 244, 0, 0, 0, 0, 0, 0, 0, 245, 0, 0, 0, 246, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0, 0, 249, 0, 0, 0, 250, 0, 0, 0, 238, 0, 0, 0, 251, 0, 0, 0, 252, 0, 0, 0, 253, 0, 0, 0, 78, 111, 114, 109, 97, 108, 50, 120, 0, 0, 0, 0, 0, 0, 0, 0, 88, 213, 87, 0, 15, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 254, 0, 0, 0, 255, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 3, 1, 0, 0, 4, 1, 0, 0, 0, 0, 0, 0, 5, 1, 0, 0, 6, 1, 0, 0, 7, 1, 0, 0, 0, 0, 0, 0, 8, 1, 0, 0, 9, 1, 0, 0, 10, 1, 0, 0, 254, 0, 0, 0, 11, 1, 0, 0, 12, 1, 0, 0, 13, 1, 0, 0, 14, 1, 0, 0, 15, 1, 0, 0, 16, 1, 0, 0, 17, 1, 0, 0, 0, 0, 0, 0, 18, 1, 0, 0, 19, 1, 0, 0, 20, 1, 0, 0, 0, 0, 0, 0, 21, 1, 0, 0, 22, 1, 0, 0, 23, 1, 0, 0, 0, 0, 0, 0, 24, 1, 0, 0, 25, 1, 0, 0, 26, 1, 0, 0, 14, 1, 0, 0, 27, 1, 0, 0, 28, 1, 0, 0, 29, 1, 0, 0, 78, 111, 114, 109, 97, 108, 51, 120, 0, 0, 0, 0, 0, 0, 0, 0, 24, 214, 87, 0, 15, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 30, 1, 0, 0, 31, 1, 0, 0, 32, 1, 0, 0, 33, 1, 0, 0, 0, 0, 0, 0, 34, 1, 0, 0, 35, 1, 0, 0, 36, 1, 0, 0, 0, 0, 0, 0, 37, 1, 0, 0, 38, 1, 0, 0, 39, 1, 0, 0, 0, 0, 0, 0, 40, 1, 0, 0, 41, 1, 0, 0, 42, 1, 0, 0, 30, 1, 0, 0, 43, 1, 0, 0, 44, 1, 0, 0, 45, 1, 0, 0, 46, 1, 0, 0, 47, 1, 0, 0, 48, 1, 0, 0, 49, 1, 0, 0, 0, 0, 0, 0, 50, 1, 0, 0, 51, 1, 0, 0, 52, 1, 0, 0, 0, 0, 0, 0, 53, 1, 0, 0, 54, 1, 0, 0, 55, 1, 0, 0, 0, 0, 0, 0, 56, 1, 0, 0, 57, 1, 0, 0, 58, 1, 0, 0, 46, 1, 0, 0, 59, 1, 0, 0, 60, 1, 0, 0, 61, 1, 0, 0, 84, 86, 50, 120, 0, 0, 0, 0, 216, 214, 87, 0, 14, 1, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 62, 1, 0, 0, 63, 1, 0, 0, 64, 1, 0, 0, 0, 0, 0, 0, 65, 1, 0, 0, 66, 1, 0, 0, 67, 1, 0, 0, 0, 0, 0, 0, 68, 1, 0, 0, 69, 1, 0, 0, 70, 1, 0, 0, 0, 0, 0, 0, 71, 1, 0, 0, 72, 1, 0, 0, 73, 1, 0, 0, 0, 0, 0, 0, 74, 1, 0, 0, 75, 1, 0, 0, 76, 1, 0, 0, 0, 0, 0, 0, 77, 1, 0, 0, 78, 1, 0, 0, 79, 1, 0, 0, 0, 0, 0, 0, 80, 1, 0, 0, 81, 1, 0, 0, 82, 1, 0, 0, 0, 0, 0, 0, 83, 1, 0, 0, 84, 1, 0, 0, 85, 1, 0, 0, 0, 0, 0, 0, 86, 1, 0, 0, 87, 1, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 89, 1, 0, 0, 90, 1, 0, 0, 91, 1, 0, 0, 84, 86, 51, 120, 0, 0, 0, 0, 144, 215, 87, 0, 14, 1, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 92, 1, 0, 0, 93, 1, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 95, 1, 0, 0, 96, 1, 0, 0, 97, 1, 0, 0, 0, 0, 0, 0, 98, 1, 0, 0, 99, 1, 0, 0, 100, 1, 0, 0, 0, 0, 0, 0, 101, 1, 0, 0, 102, 1, 0, 0, 103, 1, 0, 0, 0, 0, 0, 0, 104, 1, 0, 0, 105, 1, 0, 0, 106, 1, 0, 0, 0, 0, 0, 0, 107, 1, 0, 0, 108, 1, 0, 0, 109, 1, 0, 0, 0, 0, 0, 0, 110, 1, 0, 0, 111, 1, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 113, 1, 0, 0, 114, 1, 0, 0, 115, 1, 0, 0, 0, 0, 0, 0, 116, 1, 0, 0, 117, 1, 0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 119, 1, 0, 0, 120, 1, 0, 0, 121, 1, 0, 0, 83, 99, 97, 110, 50, 120, 0, 0, 72, 216, 87, 0, 14, 1, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 122, 1, 0, 0, 123, 1, 0, 0, 124, 1, 0, 0, 0, 0, 0, 0, 125, 1, 0, 0, 126, 1, 0, 0, 127, 1, 0, 0, 0, 0, 0, 0, 128, 1, 0, 0, 129, 1, 0, 0, 130, 1, 0, 0, 0, 0, 0, 0, 131, 1, 0, 0, 132, 1, 0, 0, 133, 1, 0, 0, 0, 0, 0, 0, 134, 1, 0, 0, 135, 1, 0, 0, 136, 1, 0, 0, 0, 0, 0, 0, 137, 1, 0, 0, 138, 1, 0, 0, 139, 1, 0, 0, 0, 0, 0, 0, 140, 1, 0, 0, 141, 1, 0, 0, 142, 1, 0, 0, 0, 0, 0, 0, 143, 1, 0, 0, 144, 1, 0, 0, 145, 1, 0, 0, 0, 0, 0, 0, 146, 1, 0, 0, 147, 1, 0, 0, 148, 1, 0, 0, 0, 0, 0, 0, 149, 1, 0, 0, 150, 1, 0, 0, 151, 1, 0, 0, 83, 99, 97, 110, 51, 120, 0, 0, 0, 217, 87, 0, 14, 1, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 152, 1, 0, 0, 153, 1, 0, 0, 154, 1, 0, 0, 0, 0, 0, 0, 155, 1, 0, 0, 156, 1, 0, 0, 157, 1, 0, 0, 0, 0, 0, 0, 158, 1, 0, 0, 159, 1, 0, 0, 160, 1, 0, 0, 0, 0, 0, 0, 161, 1, 0, 0, 162, 1, 0, 0, 163, 1, 0, 0, 0, 0, 0, 0, 164, 1, 0, 0, 165, 1, 0, 0, 166, 1, 0, 0, 0, 0, 0, 0, 167, 1, 0, 0, 168, 1, 0, 0, 169, 1, 0, 0, 0, 0, 0, 0, 170, 1, 0, 0, 171, 1, 0, 0, 172, 1, 0, 0, 0, 0, 0, 0, 173, 1, 0, 0, 174, 1, 0, 0, 175, 1, 0, 0, 0, 0, 0, 0, 176, 1, 0, 0, 177, 1, 0, 0, 178, 1, 0, 0, 0, 0, 0, 0, 179, 1, 0, 0, 180, 1, 0, 0, 181, 1, 0, 0, 82, 71, 66, 50, 120, 0, 0, 0, 184, 217, 87, 0, 14, 1, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 182, 1, 0, 0, 183, 1, 0, 0, 184, 1, 0, 0, 0, 0, 0, 0, 185, 1, 0, 0, 186, 1, 0, 0, 187, 1, 0, 0, 0, 0, 0, 0, 188, 1, 0, 0, 189, 1, 0, 0, 190, 1, 0, 0, 0, 0, 0, 0, 191, 1, 0, 0, 192, 1, 0, 0, 193, 1, 0, 0, 0, 0, 0, 0, 194, 1, 0, 0, 195, 1, 0, 0, 196, 1, 0, 0, 0, 0, 0, 0, 197, 1, 0, 0, 198, 1, 0, 0, 199, 1, 0, 0, 0, 0, 0, 0, 200, 1, 0, 0, 201, 1, 0, 0, 202, 1, 0, 0, 0, 0, 0, 0, 203, 1, 0, 0, 204, 1, 0, 0, 205, 1, 0, 0, 0, 0, 0, 0, 206, 1, 0, 0, 207, 1, 0, 0, 208, 1, 0, 0, 0, 0, 0, 0, 209, 1, 0, 0, 210, 1, 0, 0, 211, 1, 0, 0, 82, 71, 66, 51, 120, 0, 0, 0, 112, 218, 87, 0, 14, 1, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 212, 1, 0, 0, 213, 1, 0, 0, 214, 1, 0, 0, 0, 0, 0, 0, 215, 1, 0, 0, 216, 1, 0, 0, 217, 1, 0, 0, 0, 0, 0, 0, 218, 1, 0, 0, 219, 1, 0, 0, 220, 1, 0, 0, 0, 0, 0, 0, 221, 1, 0, 0, 222, 1, 0, 0, 223, 1, 0, 0, 0, 0, 0, 0, 224, 1, 0, 0, 225, 1, 0, 0, 226, 1, 0, 0, 0, 0, 0, 0, 227, 1, 0, 0, 228, 1, 0, 0, 229, 1, 0, 0, 0, 0, 0, 0, 230, 1, 0, 0, 231, 1, 0, 0, 232, 1, 0, 0, 0, 0, 0, 0, 233, 1, 0, 0, 234, 1, 0, 0, 235, 1, 0, 0, 0, 0, 0, 0, 236, 1, 0, 0, 237, 1, 0, 0, 238, 1, 0, 0, 0, 0, 0, 0, 239, 1, 0, 0, 240, 1, 0, 0, 241, 1, 0, 0, 65, 100, 118, 77, 97, 109, 101, 50, 120, 0, 0, 0, 0, 0, 0, 0, 40, 219, 87, 0, 15, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 65, 100, 118, 77, 97, 109, 101, 51, 120, 0, 0, 0, 0, 0, 0, 0, 104, 219, 87, 0, 15, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 72, 81, 50, 120, 0, 0, 0, 0, 168, 219, 87, 0, 14, 1, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 72, 81, 51, 120, 0, 0, 0, 0, 224, 219, 87, 0, 14, 1, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 83, 117, 112, 101, 114, 50, 120, 83, 97, 73, 0, 0, 0, 0, 0, 0, 24, 220, 87, 0, 14, 1, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 50, 120, 83, 97, 73, 0, 0, 0, 88, 220, 87, 0, 14, 1, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 83, 117, 112, 101, 114, 69, 97, 103, 108, 101, 0, 0, 0, 0, 0, 0, 144, 220, 87, 0, 14, 1, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 65, 100, 118, 73, 110, 116, 101, 114, 112, 50, 120, 0, 0, 0, 0, 0, 208, 220, 87, 0, 14, 1, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 65, 100, 118, 73, 110, 116, 101, 114, 112, 51, 120, 0, 0, 0, 0, 0, 16, 221, 87, 0, 14, 1, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 5755624);
allocate([255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 66, 111, 120, 32, 37, 115, 44, 32, 67, 112, 117, 32, 115, 112, 101, 101, 100, 58, 32, 109, 97, 120, 32, 37, 51, 100, 37, 37, 32, 99, 121, 99, 108, 101, 115, 44, 32, 70, 114, 97, 109, 101, 115, 107, 105, 112, 32, 37, 50, 100, 44, 32, 80, 114, 111, 103, 114, 97, 109, 58, 32, 37, 56, 115, 0, 0, 0, 0, 0, 48, 46, 55, 52, 0, 0, 0, 0, 68, 79, 83, 66, 111, 120, 32, 37, 115, 44, 32, 67, 112, 117, 32, 115, 112, 101, 101, 100, 58, 32, 37, 56, 100, 32, 99, 121, 99, 108, 101, 115, 44, 32, 70, 114, 97, 109, 101, 115, 107, 105, 112, 32, 37, 50, 100, 44, 32, 80, 114, 111, 103, 114, 97, 109, 58, 32, 37, 56, 115], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 5819728);
allocate([67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 115, 101, 116, 32, 102, 117, 108, 108, 115, 99, 114, 101, 101, 110, 32, 118, 105, 100, 101, 111, 32, 109, 111, 100, 101, 32, 37, 105, 120, 37, 105, 45, 37, 105, 58, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 0, 67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 115, 101, 116, 32, 119, 105, 110, 100, 111, 119, 101, 100, 32, 118, 105, 100, 101, 111, 32, 109, 111, 100, 101, 32, 37, 105, 120, 37, 105, 45, 37, 105, 58, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 68, 76, 58, 67, 97, 110, 39, 116, 32, 115, 101, 116, 32, 112, 97, 108, 101, 116, 116, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 115, 0, 0, 0, 0, 0, 0, 115, 100, 108, 0, 0, 0, 0, 0, 102, 117, 108, 108, 115, 99, 114, 101, 101, 110, 0, 0, 0, 0, 0, 0, 83, 116, 97, 114, 116, 32, 100, 111, 115, 98, 111, 120, 32, 100, 105, 114, 101, 99, 116, 108, 121, 32, 105, 110, 32, 102, 117, 108, 108, 115, 99, 114, 101, 101, 110, 46, 32, 40, 80, 114, 101, 115, 115, 32, 65, 76, 84, 45, 69, 110, 116, 101, 114, 32, 116, 111, 32, 103, 111, 32, 98, 97, 99, 107, 41, 0, 0, 0, 0, 0, 0, 0, 102, 117, 108, 108, 100, 111, 117, 98, 108, 101, 0, 0, 0, 0, 0, 0, 85, 115, 101, 32, 100, 111, 117, 98, 108, 101, 32, 98, 117, 102, 102, 101, 114, 105, 110, 103, 32, 105, 110, 32, 102, 117, 108, 108, 115, 99, 114, 101, 101, 110, 46, 32, 73, 116, 32, 99, 97, 110, 32, 114, 101, 100, 117, 99, 101, 32, 115, 99, 114, 101, 101, 110, 32, 102, 108, 105, 99, 107, 101, 114, 105, 110, 103, 44, 32, 98, 117, 116, 32, 105, 116, 32, 99, 97, 110, 32, 97, 108, 115, 111, 32, 114, 101, 115, 117, 108, 116, 32, 105, 110, 32, 97, 32, 115, 108, 111, 119, 32, 68, 79, 83, 66, 111, 120, 46, 0, 0, 0, 102, 117, 108, 108, 114, 101, 115, 111, 108, 117, 116, 105, 111, 110, 0, 0, 111, 114, 105, 103, 105, 110, 97, 108, 0, 0, 0, 0, 0, 0, 0, 0, 87, 104, 97, 116, 32, 114, 101, 115, 111, 108, 117, 116, 105, 111, 110, 32, 116, 111, 32, 117, 115, 101, 32, 102, 111, 114, 32, 102, 117, 108, 108, 115, 99, 114, 101, 101, 110, 58, 32, 111, 114, 105, 103, 105, 110, 97, 108, 32, 111, 114, 32, 102, 105, 120, 101, 100, 32, 115, 105, 122, 101, 32, 40, 101, 46, 103, 46, 32, 49, 48, 50, 52, 120, 55, 54, 56, 41, 46, 10, 32, 32, 85, 115, 105, 110, 103, 32, 121, 111, 117, 114, 32, 109, 111, 110, 105, 116, 111, 114, 39, 115, 32, 110, 97, 116, 105, 118, 101, 32, 114, 101, 115, 111, 108, 117, 116, 105, 111, 110, 32, 119, 105, 116, 104, 32, 97, 115, 112, 101, 99, 116, 61, 116, 114, 117, 101, 32, 109, 105, 103, 104, 116, 32, 103, 105, 118, 101, 32, 116, 104, 101, 32, 98, 101, 115, 116, 32, 114, 101, 115, 117, 108, 116, 115, 46, 10, 32, 32, 73, 102, 32, 121, 111, 117, 32, 101, 110, 100, 32, 117, 112, 32, 119, 105, 116, 104, 32, 115, 109, 97, 108, 108, 32, 119, 105, 110, 100, 111, 119, 32, 111, 110, 32, 97, 32, 108, 97, 114, 103, 101, 32, 115, 99, 114, 101, 101, 110, 44, 32, 116, 114, 121, 32, 97, 110, 32, 111, 117, 116, 112, 117, 116, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 32, 102, 114, 111, 109, 32, 115, 117, 114, 102, 97, 99, 101, 46, 0, 0, 0, 0, 0, 0, 0, 0, 119, 105, 110, 100, 111, 119, 114, 101, 115, 111, 108, 117, 116, 105, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 83, 99, 97, 108, 101, 32, 116, 104, 101, 32, 119, 105, 110, 100, 111, 119, 32, 116, 111, 32, 116, 104, 105, 115, 32, 115, 105, 122, 101, 32, 73, 70, 32, 116, 104, 101, 32, 111, 117, 116, 112, 117, 116, 32, 100, 101, 118, 105, 99, 101, 32, 115, 117, 112, 112, 111, 114, 116, 115, 32, 104, 97, 114, 100, 119, 97, 114, 101, 32, 115, 99, 97, 108, 105, 110, 103, 46, 10, 32, 32, 40, 111, 117, 116, 112, 117, 116, 61, 115, 117, 114, 102, 97, 99, 101, 32, 100, 111, 101, 115, 32, 110, 111, 116, 33, 41, 0, 0, 0, 0, 0, 0, 115, 117, 114, 102, 97, 99, 101, 0, 111, 118, 101, 114, 108, 97, 121, 0, 224, 17, 89, 0, 232, 17, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 117, 116, 112, 117, 116, 0, 0, 87, 104, 97, 116, 32, 118, 105, 100, 101, 111, 32, 115, 121, 115, 116, 101, 109, 32, 116, 111, 32, 117, 115, 101, 32, 102, 111, 114, 32, 111, 117, 116, 112, 117, 116, 46, 0, 0, 0, 0, 97, 117, 116, 111, 108, 111, 99, 107, 0, 0, 0, 0, 0, 0, 0, 0, 77, 111, 117, 115, 101, 32, 119, 105, 108, 108, 32, 97, 117, 116, 111, 109, 97, 116, 105, 99, 97, 108, 108, 121, 32, 108, 111, 99, 107, 44, 32, 105, 102, 32, 121, 111, 117, 32, 99, 108, 105, 99, 107, 32, 111, 110, 32, 116, 104, 101, 32, 115, 99, 114, 101, 101, 110, 46, 32, 40, 80, 114, 101, 115, 115, 32, 67, 84, 82, 76, 45, 70, 49, 48, 32, 116, 111, 32, 117, 110, 108, 111, 99, 107, 41, 0, 0, 0, 115, 101, 110, 115, 105, 116, 105, 118, 105, 116, 121, 0, 0, 0, 0, 0, 77, 111, 117, 115, 101, 32, 115, 101, 110, 115, 105, 116, 105, 118, 105, 116, 121, 46, 0, 0, 0, 0, 0, 0, 119, 97, 105, 116, 111, 110, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 87, 97, 105, 116, 32, 98, 101, 102, 111, 114, 101, 32, 99, 108, 111, 115, 105, 110, 103, 32, 116, 104, 101, 32, 99, 111, 110, 115, 111, 108, 101, 32, 105, 102, 32, 100, 111, 115, 98, 111, 120, 32, 104, 97, 115, 32, 97, 110, 32, 101, 114, 114, 111, 114, 46, 0, 112, 114, 105, 111, 114, 105, 116, 121, 0, 0, 0, 0, 0, 0, 0, 0, 104, 105, 103, 104, 101, 114, 44, 110, 111, 114, 109, 97, 108, 0, 0, 0, 80, 114, 105, 111, 114, 105, 116, 121, 32, 108, 101, 118, 101, 108, 115, 32, 102, 111, 114, 32, 100, 111, 115, 98, 111, 120, 46, 32, 83, 101, 99, 111, 110, 100, 32, 101, 110, 116, 114, 121, 32, 98, 101, 104, 105, 110, 100, 32, 116, 104, 101, 32, 99, 111, 109, 109, 97, 32, 105, 115, 32, 102, 111, 114, 32, 119, 104, 101, 110, 32, 100, 111, 115, 98, 111, 120, 32, 105, 115, 32, 110, 111, 116, 32, 102, 111, 99, 117, 115, 101, 100, 47, 109, 105, 110, 105, 109, 105, 122, 101, 100, 46, 10, 32, 32, 112, 97, 117, 115, 101, 32, 105, 115, 32, 111, 110, 108, 121, 32, 118, 97, 108, 105, 100, 32, 102, 111, 114, 32, 116, 104, 101, 32, 115, 101, 99, 111, 110, 100, 32, 101, 110, 116, 114, 121, 46, 0, 0, 0, 0, 0, 0, 108, 111, 119, 101, 115, 116, 0, 0, 108, 111, 119, 101, 114, 0, 0, 0, 104, 105, 103, 104, 101, 114, 0, 0, 104, 105, 103, 104, 101, 115, 116, 0, 112, 97, 117, 115, 101, 0, 0, 0, 97, 99, 116, 105, 118, 101, 0, 0, 192, 19, 89, 0, 200, 19, 89, 0, 168, 251, 155, 1, 208, 19, 89, 0, 216, 19, 89, 0, 224, 19, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 110, 97, 99, 116, 105, 118, 101, 0, 0, 0, 0, 0, 0, 0, 0, 109, 97, 112, 112, 101, 114, 102, 105, 108, 101, 0, 0, 0, 0, 0, 0, 109, 97, 112, 112, 101, 114, 45, 48, 46, 55, 52, 46, 109, 97, 112, 0, 70, 105, 108, 101, 32, 117, 115, 101, 100, 32, 116, 111, 32, 108, 111, 97, 100, 47, 115, 97, 118, 101, 32, 116, 104, 101, 32, 107, 101, 121, 47, 101, 118, 101, 110, 116, 32, 109, 97, 112, 112, 105, 110, 103, 115, 32, 102, 114, 111, 109, 46, 32, 82, 101, 115, 101, 116, 109, 97, 112, 112, 101, 114, 32, 111, 110, 108, 121, 32, 119, 111, 114, 107, 115, 32, 119, 105, 116, 104, 32, 116, 104, 101, 32, 100, 101, 102, 97, 117, 108, 32, 118, 97, 108, 117, 101, 46, 0, 0, 0, 0, 0, 0, 0, 117, 115, 101, 115, 99, 97, 110, 99, 111, 100, 101, 115, 0, 0, 0, 0, 65, 118, 111, 105, 100, 32, 117, 115, 97, 103, 101, 32, 111, 102, 32, 115, 121, 109, 107, 101, 121, 115, 44, 32, 109, 105, 103, 104, 116, 32, 110, 111, 116, 32, 119, 111, 114, 107, 32, 111, 110, 32, 97, 108, 108, 32, 111, 112, 101, 114, 97, 116, 105, 110, 103, 32, 115, 121, 115, 116, 101, 109, 115, 46, 0, 0, 0, 0, 0, 0, 0, 0, 34, 83, 68, 76, 46, 100, 101, 102, 97, 117, 108, 116, 115, 46, 99, 111, 112, 121, 79, 110, 76, 111, 99, 107, 32, 61, 32, 102, 97, 108, 115, 101, 59, 32, 83, 68, 76, 46, 100, 101, 102, 97, 117, 108, 116, 115, 46, 100, 105, 115, 99, 97, 114, 100, 79, 110, 76, 111, 99, 107, 32, 61, 32, 116, 114, 117, 101, 59, 32, 83, 68, 76, 46, 100, 101, 102, 97, 117, 108, 116, 115, 46, 111, 112, 97, 113, 117, 101, 70, 114, 111, 110, 116, 66, 117, 102, 102, 101, 114, 32, 61, 32, 102, 97, 108, 115, 101, 59, 34, 0, 0, 0, 100, 111, 115, 98, 111, 120, 0, 0, 45, 99, 111, 110, 102, 0, 0, 0, 46, 47, 100, 111, 115, 98, 111, 120, 46, 99, 111, 110, 102, 0, 0, 0, 45, 101, 100, 105, 116, 99, 111, 110, 102, 0, 0, 0, 0, 0, 0, 0, 45, 111, 112, 101, 110, 99, 97, 112, 116, 117, 114, 101, 115, 0, 0, 0, 45, 101, 114, 97, 115, 101, 99, 111, 110, 102, 0, 0, 0, 0, 0, 0, 45, 114, 101, 115, 101, 116, 99, 111, 110, 102, 0, 0, 0, 0, 0, 0, 45, 101, 114, 97, 115, 101, 109, 97, 112, 112, 101, 114, 0, 0, 0, 0, 45, 114, 101, 115, 101, 116, 109, 97, 112, 112, 101, 114, 0, 0, 0, 0, 45, 118, 101, 114, 115, 105, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 45, 45, 118, 101, 114, 115, 105, 111, 110, 0, 0, 0, 0, 0, 0, 0, 10, 68, 79, 83, 66, 111, 120, 32, 118, 101, 114, 115, 105, 111, 110, 32, 37, 115, 44, 32, 99, 111, 112, 121, 114, 105, 103, 104, 116, 32, 50, 48, 48, 50, 45, 50, 48, 49, 48, 32, 68, 79, 83, 66, 111, 120, 32, 84, 101, 97, 109, 46, 10, 10, 0, 0, 45, 112, 114, 105, 110, 116, 99, 111, 110, 102, 0, 0, 0, 0, 0, 0, 68, 79, 83, 66, 111, 120, 32, 118, 101, 114, 115, 105, 111, 110, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 99, 51, 56, 98, 51, 53, 100, 32, 98, 117, 105, 108, 116, 32, 119, 105, 116, 104, 32, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 32, 49, 46, 50, 54, 46, 49, 32, 50, 49, 52, 53, 99, 99, 57, 0, 0, 0, 0, 67, 111, 112, 121, 114, 105, 103, 104, 116, 32, 50, 48, 48, 50, 45, 50, 48, 49, 48, 32, 68, 79, 83, 66, 111, 120, 32, 84, 101, 97, 109, 44, 32, 112, 117, 98, 108, 105, 115, 104, 101, 100, 32, 117, 110, 100, 101, 114, 32, 71, 78, 85, 32, 71, 80, 76, 46, 0, 0, 0, 0, 0, 0, 0, 45, 45, 45, 0, 0, 0, 0, 0, 83, 68, 76, 95, 68, 73, 83, 65, 66, 76, 69, 95, 76, 79, 67, 75, 95, 75, 69, 89, 83, 61, 49, 0, 67, 97, 110, 39, 116, 32, 105, 110, 105, 116, 32, 83, 68, 76, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 70, 97, 105, 108, 101, 100, 32, 116, 111, 32, 105, 110, 105, 116, 32, 106, 111, 121, 115, 116, 105, 99, 107, 32, 115, 117, 112, 112, 111, 114, 116, 0, 45, 117, 115, 101, 114, 99, 111, 110, 102, 0, 0, 0, 0, 0, 0, 0, 67, 79, 78, 70, 73, 71, 58, 32, 71, 101, 110, 101, 114, 97, 116, 105, 110, 103, 32, 100, 101, 102, 97, 117, 108, 116, 32, 99, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 46, 10, 87, 114, 105, 116, 105, 110, 103, 32, 105, 116, 32, 116, 111, 32, 37, 115, 0, 0, 0, 0, 0, 0, 100, 111, 115, 98, 111, 120, 46, 99, 111, 110, 102, 0, 0, 0, 0, 0, 67, 79, 78, 70, 73, 71, 58, 32, 85, 115, 105, 110, 103, 32, 100, 101, 102, 97, 117, 108, 116, 32, 115, 101, 116, 116, 105, 110, 103, 115, 46, 32, 67, 114, 101, 97, 116, 101, 32, 97, 32, 99, 111, 110, 102, 105, 103, 102, 105, 108, 101, 32, 116, 111, 32, 99, 104, 97, 110, 103, 101, 32, 116, 104, 101, 109, 0, 0, 0, 0, 0, 0, 45, 102, 117, 108, 108, 115, 99, 114, 101, 101, 110, 0, 0, 0, 0, 0, 45, 115, 116, 97, 114, 116, 109, 97, 112, 112, 101, 114, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 116, 114, 105, 101, 100, 32, 99, 114, 101, 97, 116, 105, 110, 103, 32, 37, 115, 46, 32, 98, 117, 116, 32, 102, 97, 105, 108, 101, 100, 0, 0, 0, 80, 82, 79, 80, 95, 78, 79, 84, 95, 69, 88, 73, 83, 84, 0, 0, 37, 115, 32, 100, 111, 101, 115, 110, 39, 116, 32, 101, 120, 105, 115, 116, 115, 32, 111, 114, 32, 105, 115, 110, 39, 116, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 99, 97, 110, 39, 116, 32, 102, 105, 110, 100, 32, 102, 105, 108, 101, 109, 97, 110, 97, 103, 101, 114, 32, 37, 115, 10, 0, 0, 0, 0, 0, 0, 116, 114, 105, 101, 100, 32, 99, 114, 101, 97, 116, 105, 110, 103, 32, 37, 115, 46, 32, 98, 117, 116, 32, 102, 97, 105, 108, 101, 100, 46, 10, 0, 83, 68, 76, 58, 85, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 111, 117, 116, 112, 117, 116, 32, 100, 101, 118, 105, 99, 101, 32, 37, 115, 44, 32, 115, 119, 105, 116, 99, 104, 105, 110, 103, 32, 98, 97, 99, 107, 32, 116, 111, 32, 115, 117, 114, 102, 97, 99, 101, 0, 0, 0, 0, 0, 67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 32, 118, 105, 100, 101, 111, 58, 32, 37, 115, 0, 0, 83, 68, 76, 58, 89, 111, 117, 32, 97, 114, 101, 32, 114, 117, 110, 110, 105, 110, 103, 32, 105, 110, 32, 50, 52, 32, 98, 112, 112, 32, 109, 111, 100, 101, 44, 32, 116, 104, 105, 115, 32, 119, 105, 108, 108, 32, 115, 108, 111, 119, 32, 100, 111, 119, 110, 32, 116, 104, 105, 110, 103, 115, 33, 0, 68, 79, 83, 66, 111, 120, 0, 0, 115, 104, 117, 116, 100, 111, 119, 110, 0, 0, 0, 0, 0, 0, 0, 0, 83, 104, 117, 116, 68, 111, 119, 110, 0, 0, 0, 0, 0, 0, 0, 0, 99, 97, 112, 109, 111, 117, 115, 101, 0, 0, 0, 0, 0, 0, 0, 0, 67, 97, 112, 32, 77, 111, 117, 115, 101, 0, 0, 0, 0, 0, 0, 0, 102, 117, 108, 108, 115, 99, 114, 0, 70, 117, 108, 108, 115, 99, 114, 101, 101, 110, 0, 0, 0, 0, 0, 0, 80, 97, 117, 115, 101, 0, 0, 0, 99, 97, 110, 39, 116, 32, 102, 105, 110, 100, 32, 101, 100, 105, 116, 111, 114, 40, 115, 41, 32, 115, 112, 101, 99, 105, 102, 105, 101, 100, 32, 97, 116, 32, 116, 104, 101, 32, 99, 111, 109, 109, 97, 110, 100, 32, 108, 105, 110, 101, 46, 0, 0, 0, 0, 0, 67, 111, 110, 102, 105, 103, 32, 115, 121, 115, 116, 101, 109, 32, 109, 101, 115, 115, 101, 100, 32, 117, 112, 46, 0, 0, 0, 0, 0, 0, 0, 0, 87, 97, 114, 110, 105, 110, 103, 58, 32, 100, 111, 115, 98, 111, 120, 46, 99, 111, 110, 102, 32, 101, 120, 105, 115, 116, 115, 32, 105, 110, 32, 99, 117, 114, 114, 101, 110, 116, 32, 119, 111, 114, 107, 105, 110, 103, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 46, 10, 84, 104, 105, 115, 32, 119, 105, 108, 108, 32, 111, 118, 101, 114, 114, 105, 100, 101, 32, 116, 104, 101, 32, 99, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 32, 102, 105, 108, 101, 32, 97, 116, 32, 114, 117, 110, 116, 105, 109, 101, 46, 0, 87, 97, 114, 110, 105, 110, 103, 58, 32, 100, 111, 115, 98, 111, 120, 46, 99, 111, 110, 102, 32, 101, 120, 105, 115, 116, 115, 32, 105, 110, 32, 99, 117, 114, 114, 101, 110, 116, 32, 119, 111, 114, 107, 105, 110, 103, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 46, 10, 75, 101, 121, 109, 97, 112, 112, 105, 110, 103, 32, 109, 105, 103, 104, 116, 32, 110, 111, 116, 32, 98, 101, 32, 112, 114, 111, 112, 101, 114, 108, 121, 32, 114, 101, 115, 101, 116, 46, 10, 80, 108, 101, 97, 115, 101, 32, 114, 101, 115, 101, 116, 32, 99, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 32, 97, 115, 32, 119, 101, 108, 108, 32, 97, 110, 100, 32, 100, 101, 108, 101, 116, 101, 32, 116, 104, 101, 32, 100, 111, 115, 98, 111, 120, 46, 99, 111, 110, 102, 46, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 66, 111, 120, 32, 105, 115, 32, 119, 114, 105, 116, 116, 101, 110, 32, 98, 121, 32, 116, 104, 101, 32, 68, 79, 83, 66, 111, 120, 32, 84, 101, 97, 109, 32, 40, 83, 101, 101, 32, 65, 85, 84, 72, 79, 82, 83, 32, 102, 105, 108, 101, 41, 41, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 66, 111, 120, 32, 99, 111, 109, 101, 115, 32, 119, 105, 116, 104, 32, 65, 66, 83, 79, 76, 85, 84, 69, 76, 89, 32, 78, 79, 32, 87, 65, 82, 82, 65, 78, 84, 89, 46, 32, 32, 84, 104, 105, 115, 32, 105, 115, 32, 102, 114, 101, 101, 32, 115, 111, 102, 116, 119, 97, 114, 101, 44, 0, 0, 0, 0, 0, 0, 0, 97, 110, 100, 32, 121, 111, 117, 32, 97, 114, 101, 32, 119, 101, 108, 99, 111, 109, 101, 32, 116, 111, 32, 114, 101, 100, 105, 115, 116, 114, 105, 98, 117, 116, 101, 32, 105, 116, 32, 117, 110, 100, 101, 114, 32, 99, 101, 114, 116, 97, 105, 110, 32, 99, 111, 110, 100, 105, 116, 105, 111, 110, 115, 59, 0, 0, 0, 0, 0, 0, 0, 0, 112, 108, 101, 97, 115, 101, 32, 114, 101, 97, 100, 32, 116, 104, 101, 32, 67, 79, 80, 89, 73, 78, 71, 32, 102, 105, 108, 101, 32, 116, 104, 111, 114, 111, 117, 103, 104, 108, 121, 32, 98, 101, 102, 111, 114, 101, 32, 100, 111, 105, 110, 103, 32, 115, 111, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 3, 2, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 64, 29, 89, 0, 0, 0, 0, 0, 224, 34, 89, 0, 0, 0, 0, 0, 96, 34, 89, 0, 56, 29, 89], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 5836464);
allocate([72, 34, 89, 0, 242, 1, 0, 0, 243, 1, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 109, 105, 100, 105, 100, 101, 118, 105, 99, 101, 0, 0, 0, 0, 0, 0, 109, 105, 100, 105, 99, 111, 110, 102, 105, 103, 0, 0, 0, 0, 0, 0, 100, 101, 102, 97, 117, 108, 116, 0, 77, 73, 68, 73, 58, 67, 97, 110, 39, 116, 32, 111, 112, 101, 110, 32, 100, 101, 118, 105, 99, 101, 58, 37, 115, 32, 119, 105, 116, 104, 32, 99, 111, 110, 102, 105, 103, 58, 37, 115, 46, 0, 0, 0, 0, 0, 0, 0, 77, 73, 68, 73, 58, 79, 112, 101, 110, 101, 100, 32, 100, 101, 118, 105, 99, 101, 58, 37, 115, 0, 0, 0, 77, 73, 68, 73, 58, 67, 97, 110, 39, 116, 32, 102, 105, 110, 100, 32, 100, 101, 118, 105, 99, 101, 58, 37, 115, 44, 32, 102, 105, 110, 100, 105, 110, 103, 32, 100, 101, 102, 97, 117, 108, 116, 32, 104, 97, 110, 100, 108, 101, 114, 46, 0, 0, 0, 0, 0, 52, 77, 73, 68, 73, 0, 0, 0, 32, 82, 202, 1, 64, 34, 89, 0, 120, 40, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 34, 89, 0, 43, 0, 0, 0, 244, 1, 0, 0, 58, 0, 0, 0, 5, 0, 0, 0, 54, 0, 0, 0, 245, 1, 0, 0, 246, 1, 0, 0, 0, 0, 0, 0, 49, 53, 77, 105, 100, 105, 72, 97, 110, 100, 108, 101, 114, 95, 111, 115, 115, 0, 0, 0, 0, 0, 0, 0, 49, 49, 77, 105, 100, 105, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 64, 81, 202, 1, 152, 34, 89, 0, 32, 82, 202, 1, 128, 34, 89, 0, 168, 34, 89, 0, 0, 0, 0, 0, 111, 115, 115, 0, 0, 0, 0, 0, 47, 100, 101, 118, 47, 115, 101, 113, 117, 101, 110, 99, 101, 114, 0, 0, 0, 0, 0, 0, 168, 34, 89, 0, 44, 0, 0, 0, 247, 1, 0, 0, 59, 0, 0, 0, 6, 0, 0, 0, 55, 0, 0, 0, 245, 1, 0, 0, 248, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 207, 243, 252, 0, 0, 0, 0, 127, 191, 223, 239, 247, 251, 253, 254, 0, 0, 0, 0, 0, 0, 0, 0, 75, 101, 121, 98, 111, 97, 114, 100, 0, 0, 0, 0, 0, 0, 0, 0, 73, 82, 81, 32, 49, 32, 75, 101, 121, 98, 111, 97, 114, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 67, 74, 114, 32, 107, 98, 32, 105, 114, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 1, 27, 1, 27, 1, 240, 1, 49, 2, 33, 2, 0, 0, 0, 120, 50, 3, 64, 3, 0, 3, 0, 121, 51, 4, 35, 4, 0, 0, 0, 122, 52, 5, 36, 5, 0, 0, 0, 123, 53, 6, 37, 6, 0, 0, 0, 124, 54, 7, 94, 7, 30, 7, 0, 125, 55, 8, 38, 8, 0, 0, 0, 126, 56, 9, 42, 9, 0, 0, 0, 127, 57, 10, 40, 10, 0, 0, 0, 128, 48, 11, 41, 11, 0, 0, 0, 129, 45, 12, 95, 12, 31, 12, 0, 130, 61, 13, 43, 13, 0, 0, 0, 131, 8, 14, 8, 14, 127, 14, 240, 14, 9, 15, 0, 15, 0, 148, 0, 0, 113, 16, 81, 16, 17, 16, 0, 16, 119, 17, 87, 17, 23, 17, 0, 17, 101, 18, 69, 18, 5, 18, 0, 18, 114, 19, 82, 19, 18, 19, 0, 19, 116, 20, 84, 20, 20, 20, 0, 20, 121, 21, 89, 21, 25, 21, 0, 21, 117, 22, 85, 22, 21, 22, 0, 22, 105, 23, 73, 23, 9, 23, 0, 23, 111, 24, 79, 24, 15, 24, 0, 24, 112, 25, 80, 25, 16, 25, 0, 25, 91, 26, 123, 26, 27, 26, 240, 26, 93, 27, 125, 27, 29, 27, 240, 27, 13, 28, 13, 28, 10, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 30, 65, 30, 1, 30, 0, 30, 115, 31, 83, 31, 19, 31, 0, 31, 100, 32, 68, 32, 4, 32, 0, 32, 102, 33, 70, 33, 6, 33, 0, 33, 103, 34, 71, 34, 7, 34, 0, 34, 104, 35, 72, 35, 8, 35, 0, 35, 106, 36, 74, 36, 10, 36, 0, 36, 107, 37, 75, 37, 11, 37, 0, 37, 108, 38, 76, 38, 12, 38, 0, 38, 59, 39, 58, 39, 0, 0, 240, 39, 39, 40, 34, 40, 0, 0, 240, 40, 96, 41, 126, 41, 0, 0, 240, 41, 0, 0, 0, 0, 0, 0, 0, 0, 92, 43, 124, 43, 28, 43, 240, 43, 122, 44, 90, 44, 26, 44, 0, 44, 120, 45, 88, 45, 24, 45, 0, 45, 99, 46, 67, 46, 3, 46, 0, 46, 118, 47, 86, 47, 22, 47, 0, 47, 98, 48, 66, 48, 2, 48, 0, 48, 110, 49, 78, 49, 14, 49, 0, 49, 109, 50, 77, 50, 13, 50, 0, 50, 44, 51, 60, 51, 0, 0, 240, 51, 46, 52, 62, 52, 0, 0, 240, 52, 47, 53, 63, 53, 0, 0, 240, 53, 0, 0, 0, 0, 0, 0, 0, 0, 42, 55, 42, 55, 0, 150, 240, 55, 0, 0, 0, 0, 0, 0, 0, 0, 32, 57, 32, 57, 32, 57, 32, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 84, 0, 94, 0, 104, 0, 60, 0, 85, 0, 95, 0, 105, 0, 61, 0, 86, 0, 96, 0, 106, 0, 62, 0, 87, 0, 97, 0, 107, 0, 63, 0, 88, 0, 98, 0, 108, 0, 64, 0, 89, 0, 99, 0, 109, 0, 65, 0, 90, 0, 100, 0, 110, 0, 66, 0, 91, 0, 101, 0, 111, 0, 67, 0, 92, 0, 102, 0, 112, 0, 68, 0, 93, 0, 103, 0, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 55, 71, 0, 119, 7, 0, 0, 72, 56, 72, 0, 141, 8, 0, 0, 73, 57, 73, 0, 132, 9, 0, 45, 74, 45, 74, 0, 142, 240, 74, 0, 75, 52, 75, 0, 115, 4, 0, 240, 76, 53, 76, 0, 143, 5, 0, 0, 77, 54, 77, 0, 116, 6, 0, 43, 78, 43, 78, 0, 144, 240, 78, 0, 79, 49, 79, 0, 117, 1, 0, 0, 80, 50, 80, 0, 145, 2, 0, 0, 81, 51, 81, 0, 118, 3, 0, 0, 82, 48, 82, 0, 146, 0, 0, 0, 83, 46, 83, 0, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 86, 124, 86, 0, 0, 0, 0, 0, 133, 0, 135, 0, 137, 0, 139, 0, 134, 0, 136, 0, 138, 0, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 63, 255, 31, 255, 15, 255, 7, 255, 3, 255, 1, 255, 0, 127, 0, 63, 0, 31, 0, 255, 1, 255, 0, 255, 48, 127, 248, 127, 248, 255, 252, 0, 0, 0, 64, 0, 96, 0, 112, 0, 120, 0, 124, 0, 126, 0, 127, 128, 127, 0, 124, 0, 108, 0, 70, 0, 6, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 111, 117, 115, 101, 0, 0, 0, 77, 111, 117, 115, 101, 66, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 110, 116, 32, 55, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 110, 116, 32, 55, 52, 32, 114, 101, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 115, 50, 32, 98, 105, 111, 115, 32, 99, 97, 108, 108, 98, 97, 99, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 69, 83, 65, 0, 0, 0, 0, 83, 51, 32, 73, 110, 99, 111, 114, 112, 111, 114, 97, 116, 101, 100, 46, 32, 84, 114, 105, 111, 54, 52, 0, 68, 79, 83, 66, 111, 120, 32, 68, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116, 32, 84, 101, 97, 109, 0, 68, 79, 83, 66, 111, 120, 32, 45, 32, 84, 104, 101, 32, 68, 79, 83, 32, 69, 109, 117, 108, 97, 116, 111, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 69, 83, 65, 32, 82, 101, 97, 108, 32, 83, 101, 116, 32, 87, 105, 110, 100, 111, 119, 0, 0, 0, 0, 86, 69, 83, 65, 32, 80, 77, 32, 83, 101, 116, 32, 87, 105, 110, 100, 111, 119, 0, 0, 0, 0, 0, 0, 86, 69, 83, 65, 32, 80, 77, 32, 83, 101, 116, 32, 83, 116, 97, 114, 116, 0, 0, 0, 0, 0, 0, 0, 86, 69, 83, 65, 32, 80, 77, 32, 83, 101, 116, 32, 80, 97, 108, 101, 116, 116, 101], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 5841276);
allocate([152, 70, 89, 0, 1, 0, 0, 0, 249, 1, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 12, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 49, 48, 100, 101, 118, 105, 99, 101, 95, 69, 77, 77, 0, 0, 0, 0, 32, 82, 202, 1, 136, 70, 89, 0, 72, 83, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 72, 89, 0, 250, 1, 0, 0, 251, 1, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 73, 110, 116, 32, 52, 98, 32, 118, 100, 109, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 77, 83, 32, 100, 105, 115, 97, 98, 108, 101, 100, 32, 102, 111, 114, 32, 80, 67, 74, 114, 32, 109, 97, 99, 104, 105, 110, 101, 0, 0, 0, 69, 77, 77, 88, 88, 88, 88, 48, 0, 0, 0, 0, 0, 0, 0, 0, 73, 110, 116, 32, 54, 55, 32, 101, 109, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 67, 80, 73, 32, 80, 77, 0, 86, 56, 54, 32, 77, 111, 110, 105, 116, 111, 114, 0, 0, 0, 0, 0, 51, 69, 77, 83, 0, 0, 0, 0, 32, 82, 202, 1, 96, 72, 89, 0, 120, 40, 5, 0, 0, 0, 0, 0, 73, 110, 118, 97, 108, 105, 100, 32, 111, 112, 99, 111, 100, 101, 32, 48, 120, 48, 102, 32, 48, 120, 50, 48, 32, 37, 120, 32, 99, 97, 117, 115, 101, 100, 32, 97, 32, 112, 114, 111, 116, 101, 99, 116, 105, 111, 110, 32, 102, 97, 117, 108, 116, 33, 0, 0, 73, 110, 118, 97, 108, 105, 100, 32, 111, 112, 99, 111, 100, 101, 32, 48, 120, 48, 102, 32, 48, 120, 50, 50, 32, 37, 120, 32, 99, 97, 117, 115, 101, 100, 32, 97, 32, 112, 114, 111, 116, 101, 99, 116, 105, 111, 110, 32, 102, 97, 117, 108, 116, 33, 0, 0, 85, 110, 104, 97, 110, 100, 108, 101, 100, 32, 111, 112, 99, 111, 100, 101, 32, 48, 120, 48, 102, 32, 37, 120, 32, 99, 97, 117, 115, 101, 100, 32, 97, 32, 112, 114, 111, 116, 101, 99, 116, 105, 111, 110, 32, 102, 97, 117, 108, 116, 33, 0, 0, 0, 0, 0, 85, 110, 104, 97, 110, 100, 108, 101, 100, 32, 111, 112, 99, 111, 100, 101, 32, 37, 120, 32, 99, 97, 117, 115, 101, 100, 32, 97, 32, 112, 114, 111, 116, 101, 99, 116, 105, 111, 110, 32, 102, 97, 117, 108, 116, 33, 0, 0, 86, 67, 80, 73, 58, 67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 108, 111, 97, 100, 32, 76, 68, 84, 0, 86, 67, 80, 73, 58, 67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 108, 111, 97, 100, 32, 84, 82, 0, 0, 69, 77, 83, 58, 83, 121, 115, 116, 101, 109, 32, 104, 97, 110, 100, 108, 101, 32, 109, 101, 109, 111, 114, 121, 32, 97, 108, 108, 111, 99, 97, 116, 105, 111, 110, 32, 102, 97, 105, 108, 117, 114, 101, 0, 0, 0, 0, 0, 86, 67, 80, 73, 58, 67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 108, 111, 97, 100, 32, 76, 68, 84, 32, 119, 105, 116, 104, 32, 37, 120, 0, 86, 67, 80, 73, 58, 67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 108, 111, 97, 100, 32, 84, 82, 32, 119, 105, 116, 104, 32, 37, 120, 0, 0, 69, 77, 83, 58, 77, 101, 109, 111, 114, 121, 32, 97, 108, 108, 111, 99, 97, 116, 105, 111, 110, 32, 102, 97, 105, 108, 117, 114, 101, 32, 100, 117, 114, 105, 110, 103, 32, 114, 101, 97, 108, 108, 111, 99, 97, 116, 105, 111, 110, 0, 0, 0, 0, 0, 0, 0, 69, 77, 83, 58, 77, 101, 109, 111, 114, 121, 32, 97, 108, 108, 111, 99, 97, 116, 105, 111, 110, 32, 102, 97, 105, 108, 117, 114, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 110, 116, 32, 49, 48, 32, 118, 105, 100, 101, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 66, 73, 79, 83, 32, 82, 79, 77, 32, 118, 101, 114, 115, 105, 111, 110, 32, 48, 50, 46, 48, 48, 46, 48, 48, 13, 10, 67, 111, 109, 112, 97, 116, 105, 98, 105, 108, 105, 116, 121, 32, 83, 111, 102, 116, 119, 97, 114, 101, 13, 10, 67, 111, 112, 121, 114, 105, 103, 104, 116, 32, 40, 67, 41, 32, 49, 57, 56, 52, 44, 49, 57, 56, 53, 44, 49, 57, 56, 54, 44, 49, 57, 56, 55, 13, 10, 80, 104, 111, 101, 110, 105, 120, 32, 83, 111, 102, 116, 119, 97, 114, 101, 32, 65, 115, 115, 111, 99, 105, 97, 116, 101, 115, 32, 76, 116, 100, 46, 13, 10, 97, 110, 100, 32, 84, 97, 110, 100, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 52, 77, 66, 32, 109, 101, 109, 111, 114, 121, 32, 108, 105, 109, 105, 116, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 78, 89, 0, 252, 1, 0, 0, 253, 1, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 120, 109, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 77, 83, 32, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 117, 109, 98, 0, 0, 0, 0, 0, 101, 109, 115, 0, 0, 0, 0, 0, 51, 88, 77, 83, 0, 0, 0, 0, 32, 82, 202, 1, 0, 78, 89, 0, 120, 40, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 24, 8, 0, 64, 9, 0, 0, 2, 99, 45, 39, 40, 144, 43, 128, 191, 31, 0, 193, 0, 0, 0, 0, 0, 0, 156, 142, 143, 20, 0, 150, 185, 162, 255, 0, 19, 21, 23, 2, 4, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 1, 0, 15, 0, 0, 0, 0, 0, 0, 32, 15, 15, 255, 40, 24, 8, 0, 64, 9, 0, 0, 2, 99, 45, 39, 40, 144, 43, 128, 191, 31, 0, 193, 0, 0, 0, 0, 0, 0, 156, 142, 143, 20, 0, 150, 185, 162, 255, 0, 19, 21, 23, 2, 4, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 1, 0, 15, 0, 0, 0, 0, 0, 0, 32, 15, 15, 255, 80, 24, 8, 0, 64, 9, 15, 0, 2, 99, 95, 79, 80, 130, 84, 128, 191, 31, 0, 193, 0, 0, 0, 0, 0, 0, 156, 142, 143, 40, 0, 150, 185, 194, 255, 0, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 15, 15, 255, 80, 24, 16, 0, 16, 0, 15, 0, 7, 102, 95, 79, 80, 130, 85, 129, 191, 31, 0, 79, 13, 14, 0, 0, 0, 0, 156, 142, 143, 40, 15, 150, 185, 163, 255, 0, 1, 2, 3, 4, 5, 20, 7, 56, 57, 58, 59, 60, 61, 62, 63, 12, 0, 15, 8, 0, 0, 0, 0, 0, 16, 10, 15, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 24, 8, 0, 32, 9, 15, 0, 2, 99, 45, 39, 40, 144, 43, 128, 191, 31, 0, 192, 0, 0, 0, 0, 0, 0, 156, 142, 143, 20, 0, 150, 185, 227, 255, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 5, 15, 255, 80, 24, 8, 0, 64, 1, 15, 0, 2, 99, 95, 79, 80, 130, 84, 128, 191, 31, 0, 192, 0, 0, 0, 0, 0, 0, 156, 142, 143, 40, 0, 150, 185, 227, 255, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 5, 15, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 24, 14, 0, 128, 1, 15, 0, 2, 162, 95, 79, 80, 130, 84, 128, 191, 31, 0, 64, 0, 0, 0, 0, 0, 0, 131, 133, 93, 40, 15, 99, 186, 227, 255, 0, 8, 0, 0, 24, 24, 0, 0, 0, 8, 0, 0, 0, 24, 0, 0, 11, 0, 15, 0, 0, 0, 0, 0, 0, 0, 5, 15, 255, 80, 24, 14, 0, 128, 1, 15, 0, 2, 163, 95, 79, 80, 130, 84, 128, 191, 31, 0, 64, 0, 0, 0, 0, 0, 0, 131, 133, 93, 40, 15, 99, 186, 227, 255, 0, 1, 2, 3, 4, 5, 20, 7, 56, 57, 58, 59, 60, 61, 62, 63, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 5, 15, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 24, 16, 0, 8, 8, 15, 0, 7, 103, 45, 39, 40, 144, 43, 160, 191, 31, 0, 79, 13, 14, 0, 0, 0, 0, 156, 142, 143, 20, 31, 150, 185, 163, 255, 0, 1, 2, 3, 4, 5, 20, 7, 56, 57, 58, 59, 60, 61, 62, 63, 12, 0, 15, 8, 0, 0, 0, 0, 0, 16, 14, 15, 255, 80, 24, 16, 0, 16, 0, 15, 0, 7, 103, 95, 79, 80, 130, 85, 129, 191, 31, 0, 79, 13, 14, 0, 0, 0, 0, 156, 142, 143, 40, 31, 150, 185, 163, 255, 0, 1, 2, 3, 4, 5, 20, 7, 56, 57, 58, 59, 60, 61, 62, 63, 12, 0, 15, 8, 0, 0, 0, 0, 0, 16, 14, 15, 255, 80, 24, 16, 0, 16, 0, 15, 0, 7, 102, 95, 79, 80, 130, 85, 129, 191, 31, 0, 79, 13, 14, 0, 0, 0, 0, 156, 142, 143, 40, 15, 150, 185, 163, 255, 0, 1, 2, 3, 4, 5, 20, 7, 56, 57, 58, 59, 60, 61, 62, 63, 12, 0, 15, 8, 0, 0, 0, 0, 0, 16, 10, 15, 255, 80, 29, 16, 0, 160, 1, 15, 0, 2, 227, 95, 79, 80, 130, 84, 128, 11, 62, 0, 64, 0, 0, 0, 0, 0, 0, 234, 140, 223, 40, 0, 231, 4, 195, 255, 0, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 5, 15, 255, 80, 29, 16, 0, 160, 1, 15, 0, 2, 227, 95, 79, 80, 130, 84, 128, 11, 62, 0, 64, 0, 0, 0, 0, 0, 0, 234, 140, 223, 40, 0, 231, 4, 227, 255, 0, 1, 2, 3, 4, 5, 20, 7, 56, 57, 58, 59, 60, 61, 62, 63, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 5, 15, 255, 40, 24, 8, 0, 32, 1, 15, 0, 14, 99, 95, 79, 80, 130, 84, 128, 191, 31, 0, 65, 0, 0, 0, 0, 0, 0, 156, 142, 143, 40, 64, 150, 185, 163, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 65, 0, 15, 0, 0, 0, 0, 0, 0, 64, 5, 15, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 24, 8, 0, 64, 9, 3, 0, 2, 99, 55, 39, 40, 154, 43, 138, 4, 17, 0, 65, 0, 0, 0, 0, 0, 0, 212, 134, 199, 20, 0, 208, 252, 178, 255, 0, 19, 21, 23, 2, 4, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 1, 0, 15, 0, 0, 0, 0, 0, 0, 48, 15, 15, 255, 40, 24, 8, 0, 64, 9, 3, 0, 2, 99, 55, 39, 40, 154, 43, 138, 4, 17, 0, 65, 0, 0, 0, 0, 0, 0, 212, 134, 199, 20, 0, 208, 252, 178, 255, 0, 19, 21, 23, 2, 4, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 1, 0, 15, 0, 0, 0, 0, 0, 0, 48, 15, 15, 255, 80, 24, 8, 0, 64, 1, 15, 0, 6, 99, 115, 79, 80, 150, 84, 148, 4, 17, 0, 65, 0, 0, 0, 0, 0, 0, 212, 134, 199, 40, 0, 208, 252, 210, 255, 0, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 13, 15, 255, 80, 24, 14, 0, 16, 0, 15, 0, 3, 162, 115, 79, 80, 150, 85, 149, 182, 31, 0, 77, 11, 12, 0, 0, 0, 0, 131, 133, 93, 40, 15, 99, 177, 179, 255, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 8, 0, 15, 0, 0, 0, 0, 0, 0, 16, 14, 15, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 24, 8, 0, 32, 9, 15, 0, 6, 99, 55, 39, 40, 154, 43, 138, 4, 17, 0, 64, 0, 0, 0, 0, 0, 0, 212, 134, 199, 20, 0, 208, 252, 211, 255, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 5, 15, 255, 80, 24, 8, 0, 64, 1, 15, 0, 6, 99, 115, 79, 80, 150, 84, 148, 4, 17, 0, 64, 0, 0, 0, 0, 0, 0, 212, 134, 199, 40, 0, 208, 252, 211, 255, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 5, 15, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 24, 14, 0, 128, 1, 15, 0, 6, 162, 115, 79, 80, 150, 84, 148, 182, 31, 0, 64, 0, 0, 0, 0, 0, 0, 131, 133, 93, 20, 15, 99, 177, 155, 255, 0, 8, 0, 0, 24, 24, 0, 0, 0, 8, 0, 0, 0, 24, 0, 0, 11, 0, 15, 0, 0, 0, 0, 0, 0, 0, 5, 15, 255, 80, 24, 14, 0, 128, 1, 15, 0, 6, 163, 91, 79, 80, 158, 84, 28, 78, 31, 0, 64, 0, 0, 0, 0, 0, 0, 131, 133, 93, 20, 15, 99, 73, 155, 255, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 5, 15, 255, 40, 24, 14, 0, 8, 9, 15, 0, 3, 163, 55, 39, 40, 154, 43, 170, 4, 31, 0, 77, 11, 12, 0, 0, 0, 0, 131, 133, 93, 20, 15, 99, 255, 179, 255, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 8, 0, 15, 0, 0, 0, 0, 0, 0, 16, 14, 15, 255, 40, 24, 14, 0, 8, 9, 15, 0, 3, 163, 55, 39, 40, 154, 43, 170, 4, 31, 0, 77, 11, 12, 0, 0, 0, 0, 131, 133, 93, 20, 15, 99, 255, 179, 255, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 8, 0, 15, 0, 0, 0, 0, 0, 0, 16, 14, 15, 255, 80, 24, 14, 0, 16, 1, 15, 0, 3, 163, 115, 79, 80, 150, 85, 149, 182, 31, 0, 77, 11, 12, 0, 0, 0, 0, 131, 133, 93, 40, 15, 99, 177, 179, 255, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 8, 0, 15, 0, 0, 0, 0, 0, 0, 16, 14, 15, 255, 80, 24, 14, 0, 16, 1, 15, 0, 3, 163, 115, 79, 80, 150, 85, 149, 182, 31, 0, 77, 11, 12, 0, 0, 0, 0, 131, 133, 93, 40, 15, 99, 177, 179, 255, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 8, 0, 15, 0, 0, 0, 0, 0, 0, 16, 14, 15, 255, 56, 40, 44, 8, 31, 6, 25, 28, 2, 7, 6, 7, 0, 0, 0, 0, 113, 80, 88, 16, 31, 6, 25, 28, 2, 7, 6, 7, 0, 0, 0, 0, 56, 40, 44, 8, 127, 6, 100, 112, 2, 1, 6, 7, 0, 0, 0, 0, 113, 80, 88, 16, 63, 6, 50, 56, 2, 3, 6, 7, 0, 0, 0, 0, 0, 8, 0, 16, 0, 64, 0, 64, 40, 40, 80, 80, 40, 40, 80, 80, 44, 40, 45, 41, 42, 46, 30, 41, 56, 40, 44, 6, 31, 6, 25, 28, 2, 7, 6, 7, 0, 0, 0, 0, 113, 80, 90, 12, 31, 6, 25, 28, 2, 7, 6, 7, 0, 0, 0, 0, 56, 40, 43, 6, 127, 6, 100, 112, 2, 1, 38, 7, 0, 0, 0, 0, 113, 80, 86, 12, 63, 6, 50, 56, 2, 3, 38, 7, 0, 0, 0, 0, 0, 8, 0, 16, 0, 64, 0, 64, 40, 40, 80, 80, 40, 40, 80, 80, 44, 40, 45, 41, 42, 46, 30, 41, 56, 40, 45, 10, 31, 6, 25, 28, 2, 7, 6, 7, 0, 0, 0, 0, 113, 80, 90, 10, 31, 6, 25, 28, 2, 7, 6, 7, 0, 0, 0, 0, 56, 40, 45, 10, 127, 6, 100, 112, 2, 1, 6, 7, 0, 0, 0, 0, 97, 80, 82, 15, 25, 6, 25, 25, 2, 13, 11, 12, 0, 0, 0, 0, 0, 8, 0, 16, 0, 64, 0, 64, 40, 40, 80, 80, 40, 40, 80, 80, 44, 40, 45, 41, 42, 46, 30, 41, 0, 0, 0, 0, 9, 0, 0, 0, 104, 1, 0, 0, 144, 1, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 104, 1, 0, 0, 144, 1, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 9, 0, 0, 0, 208, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 9, 0, 0, 0, 208, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 128, 2, 0, 0, 200, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 9, 0, 0, 0, 208, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 0, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 2, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 10, 0, 0, 32, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 200, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 10, 0, 0, 64, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 2, 0, 0, 0, 15, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 3, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 32, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 9, 0, 0, 0, 32, 4, 0, 0, 176, 2, 0, 0, 132, 0, 0, 0, 43, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 192, 0, 0, 0, 32, 3, 0, 0, 132, 0, 0, 0, 176, 2, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 9, 0, 0, 0, 32, 4, 0, 0, 144, 1, 0, 0, 132, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 32, 0, 0, 192, 0, 0, 0, 193, 1, 0, 0, 132, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 5, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 4, 0, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 100, 0, 0, 0, 37, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 128, 0, 0, 0, 151, 2, 0, 0, 100, 0, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 0, 128, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 5, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 4, 0, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 100, 0, 0, 0, 37, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 132, 0, 0, 0, 116, 2, 0, 0, 100, 0, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 5, 0, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 100, 0, 0, 0, 37, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 132, 0, 0, 0, 116, 2, 0, 0, 100, 0, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 4, 1, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 128, 0, 0, 0, 48, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 168, 0, 0, 0, 38, 3, 0, 0, 128, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 5, 1, 0, 0, 5, 0, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 128, 0, 0, 0, 48, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 168, 0, 0, 0, 38, 3, 0, 0, 128, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 4, 0, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 160, 0, 0, 0, 64, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 212, 0, 0, 0, 42, 4, 0, 0, 160, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0, 5, 0, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 160, 0, 0, 0, 64, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 212, 0, 0, 0, 42, 4, 0, 0, 160, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 13, 1, 0, 0, 6, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 6, 0, 0, 0, 14, 1, 0, 0, 7, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 6, 0, 0, 0, 15, 1, 0, 0, 8, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 6, 0, 0, 0, 16, 1, 0, 0, 6, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 200, 0, 0, 0, 13, 2, 0, 0, 160, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 17, 1, 0, 0, 7, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 200, 0, 0, 0, 13, 2, 0, 0, 160, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 18, 1, 0, 0, 8, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 19, 1, 0, 0, 6, 0, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 100, 0, 0, 0, 37, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 8, 1, 0, 0, 116, 2, 0, 0, 200, 0, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 20, 1, 0, 0, 7, 0, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 100, 0, 0, 0, 37, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 8, 1, 0, 0, 116, 2, 0, 0, 200, 0, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 21, 1, 0, 0, 8, 0, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 100, 0, 0, 0, 37, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 132, 0, 0, 0, 116, 2, 0, 0, 100, 0, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 22, 1, 0, 0, 6, 0, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 128, 0, 0, 0, 48, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 80, 1, 0, 0, 38, 3, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 23, 1, 0, 0, 7, 0, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 128, 0, 0, 0, 48, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 80, 1, 0, 0, 38, 3, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 24, 1, 0, 0, 8, 0, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 128, 0, 0, 0, 48, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 168, 0, 0, 0, 38, 3, 0, 0, 128, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 80, 1, 0, 0, 5, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 6, 0, 0, 0, 81, 1, 0, 0, 5, 0, 0, 0, 64, 1, 0, 0, 240, 0, 0, 0, 40, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 6, 0, 0, 0, 82, 1, 0, 0, 5, 0, 0, 0, 64, 1, 0, 0, 144, 1, 0, 0, 40, 0, 0, 0, 50, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 4, 0, 0, 0, 83, 1, 0, 0, 5, 0, 0, 0, 64, 1, 0, 0, 224, 1, 0, 0, 40, 0, 0, 0, 60, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 4, 0, 0, 0, 96, 1, 0, 0, 6, 0, 0, 0, 64, 1, 0, 0, 240, 0, 0, 0, 40, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 6, 0, 0, 0, 97, 1, 0, 0, 6, 0, 0, 0, 64, 1, 0, 0, 144, 1, 0, 0, 40, 0, 0, 0, 50, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 4, 0, 0, 0, 98, 1, 0, 0, 6, 0, 0, 0, 64, 1, 0, 0, 224, 1, 0, 0, 40, 0, 0, 0, 60, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 4, 0, 0, 0, 101, 1, 0, 0, 6, 0, 0, 0, 128, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 200, 0, 0, 0, 193, 1, 0, 0, 160, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0, 7, 0, 0, 0, 64, 1, 0, 0, 240, 0, 0, 0, 40, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 6, 0, 0, 0, 113, 1, 0, 0, 7, 0, 0, 0, 64, 1, 0, 0, 144, 1, 0, 0, 40, 0, 0, 0, 50, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 4, 0, 0, 0, 114, 1, 0, 0, 7, 0, 0, 0, 64, 1, 0, 0, 224, 1, 0, 0, 40, 0, 0, 0, 60, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 4, 0, 0, 0, 117, 1, 0, 0, 7, 0, 0, 0, 128, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 200, 0, 0, 0, 193, 1, 0, 0, 160, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 144, 1, 0, 0, 8, 0, 0, 0, 64, 1, 0, 0, 240, 0, 0, 0, 40, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 50, 0, 0, 0, 13, 2, 0, 0, 40, 0, 0, 0, 224, 1, 0, 0, 6, 0, 0, 0, 145, 1, 0, 0, 8, 0, 0, 0, 64, 1, 0, 0, 144, 1, 0, 0, 40, 0, 0, 0, 50, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 4, 0, 0, 0, 146, 1, 0, 0, 8, 0, 0, 0, 64, 1, 0, 0, 224, 1, 0, 0, 40, 0, 0, 0, 60, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 50, 0, 0, 0, 13, 2, 0, 0, 40, 0, 0, 0, 224, 1, 0, 0, 4, 0, 0, 0, 7, 2, 0, 0, 5, 0, 0, 0, 128, 4, 0, 0, 96, 3, 0, 0, 160, 0, 0, 0, 64, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 182, 0, 0, 0, 180, 3, 0, 0, 144, 0, 0, 0, 96, 3, 0, 0, 0, 0, 0, 0, 9, 2, 0, 0, 6, 0, 0, 0, 128, 4, 0, 0, 96, 3, 0, 0, 160, 0, 0, 0, 64, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 108, 1, 0, 0, 180, 3, 0, 0, 32, 1, 0, 0, 96, 3, 0, 0, 0, 0, 0, 0, 10, 2, 0, 0, 7, 0, 0, 0, 128, 4, 0, 0, 96, 3, 0, 0, 160, 0, 0, 0, 64, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 108, 1, 0, 0, 180, 3, 0, 0, 32, 1, 0, 0, 96, 3, 0, 0, 0, 0, 0, 0, 19, 2, 0, 0, 8, 0, 0, 0, 128, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 34, 2, 0, 0, 5, 0, 0, 0, 80, 3, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 132, 0, 0, 0, 13, 2, 0, 0, 106, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 35, 2, 0, 0, 6, 0, 0, 0, 80, 3, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 8, 1, 0, 0, 13, 2, 0, 0, 212, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 36, 2, 0, 0, 7, 0, 0, 0, 80, 3, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 8, 1, 0, 0, 13, 2, 0, 0, 212, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 37, 2, 0, 0, 8, 0, 0, 0, 80, 3, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 132, 0, 0, 0, 13, 2, 0, 0, 106, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 9, 0, 0, 0, 128, 2, 0, 0, 200, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 9, 0, 0, 0, 128, 2, 0, 0, 200, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 64, 1, 0, 0, 94, 1, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 94, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 64, 1, 0, 0, 94, 1, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 94, 1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 9, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 9, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 104, 1, 0, 0, 144, 1, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 104, 1, 0, 0, 144, 1, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 5850684);
allocate([128, 11, 0, 0, 8, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 9, 0, 0, 0, 208, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 9, 0, 0, 0, 208, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 128, 2, 0, 0, 200, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 9, 0, 0, 0, 208, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 0, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 2, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 10, 0, 0, 32, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 200, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 10, 0, 0, 64, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 2, 0, 0, 0, 15, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 3, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 32, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 9, 0, 0, 0, 32, 4, 0, 0, 176, 2, 0, 0, 132, 0, 0, 0, 44, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 64, 0, 0, 192, 0, 0, 0, 32, 3, 0, 0, 132, 0, 0, 0, 192, 2, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 32, 4, 0, 0, 144, 1, 0, 0, 132, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 32, 0, 0, 192, 0, 0, 0, 193, 1, 0, 0, 132, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 9, 0, 0, 0, 32, 4, 0, 0, 144, 1, 0, 0, 132, 0, 0, 0, 28, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 32, 0, 0, 192, 0, 0, 0, 193, 1, 0, 0, 132, 0, 0, 0, 192, 1, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 9, 0, 0, 0, 32, 4, 0, 0, 176, 2, 0, 0, 132, 0, 0, 0, 44, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 192, 0, 0, 0, 32, 3, 0, 0, 132, 0, 0, 0, 192, 2, 0, 0, 0, 0, 0, 0, 35, 0, 0, 0, 9, 0, 0, 0, 32, 4, 0, 0, 144, 1, 0, 0, 132, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 32, 0, 0, 192, 0, 0, 0, 193, 1, 0, 0, 132, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 9, 0, 0, 0, 32, 4, 0, 0, 144, 1, 0, 0, 132, 0, 0, 0, 28, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 32, 0, 0, 192, 0, 0, 0, 193, 1, 0, 0, 132, 0, 0, 0, 192, 1, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 4, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 4, 0, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 100, 0, 0, 0, 37, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 128, 0, 0, 0, 151, 2, 0, 0, 100, 0, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 5, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 21, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 5, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 5, 0, 0, 0, 128, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 5, 0, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 100, 0, 0, 0, 37, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 128, 0, 0, 0, 151, 2, 0, 0, 100, 0, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 4, 0, 0, 0, 192, 3, 0, 0, 208, 2, 0, 0, 120, 0, 0, 0, 45, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 120, 0, 0, 0, 32, 3, 0, 0, 120, 0, 0, 0, 208, 2, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 128, 0, 0, 0, 48, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 128, 0, 0, 0, 32, 3, 0, 0, 128, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 5, 0, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 128, 0, 0, 0, 48, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 128, 0, 0, 0, 32, 3, 0, 0, 128, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 61, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 160, 0, 0, 0, 64, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 160, 0, 0, 0, 128, 4, 0, 0, 160, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 0, 192, 3, 0, 0, 160, 0, 0, 0, 60, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 160, 0, 0, 0, 0, 4, 0, 0, 160, 0, 0, 0, 192, 3, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 4, 0, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 100, 0, 0, 0, 37, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 128, 0, 0, 0, 151, 2, 0, 0, 100, 0, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 104, 1, 0, 0, 144, 1, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 104, 1, 0, 0, 144, 1, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 9, 0, 0, 0, 208, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 9, 0, 0, 0, 208, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 128, 2, 0, 0, 200, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 9, 0, 0, 0, 208, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 0, 11, 0, 0, 16, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 2, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 10, 0, 0, 32, 0, 0, 50, 0, 0, 0, 193, 1, 0, 0, 40, 0, 0, 0, 144, 1, 0, 0, 3, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 200, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 10, 0, 0, 64, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 2, 0, 0, 0, 15, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 3, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 32, 0, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 9, 0, 0, 0, 32, 4, 0, 0, 176, 2, 0, 0, 132, 0, 0, 0, 43, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 64, 0, 0, 192, 0, 0, 0, 208, 2, 0, 0, 132, 0, 0, 0, 176, 2, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 9, 0, 0, 0, 32, 4, 0, 0, 144, 1, 0, 0, 132, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 32, 0, 0, 192, 0, 0, 0, 193, 1, 0, 0, 132, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 9, 0, 0, 0, 32, 4, 0, 0, 176, 2, 0, 0, 132, 0, 0, 0, 43, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 64, 0, 0, 192, 0, 0, 0, 208, 2, 0, 0, 132, 0, 0, 0, 176, 2, 0, 0, 0, 0, 0, 0, 87, 0, 0, 0, 9, 0, 0, 0, 32, 4, 0, 0, 144, 1, 0, 0, 132, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 32, 0, 0, 192, 0, 0, 0, 193, 1, 0, 0, 132, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 4, 0, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 100, 0, 0, 0, 37, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 160, 0, 0, 128, 0, 0, 0, 151, 2, 0, 0, 100, 0, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 128, 0, 0, 0, 48, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 128, 0, 0, 0, 32, 3, 0, 0, 128, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 5, 0, 0, 0, 128, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 193, 1, 0, 0, 80, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 95, 0, 0, 0, 5, 0, 0, 0, 128, 2, 0, 0, 224, 1, 0, 0, 80, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 100, 0, 0, 0, 13, 2, 0, 0, 80, 0, 0, 0, 224, 1, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 64, 1, 0, 0, 94, 1, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 50, 0, 0, 0, 110, 1, 0, 0, 40, 0, 0, 0, 94, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 64, 1, 0, 0, 94, 1, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 50, 0, 0, 0, 110, 1, 0, 0, 40, 0, 0, 0, 94, 1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 9, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 96, 0, 0, 0, 110, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 9, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 96, 0, 0, 0, 110, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 60, 0, 0, 0, 6, 1, 0, 0, 40, 0, 0, 0, 200, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 60, 0, 0, 0, 6, 1, 0, 0, 40, 0, 0, 0, 200, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 128, 2, 0, 0, 200, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 128, 11, 0, 0, 64, 0, 0, 120, 0, 0, 0, 6, 1, 0, 0, 80, 0, 0, 0, 200, 0, 0, 0, 2, 0, 0, 0, 7, 0, 0, 0, 9, 0, 0, 0, 208, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 14, 0, 0, 0, 8, 0, 0, 0, 0, 0, 11, 0, 0, 16, 0, 0, 120, 0, 0, 0, 184, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 2, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 10, 0, 0, 32, 0, 0, 60, 0, 0, 0, 6, 1, 0, 0, 40, 0, 0, 0, 200, 0, 0, 0, 3, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 200, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 10, 0, 0, 64, 0, 0, 120, 0, 0, 0, 6, 1, 0, 0, 80, 0, 0, 0, 200, 0, 0, 0, 2, 0, 0, 0, 15, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 96, 0, 0, 0, 110, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 2, 0, 0, 0, 128, 2, 0, 0, 94, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 96, 0, 0, 0, 110, 1, 0, 0, 80, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 64, 1, 0, 0, 144, 1, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 56, 0, 0, 0, 31, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 64, 1, 0, 0, 144, 1, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 56, 0, 0, 0, 31, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 9, 0, 0, 0, 128, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 113, 0, 0, 0, 31, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 9, 0, 0, 0, 128, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 128, 11, 0, 0, 16, 0, 0, 113, 0, 0, 0, 31, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 56, 0, 0, 0, 127, 0, 0, 0, 40, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 56, 0, 0, 0, 127, 0, 0, 0, 40, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 128, 2, 0, 0, 200, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 128, 11, 0, 0, 8, 0, 0, 56, 0, 0, 0, 127, 0, 0, 0, 40, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 15, 0, 0, 0, 160, 0, 0, 0, 200, 0, 0, 0, 20, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 32, 0, 0, 56, 0, 0, 0, 127, 0, 0, 0, 40, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 15, 0, 0, 0, 64, 1, 0, 0, 200, 0, 0, 0, 40, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 32, 0, 0, 113, 0, 0, 0, 63, 0, 0, 0, 80, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 128, 2, 0, 0, 200, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 128, 11, 0, 0, 32, 0, 0, 113, 0, 0, 0, 63, 0, 0, 0, 80, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 9, 0, 0, 0, 128, 2, 0, 0, 144, 1, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 14, 0, 0, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 16, 0, 0, 97, 0, 0, 0, 25, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 42, 0, 0, 42, 42, 42, 0, 0, 42, 0, 42, 42, 21, 0, 42, 42, 42, 21, 21, 21, 21, 21, 63, 21, 63, 21, 21, 63, 63, 63, 21, 21, 63, 21, 63, 63, 63, 21, 63, 63, 63, 44, 40, 45, 41, 42, 46, 30, 41, 42, 43, 59, 0, 0, 0, 0, 0, 12, 8, 13, 9, 10, 14, 14, 9, 26, 27, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 0, 0, 0, 0, 0, 42, 0, 42, 0, 0, 42, 42, 42, 0, 0, 42, 0, 42, 42, 21, 0, 42, 42, 42, 0, 0, 0, 0, 0, 42, 0, 42, 0, 0, 42, 42, 42, 0, 0, 42, 0, 42, 42, 21, 0, 42, 42, 42, 21, 21, 21, 21, 21, 63, 21, 63, 21, 21, 63, 63, 63, 21, 21, 63, 21, 63, 63, 63, 21, 63, 63, 63, 21, 21, 21, 21, 21, 63, 21, 63, 21, 21, 63, 63, 63, 21, 21, 63, 21, 63, 63, 63, 21, 63, 63, 63, 0, 0, 0, 0, 0, 42, 0, 42, 0, 0, 42, 42, 42, 0, 0, 42, 0, 42, 42, 21, 0, 42, 42, 42, 0, 0, 0, 0, 0, 42, 0, 42, 0, 0, 42, 42, 42, 0, 0, 42, 0, 42, 42, 21, 0, 42, 42, 42, 21, 21, 21, 21, 21, 63, 21, 63, 21, 21, 63, 63, 63, 21, 21, 63, 21, 63, 63, 63, 21, 63, 63, 63, 21, 21, 21, 21, 21, 63, 21, 63, 21, 21, 63, 63, 63, 21, 21, 63, 21, 63, 63, 63, 21, 63, 63, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 0, 0, 0, 0, 0, 42, 0, 42, 0, 0, 42, 42, 42, 0, 0, 42, 0, 42, 42, 42, 0, 42, 42, 42, 0, 0, 21, 0, 0, 63, 0, 42, 21, 0, 42, 63, 42, 0, 21, 42, 0, 63, 42, 42, 21, 42, 42, 63, 0, 21, 0, 0, 21, 42, 0, 63, 0, 0, 63, 42, 42, 21, 0, 42, 21, 42, 42, 63, 0, 42, 63, 42, 0, 21, 21, 0, 21, 63, 0, 63, 21, 0, 63, 63, 42, 21, 21, 42, 21, 63, 42, 63, 21, 42, 63, 63, 21, 0, 0, 21, 0, 42, 21, 42, 0, 21, 42, 42, 63, 0, 0, 63, 0, 42, 63, 42, 0, 63, 42, 42, 21, 0, 21, 21, 0, 63, 21, 42, 21, 21, 42, 63, 63, 0, 21, 63, 0, 63, 63, 42, 21, 63, 42, 63, 21, 21, 0, 21, 21, 42, 21, 63, 0, 21, 63, 42, 63, 21, 0, 63, 21, 42, 63, 63, 0, 63, 63, 42, 21, 21, 21, 21, 21, 63, 21, 63, 21, 21, 63, 63, 63, 21, 21, 63, 21, 63, 63, 63, 21, 63, 63, 63, 0, 0, 0, 0, 0, 42, 0, 42, 0, 0, 42, 42, 42, 0, 0, 42, 0, 42, 42, 21, 0, 42, 42, 42, 21, 21, 21, 21, 21, 63, 21, 63, 21, 21, 63, 63, 63, 21, 21, 63, 21, 63, 63, 63, 21, 63, 63, 63, 0, 0, 0, 5, 5, 5, 8, 8, 8, 11, 11, 11, 14, 14, 14, 17, 17, 17, 20, 20, 20, 24, 24, 24, 28, 28, 28, 32, 32, 32, 36, 36, 36, 40, 40, 40, 45, 45, 45, 50, 50, 50, 56, 56, 56, 63, 63, 63, 0, 0, 63, 16, 0, 63, 31, 0, 63, 47, 0, 63, 63, 0, 63, 63, 0, 47, 63, 0, 31, 63, 0, 16, 63, 0, 0, 63, 16, 0, 63, 31, 0, 63, 47, 0, 63, 63, 0, 47, 63, 0, 31, 63, 0, 16, 63, 0, 0, 63, 0, 0, 63, 16, 0, 63, 31, 0, 63, 47, 0, 63, 63, 0, 47, 63, 0, 31, 63, 0, 16, 63, 31, 31, 63, 39, 31, 63, 47, 31, 63, 55, 31, 63, 63, 31, 63, 63, 31, 55, 63, 31, 47, 63, 31, 39, 63, 31, 31, 63, 39, 31, 63, 47, 31, 63, 55, 31, 63, 63, 31, 55, 63, 31, 47, 63, 31, 39, 63, 31, 31, 63, 31, 31, 63, 39, 31, 63, 47, 31, 63, 55, 31, 63, 63, 31, 55, 63, 31, 47, 63, 31, 39, 63, 45, 45, 63, 49, 45, 63, 54, 45, 63, 58, 45, 63, 63, 45, 63, 63, 45, 58, 63, 45, 54, 63, 45, 49, 63, 45, 45, 63, 49, 45, 63, 54, 45, 63, 58, 45, 63, 63, 45, 58, 63, 45, 54, 63, 45, 49, 63, 45, 45, 63, 45, 45, 63, 49, 45, 63, 54, 45, 63, 58, 45, 63, 63, 45, 58, 63, 45, 54, 63, 45, 49, 63, 0, 0, 28, 7, 0, 28, 14, 0, 28, 21, 0, 28, 28, 0, 28, 28, 0, 21, 28, 0, 14, 28, 0, 7, 28, 0, 0, 28, 7, 0, 28, 14, 0, 28, 21, 0, 28, 28, 0, 21, 28, 0, 14, 28, 0, 7, 28, 0, 0, 28, 0, 0, 28, 7, 0, 28, 14, 0, 28, 21, 0, 28, 28, 0, 21, 28, 0, 14, 28, 0, 7, 28, 14, 14, 28, 17, 14, 28, 21, 14, 28, 24, 14, 28, 28, 14, 28, 28, 14, 24, 28, 14, 21, 28, 14, 17, 28, 14, 14, 28, 17, 14, 28, 21, 14, 28, 24, 14, 28, 28, 14, 24, 28, 14, 21, 28, 14, 17, 28, 14, 14, 28, 14, 14, 28, 17, 14, 28, 21, 14, 28, 24, 14, 28, 28, 14, 24, 28, 14, 21, 28, 14, 17, 28, 20, 20, 28, 22, 20, 28, 24, 20, 28, 26, 20, 28, 28, 20, 28, 28, 20, 26, 28, 20, 24, 28, 20, 22, 28, 20, 20, 28, 22, 20, 28, 24, 20, 28, 26, 20, 28, 28, 20, 26, 28, 20, 24, 28, 20, 22, 28, 20, 20, 28, 20, 20, 28, 22, 20, 28, 24, 20, 28, 26, 20, 28, 28, 20, 26, 28, 20, 24, 28, 20, 22, 28, 0, 0, 16, 4, 0, 16, 8, 0, 16, 12, 0, 16, 16, 0, 16, 16, 0, 12, 16, 0, 8, 16, 0, 4, 16, 0, 0, 16, 4, 0, 16, 8, 0, 16, 12, 0, 16, 16, 0, 12, 16, 0, 8, 16, 0, 4, 16, 0, 0, 16, 0, 0, 16, 4, 0, 16, 8, 0, 16, 12, 0, 16, 16, 0, 12, 16, 0, 8, 16, 0, 4, 16, 8, 8, 16, 10, 8, 16, 12, 8, 16, 14, 8, 16, 16, 8, 16, 16, 8, 14, 16, 8, 12, 16, 8, 10, 16, 8, 8, 16, 10, 8, 16, 12, 8, 16, 14, 8, 16, 16, 8, 14, 16, 8, 12, 16, 8, 10, 16, 8, 8, 16, 8, 8, 16, 10, 8, 16, 12, 8, 16, 14, 8, 16, 16, 8, 14, 16, 8, 12, 16, 8, 10, 16, 11, 11, 16, 12, 11, 16, 13, 11, 16, 15, 11, 16, 16, 11, 16, 16, 11, 15, 16, 11, 13, 16, 11, 12, 16, 11, 11, 16, 12, 11, 16, 13, 11, 16, 15, 11, 16, 16, 11, 15, 16, 11, 13, 16, 11, 12, 16, 11, 11, 16, 11, 11, 16, 12, 11, 16, 13, 11, 16, 15, 11, 16, 16, 11, 15, 16, 11, 13, 16, 11, 12, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 138, 89, 0, 254, 1, 0, 0, 255, 1, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 73, 82, 81, 32, 48, 32, 67, 108, 111, 99, 107, 0, 0, 0, 0, 0, 73, 110, 116, 32, 49, 49, 32, 69, 113, 117, 105, 112, 109, 101, 110, 116, 0, 0, 0, 0, 0, 0, 0, 0, 73, 110, 116, 32, 49, 50, 32, 77, 101, 109, 111, 114, 121, 0, 0, 0, 73, 110, 116, 32, 49, 52, 32, 67, 79, 77, 45, 112, 111, 114, 116, 0, 73, 110, 116, 32, 49, 53, 32, 66, 105, 111, 115, 0, 0, 0, 0, 0, 73, 110, 116, 32, 49, 55, 32, 80, 114, 105, 110, 116, 101, 114, 0, 0, 73, 110, 116, 32, 49, 97, 32, 84, 105, 109, 101, 0, 0, 0, 0, 0, 73, 110, 116, 32, 49, 99, 32, 84, 105, 109, 101, 114, 0, 0, 0, 0, 73, 110, 116, 32, 55, 48, 32, 82, 84, 67, 0, 0, 0, 0, 0, 0, 105, 114, 113, 32, 57, 32, 98, 105, 111, 115, 0, 0, 0, 0, 0, 0, 114, 101, 98, 111, 111, 116, 0, 0, 105, 114, 113, 32, 50, 32, 98, 105, 111, 115, 0, 0, 0, 0, 0, 0, 73, 66, 77, 32, 67, 79, 77, 80, 65, 84, 73, 66, 76, 69, 32, 52, 56, 54, 32, 66, 73, 79, 83, 32, 67, 79, 80, 89, 82, 73, 71, 72, 84, 32, 84, 104, 101, 32, 68, 79, 83, 66, 111, 120, 32, 84, 101, 97, 109, 46, 0, 0, 0, 0, 0, 0, 68, 79, 83, 66, 111, 120, 32, 70, 97, 107, 101, 66, 73, 79, 83, 32, 118, 49, 46, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 97, 110, 100, 121, 32, 68, 65, 67, 32, 73, 82, 81, 0, 0, 0, 84, 97, 110, 100, 121, 32, 68, 65, 67, 32, 101, 110, 100, 32, 116, 114, 97, 110, 115, 102, 101, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 66, 73, 79, 83, 0, 0, 0, 32, 82, 202, 1, 152, 138, 89, 0, 120, 40, 5, 0, 0, 0, 0, 0, 10, 10, 32, 32, 32, 82, 101, 98, 111, 111, 116, 32, 114, 101, 113, 117, 101, 115, 116, 101, 100, 44, 32, 113, 117, 105, 116, 116, 105, 110, 103, 32, 110, 111, 119, 46, 0, 0, 0, 0, 85, 110, 104, 97, 110, 100, 108, 101, 100, 32, 73, 78, 84, 32, 49, 55, 32, 99, 97, 108, 108, 32, 37, 50, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 73, 79, 83, 32, 73, 78, 84, 49, 52, 58, 32, 85, 110, 104, 97, 110, 100, 108, 101, 100, 32, 99, 97, 108, 108, 32, 65, 72, 61, 37, 50, 88, 32, 68, 88, 61, 37, 52, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 128, 0, 192, 0, 32, 0, 96, 0, 160, 0, 224, 0, 0, 0, 0, 0, 0, 0, 0, 126, 129, 165, 129, 189, 153, 129, 126, 126, 255, 219, 255, 195, 231, 255, 126, 108, 254, 254, 254, 124, 56, 16, 0, 16, 56, 124, 254, 124, 56, 16, 0, 56, 124, 56, 254, 254, 124, 56, 124, 16, 16, 56, 124, 254, 124, 56, 124, 0, 0, 24, 60, 60, 24, 0, 0, 255, 255, 231, 195, 195, 231, 255, 255, 0, 60, 102, 66, 66, 102, 60, 0, 255, 195, 153, 189, 189, 153, 195, 255, 15, 7, 15, 125, 204, 204, 204, 120, 60, 102, 102, 102, 60, 24, 126, 24, 63, 51, 63, 48, 48, 112, 240, 224, 127, 99, 127, 99, 99, 103, 230, 192, 153, 90, 60, 231, 231, 60, 90, 153, 128, 224, 248, 254, 248, 224, 128, 0, 2, 14, 62, 254, 62, 14, 2, 0, 24, 60, 126, 24, 24, 126, 60, 24, 102, 102, 102, 102, 102, 0, 102, 0, 127, 219, 219, 123, 27, 27, 27, 0, 62, 99, 56, 108, 108, 56, 204, 120, 0, 0, 0, 0, 126, 126, 126, 0, 24, 60, 126, 24, 126, 60, 24, 255, 24, 60, 126, 24, 24, 24, 24, 0, 24, 24, 24, 24, 126, 60, 24, 0, 0, 24, 12, 254, 12, 24, 0, 0, 0, 48, 96, 254, 96, 48, 0, 0, 0, 0, 192, 192, 192, 254, 0, 0, 0, 36, 102, 255, 102, 36, 0, 0, 0, 24, 60, 126, 255, 255, 0, 0, 0, 255, 255, 126, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 120, 120, 48, 48, 0, 48, 0, 108, 108, 108, 0, 0, 0, 0, 0, 108, 108, 254, 108, 254, 108, 108, 0, 48, 124, 192, 120, 12, 248, 48, 0, 0, 198, 204, 24, 48, 102, 198, 0, 56, 108, 56, 118, 220, 204, 118, 0, 96, 96, 192, 0, 0, 0, 0, 0, 24, 48, 96, 96, 96, 48, 24, 0, 96, 48, 24, 24, 24, 48, 96, 0, 0, 102, 60, 255, 60, 102, 0, 0, 0, 48, 48, 252, 48, 48, 0, 0, 0, 0, 0, 0, 0, 48, 48, 96, 0, 0, 0, 252, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 6, 12, 24, 48, 96, 192, 128, 0, 124, 198, 206, 222, 246, 230, 124, 0, 48, 112, 48, 48, 48, 48, 252, 0, 120, 204, 12, 56, 96, 204, 252, 0, 120, 204, 12, 56, 12, 204, 120, 0, 28, 60, 108, 204, 254, 12, 30, 0, 252, 192, 248, 12, 12, 204, 120, 0, 56, 96, 192, 248, 204, 204, 120, 0, 252, 204, 12, 24, 48, 48, 48, 0, 120, 204, 204, 120, 204, 204, 120, 0, 120, 204, 204, 124, 12, 24, 112, 0, 0, 48, 48, 0, 0, 48, 48, 0, 0, 48, 48, 0, 0, 48, 48, 96, 24, 48, 96, 192, 96, 48, 24, 0, 0, 0, 252, 0, 0, 252, 0, 0, 96, 48, 24, 12, 24, 48, 96, 0, 120, 204, 12, 24, 48, 0, 48, 0, 124, 198, 222, 222, 222, 192, 120, 0, 48, 120, 204, 204, 252, 204, 204, 0, 252, 102, 102, 124, 102, 102, 252, 0, 60, 102, 192, 192, 192, 102, 60, 0, 248, 108, 102, 102, 102, 108, 248, 0, 254, 98, 104, 120, 104, 98, 254, 0, 254, 98, 104, 120, 104, 96, 240, 0, 60, 102, 192, 192, 206, 102, 62, 0, 204, 204, 204, 252, 204, 204, 204, 0, 120, 48, 48, 48, 48, 48, 120, 0, 30, 12, 12, 12, 204, 204, 120, 0, 230, 102, 108, 120, 108, 102, 230, 0, 240, 96, 96, 96, 98, 102, 254, 0, 198, 238, 254, 254, 214, 198, 198, 0, 198, 230, 246, 222, 206, 198, 198, 0, 56, 108, 198, 198, 198, 108, 56, 0, 252, 102, 102, 124, 96, 96, 240, 0, 120, 204, 204, 204, 220, 120, 28, 0, 252, 102, 102, 124, 108, 102, 230, 0, 120, 204, 224, 112, 28, 204, 120, 0, 252, 180, 48, 48, 48, 48, 120, 0, 204, 204, 204, 204, 204, 204, 252, 0, 204, 204, 204, 204, 204, 120, 48, 0, 198, 198, 198, 214, 254, 238, 198, 0, 198, 198, 108, 56, 56, 108, 198, 0, 204, 204, 204, 120, 48, 48, 120, 0, 254, 198, 140, 24, 50, 102, 254, 0, 120, 96, 96, 96, 96, 96, 120, 0, 192, 96, 48, 24, 12, 6, 2, 0, 120, 24, 24, 24, 24, 24, 120, 0, 16, 56, 108, 198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 48, 48, 24, 0, 0, 0, 0, 0, 0, 0, 120, 12, 124, 204, 118, 0, 224, 96, 96, 124, 102, 102, 220, 0, 0, 0, 120, 204, 192, 204, 120, 0, 28, 12, 12, 124, 204, 204, 118, 0, 0, 0, 120, 204, 252, 192, 120, 0, 56, 108, 96, 240, 96, 96, 240, 0, 0, 0, 118, 204, 204, 124, 12, 248, 224, 96, 108, 118, 102, 102, 230, 0, 48, 0, 112, 48, 48, 48, 120, 0, 12, 0, 12, 12, 12, 204, 204, 120, 224, 96, 102, 108, 120, 108, 230, 0, 112, 48, 48, 48, 48, 48, 120, 0, 0, 0, 204, 254, 254, 214, 198, 0, 0, 0, 248, 204, 204, 204, 204, 0, 0, 0, 120, 204, 204, 204, 120, 0, 0, 0, 220, 102, 102, 124, 96, 240, 0, 0, 118, 204, 204, 124, 12, 30, 0, 0, 220, 118, 102, 96, 240, 0, 0, 0, 124, 192, 120, 12, 248, 0, 16, 48, 124, 48, 48, 52, 24, 0, 0, 0, 204, 204, 204, 204, 118, 0, 0, 0, 204, 204, 204, 120, 48, 0, 0, 0, 198, 214, 254, 254, 108, 0, 0, 0, 198, 108, 56, 108, 198, 0, 0, 0, 204, 204, 204, 124, 12, 248, 0, 0, 252, 152, 48, 100, 252, 0, 28, 48, 48, 224, 48, 48, 28, 0, 24, 24, 24, 0, 24, 24, 24, 0, 224, 48, 48, 28, 48, 48, 224, 0, 118, 220, 0, 0, 0, 0, 0, 0, 0, 16, 56, 108, 198, 198, 254, 0, 120, 204, 192, 204, 120, 24, 12, 120, 0, 204, 0, 204, 204, 204, 126, 0, 28, 0, 120, 204, 252, 192, 120, 0, 126, 195, 60, 6, 62, 102, 63, 0, 204, 0, 120, 12, 124, 204, 126, 0, 224, 0, 120, 12, 124, 204, 126, 0, 48, 48, 120, 12, 124, 204, 126, 0, 0, 0, 120, 192, 192, 120, 12, 56, 126, 195, 60, 102, 126, 96, 60, 0, 204, 0, 120, 204, 252, 192, 120, 0, 224, 0, 120, 204, 252, 192, 120, 0, 204, 0, 112, 48, 48, 48, 120, 0, 124, 198, 56, 24, 24, 24, 60, 0, 224, 0, 112, 48, 48, 48, 120, 0, 198, 56, 108, 198, 254, 198, 198, 0, 48, 48, 0, 120, 204, 252, 204, 0, 28, 0, 252, 96, 120, 96, 252, 0, 0, 0, 127, 12, 127, 204, 127, 0, 62, 108, 204, 254, 204, 204, 206, 0, 120, 204, 0, 120, 204, 204, 120, 0, 0, 204, 0, 120, 204, 204, 120, 0, 0, 224, 0, 120, 204, 204, 120, 0, 120, 204, 0, 204, 204, 204, 126, 0, 0, 224, 0, 204, 204, 204, 126, 0, 0, 204, 0, 204, 204, 124, 12, 248, 195, 24, 60, 102, 102, 60, 24, 0, 204, 0, 204, 204, 204, 204, 120, 0, 24, 24, 126, 192, 192, 126, 24, 24, 56, 108, 100, 240, 96, 230, 252, 0, 204, 204, 120, 252, 48, 252, 48, 48, 248, 204, 204, 250, 198, 207, 198, 199, 14, 27, 24, 60, 24, 24, 216, 112, 28, 0, 120, 12, 124, 204, 126, 0, 56, 0, 112, 48, 48, 48, 120, 0, 0, 28, 0, 120, 204, 204, 120, 0, 0, 28, 0, 204, 204, 204, 126, 0, 0, 248, 0, 248, 204, 204, 204, 0, 252, 0, 204, 236, 252, 220, 204, 0, 60, 108, 108, 62, 0, 126, 0, 0, 56, 108, 108, 56, 0, 124, 0, 0, 48, 0, 48, 96, 192, 204, 120, 0, 0, 0, 0, 252, 192, 192, 0, 0, 0, 0, 0, 252, 12, 12, 0, 0, 195, 198, 204, 222, 51, 102, 204, 15, 195, 198, 204, 219, 55, 111, 207, 3, 24, 24, 0, 24, 24, 24, 24, 0, 0, 51, 102, 204, 102, 51, 0, 0, 0, 204, 102, 51, 102, 204, 0, 0, 34, 136, 34, 136, 34, 136, 34, 136, 85, 170, 85, 170, 85, 170, 85, 170, 219, 119, 219, 238, 219, 119, 219, 238, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 248, 24, 24, 24, 24, 24, 248, 24, 248, 24, 24, 24, 54, 54, 54, 54, 246, 54, 54, 54, 0, 0, 0, 0, 254, 54, 54, 54, 0, 0, 248, 24, 248, 24, 24, 24, 54, 54, 246, 6, 246, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 0, 0, 254, 6, 246, 54, 54, 54, 54, 54, 246, 6, 254, 0, 0, 0, 54, 54, 54, 54, 254, 0, 0, 0, 24, 24, 248, 24, 248, 0, 0, 0, 0, 0, 0, 0, 248, 24, 24, 24, 24, 24, 24, 24, 31, 0, 0, 0, 24, 24, 24, 24, 255, 0, 0, 0, 0, 0, 0, 0, 255, 24, 24, 24, 24, 24, 24, 24, 31, 24, 24, 24, 0, 0, 0, 0, 255, 0, 0, 0, 24, 24, 24, 24, 255, 24, 24, 24, 24, 24, 31, 24, 31, 24, 24, 24, 54, 54, 54, 54, 55, 54, 54, 54, 54, 54, 55, 48, 63, 0, 0, 0, 0, 0, 63, 48, 55, 54, 54, 54, 54, 54, 247, 0, 255, 0, 0, 0, 0, 0, 255, 0, 247, 54, 54, 54, 54, 54, 55, 48, 55, 54, 54, 54, 0, 0, 255, 0, 255, 0, 0, 0, 54, 54, 247, 0, 247, 54, 54, 54, 24, 24, 255, 0, 255, 0, 0, 0, 54, 54, 54, 54, 255, 0, 0, 0, 0, 0, 255, 0, 255, 24, 24, 24, 0, 0, 0, 0, 255, 54, 54, 54, 54, 54, 54, 54, 63, 0, 0, 0, 24, 24, 31, 24, 31, 0, 0, 0, 0, 0, 31, 24, 31, 24, 24, 24, 0, 0, 0, 0, 63, 54, 54, 54, 54, 54, 54, 54, 255, 54, 54, 54, 24, 24, 255, 24, 255, 24, 24, 24, 24, 24, 24, 24, 248, 0, 0, 0, 0, 0, 0, 0, 31, 24, 24, 24, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 240, 240, 240, 240, 240, 240, 240, 240, 15, 15, 15, 15, 15, 15, 15, 15, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 118, 220, 200, 220, 118, 0, 0, 120, 204, 248, 204, 248, 192, 192, 0, 252, 204, 192, 192, 192, 192, 0, 0, 254, 108, 108, 108, 108, 108, 0, 252, 204, 96, 48, 96, 204, 252, 0, 0, 0, 126, 216, 216, 216, 112, 0, 0, 102, 102, 102, 102, 124, 96, 192, 0, 118, 220, 24, 24, 24, 24, 0, 252, 48, 120, 204, 204, 120, 48, 252, 56, 108, 198, 254, 198, 108, 56, 0, 56, 108, 198, 198, 108, 108, 238, 0, 28, 48, 24, 124, 204, 204, 120, 0, 0, 0, 126, 219, 219, 126, 0, 0, 6, 12, 126, 219, 219, 126, 96, 192, 56, 96, 192, 248, 192, 96, 56, 0, 120, 204, 204, 204, 204, 204, 204, 0, 0, 252, 0, 252, 0, 252, 0, 0, 48, 48, 252, 48, 48, 0, 252, 0, 96, 48, 24, 48, 96, 0, 252, 0, 24, 48, 96, 48, 24, 0, 252, 0, 14, 27, 27, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 216, 216, 112, 48, 48, 0, 252, 0, 48, 48, 0, 0, 118, 220, 0, 118, 220, 0, 0, 56, 108, 108, 56, 0, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 15, 12, 12, 12, 236, 108, 60, 28, 120, 108, 108, 108, 108, 0, 0, 0, 112, 24, 48, 96, 120, 0, 0, 0, 0, 0, 60, 60, 60, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 129, 165, 129, 129, 189, 153, 129, 126, 0, 0, 0, 0, 0, 126, 255, 219, 255, 255, 195, 231, 255, 126, 0, 0, 0, 0, 0, 0, 108, 254, 254, 254, 254, 124, 56, 16, 0, 0, 0, 0, 0, 0, 16, 56, 124, 254, 124, 56, 16, 0, 0, 0, 0, 0, 0, 24, 60, 60, 231, 231, 231, 24, 24, 60, 0, 0, 0, 0, 0, 24, 60, 126, 255, 255, 126, 24, 24, 60, 0, 0, 0, 0, 0, 0, 0, 0, 24, 60, 60, 24, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 231, 195, 195, 231, 255, 255, 255, 255, 255, 0, 0, 0, 0, 60, 102, 66, 66, 102, 60, 0, 0, 0, 0, 255, 255, 255, 255, 195, 153, 189, 189, 153, 195, 255, 255, 255, 255, 0, 0, 30, 14, 26, 50, 120, 204, 204, 204, 120, 0, 0, 0, 0, 0, 60, 102, 102, 102, 60, 24, 126, 24, 24, 0, 0, 0, 0, 0, 63, 51, 63, 48, 48, 48, 112, 240, 224, 0, 0, 0, 0, 0, 127, 99, 127, 99, 99, 99, 103, 231, 230, 192, 0, 0, 0, 0, 24, 24, 219, 60, 231, 60, 219, 24, 24, 0, 0, 0, 0, 0, 128, 192, 224, 248, 254, 248, 224, 192, 128, 0, 0, 0, 0, 0, 2, 6, 14, 62, 254, 62, 14, 6, 2, 0, 0, 0, 0, 0, 24, 60, 126, 24, 24, 24, 126, 60, 24, 0, 0, 0, 0, 0, 102, 102, 102, 102, 102, 102, 0, 102, 102, 0, 0, 0, 0, 0, 127, 219, 219, 219, 123, 27, 27, 27, 27, 0, 0, 0, 0, 124, 198, 96, 56, 108, 198, 198, 108, 56, 12, 198, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 254, 254, 0, 0, 0, 0, 0, 24, 60, 126, 24, 24, 24, 126, 60, 24, 126, 0, 0, 0, 0, 24, 60, 126, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 24, 126, 60, 24, 0, 0, 0, 0, 0, 0, 0, 24, 12, 254, 12, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 96, 254, 96, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 192, 192, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 108, 254, 108, 40, 0, 0, 0, 0, 0, 0, 0, 0, 16, 56, 56, 124, 124, 254, 254, 0, 0, 0, 0, 0, 0, 0, 254, 254, 124, 124, 56, 56, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 60, 60, 60, 24, 24, 0, 24, 24, 0, 0, 0, 0, 102, 102, 102, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 108, 254, 108, 108, 108, 254, 108, 108, 0, 0, 0, 24, 24, 124, 198, 194, 192, 124, 6, 134, 198, 124, 24, 24, 0, 0, 0, 0, 0, 194, 198, 12, 24, 48, 102, 198, 0, 0, 0, 0, 0, 56, 108, 108, 56, 118, 220, 204, 204, 118, 0, 0, 0, 0, 48, 48, 48, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 24, 48, 48, 48, 48, 48, 24, 12, 0, 0, 0, 0, 0, 48, 24, 12, 12, 12, 12, 12, 24, 48, 0, 0, 0, 0, 0, 0, 0, 102, 60, 255, 60, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 126, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 24, 48, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 0, 0, 2, 6, 12, 24, 48, 96, 192, 128, 0, 0, 0, 0, 0, 0, 124, 198, 206, 222, 246, 230, 198, 198, 124, 0, 0, 0, 0, 0, 24, 56, 120, 24, 24, 24, 24, 24, 126, 0, 0, 0, 0, 0, 124, 198, 6, 12, 24, 48, 96, 198, 254, 0, 0, 0, 0, 0, 124, 198, 6, 6, 60, 6, 6, 198, 124, 0, 0, 0, 0, 0, 12, 28, 60, 108, 204, 254, 12, 12, 30, 0, 0, 0, 0, 0, 254, 192, 192, 192, 252, 6, 6, 198, 124, 0, 0, 0, 0, 0, 56, 96, 192, 192, 252, 198, 198, 198, 124, 0, 0, 0, 0, 0, 254], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 5860925);
allocate([198, 6, 12, 24, 48, 48, 48, 48, 0, 0, 0, 0, 0, 124, 198, 198, 198, 124, 198, 198, 198, 124, 0, 0, 0, 0, 0, 124, 198, 198, 198, 126, 6, 6, 12, 120, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 24, 24, 0, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 24, 24, 48, 0, 0, 0, 0, 0, 6, 12, 24, 48, 96, 48, 24, 12, 6, 0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 96, 48, 24, 12, 6, 12, 24, 48, 96, 0, 0, 0, 0, 0, 124, 198, 198, 12, 24, 24, 0, 24, 24, 0, 0, 0, 0, 0, 124, 198, 198, 222, 222, 222, 220, 192, 124, 0, 0, 0, 0, 0, 16, 56, 108, 198, 198, 254, 198, 198, 198, 0, 0, 0, 0, 0, 252, 102, 102, 102, 124, 102, 102, 102, 252, 0, 0, 0, 0, 0, 60, 102, 194, 192, 192, 192, 194, 102, 60, 0, 0, 0, 0, 0, 248, 108, 102, 102, 102, 102, 102, 108, 248, 0, 0, 0, 0, 0, 254, 102, 98, 104, 120, 104, 98, 102, 254, 0, 0, 0, 0, 0, 254, 102, 98, 104, 120, 104, 96, 96, 240, 0, 0, 0, 0, 0, 60, 102, 194, 192, 192, 222, 198, 102, 58, 0, 0, 0, 0, 0, 198, 198, 198, 198, 254, 198, 198, 198, 198, 0, 0, 0, 0, 0, 60, 24, 24, 24, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 30, 12, 12, 12, 12, 12, 204, 204, 120, 0, 0, 0, 0, 0, 230, 102, 108, 108, 120, 108, 108, 102, 230, 0, 0, 0, 0, 0, 240, 96, 96, 96, 96, 96, 98, 102, 254, 0, 0, 0, 0, 0, 198, 238, 254, 254, 214, 198, 198, 198, 198, 0, 0, 0, 0, 0, 198, 230, 246, 254, 222, 206, 198, 198, 198, 0, 0, 0, 0, 0, 56, 108, 198, 198, 198, 198, 198, 108, 56, 0, 0, 0, 0, 0, 252, 102, 102, 102, 124, 96, 96, 96, 240, 0, 0, 0, 0, 0, 124, 198, 198, 198, 198, 214, 222, 124, 12, 14, 0, 0, 0, 0, 252, 102, 102, 102, 124, 108, 102, 102, 230, 0, 0, 0, 0, 0, 124, 198, 198, 96, 56, 12, 198, 198, 124, 0, 0, 0, 0, 0, 126, 126, 90, 24, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 198, 198, 198, 198, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 198, 198, 198, 198, 198, 198, 108, 56, 16, 0, 0, 0, 0, 0, 198, 198, 198, 198, 214, 214, 254, 124, 108, 0, 0, 0, 0, 0, 198, 198, 108, 56, 56, 56, 108, 198, 198, 0, 0, 0, 0, 0, 102, 102, 102, 102, 60, 24, 24, 24, 60, 0, 0, 0, 0, 0, 254, 198, 140, 24, 48, 96, 194, 198, 254, 0, 0, 0, 0, 0, 60, 48, 48, 48, 48, 48, 48, 48, 60, 0, 0, 0, 0, 0, 128, 192, 224, 112, 56, 28, 14, 6, 2, 0, 0, 0, 0, 0, 60, 12, 12, 12, 12, 12, 12, 12, 60, 0, 0, 0, 16, 56, 108, 198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 48, 48, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 12, 124, 204, 204, 118, 0, 0, 0, 0, 0, 224, 96, 96, 120, 108, 102, 102, 102, 124, 0, 0, 0, 0, 0, 0, 0, 0, 124, 198, 192, 192, 198, 124, 0, 0, 0, 0, 0, 28, 12, 12, 60, 108, 204, 204, 204, 118, 0, 0, 0, 0, 0, 0, 0, 0, 124, 198, 254, 192, 198, 124, 0, 0, 0, 0, 0, 56, 108, 100, 96, 240, 96, 96, 96, 240, 0, 0, 0, 0, 0, 0, 0, 0, 118, 204, 204, 204, 124, 12, 204, 120, 0, 0, 0, 224, 96, 96, 108, 118, 102, 102, 102, 230, 0, 0, 0, 0, 0, 24, 24, 0, 56, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 6, 6, 0, 14, 6, 6, 6, 6, 102, 102, 60, 0, 0, 0, 224, 96, 96, 102, 108, 120, 108, 102, 230, 0, 0, 0, 0, 0, 56, 24, 24, 24, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 0, 0, 0, 236, 254, 214, 214, 214, 198, 0, 0, 0, 0, 0, 0, 0, 0, 220, 102, 102, 102, 102, 102, 0, 0, 0, 0, 0, 0, 0, 0, 124, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 0, 0, 0, 220, 102, 102, 102, 124, 96, 96, 240, 0, 0, 0, 0, 0, 0, 118, 204, 204, 204, 124, 12, 12, 30, 0, 0, 0, 0, 0, 0, 220, 118, 102, 96, 96, 240, 0, 0, 0, 0, 0, 0, 0, 0, 124, 198, 112, 28, 198, 124, 0, 0, 0, 0, 0, 16, 48, 48, 252, 48, 48, 48, 54, 28, 0, 0, 0, 0, 0, 0, 0, 0, 204, 204, 204, 204, 204, 118, 0, 0, 0, 0, 0, 0, 0, 0, 102, 102, 102, 102, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 198, 198, 214, 214, 254, 108, 0, 0, 0, 0, 0, 0, 0, 0, 198, 108, 56, 56, 108, 198, 0, 0, 0, 0, 0, 0, 0, 0, 198, 198, 198, 198, 126, 6, 12, 248, 0, 0, 0, 0, 0, 0, 254, 204, 24, 48, 102, 254, 0, 0, 0, 0, 0, 14, 24, 24, 24, 112, 24, 24, 24, 14, 0, 0, 0, 0, 0, 24, 24, 24, 24, 0, 24, 24, 24, 24, 0, 0, 0, 0, 0, 112, 24, 24, 24, 14, 24, 24, 24, 112, 0, 0, 0, 0, 0, 118, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 56, 108, 198, 198, 254, 0, 0, 0, 0, 0, 0, 60, 102, 194, 192, 192, 194, 102, 60, 12, 6, 124, 0, 0, 0, 204, 204, 0, 204, 204, 204, 204, 204, 118, 0, 0, 0, 0, 12, 24, 48, 0, 124, 198, 254, 192, 198, 124, 0, 0, 0, 0, 16, 56, 108, 0, 120, 12, 124, 204, 204, 118, 0, 0, 0, 0, 0, 204, 204, 0, 120, 12, 124, 204, 204, 118, 0, 0, 0, 0, 96, 48, 24, 0, 120, 12, 124, 204, 204, 118, 0, 0, 0, 0, 56, 108, 56, 0, 120, 12, 124, 204, 204, 118, 0, 0, 0, 0, 0, 0, 0, 60, 102, 96, 102, 60, 12, 6, 60, 0, 0, 0, 16, 56, 108, 0, 124, 198, 254, 192, 198, 124, 0, 0, 0, 0, 0, 204, 204, 0, 124, 198, 254, 192, 198, 124, 0, 0, 0, 0, 96, 48, 24, 0, 124, 198, 254, 192, 198, 124, 0, 0, 0, 0, 0, 102, 102, 0, 56, 24, 24, 24, 24, 60, 0, 0, 0, 0, 24, 60, 102, 0, 56, 24, 24, 24, 24, 60, 0, 0, 0, 0, 96, 48, 24, 0, 56, 24, 24, 24, 24, 60, 0, 0, 0, 0, 198, 198, 16, 56, 108, 198, 198, 254, 198, 198, 0, 0, 0, 56, 108, 56, 0, 56, 108, 198, 198, 254, 198, 198, 0, 0, 0, 24, 48, 96, 0, 254, 102, 96, 124, 96, 102, 254, 0, 0, 0, 0, 0, 0, 0, 204, 118, 54, 126, 216, 216, 110, 0, 0, 0, 0, 0, 62, 108, 204, 204, 254, 204, 204, 204, 206, 0, 0, 0, 0, 16, 56, 108, 0, 124, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 198, 198, 0, 124, 198, 198, 198, 198, 124, 0, 0, 0, 0, 96, 48, 24, 0, 124, 198, 198, 198, 198, 124, 0, 0, 0, 0, 48, 120, 204, 0, 204, 204, 204, 204, 204, 118, 0, 0, 0, 0, 96, 48, 24, 0, 204, 204, 204, 204, 204, 118, 0, 0, 0, 0, 0, 198, 198, 0, 198, 198, 198, 198, 126, 6, 12, 120, 0, 0, 198, 198, 56, 108, 198, 198, 198, 198, 108, 56, 0, 0, 0, 0, 198, 198, 0, 198, 198, 198, 198, 198, 198, 124, 0, 0, 0, 0, 24, 24, 60, 102, 96, 96, 102, 60, 24, 24, 0, 0, 0, 0, 56, 108, 100, 96, 240, 96, 96, 96, 230, 252, 0, 0, 0, 0, 0, 102, 102, 60, 24, 126, 24, 126, 24, 24, 0, 0, 0, 0, 248, 204, 204, 248, 196, 204, 222, 204, 204, 198, 0, 0, 0, 0, 14, 27, 24, 24, 24, 126, 24, 24, 24, 24, 216, 112, 0, 0, 24, 48, 96, 0, 120, 12, 124, 204, 204, 118, 0, 0, 0, 0, 12, 24, 48, 0, 56, 24, 24, 24, 24, 60, 0, 0, 0, 0, 24, 48, 96, 0, 124, 198, 198, 198, 198, 124, 0, 0, 0, 0, 24, 48, 96, 0, 204, 204, 204, 204, 204, 118, 0, 0, 0, 0, 0, 118, 220, 0, 220, 102, 102, 102, 102, 102, 0, 0, 0, 118, 220, 0, 198, 230, 246, 254, 222, 206, 198, 198, 0, 0, 0, 0, 60, 108, 108, 62, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 56, 108, 108, 56, 0, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 48, 48, 96, 198, 198, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 192, 192, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 6, 6, 6, 0, 0, 0, 0, 0, 192, 192, 198, 204, 216, 48, 96, 220, 134, 12, 24, 62, 0, 0, 192, 192, 198, 204, 216, 48, 102, 206, 158, 62, 6, 6, 0, 0, 0, 24, 24, 0, 24, 24, 60, 60, 60, 24, 0, 0, 0, 0, 0, 0, 0, 54, 108, 216, 108, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 108, 54, 108, 216, 0, 0, 0, 0, 0, 17, 68, 17, 68, 17, 68, 17, 68, 17, 68, 17, 68, 17, 68, 85, 170, 85, 170, 85, 170, 85, 170, 85, 170, 85, 170, 85, 170, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 248, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 248, 24, 248, 24, 24, 24, 24, 24, 24, 54, 54, 54, 54, 54, 54, 54, 246, 54, 54, 54, 54, 54, 54, 0, 0, 0, 0, 0, 0, 0, 254, 54, 54, 54, 54, 54, 54, 0, 0, 0, 0, 0, 248, 24, 248, 24, 24, 24, 24, 24, 24, 54, 54, 54, 54, 54, 246, 6, 246, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 0, 0, 0, 0, 0, 254, 6, 246, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 246, 6, 254, 0, 0, 0, 0, 0, 0, 54, 54, 54, 54, 54, 54, 54, 254, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 248, 24, 248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 31, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 24, 24, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 31, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 24, 24, 255, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 31, 24, 31, 24, 24, 24, 24, 24, 24, 54, 54, 54, 54, 54, 54, 54, 55, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 55, 48, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 48, 55, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 247, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 247, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 55, 48, 55, 54, 54, 54, 54, 54, 54, 0, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 0, 0, 54, 54, 54, 54, 54, 247, 0, 247, 54, 54, 54, 54, 54, 54, 24, 24, 24, 24, 24, 255, 0, 255, 0, 0, 0, 0, 0, 0, 54, 54, 54, 54, 54, 54, 54, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 255, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 255, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 63, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 31, 24, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 24, 31, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 63, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 255, 54, 54, 54, 54, 54, 54, 24, 24, 24, 24, 24, 255, 24, 255, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 24, 24, 24, 24, 24, 24, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 220, 216, 216, 220, 118, 0, 0, 0, 0, 0, 0, 0, 124, 198, 252, 198, 198, 252, 192, 192, 64, 0, 0, 0, 254, 198, 198, 192, 192, 192, 192, 192, 192, 0, 0, 0, 0, 0, 0, 0, 254, 108, 108, 108, 108, 108, 108, 0, 0, 0, 0, 0, 254, 198, 96, 48, 24, 48, 96, 198, 254, 0, 0, 0, 0, 0, 0, 0, 0, 126, 216, 216, 216, 216, 112, 0, 0, 0, 0, 0, 0, 0, 102, 102, 102, 102, 124, 96, 96, 192, 0, 0, 0, 0, 0, 0, 118, 220, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 126, 24, 60, 102, 102, 102, 60, 24, 126, 0, 0, 0, 0, 0, 56, 108, 198, 198, 254, 198, 198, 108, 56, 0, 0, 0, 0, 0, 56, 108, 198, 198, 198, 108, 108, 108, 238, 0, 0, 0, 0, 0, 30, 48, 24, 12, 62, 102, 102, 102, 60, 0, 0, 0, 0, 0, 0, 0, 0, 126, 219, 219, 126, 0, 0, 0, 0, 0, 0, 0, 3, 6, 126, 219, 219, 243, 126, 96, 192, 0, 0, 0, 0, 0, 28, 48, 96, 96, 124, 96, 96, 48, 28, 0, 0, 0, 0, 0, 0, 124, 198, 198, 198, 198, 198, 198, 198, 0, 0, 0, 0, 0, 0, 254, 0, 0, 254, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 24, 24, 126, 24, 24, 0, 0, 255, 0, 0, 0, 0, 0, 48, 24, 12, 6, 12, 24, 48, 0, 126, 0, 0, 0, 0, 0, 12, 24, 48, 96, 48, 24, 12, 0, 126, 0, 0, 0, 0, 0, 14, 27, 27, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 216, 216, 112, 0, 0, 0, 0, 0, 0, 24, 24, 0, 126, 0, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 118, 220, 0, 118, 220, 0, 0, 0, 0, 0, 0, 56, 108, 108, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 15, 12, 12, 12, 12, 12, 236, 108, 60, 28, 0, 0, 0, 0, 216, 108, 108, 108, 108, 108, 0, 0, 0, 0, 0, 0, 0, 0, 112, 216, 48, 96, 200, 248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 124, 124, 124, 124, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 129, 165, 129, 129, 189, 153, 129, 129, 126, 0, 0, 0, 0, 0, 0, 126, 255, 219, 255, 255, 195, 231, 255, 255, 126, 0, 0, 0, 0, 0, 0, 0, 0, 108, 254, 254, 254, 254, 124, 56, 16, 0, 0, 0, 0, 0, 0, 0, 0, 16, 56, 124, 254, 124, 56, 16, 0, 0, 0, 0, 0, 0, 0, 0, 24, 60, 60, 231, 231, 231, 24, 24, 60, 0, 0, 0, 0, 0, 0, 0, 24, 60, 126, 255, 255, 126, 24, 24, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 60, 60, 24, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 231, 195, 195, 231, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 60, 102, 66, 66, 102, 60, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 195, 153, 189, 189, 153, 195, 255, 255, 255, 255, 255, 0, 0, 30, 14, 26, 50, 120, 204, 204, 204, 204, 120, 0, 0, 0, 0, 0, 0, 60, 102, 102, 102, 102, 60, 24, 126, 24, 24, 0, 0, 0, 0, 0, 0, 63, 51, 63, 48, 48, 48, 48, 112, 240, 224, 0, 0, 0, 0, 0, 0, 127, 99, 127, 99, 99, 99, 99, 103, 231, 230, 192, 0, 0, 0, 0, 0, 0, 24, 24, 219, 60, 231, 60, 219, 24, 24, 0, 0, 0, 0, 0, 128, 192, 224, 240, 248, 254, 248, 240, 224, 192, 128, 0, 0, 0, 0, 0, 2, 6, 14, 30, 62, 254, 62, 30, 14, 6, 2, 0, 0, 0, 0, 0, 0, 24, 60, 126, 24, 24, 24, 126, 60, 24, 0, 0, 0, 0, 0, 0, 0, 102, 102, 102, 102, 102, 102, 102, 0, 102, 102, 0, 0, 0, 0, 0, 0, 127, 219, 219, 219, 123, 27, 27, 27, 27, 27, 0, 0, 0, 0, 0, 124, 198, 96, 56, 108, 198, 198, 108, 56, 12, 198, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 254, 254, 254, 0, 0, 0, 0, 0, 0, 24, 60, 126, 24, 24, 24, 126, 60, 24, 126, 0, 0, 0, 0, 0, 0, 24, 60, 126, 24, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 24, 24, 126, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 12, 254, 12, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 96, 254, 96, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 192, 192, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 102, 255, 102, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 56, 56, 124, 124, 254, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 254, 124, 124, 56, 56, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 60, 60, 60, 24, 24, 24, 0, 24, 24, 0, 0, 0, 0, 0, 102, 102, 102, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 108, 254, 108, 108, 108, 254, 108, 108, 0, 0, 0, 0, 24, 24, 124, 198, 194, 192, 124, 6, 6, 134, 198, 124, 24, 24, 0, 0, 0, 0, 0, 0, 194, 198, 12, 24, 48, 96, 198, 134, 0, 0, 0, 0, 0, 0, 56, 108, 108, 56, 118, 220, 204, 204, 204, 118, 0, 0, 0, 0, 0, 48, 48, 48, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 24, 48, 48, 48, 48, 48, 48, 24, 12, 0, 0, 0, 0, 0, 0, 48, 24, 12, 12, 12, 12, 12, 12, 24, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 60, 255, 60, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 126, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 24, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 2, 6, 12, 24, 48, 96, 192, 128, 0, 0, 0, 0, 0, 0, 60, 102, 195, 195, 219, 219, 195, 195, 102, 60, 0, 0, 0, 0, 0, 0, 24, 56, 120, 24, 24, 24, 24, 24, 24, 126, 0, 0, 0, 0, 0, 0, 124, 198, 6, 12, 24, 48, 96, 192, 198, 254, 0, 0, 0, 0, 0, 0, 124, 198, 6, 6, 60, 6, 6, 6, 198, 124, 0, 0, 0, 0, 0, 0, 12, 28, 60, 108, 204, 254, 12, 12, 12, 30, 0, 0, 0, 0, 0, 0, 254, 192, 192, 192, 252, 6, 6, 6, 198, 124, 0, 0, 0, 0, 0, 0, 56, 96, 192, 192, 252, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 0, 254, 198, 6, 6, 12, 24, 48, 48, 48, 48, 0, 0, 0, 0, 0, 0, 124, 198, 198, 198, 124, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 0, 124, 198, 198, 198, 126, 6, 6, 6, 12, 120, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 24, 24, 48, 0, 0, 0, 0, 0, 0, 0, 6, 12, 24, 48, 96, 48, 24, 12, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 48, 24, 12, 6, 12, 24, 48, 96, 0, 0, 0, 0, 0, 0, 124, 198, 198, 12, 24, 24, 24, 0, 24, 24, 0, 0, 0, 0, 0, 0, 0, 124, 198, 198, 222, 222, 222, 220, 192, 124, 0, 0, 0, 0, 0, 0, 16, 56, 108, 198, 198, 254, 198, 198, 198, 198, 0, 0, 0, 0, 0, 0, 252, 102, 102, 102, 124, 102, 102, 102, 102, 252, 0, 0, 0, 0, 0, 0, 60, 102, 194, 192, 192, 192, 192, 194, 102, 60, 0, 0, 0, 0, 0, 0, 248, 108, 102, 102, 102, 102, 102, 102, 108, 248, 0, 0, 0, 0, 0, 0, 254, 102, 98, 104, 120, 104, 96, 98, 102, 254, 0, 0, 0, 0, 0, 0, 254, 102, 98, 104, 120, 104, 96, 96, 96, 240, 0, 0, 0, 0, 0, 0, 60, 102, 194, 192, 192, 222, 198, 198, 102, 58, 0, 0, 0, 0, 0, 0, 198, 198, 198, 198, 254, 198, 198, 198, 198, 198, 0, 0, 0, 0, 0, 0, 60, 24, 24, 24, 24, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 0, 30, 12, 12, 12, 12, 12, 204, 204, 204, 120, 0, 0, 0, 0, 0, 0, 230, 102, 102, 108, 120, 120, 108, 102, 102, 230, 0, 0, 0, 0, 0, 0, 240, 96, 96, 96, 96, 96, 96, 98, 102, 254, 0, 0, 0, 0, 0, 0, 195, 231, 255, 255, 219, 195, 195, 195, 195, 195, 0, 0, 0, 0, 0, 0, 198, 230, 246, 254, 222, 206, 198, 198, 198, 198, 0, 0, 0, 0, 0, 0, 124, 198, 198, 198, 198, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 0, 252, 102, 102, 102, 124, 96, 96, 96, 96, 240, 0, 0, 0, 0, 0, 0, 124, 198, 198, 198, 198, 198, 198, 214, 222, 124, 12, 14, 0, 0, 0, 0, 252, 102, 102, 102, 124, 108, 102, 102, 102, 230, 0, 0, 0, 0, 0, 0, 124, 198, 198, 96, 56, 12, 6, 198, 198, 124, 0, 0, 0, 0, 0, 0, 255, 219, 153, 24, 24, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 0, 198, 198, 198, 198, 198, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 0, 195, 195, 195, 195, 195, 195, 195, 102, 60, 24, 0, 0, 0, 0, 0, 0, 195, 195, 195, 195, 195, 219, 219, 255, 102, 102, 0, 0, 0, 0, 0, 0, 195, 195, 102, 60, 24, 24, 60, 102, 195, 195, 0, 0, 0, 0, 0, 0, 195, 195, 195, 102, 60, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 0, 255, 195, 134, 12, 24, 48, 96, 193, 195, 255, 0, 0, 0, 0, 0, 0, 60, 48, 48, 48, 48, 48, 48, 48, 48, 60, 0, 0, 0, 0, 0, 0, 0, 128, 192, 224, 112, 56, 28, 14, 6, 2, 0, 0, 0, 0, 0, 0, 60, 12, 12, 12, 12, 12, 12, 12, 12, 60, 0, 0, 0, 0, 16, 56, 108, 198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 48, 48, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 12, 124, 204, 204, 204, 118, 0, 0, 0, 0, 0, 0, 224, 96, 96, 120, 108, 102, 102, 102, 102, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 198, 192, 192, 192, 198, 124, 0, 0, 0, 0, 0, 0, 28, 12, 12, 60, 108, 204, 204, 204, 204, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 198, 254, 192, 192, 198, 124, 0, 0, 0, 0, 0, 0, 56, 108, 100, 96, 240, 96, 96, 96, 96, 240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 204, 204, 204, 204, 204, 124, 12, 204, 120, 0, 0, 0, 224, 96, 96, 108, 118, 102, 102, 102, 102, 230, 0, 0, 0, 0, 0, 0, 24, 24, 0, 56, 24, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 0, 6, 6, 0, 14, 6, 6, 6, 6, 6, 6, 102, 102, 60, 0, 0, 0, 224, 96, 96, 102, 108, 120, 120, 108, 102, 230, 0, 0, 0, 0, 0, 0, 56, 24, 24, 24, 24, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 230, 255, 219, 219, 219, 219, 219, 0, 0, 0, 0, 0, 0, 0, 0, 0, 220, 102, 102, 102, 102, 102, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 198, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 220, 102, 102, 102, 102, 102, 124, 96, 96, 240, 0, 0, 0, 0, 0, 0, 118, 204, 204, 204, 204, 204, 124, 12, 12, 30, 0, 0, 0, 0, 0, 0, 220, 118, 102, 96, 96, 96, 240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 198, 96, 56, 12, 198, 124, 0, 0, 0, 0, 0, 0, 16, 48, 48, 252, 48, 48, 48, 48, 54, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 204, 204, 204, 204, 204, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 195, 195, 195, 102, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 195, 195, 219, 219, 255, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 102, 60, 24, 60, 102, 195, 0, 0, 0, 0, 0, 0, 0, 0, 0, 198, 198, 198, 198, 198, 198, 126, 6, 12, 248, 0, 0, 0, 0, 0, 0, 254, 204, 24, 48, 96, 198, 254, 0, 0, 0, 0, 0, 0, 14, 24, 24, 24, 112, 24, 24, 24, 24, 14, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 0, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 112, 24, 24, 24, 14, 24, 24, 24, 24, 112, 0, 0, 0, 0, 0, 0, 118, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 56, 108, 198, 198, 198, 254, 0, 0, 0, 0, 0, 0, 0, 60, 102, 194, 192, 192, 192, 194, 102, 60, 12, 6, 124, 0, 0, 0, 0, 204, 0, 0, 204, 204, 204, 204, 204, 204, 118, 0, 0, 0, 0, 0, 12, 24, 48, 0, 124, 198, 254, 192, 192, 198, 124, 0, 0, 0, 0, 0, 16, 56, 108, 0, 120, 12, 124, 204, 204, 204, 118, 0, 0, 0, 0, 0, 0, 204, 0, 0, 120, 12, 124, 204, 204, 204, 118, 0, 0, 0, 0, 0, 96, 48, 24, 0, 120, 12, 124, 204, 204, 204, 118, 0, 0, 0, 0, 0, 56, 108, 56, 0, 120, 12, 124, 204, 204, 204, 118, 0, 0, 0, 0, 0, 0, 0, 0, 60, 102, 96, 96, 102, 60, 12, 6, 60, 0, 0, 0, 0, 16, 56, 108, 0, 124, 198, 254, 192, 192, 198, 124, 0, 0, 0, 0, 0, 0, 198, 0, 0, 124, 198, 254, 192, 192, 198, 124, 0, 0, 0, 0, 0, 96, 48, 24, 0, 124, 198, 254, 192, 192, 198, 124, 0, 0, 0, 0, 0, 0, 102, 0, 0, 56, 24, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 24, 60, 102, 0, 56, 24, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 96, 48, 24, 0, 56, 24, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 198, 0, 16, 56, 108, 198, 198, 254, 198, 198, 198, 0, 0, 0, 0, 56, 108, 56, 0, 56, 108, 198, 198, 254, 198, 198, 198, 0, 0, 0, 0, 24, 48, 96, 0, 254, 102, 96, 124, 96, 96, 102, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 110, 59, 27, 126, 216, 220, 119, 0, 0, 0, 0, 0, 0, 62, 108, 204, 204, 254, 204, 204, 204, 204, 206, 0, 0, 0, 0, 0, 16, 56, 108, 0, 124, 198, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 0, 198, 0, 0, 124, 198, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 96, 48, 24, 0, 124, 198, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 48, 120, 204, 0, 204, 204, 204, 204, 204, 204, 118, 0, 0, 0, 0, 0, 96, 48, 24, 0, 204, 204, 204, 204, 204, 204, 118, 0, 0, 0, 0, 0, 0, 198, 0, 0, 198, 198, 198, 198, 198, 198, 126, 6, 12, 120, 0, 0, 198, 0, 124, 198, 198, 198, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 198, 0, 198, 198, 198, 198, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 24, 24, 126, 195, 192, 192, 192, 195, 126, 24, 24, 0, 0, 0, 0, 0, 56, 108, 100, 96, 240, 96, 96, 96, 96, 230, 252, 0, 0, 0, 0, 0, 0, 195, 102, 60, 24, 255, 24, 255, 24, 24, 24, 0, 0, 0, 0, 0, 252, 102, 102, 124, 98, 102, 111, 102, 102, 102, 243, 0, 0, 0, 0, 0, 14, 27, 24, 24, 24, 126, 24, 24, 24, 24, 24, 216, 112, 0, 0, 0, 24, 48, 96, 0, 120, 12, 124, 204, 204, 204, 118, 0, 0, 0, 0, 0, 12, 24, 48, 0, 56, 24, 24, 24, 24, 24, 60, 0, 0, 0, 0, 0, 24, 48, 96, 0, 124, 198, 198, 198, 198, 198, 124, 0, 0, 0, 0, 0, 24, 48, 96, 0, 204, 204, 204, 204, 204, 204, 118, 0, 0, 0, 0, 0, 0, 118, 220, 0, 220, 102, 102, 102, 102, 102, 102, 0, 0, 0, 0, 118, 220, 0, 198, 230, 246, 254, 222, 206, 198, 198, 198, 0, 0, 0, 0, 0, 60, 108, 108, 62, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 108, 108, 56, 0, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 48, 48, 96, 192, 198, 198, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 192, 192, 192, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 192, 192, 194, 198, 204, 24, 48, 96, 206, 155, 6, 12, 31, 0, 0, 0, 192, 192, 194, 198, 204, 24, 48, 102, 206, 150, 62, 6, 6, 0, 0, 0, 0, 24, 24, 0, 24, 24, 24, 60, 60, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 108, 216, 108, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 108, 54, 108, 216, 0, 0, 0, 0, 0, 0, 17, 68, 17, 68, 17, 68, 17, 68, 17, 68, 17, 68, 17, 68, 17, 68, 85, 170, 85, 170, 85, 170, 85, 170, 85, 170, 85, 170, 85, 170, 85, 170, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 221, 119, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 248, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 248, 24, 248, 24, 24, 24, 24, 24, 24, 24, 24, 54, 54, 54, 54, 54, 54, 54, 246, 54, 54, 54, 54, 54, 54, 54, 54, 0, 0, 0, 0, 0, 0, 0, 254, 54, 54, 54, 54, 54, 54, 54, 54, 0, 0, 0, 0, 0, 248, 24, 248, 24, 24, 24, 24, 24, 24, 24, 24, 54, 54, 54, 54, 54, 246, 6, 246, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 0, 0, 0, 0, 0, 254, 6, 246, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 246, 6, 254, 0, 0, 0, 0, 0, 0, 0, 0, 54, 54, 54, 54, 54, 54, 54, 254, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 248, 24, 248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 31, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 24, 24, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 31, 24, 24, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 24, 24, 255, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 31, 24, 31, 24, 24, 24, 24, 24, 24, 24, 24, 54, 54, 54, 54, 54, 54, 54, 55, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 55, 48, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 48, 55, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 247, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 247, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 55, 48, 55, 54, 54, 54, 54, 54, 54, 54, 54, 0, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 54, 54, 54, 54, 54, 247, 0, 247, 54, 54, 54, 54, 54, 54, 54, 54, 24, 24, 24, 24, 24, 255, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 54, 54, 54, 54, 54, 54, 54, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 255, 24, 24, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 255, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 63, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 31, 24, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 24, 31, 24, 24, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 63, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 255, 54, 54, 54, 54, 54, 54, 54, 54, 24, 24, 24, 24, 24, 255, 24, 255, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 24, 24, 24, 24, 24, 24, 24, 24, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 220, 216, 216, 216, 220, 118, 0, 0, 0, 0, 0, 0, 120, 204, 204, 204, 216, 204, 198, 198, 198, 204, 0, 0, 0, 0, 0, 0, 254, 198, 198, 192, 192, 192, 192, 192, 192, 192, 0, 0, 0, 0, 0, 0, 0, 0, 254, 108, 108, 108, 108, 108, 108, 108, 0, 0, 0, 0, 0, 0, 0, 254, 198, 96, 48, 24, 48, 96, 198, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 216, 216, 216, 216, 216, 112, 0, 0, 0, 0, 0, 0, 0, 0, 102, 102, 102, 102, 102, 124, 96, 96, 192, 0, 0, 0, 0, 0, 0, 0, 118, 220, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 126, 24, 60, 102, 102, 102, 60, 24, 126, 0, 0, 0, 0, 0, 0, 0, 56, 108, 198, 198, 254, 198, 198, 108, 56, 0, 0, 0, 0, 0, 0, 56, 108, 198, 198, 198, 108, 108, 108, 108, 238, 0, 0, 0, 0, 0, 0, 30, 48, 24, 12, 62, 102, 102, 102, 102, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 219, 219, 219, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 126, 219, 219, 243, 126, 96, 192, 0, 0, 0, 0, 0, 0, 28, 48, 96, 96, 124, 96, 96, 96, 48, 28, 0, 0, 0, 0, 0, 0, 0, 124, 198, 198, 198, 198, 198, 198, 198, 198, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 254, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 126, 24, 24, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 48, 24, 12, 6, 12, 24, 48, 0, 126, 0, 0, 0, 0, 0, 0, 0, 12, 24, 48, 96, 48, 24, 12, 0, 126, 0, 0, 0, 0, 0, 0, 14, 27, 27, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 216, 216, 216, 112, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 0, 126, 0, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 220, 0, 118, 220, 0, 0, 0, 0, 0, 0, 0, 56, 108, 108, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 15, 12, 12, 12, 12, 12, 236, 108, 108, 60, 28, 0, 0, 0, 0, 0, 216, 108, 108, 108, 108, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 216, 48, 96, 200, 248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 124, 124, 124, 124, 124, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 15, 0, 0, 0, 0, 7, 4, 2, 255, 14, 0, 0, 0, 0, 160, 0, 0, 0, 8, 0, 1, 0, 40, 0, 0, 0, 180, 0, 0, 0, 9, 0, 1, 0, 40, 0, 0, 0, 200, 0, 0, 0, 10, 0, 1, 0, 40, 0, 0, 0, 64, 1, 0, 0, 8, 0, 2, 0, 40, 0, 1, 0, 104, 1, 0, 0, 9, 0, 2, 0, 40, 0, 1, 0, 144, 1, 0, 0, 10, 0, 2, 0, 40, 0, 1, 0, 208, 2, 0, 0, 9, 0, 2, 0, 80, 0, 3, 0, 176, 4, 0, 0, 15, 0, 2, 0, 80, 0, 2, 0, 160, 5, 0, 0, 18, 0, 2, 0, 80, 0, 4, 0, 64, 11, 0, 0, 36, 0, 2, 0, 80, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 111, 97, 100, 101, 100, 32, 100, 105, 115, 107, 32, 37, 100, 32, 102, 114, 111, 109, 32, 115, 119, 97, 112, 108, 105, 115, 116, 32, 112, 111, 115, 105, 116, 105, 111, 110, 32, 37, 100, 32, 45, 32, 34, 37, 115, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 105, 115, 107, 99, 97, 99, 104, 105, 110, 103, 32, 114, 101, 115, 101, 116, 32, 102, 111, 114, 32, 110, 111, 114, 109, 97, 108, 32, 109, 111, 117, 110, 116, 101, 100, 32, 100, 114, 105, 118, 101, 115, 46, 0, 0, 0, 0, 73, 109, 97, 103, 101, 76, 111, 97, 100, 101, 114, 58, 32, 105, 109, 97, 103, 101, 32, 102, 105, 108, 101, 32, 119, 105, 116, 104, 32, 97, 100, 100, 105, 116, 105, 111, 110, 97, 108, 32, 100, 97, 116, 97, 44, 32, 109, 105, 103, 104, 116, 32, 110, 111, 116, 32, 108, 111, 97, 100, 33, 0, 0, 0, 73, 110, 116, 32, 49, 51, 32, 66, 105, 111, 115, 32, 100, 105, 115, 107, 0, 0, 0, 0, 0, 0, 0, 0, 115, 119, 97, 112, 105, 109, 103, 0, 83, 119, 97, 112, 32, 73, 109, 97, 103, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 114, 114, 111, 114, 32, 105, 110, 32, 100, 105, 115, 107, 32, 114, 101, 97, 100, 0, 0, 0, 0, 0, 0, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 49, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 53, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 57, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 61, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 5871165);
allocate([244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 76, 244, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 49, 244, 155, 1, 53, 244, 155, 1, 57, 244, 155, 1, 61, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 49, 244, 155, 1, 53, 244, 155, 1, 57, 244, 155, 1, 61, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 49, 244, 155, 1, 53, 244, 155, 1, 57, 244, 155, 1, 61, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 49, 244, 155, 1, 53, 244, 155, 1, 57, 244, 155, 1, 61, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 49, 244, 155, 1, 53, 244, 155, 1, 57, 244, 155, 1, 61, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 49, 244, 155, 1, 53, 244, 155, 1, 57, 244, 155, 1, 61, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 49, 244, 155, 1, 53, 244, 155, 1, 57, 244, 155, 1, 61, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 49, 244, 155, 1, 53, 244, 155, 1, 57, 244, 155, 1, 61, 244, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 64, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 5881405);
allocate([78, 111, 32, 98, 121, 116, 101, 32, 104, 97, 110, 100, 108, 101, 114, 32, 102, 111, 114, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 78, 111, 32, 98, 121, 116, 101, 32, 104, 97, 110, 100, 108, 101, 114, 32, 102, 111, 114, 32, 119, 114, 105, 116, 101, 32, 116, 111, 32, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 210, 155, 1, 48, 0, 0, 0, 208, 209, 155, 1, 48, 0, 0, 0, 73, 108, 108, 101, 103, 97, 108, 32, 112, 97, 103, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 49, 80, 97, 103, 101, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 64, 81, 202, 1, 64, 209, 155, 1, 0, 0, 0, 0, 120, 209, 155, 1, 36, 0, 0, 0, 0, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 54, 80, 65, 71, 73, 78, 71, 0, 32, 82, 202, 1, 112, 209, 155, 1, 120, 40, 5, 0, 0, 0, 0, 0, 80, 97, 103, 101, 102, 97, 117, 108, 116, 32, 100, 105, 100, 110, 39, 116, 32, 99, 111, 114, 114, 101, 99, 116, 32, 116, 97, 98, 108, 101, 0, 0, 80, 97, 103, 101, 102, 97, 117, 108, 116, 32, 100, 105, 100, 110, 39, 116, 32, 99, 111, 114, 114, 101, 99, 116, 32, 112, 97, 103, 101, 0, 0, 0, 0, 0, 0, 0, 40, 210, 155, 1, 1, 2, 0, 0, 2, 2, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 50, 49, 73, 110, 105, 116, 80, 97, 103, 101, 85, 115, 101, 114, 82, 79, 72, 97, 110, 100, 108, 101, 114, 0, 32, 82, 202, 1, 16, 210, 155, 1, 80, 209, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 152, 210, 155, 1, 1, 2, 0, 0, 3, 2, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 49, 53, 73, 110, 105, 116, 80, 97, 103, 101, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 128, 210, 155, 1, 80, 209, 155, 1, 0, 0, 0, 0, 71, 111, 116, 32, 97, 32, 100, 111, 115, 98, 111, 120, 32, 99, 108, 111, 115, 101, 32, 109, 97, 99, 104, 105, 110, 101, 32, 105, 110, 32, 112, 97, 103, 101, 102, 97, 117, 108, 116, 32, 99, 111, 114, 101, 63, 0, 0, 0, 80, 70, 32, 67, 111, 114, 101, 32, 119, 105, 116, 104, 111, 117, 116, 32, 80, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 104, 221, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 26988480);
allocate([67, 65, 76, 76, 66, 65, 67, 75, 58, 67, 97, 110, 39, 116, 32, 97, 108, 108, 111, 99, 97, 116, 101, 32, 104, 97, 110, 100, 108, 101, 114, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 110, 116, 55, 52, 32, 99, 97, 108, 108, 98, 97, 99, 107, 32, 109, 117, 115, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 32, 97, 32, 99, 97, 108, 108, 98, 97, 99, 107, 32, 104, 97, 110, 100, 108, 101, 114, 33, 0, 0, 0, 0, 0, 0, 0, 67, 65, 76, 76, 66, 65, 67, 75, 58, 83, 101, 116, 117, 112, 58, 73, 108, 108, 101, 103, 97, 108, 32, 116, 121, 112, 101, 32, 37, 100, 0, 0, 67, 97, 108, 108, 98, 97, 99, 107, 58, 83, 69, 84, 85, 80, 32, 97, 116, 32, 110, 111, 116, 32, 104, 97, 110, 100, 108, 101, 100, 32, 121, 101, 116, 46, 0, 0, 0, 0, 0, 0, 119, 104, 97, 116, 32, 107, 105, 110, 100, 32, 111, 102, 32, 99, 97, 108, 108, 98, 97, 99, 107, 32, 105, 115, 32, 116, 104, 105, 115, 33, 0, 0, 65, 108, 108, 114, 101, 97, 100, 121, 32, 105, 110, 115, 116, 97, 108, 108, 101, 100, 0, 0, 0, 0, 0, 0, 100, 111, 117, 98, 108, 101, 32, 117, 115, 97, 103, 101, 32, 111, 102, 32, 118, 101, 99, 116, 111, 114, 32, 104, 97, 110, 100, 108, 101, 114, 0, 0, 115, 116, 111, 112, 0, 0, 0, 0, 105, 100, 108, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 108, 108, 101, 103, 97, 108, 32, 67, 97, 108, 108, 66, 97, 99, 107, 32, 67, 97, 108, 108, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 32, 235, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 118, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 118, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 118, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 118, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 118, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 118, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 118, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 118, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 121, 0, 0, 0, 122, 0, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 125, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 128, 0, 0, 0, 121, 0, 0, 0, 122, 0, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 125, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 128, 0, 0, 0, 121, 0, 0, 0, 122, 0, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 125, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 128, 0, 0, 0, 121, 0, 0, 0, 122, 0, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 125, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 128, 0, 0, 0, 121, 0, 0, 0, 122, 0, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 125, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 128, 0, 0, 0, 121, 0, 0, 0, 122, 0, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 125, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 128, 0, 0, 0, 121, 0, 0, 0, 122, 0, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 125, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 128, 0, 0, 0, 121, 0, 0, 0, 122, 0, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 125, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 128, 0, 0, 0, 129, 0, 0, 0, 130, 0, 0, 0, 131, 0, 0, 0, 132, 0, 0, 0, 133, 0, 0, 0, 134, 0, 0, 0, 135, 0, 0, 0, 136, 0, 0, 0, 129, 0, 0, 0, 130, 0, 0, 0, 131, 0, 0, 0, 132, 0, 0, 0, 133, 0, 0, 0, 134, 0, 0, 0, 135, 0, 0, 0, 136, 0, 0, 0, 129, 0, 0, 0, 130, 0, 0, 0, 131, 0, 0, 0, 132, 0, 0, 0, 133, 0, 0, 0, 134, 0, 0, 0, 135, 0, 0, 0, 136, 0, 0, 0, 129, 0, 0, 0, 130, 0, 0, 0, 131, 0, 0, 0, 132, 0, 0, 0, 133, 0, 0, 0, 134, 0, 0, 0, 135, 0, 0, 0, 136, 0, 0, 0, 129, 0, 0, 0, 130, 0, 0, 0, 131, 0, 0, 0, 132, 0, 0, 0, 133, 0, 0, 0, 134, 0, 0, 0, 135, 0, 0, 0, 136, 0, 0, 0, 129, 0, 0, 0, 130, 0, 0, 0, 131, 0, 0, 0, 132, 0, 0, 0, 133, 0, 0, 0, 134, 0, 0, 0, 135, 0, 0, 0, 136, 0, 0, 0, 129, 0, 0, 0, 130, 0, 0, 0, 131, 0, 0, 0, 132, 0, 0, 0, 133, 0, 0, 0, 134, 0, 0, 0, 135, 0, 0, 0, 136, 0, 0, 0, 129, 0, 0, 0, 130, 0, 0, 0, 131, 0, 0, 0, 132, 0, 0, 0, 133, 0, 0, 0, 134, 0, 0, 0, 135, 0, 0, 0, 136, 0, 0, 0, 137, 0, 0, 0, 138, 0, 0, 0, 139, 0, 0, 0, 140, 0, 0, 0, 141, 0, 0, 0, 142, 0, 0, 0, 143, 0, 0, 0, 144, 0, 0, 0, 137, 0, 0, 0, 138, 0, 0, 0, 139, 0, 0, 0, 140, 0, 0, 0, 141, 0, 0, 0, 142, 0, 0, 0, 143, 0, 0, 0, 144, 0, 0, 0, 137, 0, 0, 0, 138, 0, 0, 0, 139, 0, 0, 0, 140, 0, 0, 0, 141, 0, 0, 0, 142, 0, 0, 0, 143, 0, 0, 0, 144, 0, 0, 0, 137, 0, 0, 0, 138, 0, 0, 0, 139, 0, 0, 0, 140, 0, 0, 0, 141, 0, 0, 0, 142, 0, 0, 0, 143, 0, 0, 0, 144, 0, 0, 0, 137, 0, 0, 0, 138, 0, 0, 0, 139, 0, 0, 0, 140, 0, 0, 0, 141, 0, 0, 0, 142, 0, 0, 0, 143, 0, 0, 0, 144, 0, 0, 0, 137, 0, 0, 0, 138, 0, 0, 0, 139, 0, 0, 0, 140, 0, 0, 0, 141, 0, 0, 0, 142, 0, 0, 0, 143, 0, 0, 0, 144, 0, 0, 0, 137, 0, 0, 0, 138, 0, 0, 0, 139, 0, 0, 0, 140, 0, 0, 0, 141, 0, 0, 0, 142, 0, 0, 0, 143, 0, 0, 0, 144, 0, 0, 0, 137, 0, 0, 0, 138, 0, 0, 0, 139, 0, 0, 0, 140, 0, 0, 0, 141, 0, 0, 0, 142, 0, 0, 0, 143, 0, 0, 0, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 255, 255, 255, 255, 73, 108, 108, 101, 103, 97, 108, 32, 71, 82, 80, 52, 32, 67, 97, 108, 108, 32, 37, 100, 0, 0, 0, 0, 67, 80, 85, 58, 48, 70, 58, 66, 65, 58, 73, 108, 108, 101, 103, 97, 108, 32, 115, 117, 98, 102, 117, 110, 99, 116, 105, 111, 110, 32, 37, 88, 0, 0, 0, 0, 0, 0, 0, 0, 67, 80, 85, 58, 54, 54, 58, 48, 70, 58, 66, 65, 58, 73, 108, 108, 101, 103, 97, 108, 32, 115, 117, 98, 102, 117, 110, 99, 116, 105, 111, 110, 32, 37, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 40, 244, 155, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 11, 0, 0, 0, 0, 0, 0, 184, 11, 0, 0, 0, 0, 0, 0, 184, 11, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 108, 108, 101, 103, 97, 108, 32, 84, 83, 83, 32, 102, 111, 114, 32, 115, 119, 105, 116, 99, 104, 44, 32, 115, 101, 108, 101, 99, 116, 111, 114, 61, 37, 120, 44, 32, 115, 119, 105, 116, 99, 104, 116, 121, 112, 101, 61, 37, 120, 0, 0, 0, 0, 0, 0, 84, 83, 83, 32, 110, 111, 116, 32, 98, 117, 115, 121, 32, 102, 111, 114, 32, 73, 82, 69, 84, 0, 0, 0, 84, 83, 83, 32, 98, 117, 115, 121, 32, 102, 111, 114, 32, 74, 77, 80, 47, 67, 65, 76, 76, 47, 73, 78, 84, 0, 0, 0, 0, 0, 0, 0, 50, 56, 54, 32, 116, 97, 115, 107, 32, 115, 119, 105, 116, 99, 104, 0, 84, 97, 115, 107, 32, 115, 119, 105, 116, 99, 104, 32, 119, 105, 116, 104, 32, 67, 83, 32, 98, 101, 121, 111, 110, 100, 32, 108, 105, 109, 105, 116, 115, 0, 0, 0, 0, 0, 0, 0, 84, 97, 115, 107, 32, 115, 119, 105, 116, 99, 104, 32, 119, 105, 116, 104, 32, 110, 111, 110, 32, 112, 114, 101, 115, 101, 110, 116, 32, 99, 111, 100, 101, 45, 115, 101, 103, 109, 101, 110, 116, 0, 0, 0, 0, 0, 0, 0, 84, 97, 115, 107, 32, 67, 83, 32, 82, 80, 76, 32, 33, 61, 32, 68, 80, 76, 0, 0, 0, 0, 0, 0, 84, 97, 115, 107, 32, 67, 83, 32, 82, 80, 76, 32, 60, 32, 68, 80, 76, 0, 0, 0, 0, 0, 0, 0, 84, 97, 115, 107, 32, 115, 119, 105, 116, 99, 104, 32, 67, 83, 32, 84, 121, 112, 101, 32, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 78, 84, 58, 73, 110, 110, 101, 114, 32, 108, 101, 118, 101, 108, 58, 83, 116, 97, 99, 107, 32, 115, 101, 103, 109, 101, 110, 116, 32, 110, 111, 116, 32, 119, 114, 105, 116, 97, 98, 108, 101, 46, 0, 0, 0, 0, 0, 86, 56, 54, 32, 116, 111, 32, 49, 54, 45, 98, 105, 116, 32, 103, 97, 116, 101, 0, 0, 0, 0, 0, 0, 78, 111, 110, 45, 99, 111, 110, 102, 111, 114, 109, 105, 110, 103, 32, 105, 110, 116, 114, 97, 32, 112, 114, 105, 118, 105, 108, 101, 103, 101, 32, 73, 78, 84, 32, 119, 105, 116, 104, 32, 68, 80, 76, 33, 61, 67, 80, 76, 0, 0, 0, 0, 0, 0, 0, 0, 86, 56, 54, 32, 105, 110, 116, 101, 114, 114, 117, 112, 116, 32, 100, 111, 101, 115, 110, 39, 116, 32, 99, 104, 97, 110, 103, 101, 32, 116, 111, 32, 112, 108, 48, 0, 0, 0, 0, 0, 73, 78, 84, 58, 71, 97, 116, 101, 32, 83, 101, 108, 101, 99, 116, 111, 114, 32, 112, 111, 105, 110, 116, 115, 32, 116, 111, 32, 105, 108, 108, 101, 103, 97, 108, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 119, 105, 116, 104, 32, 116, 121, 112, 101, 32, 37, 120, 0, 0, 0, 0, 0, 73, 108, 108, 101, 103, 97, 108, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 116, 121, 112, 101, 32, 37, 88, 32, 102, 111, 114, 32, 105, 110, 116, 32, 37, 88, 0, 0, 0, 73, 82, 69, 84, 32, 102, 114, 111, 109, 32, 112, 109, 111, 100, 101, 32, 116, 111, 32, 118, 56, 54, 32, 119, 105, 116, 104, 32, 67, 80, 76, 33, 61, 48, 0, 0, 0, 0, 0, 0, 86, 77, 32, 70, 108, 97, 103, 32, 105, 110, 32, 49, 54, 45, 98, 105, 116, 32, 105, 114, 101, 116, 0, 0, 73, 82, 69, 84, 58, 73, 108, 108, 101, 103, 97, 108, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 116, 121, 112, 101, 32, 37, 88, 0, 73, 82, 69, 84, 58, 79, 117, 116, 101, 114, 32, 108, 101, 118, 101, 108, 58, 83, 116, 97, 99, 107, 32, 115, 101, 103, 109, 101, 110, 116, 32, 110, 111, 116, 32, 119, 114, 105, 116, 97, 98, 108, 101, 0, 0, 0, 0, 0, 74, 77, 80, 32, 73, 108, 108, 101, 103, 97, 108, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 116, 121, 112, 101, 32, 37, 88, 0, 0, 67, 97, 108, 108, 58, 71, 97, 116, 101, 58, 83, 83, 32, 110, 111, 32, 119, 114, 105, 116, 97, 98, 108, 101, 32, 100, 97, 116, 97, 32, 115, 101, 103, 109, 101, 110, 116, 0, 0, 0, 67, 65, 76, 76, 58, 71, 65, 84, 69, 58, 67, 83, 32, 68, 80, 76, 62, 67, 80, 76, 0, 0, 0, 0, 67, 65, 76, 76, 58, 71, 65, 84, 69, 58, 67, 83, 32, 110, 111, 32, 101, 120, 101, 99, 117, 116, 97, 98, 108, 101, 32, 115, 101, 103, 109, 101, 110, 116, 0, 0, 0, 0, 0, 0, 67, 65, 76, 76, 58, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 116, 121, 112, 101, 32, 37, 120, 32, 117, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 0, 0, 0, 0, 82, 69, 84, 32, 102, 114, 111, 109, 32, 105, 108, 108, 101, 103, 97, 108, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 116, 121, 112, 101, 32, 37, 88, 0, 0, 0, 0, 0, 82, 69, 84, 58, 83, 83, 32, 115, 101, 108, 101, 99, 116, 111, 114, 32, 116, 121, 112, 101, 32, 110, 111, 32, 119, 114, 105, 116, 97, 98, 108, 101, 32, 100, 97, 116, 97, 32, 115, 101, 103, 109, 101, 110, 116, 0, 0, 0, 76, 84, 82, 32, 102, 97, 105, 108, 101, 100, 44, 32, 115, 101, 108, 101, 99, 116, 111, 114, 61, 37, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 79, 83, 66, 111, 120, 32, 115, 119, 105, 116, 99, 104, 101, 100, 32, 116, 111, 32, 109, 97, 120, 32, 99, 121, 99, 108, 101, 115, 44, 32, 98, 101, 99, 97, 117, 115, 101, 32, 111, 102, 32, 116, 104, 101, 32, 115, 101, 116, 116, 105, 110, 103, 58, 32, 99, 121, 99, 108, 101, 115, 61, 97, 117, 116, 111, 46, 32, 73, 102, 32, 116, 104, 101, 32, 103, 97, 109, 101, 32, 114, 117, 110, 115, 32, 116, 111, 111, 32, 102, 97, 115, 116, 32, 116, 114, 121, 32, 97, 32, 102, 105, 120, 101, 100, 32, 99, 121, 99, 108, 101, 115, 32, 97, 109, 111, 117, 110, 116, 32, 105, 110, 32, 68, 79, 83, 66, 111, 120, 39, 115, 32, 111, 112, 116, 105, 111, 110, 115, 46, 0, 0, 0, 0, 80, 97, 103, 105, 110, 103, 32, 114, 101, 113, 117, 101, 115, 116, 101, 100, 32, 119, 105, 116, 104, 111, 117, 116, 32, 80, 69, 61, 49, 0, 0, 0, 67, 80, 85, 95, 83, 101, 116, 83, 101, 103, 71, 101, 110, 101, 114, 97, 108, 58, 32, 83, 116, 97, 99, 107, 32, 115, 101, 103, 109, 101, 110, 116, 32, 122, 101, 114, 111, 0, 0, 0, 67, 80, 85, 95, 83, 101, 116, 83, 101, 103, 71, 101, 110, 101, 114, 97, 108, 58, 32, 83, 116, 97, 99, 107, 32, 115, 101, 103, 109, 101, 110, 116, 32, 98, 101, 121, 111, 110, 100, 32, 108, 105, 109, 105, 116, 115, 0, 0, 67, 80, 85, 95, 83, 101, 116, 83, 101, 103, 71, 101, 110, 101, 114, 97, 108, 58, 32, 83, 116, 97, 99, 107, 32, 115, 101, 103, 109, 101, 110, 116, 32, 119, 105, 116, 104, 32, 105, 110, 118, 97, 108, 105, 100, 32, 112, 114, 105, 118, 105, 108, 101, 103, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 251, 155, 1, 36, 0, 0, 0, 4, 2, 0, 0, 53, 0, 0, 0, 0, 0, 0, 0, 99, 121, 99, 108, 101, 100, 111, 119, 110, 0, 0, 0, 0, 0, 0, 0, 68, 101, 99, 32, 67, 121, 99, 108, 101, 115, 0, 0, 0, 0, 0, 0, 99, 121, 99, 108, 101, 117, 112, 0, 73, 110, 99, 32, 67, 121, 99, 108, 101, 115, 0, 0, 0, 0, 0, 0, 51, 67, 80, 85, 0, 0, 0, 0, 32, 82, 202, 1, 104, 251, 155, 1, 120, 40, 5, 0, 0, 0, 0, 0, 99, 121, 99, 108, 101, 115, 0, 0, 109, 97, 120, 0, 0, 0, 0, 0, 108, 105, 109, 105, 116, 0, 0, 0, 102, 105, 120, 101, 100, 0, 0, 0, 99, 111, 114, 101, 0, 0, 0, 0, 110, 111, 114, 109, 97, 108, 0, 0, 115, 105, 109, 112, 108, 101, 0, 0, 102, 117, 108, 108, 0, 0, 0, 0, 99, 112, 117, 116, 121, 112, 101, 0, 51, 56, 54, 0, 0, 0, 0, 0, 51, 56, 54, 95, 112, 114, 101, 102, 101, 116, 99, 104, 0, 0, 0, 0, 112, 114, 101, 102, 101, 116, 99, 104, 32, 113, 117, 101, 117, 101, 32, 101, 109, 117, 108, 97, 116, 105, 111, 110, 32, 114, 101, 113, 117, 105, 114, 101, 115, 32, 116, 104, 101, 32, 110, 111, 114, 109, 97, 108, 32, 99, 111, 114, 101, 32, 115, 101, 116, 116, 105, 110, 103, 46, 0, 0, 0, 0, 0, 0, 51, 56, 54, 95, 115, 108, 111, 119, 0, 0, 0, 0, 0, 0, 0, 0, 52, 56, 54, 95, 115, 108, 111, 119, 0, 0, 0, 0, 0, 0, 0, 0, 52, 56, 54, 95, 112, 114, 101, 102, 101, 116, 99, 104, 0, 0, 0, 0, 112, 101, 110, 116, 105, 117, 109, 95, 115, 108, 111, 119, 0, 0, 0, 0, 67, 80, 85, 32, 115, 112, 101, 101, 100, 58, 32, 109, 97, 120, 32, 37, 100, 32, 112, 101, 114, 99, 101, 110, 116, 46, 0, 0, 0, 0, 0, 0, 67, 80, 85, 32, 115, 112, 101, 101, 100, 58, 32, 102, 105, 120, 101, 100, 32, 37, 100, 32, 99, 121, 99, 108, 101, 115, 46, 32, 73, 102, 32, 121, 111, 117, 32, 110, 101, 101, 100, 32, 109, 111, 114, 101, 32, 116, 104, 97, 110, 32, 50, 48, 48, 48, 48, 44, 32, 116, 114, 121, 32, 99, 111, 114, 101, 61, 100, 121, 110, 97, 109, 105, 99, 32, 105, 110, 32, 68, 79, 83, 66, 111, 120, 39, 115, 32, 111, 112, 116, 105, 111, 110, 115, 46, 0, 0, 67, 80, 85, 32, 115, 112, 101, 101, 100, 58, 32, 102, 105, 120, 101, 100, 32, 37, 100, 32, 99, 121, 99, 108, 101, 115, 46, 0, 0, 0, 0, 0, 67, 80, 85, 32, 115, 112, 101, 101, 100, 58, 32, 109, 97, 120, 32, 37, 100, 32, 112, 101, 114, 99, 101, 110, 116, 46, 32, 73, 102, 32, 116, 104, 101, 32, 103, 97, 109, 101, 32, 114, 117, 110, 115, 32, 116, 111, 111, 32, 102, 97, 115, 116, 44, 32, 116, 114, 121, 32, 97, 32, 102, 105, 120, 101, 100, 32, 99, 121, 99, 108, 101, 115, 32, 97, 109, 111, 117, 110, 116, 32, 105, 110, 32, 68, 79, 83, 66, 111, 120, 39, 115, 32, 111, 112, 116, 105, 111, 110, 115, 46, 0, 0, 0, 0, 2, 1, 2, 4, 2, 2, 5, 9, 2, 1, 3, 5, 2, 2, 6, 10, 18, 1, 12, 0, 19, 2, 13, 0, 25, 0, 15, 0, 41, 0, 0, 0, 2, 4, 2, 4, 2, 5, 5, 9, 2, 4, 3, 5, 2, 5, 6, 10, 18, 4, 12, 0, 19, 5, 13, 0, 25, 0, 15, 1, 29, 0, 0, 0, 2, 7, 2, 4, 2, 8, 5, 9, 2, 7, 3, 5, 2, 8, 6, 10, 18, 7, 12, 0, 19, 8, 13, 0, 25, 0, 15, 2, 41, 0, 0, 2, 2, 10, 2, 4, 2, 11, 5, 9, 2, 10, 3, 5, 2, 11, 6, 10, 18, 10, 12, 0, 19, 11, 13, 0, 25, 0, 15, 3, 41, 0, 0, 3, 2, 13, 2, 4, 2, 14, 5, 9, 2, 13, 3, 5, 2, 14, 6, 10, 18, 13, 12, 0, 19, 14, 13, 0, 28, 0, 0, 0, 43, 0, 0, 0, 2, 16, 2, 4, 2, 17, 5, 9, 2, 16, 3, 5, 2, 17, 6, 10, 18, 16, 12, 0, 19, 17, 13, 0, 28, 0, 0, 1, 44, 0, 0, 0, 2, 19, 2, 4, 2, 20, 5, 9, 2, 19, 3, 5, 2, 20, 6, 10, 18, 19, 12, 0, 19, 20, 13, 0, 28, 0, 0, 2, 45, 0, 0, 0, 2, 22, 0, 4, 2, 23, 0, 9, 2, 22, 0, 5, 2, 23, 0, 10, 18, 22, 0, 0, 19, 23, 0, 0, 28, 0, 0, 3, 46, 0, 0, 0, 16, 26, 13, 0, 16, 26, 13, 1, 16, 26, 13, 2, 16, 26, 13, 3, 16, 26, 13, 4, 16, 26, 13, 5, 16, 26, 13, 6, 16, 26, 13, 7, 16, 29, 13, 0, 16, 29, 13, 1, 16, 29, 13, 2, 16, 29, 13, 3, 16, 29, 13, 4, 16, 29, 13, 5, 16, 29, 13, 6, 16, 29, 13, 7, 16, 0, 15, 0, 16, 0, 15, 1, 16, 0, 15, 2, 16, 0, 15, 3, 16, 0, 15, 4, 16, 0, 15, 5, 16, 0, 15, 6, 16, 0, 15, 7, 21, 0, 13, 0, 21, 0, 13, 1, 21, 0, 13, 2, 21, 0, 13, 3, 21, 0, 13, 4, 21, 0, 13, 5, 21, 0, 13, 6, 21, 0, 13, 7, 37, 0, 0, 0, 39, 0, 0, 0, 2, 71, 0, 8, 3, 149, 5, 9, 28, 0, 0, 4, 28, 0, 0, 5, 30, 0, 0, 0, 31, 0, 0, 0, 7, 0, 15, 0, 2, 69, 6, 26, 9, 0, 15, 0, 2, 69, 6, 25, 34, 3, 0, 0, 34, 4, 0, 0, 34, 0, 0, 0, 34, 1, 0, 0, 9, 121, 21, 0, 9, 122, 21, 0, 9, 123, 21, 0, 9, 124, 21, 0, 9, 125, 21, 0, 9, 126, 21, 0, 9, 127, 21, 0, 9, 128, 21, 0, 9, 129, 21, 0, 9, 130, 21, 0, 9, 131, 21, 0, 9, 132, 21, 0, 9, 133, 21, 0, 9, 134, 21, 0, 9, 135, 21, 0, 9, 136, 21, 0, 2, 0, 0, 40, 2, 1, 0, 40, 2, 0, 0, 40, 2, 3, 0, 40, 2, 31, 0, 4, 2, 32, 0, 9, 2, 0, 4, 5, 2, 0, 7, 10, 2, 0, 2, 3, 2, 0, 5, 8, 2, 0, 3, 2, 2, 0, 6, 7, 2, 0, 5, 38, 2, 0, 6, 39, 2, 0, 17, 7, 4, 0, 5, 0, 60, 0, 0, 0, 16, 67, 13, 1, 16, 67, 13, 2, 16, 67, 13, 3, 16, 67, 13, 4, 16, 67, 13, 5, 16, 67, 13, 6, 16, 67, 13, 7, 47, 0, 0, 0, 49, 0, 0, 0, 12, 75, 0, 0, 61, 0, 0, 0, 71, 0, 0, 0, 70, 0, 0, 0, 72, 0, 0, 0, 73, 0, 0, 0, 14, 80, 0, 0, 14, 82, 0, 0, 14, 79, 0, 0, 14, 81, 0, 0, 34, 6, 0, 0, 34, 7, 0, 0, 34, 18, 0, 0, 34, 19, 0, 0, 18, 31, 0, 0, 19, 32, 0, 0, 34, 12, 0, 0, 34, 13, 0, 0, 34, 9, 0, 0, 34, 10, 0, 0, 34, 15, 0, 0, 34, 16, 0, 0, 6, 0, 12, 0, 6, 0, 12, 1, 6, 0, 12, 2, 6, 0, 12, 3, 6, 0, 12, 4, 6, 0, 12, 5, 6, 0, 12, 6, 6, 0, 12, 7, 7, 0, 13, 0, 7, 0, 13, 1, 7, 0, 13, 2, 7, 0, 13, 3, 7, 0, 13, 4, 7, 0, 13, 5, 7, 0, 13, 6, 7, 0, 13, 7, 2, 5, 0, 41, 2, 6, 0, 41, 21, 0, 25, 0, 21, 0, 24, 0, 2, 87, 18, 33, 2, 86, 18, 33, 2, 0, 2, 35, 2, 0, 5, 36, 62, 0, 0, 0, 64, 0, 0, 0, 68, 0, 0, 0, 66, 0, 0, 0, 27, 85, 0, 3, 6, 85, 0, 0, 26, 85, 0, 0, 35, 0, 0, 0, 2, 5, 0, 43, 2, 6, 0, 43, 2, 5, 0, 42, 2, 6, 0, 42, 6, 102, 0, 0, 6, 103, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 2, 165, 0, 0, 2, 165, 1, 0, 2, 165, 2, 0, 2, 165, 3, 0, 2, 165, 4, 0, 2, 165, 5, 0, 2, 165, 6, 0, 2, 165, 7, 0, 9, 93, 20, 0, 9, 92, 20, 0, 9, 91, 20, 0, 9, 94, 20, 0, 6, 95, 0, 0, 6, 96, 0, 0, 6, 98, 0, 0, 6, 99, 0, 0, 7, 73, 20, 0, 10, 0, 20, 0, 12, 77, 0, 0, 9, 0, 20, 0, 16, 95, 0, 2, 16, 96, 0, 2, 16, 98, 0, 2, 16, 99, 0, 2, 77, 0, 0, 0, 78, 0, 0, 0, 33, 0, 0, 0, 32, 0, 0, 0, 75, 0, 0, 0, 57, 0, 0, 0, 2, 8, 0, 40, 2, 9, 0, 40, 56, 0, 0, 0, 55, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 2, 11, 0, 40, 2, 12, 0, 40, 2, 137, 5, 7, 2, 139, 5, 7, 3, 147, 6, 9, 3, 148, 6, 9, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 142, 8, 0, 2, 144, 8, 0, 2, 141, 0, 14, 2, 143, 0, 14, 2, 146, 8, 0, 0, 0, 0, 0, 2, 145, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 121, 21, 0, 10, 122, 21, 0, 10, 123, 21, 0, 10, 124, 21, 0, 10, 125, 21, 0, 10, 126, 21, 0, 10, 127, 21, 0, 10, 128, 21, 0, 10, 129, 21, 0, 10, 130, 21, 0, 10, 131, 21, 0, 10, 132, 21, 0, 10, 133, 21, 0, 10, 134, 21, 0, 10, 135, 21, 0, 10, 136, 21, 0, 2, 121, 1, 0, 2, 122, 1, 0, 2, 123, 1, 0, 2, 124, 1, 0, 2, 125, 1, 0, 2, 126, 1, 0, 2, 127, 1, 0, 2, 128, 1, 0, 2, 129, 1, 0, 2, 130, 1, 0, 2, 131, 1, 0, 2, 132, 1, 0, 2, 133, 1, 0, 2, 134, 1, 0, 2, 135, 1, 0, 2, 136, 1, 0, 25, 0, 15, 4, 41, 0, 0, 4, 74, 0, 0, 0, 2, 150, 5, 12, 2, 117, 5, 27, 2, 117, 5, 28, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 15, 5, 41, 0, 0, 5, 0, 0, 0, 0, 2, 151, 5, 12, 2, 119, 5, 27, 2, 119, 5, 28, 0, 0, 0, 0, 2, 69, 6, 11, 0, 0, 0, 0, 0, 0, 0, 0, 2, 90, 18, 33, 2, 152, 5, 12, 2, 88, 18, 33, 2, 89, 18, 33, 2, 0, 6, 2, 2, 0, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 2, 14, 0, 40, 2, 153, 5, 12, 2, 158, 6, 7, 2, 159, 6, 7, 2, 0, 6, 1, 2, 0, 6, 6, 2, 1, 4, 5, 2, 2, 7, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 162, 13, 0, 16, 162, 13, 1, 16, 162, 13, 2, 16, 162, 13, 3, 16, 162, 13, 4, 16, 162, 13, 5, 16, 162, 13, 6, 16, 162, 13, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 4, 2, 3, 8, 16, 2, 1, 3, 5, 2, 3, 9, 17, 18, 1, 12, 0, 20, 3, 14, 0, 25, 0, 16, 0, 42, 0, 0, 0, 2, 4, 2, 4, 2, 6, 8, 16, 2, 4, 3, 5, 2, 6, 9, 17, 18, 4, 12, 0, 20, 6, 14, 0, 25, 0, 16, 1, 29, 0, 0, 0, 2, 7, 2, 4, 2, 9, 8, 16, 2, 7, 3, 5, 2, 9, 9, 17, 18, 7, 12, 0, 20, 9, 14, 0, 25, 0, 16, 2, 42, 0, 0, 2, 2, 10, 2, 4, 2, 12, 8, 16, 2, 10, 3, 5, 2, 12, 9, 17, 18, 10, 12, 0, 20, 12, 14, 0, 25, 0, 16, 3, 42, 0, 0, 3, 2, 13, 2, 4, 2, 15, 8, 16, 2, 13, 3, 5, 2, 15, 9, 17, 18, 13, 12, 0, 20, 15, 14, 0, 28, 0, 0, 0, 43, 0, 0, 0, 2, 16, 2, 4, 2, 18, 8, 16, 2, 16, 3, 5, 2, 18, 9, 17, 18, 16, 12, 0, 20, 18, 14, 0, 28, 0, 0, 1, 44, 0, 0, 0, 2, 19, 2, 4, 2, 21, 8, 16, 2, 19, 3, 5, 2, 21, 9, 17, 18, 19, 12, 0, 20, 21, 14, 0, 28, 0, 0, 2, 45, 0, 0, 0, 2, 22, 0, 4, 2, 24, 0, 16, 2, 22, 0, 5, 2, 24, 0, 17, 18, 22, 0, 0, 20, 24, 0, 0, 28, 0, 0, 3, 46, 0, 0, 0, 17, 27, 14, 0, 17, 27, 14, 1, 17, 27, 14, 2, 17, 27, 14, 3, 17, 27, 14, 4, 17, 27, 14, 5, 17, 27, 14, 6, 17, 27, 14, 7, 17, 30, 14, 0, 17, 30, 14, 1, 17, 30, 14, 2, 17, 30, 14, 3, 17, 30, 14, 4, 17, 30, 14, 5, 17, 30, 14, 6, 17, 30, 14, 7, 17, 0, 16, 0, 17, 0, 16, 1, 17, 0, 16, 2, 17, 0, 16, 3, 17, 0, 16, 4, 17, 0, 16, 5, 17, 0, 16, 6, 17, 0, 16, 7, 22, 0, 14, 0, 22, 0, 14, 1, 22, 0, 14, 2, 22, 0, 14, 3, 22, 0, 14, 4, 22, 0, 14, 5, 22, 0, 14, 6, 22, 0, 14, 7, 38, 0, 0, 0, 40, 0, 0, 0, 2, 72, 0, 0, 0, 0, 0, 0, 28, 0, 0, 4, 28, 0, 0, 5, 30, 0, 0, 0, 31, 0, 0, 0, 8, 0, 16, 0, 2, 70, 9, 29, 9, 0, 16, 0, 2, 70, 9, 30, 34, 3, 0, 0, 34, 5, 0, 0, 34, 0, 0, 0, 34, 2, 0, 0, 9, 121, 23, 0, 9, 122, 23, 0, 9, 123, 23, 0, 9, 124, 23, 0, 9, 125, 23, 0, 9, 126, 23, 0, 9, 127, 23, 0, 9, 128, 23, 0, 9, 129, 23, 0, 9, 130, 23, 0, 9, 131, 23, 0, 9, 132, 23, 0, 9, 133, 23, 0, 9, 134, 23, 0, 9, 135, 23, 0, 9, 136, 23, 0, 2, 0, 0, 40, 2, 2, 0, 40, 2, 0, 0, 40, 2, 4, 0, 40, 2, 31, 0, 4, 2, 33, 0, 16, 2, 0, 4, 5, 2, 0, 10, 17, 2, 0, 2, 3, 2, 0, 8, 15, 2, 0, 3, 2, 2, 0, 9, 14, 2, 0, 11, 38, 2, 0, 9, 39, 2, 0, 17, 7, 5, 0, 8, 0, 60, 0, 0, 0, 17, 68, 14, 1, 17, 68, 14, 2, 17, 68, 14, 3, 17, 68, 14, 4, 17, 68, 14, 5, 17, 68, 14, 6, 17, 68, 14, 7, 48, 0, 0, 0, 50, 0, 0, 0, 13, 76, 0, 0, 61, 0, 0, 0, 71, 0, 0, 1, 70, 0, 0, 1, 72, 0, 0, 0, 73, 0, 0, 0, 14, 80, 0, 0, 14, 84, 0, 0, 14, 79, 0, 0, 14, 83, 0, 0, 34, 6, 0, 0, 34, 8, 0, 0, 34, 18, 0, 0, 34, 20, 0, 0, 18, 31, 0, 0, 20, 33, 0, 0, 34, 12, 0, 0, 34, 14, 0, 0, 34, 9, 0, 0, 34, 11, 0, 0, 34, 15, 0, 0, 34, 17, 0, 0, 6, 0, 12, 0, 6, 0, 12, 1, 6, 0, 12, 2, 6, 0, 12, 3, 6, 0, 12, 4, 6, 0, 12, 5, 6, 0, 12, 6, 6, 0, 12, 7, 8, 0, 14, 0, 8, 0, 14, 1, 8, 0, 14, 2, 8, 0, 14, 3, 8, 0, 14, 4, 8, 0, 14, 5, 8, 0, 14, 6, 8, 0, 14, 7, 2, 5, 0, 41, 2, 7, 0, 41, 22, 0, 25, 0, 22, 0, 24, 0, 2, 87, 19, 34, 2, 86, 19, 34, 2, 0, 2, 35, 2, 0, 8, 37, 63, 0, 0, 0, 65, 0, 0, 0, 69, 0, 0, 0, 67, 0, 0, 0, 27, 85, 0, 3, 6, 85, 0, 0, 26, 85, 0, 0, 36, 0, 0, 0, 2, 5, 0, 43, 2, 7, 0, 43, 2, 5, 0, 42, 2, 7, 0, 42, 6, 102, 0, 0, 6, 103, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 2, 165, 0, 0, 2, 165, 1, 0, 2, 165, 2, 0, 2, 165, 3, 0, 2, 165, 4, 0, 2, 165, 5, 0, 2, 165, 6, 0, 2, 165, 7, 0, 9, 93, 22, 0, 9, 92, 22, 0, 9, 91, 22, 0, 9, 94, 22, 0, 6, 95, 0, 0, 6, 97, 0, 0, 6, 98, 0, 0, 6, 100, 0, 0, 8, 74, 22, 0, 11, 0, 22, 0, 13, 78, 0, 0, 9, 0, 22, 0, 16, 95, 0, 2, 16, 97, 0, 2, 16, 98, 0, 2, 16, 100, 0, 2, 77, 0, 0, 0, 78, 0, 0, 0, 33, 0, 0, 0, 32, 0, 0, 0, 75, 0, 0, 0, 57, 0, 0, 0, 2, 8, 0, 40, 2, 10, 0, 40, 56, 0, 0, 0, 55, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 2, 11, 0, 40, 2, 13, 0, 40, 2, 138, 5, 7, 2, 140, 5, 7, 3, 147, 9, 16, 3, 148, 9, 16], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 26993008);
allocate([0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 142, 8, 0, 2, 144, 8, 0, 2, 141, 0, 14, 2, 143, 0, 14, 2, 146, 8, 0, 0, 0, 0, 0, 2, 145, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 121, 23, 0, 11, 122, 23, 0, 11, 123, 23, 0, 11, 124, 23, 0, 11, 125, 23, 0, 11, 126, 23, 0, 11, 127, 23, 0, 11, 128, 23, 0, 11, 129, 23, 0, 11, 130, 23, 0, 11, 131, 23, 0, 11, 132, 23, 0, 11, 133, 23, 0, 11, 134, 23, 0, 11, 135, 23, 0, 11, 136, 23, 0, 2, 121, 1, 0, 2, 122, 1, 0, 2, 123, 1, 0, 2, 124, 1, 0, 2, 125, 1, 0, 2, 126, 1, 0, 2, 127, 1, 0, 2, 128, 1, 0, 2, 129, 1, 0, 2, 130, 1, 0, 2, 131, 1, 0, 2, 132, 1, 0, 2, 133, 1, 0, 2, 134, 1, 0, 2, 135, 1, 0, 2, 136, 1, 0, 25, 0, 16, 4, 42, 0, 0, 4, 74, 0, 0, 0, 2, 154, 8, 19, 2, 118, 8, 31, 2, 118, 8, 32, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 16, 5, 42, 0, 0, 5, 0, 0, 0, 0, 2, 155, 8, 19, 2, 120, 8, 31, 2, 120, 8, 32, 0, 0, 0, 0, 2, 70, 9, 18, 0, 0, 0, 0, 2, 164, 8, 14, 2, 90, 19, 34, 2, 156, 8, 19, 2, 88, 19, 34, 2, 89, 19, 34, 2, 0, 9, 2, 2, 0, 9, 7, 0, 0, 0, 0, 0, 0, 0, 0, 2, 15, 0, 40, 2, 157, 8, 19, 2, 160, 9, 14, 2, 161, 9, 14, 2, 0, 9, 1, 2, 0, 9, 6, 2, 1, 4, 5, 2, 3, 10, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 163, 14, 0, 17, 163, 14, 1, 17, 163, 14, 2, 17, 163, 14, 3, 17, 163, 14, 4, 17, 163, 14, 5, 17, 163, 14, 6, 17, 163, 14, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 244, 155, 1, 52, 244, 155, 1, 56, 244, 155, 1, 60, 244, 155, 1, 104, 13, 156, 1, 68, 244, 155, 1, 72, 244, 155, 1, 76, 244, 155, 1, 0, 1, 2, 20, 0, 4, 2, 20, 0, 7, 2, 20, 0, 10, 2, 20, 0, 13, 2, 20, 0, 16, 2, 20, 0, 19, 2, 20, 0, 22, 0, 20, 0, 2, 5, 23, 0, 5, 5, 23, 0, 8, 5, 23, 0, 11, 5, 23, 0, 14, 5, 23, 0, 17, 5, 23, 0, 20, 5, 23, 0, 23, 0, 23, 0, 3, 8, 29, 0, 6, 8, 29, 0, 9, 8, 29, 0, 12, 8, 29, 0, 15, 8, 29, 0, 18, 8, 29, 0, 21, 8, 29, 0, 24, 0, 29, 0, 2, 5, 24, 0, 5, 5, 24, 0, 8, 5, 24, 0, 11, 5, 24, 0, 14, 5, 24, 0, 17, 5, 24, 0, 20, 5, 24, 0, 23, 0, 24, 0, 3, 8, 30, 0, 6, 8, 30, 0, 9, 8, 30, 0, 12, 8, 30, 0, 15, 8, 30, 0, 18, 8, 30, 0, 21, 8, 30, 0, 24, 0, 30, 0, 43, 2, 2, 0, 46, 2, 2, 0, 49, 2, 2, 0, 52, 2, 2, 0, 34, 2, 2, 0, 37, 2, 2, 0, 34, 2, 2, 0, 40, 2, 2, 0, 44, 5, 7, 0, 47, 5, 7, 0, 50, 5, 7, 0, 53, 5, 7, 0, 35, 5, 7, 0, 38, 5, 7, 0, 35, 5, 7, 0, 41, 5, 7, 0, 45, 8, 14, 0, 48, 8, 14, 0, 51, 8, 14, 0, 54, 8, 14, 0, 36, 8, 14, 0, 39, 8, 14, 0, 36, 8, 14, 0, 42, 8, 14, 0, 31, 0, 20, 0, 31, 0, 20, 0, 101, 2, 2, 0, 55, 2, 2, 0, 104, 0, 2, 0, 107, 0, 2, 0, 110, 0, 2, 0, 113, 0, 2, 0, 32, 0, 23, 0, 32, 0, 23, 0, 101, 5, 7, 0, 56, 5, 7, 0, 105, 0, 7, 0, 108, 0, 7, 0, 111, 0, 7, 0, 114, 0, 7, 0, 33, 0, 29, 0, 33, 0, 29, 0, 101, 8, 14, 0, 57, 8, 14, 0, 106, 0, 14, 0, 109, 0, 14, 0, 112, 0, 14, 0, 115, 0, 14, 0, 25, 2, 2, 0, 28, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 36, 0, 26, 5, 7, 0, 29, 5, 7, 0, 73, 24, 7, 0, 75, 0, 33, 0, 0, 24, 7, 0, 77, 0, 33, 0, 0, 15, 7, 0, 0, 0, 0, 0, 27, 8, 14, 0, 30, 8, 14, 0, 74, 24, 14, 0, 76, 0, 34, 0, 0, 24, 14, 0, 78, 0, 34, 0, 0, 16, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 5, 21, 0, 151, 5, 21, 0, 152, 5, 21, 0, 153, 5, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 154, 8, 22, 0, 155, 8, 22, 0, 156, 8, 22, 0, 157, 8, 22], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27003248);
allocate([67, 97, 110, 39, 116, 32, 97, 100, 100, 44, 32, 98, 117, 102, 102, 101, 114, 32, 102, 117, 108, 108, 0, 0, 84, 111, 111, 32, 108, 111, 110, 103, 32, 109, 105, 120, 101, 114, 32, 99, 104, 97, 110, 110, 101, 108, 32, 110, 97, 109, 101, 0, 0, 0, 0, 0, 97, 108, 108, 114, 101, 97, 100, 121, 32, 97, 100, 100, 101, 100, 32, 109, 105, 120, 101, 114, 32, 99, 104, 97, 110, 110, 101, 108, 46, 0, 0, 0, 114, 97, 116, 101, 0, 0, 0, 0, 110, 111, 115, 111, 117, 110, 100, 0, 98, 108, 111, 99, 107, 115, 105, 122, 101, 0, 0, 0, 0, 0, 0, 0, 77, 73, 88, 69, 82, 58, 78, 111, 32, 83, 111, 117, 110, 100, 32, 77, 111, 100, 101, 32, 83, 101, 108, 101, 99, 116, 101, 100, 46, 0, 0, 0, 77, 73, 88, 69, 82, 58, 67, 97, 110, 39, 116, 32, 111, 112, 101, 110, 32, 97, 117, 100, 105, 111, 58, 32, 37, 115, 32, 44, 32, 114, 117, 110, 110, 105, 110, 103, 32, 105, 110, 32, 110, 111, 115, 111, 117, 110, 100, 32, 109, 111, 100, 101, 46, 0, 0, 0, 77, 73, 88, 69, 82, 58, 71, 111, 116, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 32, 118, 97, 108, 117, 101, 115, 32, 102, 114, 111, 109, 32, 83, 68, 76, 58, 32, 102, 114, 101, 113, 32, 37, 100, 44, 32, 98, 108, 111, 99, 107, 115, 105, 122, 101, 32, 37, 100, 0, 0, 0, 0, 0, 0, 112, 114, 101, 98, 117, 102, 102, 101, 114, 0, 0, 0, 0, 0, 0, 0, 77, 73, 88, 69, 82, 46, 67, 79, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 81, 158, 1, 10, 0, 0, 0, 5, 2, 0, 0, 6, 2, 0, 0, 0, 0, 0, 0, 53, 77, 73, 88, 69, 82, 0, 0, 32, 82, 202, 1, 16, 81, 158, 1, 24, 138, 0, 0, 0, 0, 0, 0, 47, 76, 73, 83, 84, 77, 73, 68, 73, 0, 0, 0, 0, 0, 0, 0, 77, 65, 83, 84, 69, 82, 0, 0, 47, 78, 79, 83, 72, 79, 87, 0, 67, 104, 97, 110, 110, 101, 108, 32, 32, 77, 97, 105, 110, 32, 32, 32, 32, 77, 97, 105, 110, 40, 100, 66, 41, 10, 0, 0, 0, 0, 0, 0, 37, 45, 56, 115, 32, 37, 51, 46, 48, 102, 58, 37, 45, 51, 46, 48, 102, 32, 32, 37, 43, 51, 46, 50, 102, 58, 37, 45, 43, 51, 46, 50, 102, 32, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 108, 108, 101, 103, 97, 108, 32, 109, 97, 99, 104, 105, 110, 101, 32, 116, 121, 112, 101, 32, 37, 100, 0, 0, 0, 0, 0, 136, 82, 158, 1, 1, 2, 0, 0, 7, 2, 0, 0, 54, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 49, 55, 86, 71, 65, 95, 69, 109, 112, 116, 121, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 32, 82, 202, 1, 112, 82, 158, 1, 80, 209, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 248, 82, 158, 1, 1, 2, 0, 0, 8, 2, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 49, 54, 86, 71, 65, 95, 77, 77, 73, 79, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 224, 82, 158, 1, 80, 209, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 112, 83, 158, 1, 1, 2, 0, 0, 9, 2, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 50, 50, 86, 71, 65, 95, 76, 70, 66, 67, 104, 97, 110, 103, 101, 115, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 80, 83, 158, 1, 80, 209, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 224, 83, 158, 1, 1, 2, 0, 0, 10, 2, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 22, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 49, 53, 86, 71, 65, 95, 76, 70, 66, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 200, 83, 158, 1, 80, 209, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 176, 84, 158, 1, 1, 2, 0, 0, 11, 2, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 65, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 49, 54, 86, 71, 65, 95, 76, 73, 78, 52, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 50, 52, 86, 71, 65, 95, 85, 110, 99, 104, 97, 105, 110, 101, 100, 69, 71, 65, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 50, 53, 86, 71, 65, 95, 85, 110, 99, 104, 97, 105, 110, 101, 100, 82, 101, 97, 100, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 32, 82, 202, 1, 112, 84, 158, 1, 80, 209, 155, 1, 0, 0, 0, 0, 32, 82, 202, 1, 80, 84, 158, 1, 144, 84, 158, 1, 0, 0, 0, 0, 32, 82, 202, 1, 56, 84, 158, 1, 160, 84, 158, 1, 0, 0, 0, 0, 0, 0, 0, 0, 160, 84, 158, 1, 1, 2, 0, 0, 12, 2, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 104, 85, 158, 1, 1, 2, 0, 0, 13, 2, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 22, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 49, 54, 86, 71, 65, 95, 80, 67, 74, 82, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 80, 85, 158, 1, 80, 209, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 224, 85, 158, 1, 1, 2, 0, 0, 14, 2, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 50, 52, 86, 71, 65, 95, 85, 110, 99, 104, 97, 105, 110, 101, 100, 86, 71, 65, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 192, 85, 158, 1, 144, 84, 158, 1, 0, 0, 0, 0, 0, 0, 0, 0, 88, 86, 158, 1, 1, 2, 0, 0, 15, 2, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 73, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 50, 50, 86, 71, 65, 95, 67, 104, 97, 105, 110, 101, 100, 86, 71, 65, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 56, 86, 158, 1, 80, 209, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 208, 86, 158, 1, 1, 2, 0, 0, 16, 2, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 50, 50, 86, 71, 65, 95, 67, 104, 97, 105, 110, 101, 100, 69, 71, 65, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 176, 86, 158, 1, 80, 209, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 64, 87, 158, 1, 1, 2, 0, 0, 17, 2, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 22, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 50, 49, 86, 71, 65, 95, 84, 65, 78, 68, 89, 95, 80, 97, 103, 101, 72, 97, 110, 100, 108, 101, 114, 0, 32, 82, 202, 1, 40, 87, 158, 1, 80, 209, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 176, 87, 158, 1, 1, 2, 0, 0, 18, 2, 0, 0, 79, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 38, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 50, 48, 86, 71, 65, 95, 84, 69, 88, 84, 95, 80, 97, 103, 101, 72, 97, 110, 100, 108, 101, 114, 0, 0, 32, 82, 202, 1, 152, 87, 158, 1, 80, 209, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 32, 88, 158, 1, 1, 2, 0, 0, 19, 2, 0, 0, 80, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 41, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 49, 57, 86, 71, 65, 95, 67, 104, 97, 110, 103, 101, 115, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 32, 82, 202, 1, 8, 88, 158, 1, 80, 209, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 144, 88, 158, 1, 1, 2, 0, 0, 20, 2, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 22, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 49, 53, 86, 71, 65, 95, 77, 97, 112, 95, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 120, 88, 158, 1, 80, 209, 155, 1], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27152320);
allocate([8, 94, 158, 1, 21, 2, 0, 0, 22, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 116, 97, 110, 100, 121, 0, 0, 0, 111, 110, 0, 0, 0, 0, 0, 0, 116, 97, 110, 100, 121, 114, 97, 116, 101, 0, 0, 0, 0, 0, 0, 0, 84, 65, 78, 68, 89, 0, 0, 0, 84, 65, 78, 68, 89, 68, 65, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 48, 84, 65, 78, 68, 89, 83, 79, 85, 78, 68, 0, 0, 0, 0, 32, 82, 202, 1, 248, 93, 158, 1, 120, 40, 5, 0, 0, 0, 0, 0, 84, 97, 110, 100, 121, 32, 68, 65, 67, 58, 32, 82, 101, 97, 100, 32, 102, 114, 111, 109, 32, 117, 110, 107, 110, 111, 119, 110, 32, 37, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 94, 158, 1, 23, 2, 0, 0, 24, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 52, 67, 77, 79, 83, 0, 0, 0, 32, 82, 202, 1, 216, 94, 158, 1, 120, 40, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 108, 101, 97, 115, 101, 32, 115, 112, 101, 99, 105, 102, 121, 32, 97, 32, 99, 97, 112, 116, 117, 114, 101, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 0, 0, 0, 0, 0, 67, 97, 110, 39, 116, 32, 111, 112, 101, 110, 32, 100, 105, 114, 32, 37, 115, 32, 102, 111, 114, 32, 99, 97, 112, 116, 117, 114, 105, 110, 103, 32, 37, 115, 0, 0, 0, 0, 0, 0, 37, 115, 37, 99, 37, 115, 37, 48, 51, 100, 37, 115, 0, 0, 0, 0, 119, 98, 0, 0, 0, 0, 0, 0, 67, 97, 112, 116, 117, 114, 105, 110, 103, 32, 37, 115, 32, 116, 111, 32, 37, 115, 0, 0, 0, 0, 0, 0, 70, 97, 105, 108, 101, 100, 32, 116, 111, 32, 111, 112, 101, 110, 32, 37, 115, 32, 102, 111, 114, 32, 99, 97, 112, 116, 117, 114, 105, 110, 103, 32, 37, 115], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27155676);
allocate([87, 97, 118, 101, 32, 79, 117, 116, 112, 117, 116, 0, 0, 0, 0, 0, 46, 119, 97, 118, 0, 0, 0, 0, 82, 73, 70, 70, 0, 0, 0, 0, 87, 65, 86, 69, 102, 109, 116, 32, 16, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 16, 0, 100, 97, 116, 97, 0, 0, 0, 0, 0, 0, 0, 0, 82, 97, 119, 32, 77, 105, 100, 105, 0, 0, 0, 0, 0, 0, 0, 0, 46, 109, 105, 100, 0, 0, 0, 0, 77, 84, 104, 100, 0, 0, 0, 6, 0, 0, 0, 1, 1, 244, 77, 84, 114, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 112, 159, 1, 25, 2, 0, 0, 26, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 99, 97, 112, 116, 117, 114, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 114, 101, 99, 119, 97, 118, 101, 0, 82, 101, 99, 32, 87, 97, 118, 101, 0, 0, 0, 0, 0, 0, 0, 0, 99, 97, 112, 114, 97, 119, 109, 105, 100, 105, 0, 0, 0, 0, 0, 0, 67, 97, 112, 32, 77, 73, 68, 73, 0, 0, 0, 0, 0, 0, 0, 0, 56, 72, 65, 82, 68, 87, 65, 82, 69, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 184, 112, 159, 1, 120, 40, 5, 0, 0, 0, 0, 0, 83, 116, 111, 112, 112, 105, 110, 103, 32, 114, 97, 119, 32, 109, 105, 100, 105, 32, 115, 97, 118, 105, 110, 103, 32, 97, 110, 100, 32, 102, 105, 110, 97, 108, 105, 122, 105, 110, 103, 32, 102, 105, 108, 101, 46, 0, 0, 0, 80, 114, 101, 112, 97, 114, 105, 110, 103, 32, 102, 111, 114, 32, 114, 97, 119, 32, 109, 105, 100, 105, 32, 99, 97, 112, 116, 117, 114, 101, 44, 32, 119, 105, 108, 108, 32, 115, 116, 97, 114, 116, 32, 119, 105, 116, 104, 32, 102, 105, 114, 115, 116, 32, 100, 97, 116, 97, 46, 0, 0, 0, 0, 0, 83, 116, 111, 112, 112, 101, 100, 32, 99, 97, 112, 116, 117, 114, 105, 110, 103, 32, 114, 97, 119, 32, 109, 105, 100, 105, 32, 98, 101, 102, 111, 114, 101, 32, 97, 110, 121, 32, 100, 97, 116, 97, 32, 97, 114, 114, 105, 118, 101, 100, 46, 0, 0, 0, 0, 0, 83, 116, 111, 112, 112, 101, 100, 32, 99, 97, 112, 116, 117, 114, 105, 110, 103, 32, 119, 97, 118, 101, 32, 111, 117, 116, 112, 117, 116, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 115, 159, 1, 27, 2, 0, 0, 28, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 100, 105, 115, 110, 101, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 68, 73, 83, 78, 69, 89, 0, 32, 82, 202, 1, 48, 115, 159, 1, 120, 40, 5, 0, 0, 0, 0, 0, 68, 73, 83, 78, 69, 89], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27226064);
allocate([2, 0, 2, 0, 8, 0, 10, 0, 12, 0, 1, 0, 4, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 1, 255, 3, 255, 3, 255, 1, 255, 1, 255, 3, 255, 3, 0, 2, 255, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, 28, 32, 0, 0, 0, 69, 55, 46, 40, 35, 29, 23, 20, 19, 15, 11, 10, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 32, 24, 19, 16, 12, 11, 10, 8, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136, 153, 159, 1, 65, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 60, 0, 0, 0, 29, 2, 0, 0, 30, 2, 0, 0, 78, 53, 68, 66, 79, 80, 76, 55, 72, 97, 110, 100, 108, 101, 114, 69, 0, 0, 0, 0, 0, 0, 0, 0, 78, 53, 65, 100, 108, 105, 98, 55, 72, 97, 110, 100, 108, 101, 114, 69, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 104, 153, 159, 1, 32, 82, 202, 1, 80, 153, 159, 1, 128, 153, 159, 1, 0, 0, 0, 0, 1, 0, 1, 30, 129, 128, 129, 158, 31, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 154, 159, 1, 31, 2, 0, 0, 32, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 106, 111, 121, 115, 116, 105, 99, 107, 116, 121, 112, 101, 0, 0, 0, 0, 97, 117, 116, 111, 0, 0, 0, 0, 50, 97, 120, 105, 115, 0, 0, 0, 52, 97, 120, 105, 115, 0, 0, 0, 52, 97, 120, 105, 115, 95, 50, 0, 102, 99, 115, 0, 0, 0, 0, 0, 99, 104, 0, 0, 0, 0, 0, 0, 116, 105, 109, 101, 100, 0, 0, 0, 97, 117, 116, 111, 102, 105, 114, 101, 0, 0, 0, 0, 0, 0, 0, 0, 115, 119, 97, 112, 51, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 117, 116, 116, 111, 110, 119, 114, 97, 112, 0, 0, 0, 0, 0, 0, 56, 74, 79, 89, 83, 84, 73, 67, 75, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 184, 154, 159, 1, 120, 40, 5], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27235403);
allocate([255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 159, 159, 1, 33, 2, 0, 0, 34, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 51, 68, 77, 65, 0, 0, 0, 0, 32, 82, 202, 1, 88, 159, 159, 1, 120, 40, 5, 0, 0, 0, 0, 0, 68, 77, 65, 32, 115, 101, 103, 98, 111, 117, 110, 100, 32, 119, 114, 97, 112, 112, 105, 110, 103, 32, 40, 119, 114, 105, 116, 101, 41, 0, 0, 0, 68, 77, 65, 32, 115, 101, 103, 98, 111, 117, 110, 100, 32, 119, 114, 97, 112, 112, 105, 110, 103, 32, 40, 114, 101, 97, 100, 41], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27238184);
allocate([104, 230, 160, 1, 35, 2, 0, 0, 36, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 112, 99, 115, 112, 101, 97, 107, 101, 114, 0, 0, 0, 0, 0, 0, 0, 112, 99, 114, 97, 116, 101, 0, 0, 83, 80, 75, 82, 0, 0, 0, 0, 57, 80, 67, 83, 80, 69, 65, 75, 69, 82, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 88, 230, 160, 1, 120, 40, 5], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27321884);
allocate([255, 255, 255, 255], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27327096);
allocate([84, 104, 105, 115, 32, 110, 101, 119, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 101, 100, 115, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 97, 116, 105, 111, 110, 32, 105, 110, 32, 86, 71, 65, 95, 86, 101, 114, 116, 105, 99, 97, 108, 84, 105, 109, 101, 114, 32, 116, 111, 111, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 7, 161, 1, 48, 0, 0, 0, 8, 7, 161, 1, 3, 0, 0, 0, 112, 6, 161, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 69, 77, 58, 99, 111, 114, 114, 117, 112, 116, 105, 111, 110, 32, 100, 117, 114, 105, 110, 103, 32, 97, 108, 108, 111, 99, 97, 116, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 6, 161, 1, 37, 2, 0, 0, 38, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 109, 101, 109, 115, 105, 122, 101, 0, 77, 97, 120, 105, 109, 117, 109, 32, 109, 101, 109, 111, 114, 121, 32, 115, 105, 122, 101, 32, 105, 115, 32, 37, 100, 32, 77, 66, 0, 0, 0, 0, 77, 101, 109, 111, 114, 121, 32, 115, 105, 122, 101, 115, 32, 97, 98, 111, 118, 101, 32, 37, 100, 32, 77, 66, 32, 97, 114, 101, 32, 78, 79, 84, 32, 114, 101, 99, 111, 109, 109, 101, 110, 100, 101, 100, 46, 0, 0, 0, 83, 116, 105, 99, 107, 32, 119, 105, 116, 104, 32, 116, 104, 101, 32, 100, 101, 102, 97, 117, 108, 116, 32, 118, 97, 108, 117, 101, 115, 32, 117, 110, 108, 101, 115, 115, 32, 121, 111, 117, 32, 97, 114, 101, 32, 97, 98, 115, 111, 108, 117, 116, 101, 108, 121, 32, 99, 101, 114, 116, 97, 105, 110, 46, 0, 0, 0, 0, 0, 0, 0, 0, 54, 77, 69, 77, 79, 82, 89, 0, 32, 82, 202, 1, 32, 6, 161, 1, 120, 40, 5, 0, 0, 0, 0, 0, 88, 77, 83, 58, 32, 67, 80, 85, 32, 114, 101, 115, 101, 116, 32, 118, 105, 97, 32, 112, 111, 114, 116, 32, 48, 120, 57, 50, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 240, 6, 161, 1, 1, 2, 0, 0, 39, 2, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 49, 52, 82, 79, 77, 80, 97, 103, 101, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 0, 0, 49, 52, 82, 65, 77, 80, 97, 103, 101, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 200, 6, 161, 1, 80, 209, 155, 1, 0, 0, 0, 0, 32, 82, 202, 1, 176, 6, 161, 1, 224, 6, 161, 1, 0, 0, 0, 0, 0, 0, 0, 0, 224, 6, 161, 1, 1, 2, 0, 0, 40, 2, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 22, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 168, 7, 161, 1, 1, 2, 0, 0, 41, 2, 0, 0, 87, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 47, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 49, 56, 73, 108, 108, 101, 103, 97, 108, 80, 97, 103, 101, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, 32, 82, 202, 1, 144, 7, 161, 1, 80, 209, 155, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 108, 108, 101, 103, 97, 108, 32, 119, 114, 105, 116, 101, 32, 116, 111, 32, 37, 120, 44, 32, 67, 83, 58, 73, 80, 32, 37, 56, 120, 58, 37, 56, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 108, 108, 101, 103, 97, 108, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 37, 120, 44, 32, 67, 83, 58, 73, 80, 32, 37, 56, 120, 58, 37, 56, 120], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27329680);
allocate([42, 2, 0, 0, 43, 2, 0, 0, 44, 2, 0, 0, 45, 2, 0, 0, 44, 2, 0, 0, 46, 2], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27333944);
allocate([1, 2, 0, 1, 2, 0, 0, 3, 4, 5, 3, 4, 5, 0, 0, 6, 7, 8, 6, 7, 8, 0, 0, 0, 1, 2, 9, 10, 11, 0, 0, 3, 4, 5, 12, 13, 14, 0, 0, 6, 7, 8, 15, 16, 17], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27344937);
allocate([47, 2, 0, 0, 48, 2, 0, 0, 49, 2, 0, 0, 50, 2, 0, 0, 49, 2, 0, 0, 51, 2, 0, 0, 227, 103, 148, 248, 25, 165, 214, 63, 232, 162, 139, 46, 186, 104, 220, 63, 234, 77, 111, 122, 211, 251, 224, 63, 131, 52, 72, 131, 52, 8, 228, 63, 0, 0, 0, 0, 0, 0, 0, 0, 255, 254, 238, 186, 170, 0, 0, 0, 43, 160, 88, 76, 158, 17, 154, 63, 69, 244, 146, 134, 33, 76, 160, 63, 51, 128, 64, 33, 211, 143, 163, 63, 38, 140, 205, 130, 106, 207, 166, 63, 255, 3, 0, 0, 255, 3, 0, 0, 255, 1, 0, 0, 255, 1, 0, 0, 255, 3, 0, 0, 255, 2, 0, 0, 0, 2, 0, 0, 255, 3, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 8], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27356392);
allocate([224, 63, 0, 0, 0, 0, 0, 0, 208, 63, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 63, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64, 0, 0, 0, 0, 0, 0, 20, 64, 0, 0, 0, 0, 0, 0, 24, 64, 0, 0, 0, 0, 0, 0, 28, 64, 0, 0, 0, 0, 0, 0, 32, 64, 0, 0, 0, 0, 0, 0, 34, 64, 0, 0, 0, 0, 0, 0, 36, 64, 0, 0, 0, 0, 0, 0, 36, 64, 0, 0, 0, 0, 0, 0, 40, 64, 0, 0, 0, 0, 0, 0, 40, 64, 0, 0, 0, 0, 0, 0, 46, 64, 0, 0, 0, 0, 0, 0, 46, 64], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27362846);
allocate([1, 2, 0, 1, 2, 0, 0, 3, 4, 5, 3, 4, 5, 0, 0, 6, 7, 8, 6, 7, 8, 18, 19, 20, 18, 19, 20, 0, 0, 21, 22, 23, 21, 22, 23, 0, 0, 24, 25, 26, 24, 25, 26, 0, 0, 0, 0, 0, 1, 2, 9, 10, 11, 0, 0, 3, 4, 5, 12, 13, 14, 0, 0, 6, 7, 8, 15, 16, 17, 18, 19, 20, 27, 28, 29, 0, 0, 21, 22, 23, 30, 31, 32, 0, 0, 24, 25, 26, 33, 34, 35, 0, 0, 0, 0, 0, 1, 2, 8, 9, 10, 16, 17, 18], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27367713);
allocate([64, 170, 161, 1, 52, 2, 0, 0, 53, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 111, 112, 108, 101, 109, 117, 0, 0, 102, 97, 115, 116, 0, 0, 0, 0, 99, 111, 109, 112, 97, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 97, 112, 114, 97, 119, 111, 112, 108, 0, 0, 0, 0, 0, 0, 0, 67, 97, 112, 32, 79, 80, 76, 0, 78, 53, 65, 100, 108, 105, 98, 54, 77, 111, 100, 117, 108, 101, 69, 0, 32, 82, 202, 1, 48, 170, 161, 1, 120, 40, 5, 0, 0, 0, 0, 0, 83, 116, 111, 112, 112, 101, 100, 32, 82, 97, 119, 32, 79, 80, 76, 32, 99, 97, 112, 116, 117, 114, 105, 110, 103, 46, 0, 0, 0, 0, 0, 0, 80, 114, 101, 112, 97, 114, 105, 110, 103, 32, 116, 111, 32, 99, 97, 112, 116, 117, 114, 101, 32, 82, 97, 119, 32, 79, 80, 76, 44, 32, 119, 105, 108, 108, 32, 115, 116, 97, 114, 116, 32, 119, 105, 116, 104, 32, 102, 105, 114, 115, 116, 32, 110, 111, 116, 101, 32, 112, 108, 97, 121, 101, 100, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 170, 161, 1, 66, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 61, 0, 0, 0, 29, 2, 0, 0, 54, 2, 0, 0, 78, 52, 79, 80, 76, 51, 55, 72, 97, 110, 100, 108, 101, 114, 69, 0, 32, 82, 202, 1, 216, 170, 161, 1, 128, 153, 159, 1, 0, 0, 0, 0, 0, 0, 0, 0, 40, 171, 161, 1, 67, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 62, 0, 0, 0, 29, 2, 0, 0, 55, 2, 0, 0, 78, 52, 79, 80, 76, 50, 55, 72, 97, 110, 100, 108, 101, 114, 69, 0, 32, 82, 202, 1, 24, 171, 161, 1, 128, 153, 159, 1, 0, 0, 0, 0, 82, 97, 119, 32, 79, 112, 108, 0, 46, 100, 114, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 107, 101, 121, 32, 112, 114, 101, 115, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 250, 0, 0, 0, 244, 1, 0, 0, 238, 2, 0, 0, 232, 3, 0, 0, 33, 0, 0, 0, 37, 0, 0, 0, 42, 0, 0, 0, 46, 0, 0, 0, 50, 0, 0, 0, 54, 0, 0, 0, 58, 0, 0, 0, 63, 0, 0, 0, 67, 0, 0, 0, 75, 0, 0, 0, 83, 0, 0, 0, 92, 0, 0, 0, 100, 0, 0, 0, 109, 0, 0, 0, 118, 0, 0, 0, 125, 0, 0, 0, 133, 0, 0, 0, 149, 0, 0, 0, 167, 0, 0, 0, 182, 0, 0, 0, 200, 0, 0, 0, 217, 0, 0, 0, 233, 0, 0, 0, 250, 0, 0, 0, 14, 1, 0, 0, 47, 1, 0, 0, 77, 1, 0, 0, 114, 1, 0, 0, 144, 1, 0, 0, 179, 1, 0, 0, 220, 1, 0, 0, 244, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 0, 0, 1, 0, 2, 0, 11, 0, 12, 0, 13, 0, 14, 0, 15, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 16], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27371996);
allocate([232, 205, 161, 1, 56, 2, 0, 0, 57, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 51, 80, 73, 67, 0, 0, 0, 0, 32, 82, 202, 1, 224, 205, 161, 1, 120, 40, 5, 0, 0, 0, 0, 0, 80, 73, 67, 58, 73, 67, 87, 52, 58, 32, 37, 120, 44, 32, 56, 48, 56, 53, 32, 109, 111, 100, 101, 32, 110, 111, 116, 32, 104, 97, 110, 100, 108, 101, 100, 0, 0, 0, 0, 0, 80, 73, 67, 58, 73, 67, 87, 52, 58, 32, 37, 120, 44, 32, 115, 112, 101, 99, 105, 97, 108, 32, 102, 117, 108, 108, 121, 45, 110, 101, 115, 116, 101, 100, 32, 109, 111, 100, 101, 32, 110, 111, 116, 32, 104, 97, 110, 100, 108, 101, 100, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 8, 0, 9, 0, 10, 0, 11, 0, 12, 0, 13, 0, 14, 0, 15, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 80, 73, 67, 58, 32, 52, 32, 98, 121, 116, 101, 32, 105, 110, 116, 101, 114, 118, 97, 108, 32, 110, 111, 116, 32, 104, 97, 110, 100, 108, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 80, 73, 67, 58, 32, 108, 101, 118, 101, 108, 32, 116, 114, 105, 103, 103, 101, 114, 101, 100, 32, 109, 111, 100, 101, 32, 110, 111, 116, 32, 104, 97, 110, 100, 108, 101, 100, 0, 0, 0, 80, 73, 67, 58, 32, 56, 48, 56, 48, 47, 56, 48, 56, 53, 32, 109, 111, 100, 101, 32, 110, 111, 116, 32, 104, 97, 110, 100, 108, 101, 100, 0, 80, 73, 67, 58, 32, 112, 111, 108, 108, 32, 99, 111, 109, 109, 97, 110, 100, 32, 110, 111, 116, 32, 104, 97, 110, 100, 108, 101, 100, 0, 0, 0, 114, 111, 116, 97, 116, 101, 32, 109, 111, 100, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 0, 0, 0, 0, 0, 0, 114, 111, 116, 97, 116, 101, 32, 111, 110, 32, 97, 117, 116, 111, 32, 69, 79, 73, 32, 110, 111, 116, 32, 104, 97, 110, 100, 108, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 114, 99, 112, 97, 108, 0, 72, 101, 114, 99, 32, 80, 97, 108, 0, 0, 0, 0, 0, 0, 0, 0, 105, 110, 99, 104, 117, 101, 0, 0, 73, 110, 99, 32, 72, 117, 101, 0, 100, 101, 99, 104, 117, 101, 0, 0, 68, 101, 99, 32, 72, 117, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 117, 101, 32, 97, 116, 32, 37, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 209, 161, 1, 58, 2, 0, 0, 59, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 109, 112, 117, 52, 48, 49, 0, 0, 111, 102, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 97, 114, 116, 0, 0, 0, 0, 54, 77, 80, 85, 52, 48, 49, 0, 32, 82, 202, 1, 168, 209, 161, 1, 120, 40, 5, 0, 0, 0, 0, 0, 105, 110, 116, 101, 108, 108, 105, 103, 101, 110, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 210, 161, 1, 60, 2, 0, 0, 61, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 53, 84, 73, 77, 69, 82, 0, 0, 32, 82, 202, 1, 168, 210, 161, 1, 120, 40, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 105, 109, 101, 114, 46, 99, 112, 112, 58, 32, 101, 114, 114, 111, 114, 32, 105, 110, 32, 114, 101, 97, 100, 108, 97, 116, 99, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 208, 214, 161, 1, 62, 2, 0, 0, 63, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 111, 112, 108, 114, 97, 116, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 77, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 67, 77, 83, 0, 0, 0, 0, 32, 82, 202, 1, 200, 214, 161, 1, 120, 40, 5, 0, 0, 0, 0, 0, 240, 214, 161, 1, 240, 215, 161, 1, 240, 216, 161, 1, 240, 217, 161, 1], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27381188);
allocate([15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 7, 0, 0, 255, 15, 0, 0, 255, 23, 0, 0, 255, 31, 0, 0, 255, 39, 0, 0, 255, 47, 0, 0, 255, 55, 0, 0, 255, 63, 0, 0, 255, 71, 0, 0, 255, 79, 0, 0, 255, 87, 0, 0, 255, 95, 0, 0, 255, 103, 0, 0, 255, 111, 0, 0, 255, 119], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27384616);
allocate([136, 236, 161, 1, 64, 2, 0, 0, 65, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 115, 98, 98, 97, 115, 101, 0, 0, 105, 114, 113, 0, 0, 0, 0, 0, 100, 109, 97, 0, 0, 0, 0, 0, 104, 100, 109, 97, 0, 0, 0, 0, 115, 98, 109, 105, 120, 101, 114, 0, 83, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 69, 84, 32, 66, 76, 65, 83, 84, 69, 82, 61, 65, 0, 0, 0, 32, 73, 0, 0, 0, 0, 0, 0, 32, 68, 0, 0, 0, 0, 0, 0, 32, 72, 0, 0, 0, 0, 0, 0, 32, 84, 0, 0, 0, 0, 0, 0, 56, 83, 66, 76, 65, 83, 84, 69, 82, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 120, 236, 161, 1, 120, 40, 5, 0, 0, 0, 0, 0, 70, 77, 0, 0, 0, 0, 0, 0, 85, 110, 104, 97, 110, 100, 108, 101, 100, 32, 100, 109, 97, 32, 109, 111, 100, 101, 32, 37, 100, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 0, 255, 254, 253, 252, 251, 250, 249, 1, 3, 5, 7, 9, 11, 13, 15, 255, 253, 251, 249, 247, 245, 243, 241, 2, 6, 10, 14, 18, 22, 26, 30, 254, 250, 246, 242, 238, 234, 230, 226, 4, 12, 20, 28, 36, 44, 52, 60, 252, 244, 236, 228, 220, 212, 204, 196, 0, 0, 0, 0, 0, 16, 16, 16, 0, 0, 0, 0, 0, 16, 16, 16, 240, 0, 0, 0, 0, 16, 16, 16, 240, 0, 0, 0, 0, 16, 16, 16, 240, 0, 0, 0, 0, 16, 16, 16, 240, 0, 0, 0, 0, 16, 16, 16, 240, 0, 0, 0, 0, 0, 0, 0, 240, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 255, 254, 253, 1, 3, 5, 7, 255, 253, 251, 249, 2, 6, 10, 14, 254, 250, 246, 242, 4, 12, 20, 28, 252, 244, 236, 228, 5, 15, 25, 35, 251, 241, 231, 221, 0, 0, 0, 8, 0, 0, 0, 8, 248, 0, 0, 8, 248, 0, 0, 8, 248, 0, 0, 8, 248, 0, 0, 8, 248, 0, 0, 8, 248, 0, 0, 8, 248, 0, 0, 0, 248, 0, 0, 0, 0, 1, 0, 255, 1, 3, 255, 253, 2, 6, 254, 250, 4, 12, 252, 244, 8, 24, 248, 232, 6, 48, 240, 208, 0, 4, 0, 4, 252, 4, 252, 4, 252, 4, 252, 4, 252, 4, 252, 4, 252, 4, 252, 4, 252, 0, 252, 0, 0, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 254, 255, 255, 255, 252, 255, 255, 255, 8, 0, 0, 0, 240, 255, 255, 255, 32, 0, 0, 0, 64, 0, 0, 0, 128, 255, 255, 255, 150, 255, 255, 255, 255, 255, 255, 255, 2, 0, 0, 0, 252, 255, 255, 255, 8, 0, 0, 0, 16, 0, 0, 0, 224, 255, 255, 255, 64, 0, 0, 0, 128, 255, 255, 255, 165, 0, 0, 0, 255, 255, 255, 255, 2, 0, 0, 0, 4, 0, 0, 0, 248, 255, 255, 255, 16, 0, 0, 0, 224, 255, 255, 255, 192, 255, 255, 255, 128, 0, 0, 0, 105, 255, 255, 255, 1, 0, 0, 0, 254, 255, 255, 255, 4, 0, 0, 0, 248, 255, 255, 255, 240, 255, 255, 255, 32, 0, 0, 0, 192, 255, 255, 255, 128, 0, 0, 0, 90, 0, 0, 0, 67, 79, 80, 89, 82, 73, 71, 72, 84, 32, 40, 67, 41, 32, 67, 82, 69, 65, 84, 73, 86, 69, 32, 84, 69, 67, 72, 78, 79, 76, 79, 71, 89, 32, 76, 84, 68, 44, 32, 49, 57, 57, 50, 46, 0, 0, 0, 0, 115, 98, 116, 121, 112, 101, 0, 0, 115, 98, 49, 0, 0, 0, 0, 0, 115, 98, 50, 0, 0, 0, 0, 0, 115, 98, 112, 114, 111, 49, 0, 0, 115, 98, 112, 114, 111, 50, 0, 0, 115, 98, 49, 54, 0, 0, 0, 0, 103, 98, 0, 0, 0, 0, 0, 0, 110, 111, 110, 101, 0, 0, 0, 0, 111, 112, 108, 109, 111, 100, 101, 0, 99, 109, 115, 0, 0, 0, 0, 0, 111, 112, 108, 50, 0, 0, 0, 0, 100, 117, 97, 108, 111, 112, 108, 50, 0, 0, 0, 0, 0, 0, 0, 0, 111, 112, 108, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 243, 177, 1, 66, 2, 0, 0, 67, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 103, 117, 115], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 27388668);
allocate([103, 117, 115, 114, 97, 116, 101, 0, 103, 117, 115, 98, 97, 115, 101, 0, 103, 117, 115, 100, 109, 97, 0, 0, 103, 117, 115, 105, 114, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 85, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 69, 84, 32, 85, 76, 84, 82, 65, 83, 78, 68, 61, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 83, 69, 84, 32, 85, 76, 84, 82, 65, 68, 73, 82, 61, 0, 0, 0, 117, 108, 116, 114, 97, 100, 105, 114, 0, 0, 0, 0, 0, 0, 0, 0, 51, 71, 85, 83, 0, 0, 0, 0, 32, 82, 202, 1, 152, 243, 177, 1, 120, 40, 5], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 28439208);
allocate([2, 0, 0, 0, 0, 0, 0, 0, 2, 5, 3, 7, 11, 12, 15, 0, 1, 3, 5, 6, 7], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 28447721);
allocate([73, 79, 95, 114, 101, 97, 100, 72, 97, 110, 100, 108, 101, 114, 32, 97, 108, 108, 114, 101, 97, 100, 121, 32, 105, 110, 115, 116, 97, 108, 108, 101, 100, 32, 112, 111, 114, 116, 32, 37, 120, 0, 0, 0, 0, 0, 0, 0, 73, 79, 95, 119, 114, 105, 116, 101, 72, 97, 110, 100, 108, 101, 114, 32, 97, 108, 108, 114, 101, 97, 100, 121, 32, 105, 110, 115, 116, 97, 108, 108, 101, 100, 32, 112, 111, 114, 116, 32, 37, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 21, 202, 1, 36, 0, 0, 0, 68, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 50, 73, 79, 0, 0, 0, 0, 0, 32, 82, 202, 1, 104, 21, 202, 1, 120, 40, 5, 0, 0, 0, 0, 0, 71, 111, 116, 32, 97, 32, 100, 111, 115, 98, 111, 120, 32, 99, 108, 111, 115, 101, 32, 109, 97, 99, 104, 105, 110, 101, 32, 105, 110, 32, 73, 79, 45, 102, 97, 117, 108, 116, 32, 99, 111, 114, 101, 63, 0, 0, 0, 0, 73, 79, 45, 102, 97, 117, 108, 32, 67, 111, 114, 101, 32, 119, 105, 116, 104, 111, 117, 116, 32, 73, 79, 45, 102, 97, 117, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 71, 65, 58, 32, 85, 110, 104, 97, 110, 100, 108, 101, 100, 32, 109, 117, 108, 116, 105, 102, 117, 110, 99, 116, 105, 111, 110, 32, 99, 111, 109, 109, 97, 110, 100, 32, 37, 120, 0, 88, 71, 65, 58, 32, 71, 101, 116, 77, 105, 120, 82, 101, 115, 117, 108, 116, 58, 32, 85, 110, 107, 110, 111, 119, 110, 32, 109, 105, 120, 46, 32, 32, 83, 104, 111, 117, 108, 100, 110, 39, 116, 32, 98, 101, 32, 97, 98, 108, 101, 32, 116, 111, 32, 103, 101, 116, 32, 104, 101, 114, 101, 33, 0, 88, 71, 65, 58, 32, 68, 114, 97, 119, 82, 101, 99, 116, 58, 32, 87, 97, 110, 116, 115, 32, 100, 97, 116, 97, 32, 102, 114, 111, 109, 32, 115, 114, 99, 100, 97, 116, 97, 0, 0, 88, 71, 65, 58, 32, 68, 114, 97, 119, 82, 101, 99, 116, 58, 32, 83, 104, 111, 117, 108, 100, 110, 39, 116, 32, 98, 101, 32, 97, 98, 108, 101, 32, 116, 111, 32, 103, 101, 116, 32, 104, 101, 114, 101, 33, 0, 0, 0, 88, 71, 65, 58, 32, 68, 114, 97, 119, 76, 105, 110, 101, 58, 32, 78, 101, 101, 100, 115, 32, 109, 105, 120, 109, 111, 100, 101, 32, 37, 120, 0, 88, 71, 65, 58, 32, 68, 114, 97, 119, 82, 101, 99, 116, 58, 32, 87, 97, 110, 116, 115, 32, 100, 97, 116, 97, 32, 102, 114, 111, 109, 32, 80, 73, 88, 95, 84, 82, 65, 78, 83, 32, 114, 101, 103, 105, 115, 116, 101, 114, 0, 0, 0, 0, 0, 0, 0, 88, 71, 65, 58, 32, 68, 114, 97, 119, 82, 101, 99, 116, 58, 32, 78, 101, 101, 100, 115, 32, 109, 105, 120, 109, 111, 100, 101, 32, 37, 120, 0, 88, 71, 65, 58, 32, 117, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 100, 114, 97, 119, 119, 97, 105, 116, 32, 111, 112, 101, 114, 97, 116, 105, 111, 110, 0, 0, 0, 0, 0, 88, 71, 65, 58, 32, 117, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 98, 112, 112, 32, 47, 32, 100, 97, 116, 97, 119, 105, 100, 116, 104, 32, 99, 111, 109, 98, 105, 110, 97, 116, 105, 111, 110, 32, 37, 120, 0, 88, 71, 65, 58, 32, 68, 114, 97, 119, 66, 108, 105, 116, 87, 97, 105, 116, 58, 32, 85, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 115, 114, 99, 32, 37, 120, 0, 0, 0, 88, 71, 65, 58, 32, 68, 114, 97, 119, 66, 108, 105, 116, 87, 97, 105, 116, 58, 32, 85, 110, 104, 97, 110, 100, 108, 101, 100, 32, 109, 105, 120, 109, 111, 100, 101, 58, 32, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 88, 71, 65, 58, 32, 85, 110, 104, 97, 110, 100, 108, 101, 100, 32, 100, 114, 97, 119, 32, 99, 111, 109, 109, 97, 110, 100, 32, 37, 120, 0, 0, 88, 71, 65, 58, 32, 68, 114, 97, 119, 80, 97, 116, 116, 101, 114, 110, 58, 32, 77, 105, 120, 115, 101, 108, 101, 99, 116, 32, 100, 97, 116, 97, 32, 102, 114, 111, 109, 32, 80, 73, 88, 95, 84, 82, 65, 78, 83, 32, 114, 101, 103, 105, 115, 116, 101, 114, 0, 0, 0, 0, 0, 0, 0, 0, 88, 71, 65, 58, 32, 66, 108, 105, 116, 82, 101, 99, 116, 58, 32, 85, 110, 107, 110, 111, 119, 110, 32, 109, 105, 120, 32, 115, 101, 108, 101, 99, 116, 32, 114, 101, 103, 105, 115, 116, 101, 114, 0, 0, 0, 0, 0, 0, 88, 71, 65, 58, 32, 68, 114, 97, 119, 80, 97, 116, 116, 101, 114, 110, 58, 32, 87, 97, 110, 116, 115, 32, 100, 97, 116, 97, 32, 102, 114, 111, 109, 32, 80, 73, 88, 95, 84, 82, 65, 78, 83, 32, 114, 101, 103, 105, 115, 116, 101, 114, 0, 0, 0, 0, 88, 71, 65, 58, 32, 68, 114, 97, 119, 80, 97, 116, 116, 101, 114, 110, 58, 32, 83, 104, 111, 117, 108, 100, 110, 39, 116, 32, 98, 101, 32, 97, 98, 108, 101, 32, 116, 111, 32, 103, 101, 116, 32, 104, 101, 114, 101, 33, 0, 0, 0, 0, 0, 0, 0, 0, 88, 71, 65, 58, 32, 68, 114, 97, 119, 80, 97, 116, 116, 101, 114, 110, 58, 32, 85, 110, 107, 110, 111, 119, 110, 32, 109, 105, 120, 32, 115, 101, 108, 101, 99, 116, 32, 114, 101, 103, 105, 115, 116, 101, 114, 0, 0, 0, 88, 71, 65, 58, 32, 87, 97, 110, 116, 115, 32, 108, 105, 110, 101, 32, 100, 114, 97, 119, 110, 32, 102, 114, 111, 109, 32, 80, 73, 88, 95, 84, 82, 65, 78, 83, 32, 114, 101, 103, 105, 115, 116, 101, 114, 33, 0, 0, 67, 79, 76, 79, 82, 95, 67, 77, 80, 32, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 0, 0, 0, 0, 0, 0, 0, 117, 110, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 32, 88, 71, 65, 32, 77, 77, 73, 79, 0, 0, 88, 71, 65, 58, 32, 87, 114, 111, 116, 101, 32, 116, 111, 32, 112, 111, 114, 116, 32, 37, 120, 32, 119, 105, 116, 104, 32, 37, 120, 44, 32, 108, 101, 110, 32, 37, 120, 0, 0, 0, 0, 0, 0, 0, 40, 27, 202, 1, 69, 2, 0, 0, 70, 2, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 12, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 216, 27, 202, 1, 224, 27, 202, 1, 232, 27, 202, 1, 240, 27, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 101, 114, 105, 97, 108, 37, 100, 58, 32, 69, 114, 114, 111, 114, 115, 58, 32, 70, 114, 97, 109, 105, 110, 103, 32, 37, 100, 44, 32, 80, 97, 114, 105, 116, 121, 32, 37, 100, 44, 32, 79, 118, 101, 114, 114, 117, 110, 32, 82, 88, 58, 37, 100, 32, 40, 73, 70, 48, 58, 37, 100, 41, 44, 32, 84, 88, 58, 37, 100, 44, 32, 66, 114, 101, 97, 107, 32, 37, 100, 0, 0, 0, 0, 0, 0, 0, 0, 87, 97, 114, 110, 105, 110, 103, 58, 32, 116, 114, 105, 101, 100, 32, 116, 111, 32, 97, 99, 116, 105, 118, 97, 116, 101, 32, 104, 97, 114, 100, 119, 97, 114, 101, 32, 104, 97, 110, 100, 115, 104, 97, 107, 101, 46, 0, 0, 0, 0, 0, 0, 72, 27, 202, 1, 71, 2, 0, 0, 72, 2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 248, 3, 248, 2, 232, 3, 232, 2, 4, 3, 4, 3, 0, 0, 0, 0, 105, 114, 113, 58, 0, 0, 0, 0, 37, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 48, 100, 101, 118, 105, 99, 101, 95, 67, 79, 77, 0, 0, 0, 0, 32, 82, 202, 1, 24, 27, 202, 1, 72, 83, 5, 0, 0, 0, 0, 0, 55, 67, 83, 101, 114, 105, 97, 108, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 56, 27, 202, 1, 0, 0, 0, 0, 200, 27, 202, 1, 73, 2, 0, 0, 74, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 116, 121, 112, 101, 0, 0, 0, 0, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 0, 0, 0, 0, 0, 0, 100, 117, 109, 109, 121, 0, 0, 0, 100, 105, 115, 97, 98, 108, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 73, 110, 118, 97, 108, 105, 100, 32, 116, 121, 112, 101, 32, 102, 111, 114, 32, 115, 101, 114, 105, 97, 108, 37, 100, 0, 0, 0, 0, 0, 0, 0, 49, 49, 83, 69, 82, 73, 65, 76, 80, 79, 82, 84, 83, 0, 0, 0, 32, 82, 202, 1, 184, 27, 202, 1, 120, 40, 5, 0, 0, 0, 0, 0, 67, 79, 77, 49, 0, 0, 0, 0, 67, 79, 77, 50, 0, 0, 0, 0, 67, 79, 77, 51, 0, 0, 0, 0, 67, 79, 77, 52, 0, 0, 0, 0, 0, 0, 0, 0, 56, 28, 202, 1, 75, 2, 0, 0, 76, 2, 0, 0, 63, 0, 0, 0, 77, 2, 0, 0, 52, 0, 0, 0, 64, 0, 0, 0, 65, 0, 0, 0, 53, 0, 0, 0, 66, 0, 0, 0, 54, 0, 0, 0, 49, 50, 67, 83, 101, 114, 105, 97, 108, 68, 117, 109, 109, 121, 0, 0, 32, 82, 202, 1, 40, 28, 202, 1, 72, 27, 202, 1], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 30020696);
allocate([208, 32, 202, 1, 78, 2, 0, 0, 79, 2, 0, 0, 67, 0, 0, 0, 71, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 72, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 88, 0, 0, 0, 73, 0, 0, 0, 89, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 49, 95, 95, 115, 116, 100, 111, 117, 116, 98, 117, 102, 73, 119, 69, 69, 0, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 176, 32, 202, 1, 72, 38, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 56, 33, 202, 1, 78, 2, 0, 0, 80, 2, 0, 0, 68, 0, 0, 0, 71, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 64, 0, 0, 0, 61, 0, 0, 0, 72, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 90, 0, 0, 0, 74, 0, 0, 0, 91, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 115, 116, 100, 105, 110, 98, 117, 102, 73, 119, 69, 69, 0, 32, 82, 202, 1, 32, 33, 202, 1, 72, 38, 202, 1, 0, 0, 0, 0, 117, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 108, 111, 99, 97, 108, 101, 32, 102, 111, 114, 32, 115, 116, 97, 110, 100, 97, 114, 100, 32, 105, 110, 112, 117, 116, 0, 0, 0, 0, 0, 0, 0, 208, 33, 202, 1, 81, 2, 0, 0, 82, 2, 0, 0, 69, 0, 0, 0, 45, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 67, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 68, 0, 0, 0, 44, 0, 0, 0, 92, 0, 0, 0, 75, 0, 0, 0, 93, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 49, 95, 95, 115, 116, 100, 111, 117, 116, 98, 117, 102, 73, 99, 69, 69, 0, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 176, 33, 202, 1, 8, 38, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 56, 34, 202, 1, 81, 2, 0, 0, 83, 2, 0, 0, 70, 0, 0, 0, 45, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 45, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 94, 0, 0, 0, 44, 0, 0, 0, 95, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 115, 116, 100, 105, 110, 98, 117, 102, 73, 99, 69, 69, 0, 32, 82, 202, 1, 32, 34, 202, 1, 8, 38, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 52, 95, 95, 115, 104, 97, 114, 101, 100, 95, 99, 111, 117, 110, 116, 69, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 72, 34, 202, 1, 58, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 34, 202, 1, 84, 2, 0, 0, 85, 2, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 50, 115, 121, 115, 116, 101, 109, 95, 101, 114, 114, 111, 114, 69, 0, 0, 32, 82, 202, 1, 144, 34, 202, 1, 232, 79, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 52, 101, 114, 114, 111, 114, 95, 99, 97, 116, 101, 103, 111, 114, 121, 69, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 184, 34, 202, 1, 78, 83, 116, 51, 95, 95, 49, 49, 50, 95, 95, 100, 111, 95, 109, 101, 115, 115, 97, 103, 101, 69, 0, 0, 32, 82, 202, 1, 224, 34, 202, 1, 216, 34, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 0, 0, 0, 0, 0, 0, 0, 0, 8, 38, 202, 1, 86, 2, 0, 0, 87, 2, 0, 0, 41, 0, 0, 0, 45, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 45, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 68, 0, 0, 0, 44, 0, 0, 0, 92, 0, 0, 0, 44, 0, 0, 0, 95, 0, 0, 0, 0, 0, 0, 0, 72, 38, 202, 1, 88, 2, 0, 0, 89, 2, 0, 0, 71, 0, 0, 0, 71, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 64, 0, 0, 0, 61, 0, 0, 0, 72, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 88, 0, 0, 0, 74, 0, 0, 0, 91, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 128, 38, 202, 1, 77, 0, 0, 0, 78, 0, 0, 0, 248, 255, 255, 255, 248, 255, 255, 255, 128, 38, 202, 1, 79, 0, 0, 0, 80, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 200, 38, 202, 1, 90, 2, 0, 0, 91, 2, 0, 0, 248, 255, 255, 255, 248, 255, 255, 255, 200, 38, 202, 1, 92, 2, 0, 0, 93, 2, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 39, 202, 1, 87, 0, 0, 0, 88, 0, 0, 0, 252, 255, 255, 255, 252, 255, 255, 255, 16, 39, 202, 1, 89, 0, 0, 0, 90, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 88, 39, 202, 1, 94, 2, 0, 0, 95, 2, 0, 0, 252, 255, 255, 255, 252, 255, 255, 255, 88, 39, 202, 1, 96, 2, 0, 0, 97, 2, 0, 0, 105, 111, 115, 116, 114, 101, 97, 109, 0, 0, 0, 0, 0, 0, 0, 0, 117, 110, 115, 112, 101, 99, 105, 102, 105, 101, 100, 32, 105, 111, 115, 116, 114, 101, 97, 109, 95, 99, 97, 116, 101, 103, 111, 114, 121, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 37, 202, 1, 98, 2, 0, 0, 99, 2, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 37, 202, 1, 100, 2, 0, 0, 101, 2, 0, 0, 105, 111, 115, 95, 98, 97, 115, 101, 58, 58, 99, 108, 101, 97, 114, 0, 78, 83, 116, 51, 95, 95, 49, 56, 105, 111, 115, 95, 98, 97, 115, 101, 55, 102, 97, 105, 108, 117, 114, 101, 69, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 0, 37, 202, 1, 168, 34, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 56, 105, 111, 115, 95, 98, 97, 115, 101, 69, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 48, 37, 202, 1, 78, 83, 116, 51, 95, 95, 49, 57, 98, 97, 115, 105, 99, 95, 105, 111, 115, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 80, 37, 202, 1, 72, 37, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 57, 98, 97, 115, 105, 99, 95, 105, 111, 115, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 144, 37, 202, 1, 72, 37, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 53, 98, 97, 115, 105, 99, 95, 115, 116, 114, 101, 97, 109, 98, 117, 102, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 208, 37, 202, 1, 78, 83, 116, 51, 95, 95, 49, 49, 53, 98, 97, 115, 105, 99, 95, 115, 116, 114, 101, 97, 109, 98, 117, 102, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 16, 38, 202, 1, 78, 83, 116, 51, 95, 95, 49, 49, 51, 98, 97, 115, 105, 99, 95, 105, 115, 116, 114, 101, 97, 109, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 0, 0, 128, 82, 202, 1, 80, 38, 202, 1, 0, 0, 0, 0, 1, 0, 0, 0, 128, 37, 202, 1, 3, 244, 255, 255, 78, 83, 116, 51, 95, 95, 49, 49, 51, 98, 97, 115, 105, 99, 95, 105, 115, 116, 114, 101, 97, 109, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 0, 0, 128, 82, 202, 1, 152, 38, 202, 1, 0, 0, 0, 0, 1, 0, 0, 0, 192, 37, 202, 1, 3, 244, 255, 255, 78, 83, 116, 51, 95, 95, 49, 49, 51, 98, 97, 115, 105, 99, 95, 111, 115, 116, 114, 101, 97, 109, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 0, 0, 128, 82, 202, 1, 224, 38, 202, 1, 0, 0, 0, 0, 1, 0, 0, 0, 128, 37, 202, 1, 3, 244, 255, 255, 78, 83, 116, 51, 95, 95, 49, 49, 51, 98, 97, 115, 105, 99, 95, 111, 115, 116, 114, 101, 97, 109, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 0, 0, 128, 82, 202, 1, 40, 39, 202, 1, 0, 0, 0, 0, 1, 0, 0, 0, 192, 37, 202, 1, 3, 244, 255, 255, 0, 0, 0, 0, 184, 39, 202, 1, 102, 2, 0, 0, 103, 2, 0, 0, 72, 0, 0, 0, 55, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 57, 95, 95, 105, 111, 115, 116, 114, 101, 97, 109, 95, 99, 97, 116, 101, 103, 111, 114, 121, 69, 0, 0, 0, 32, 82, 202, 1, 152, 39, 202, 1, 248, 34, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 202, 1, 104, 2, 0, 0, 105, 2, 0, 0, 106, 2, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 54, 202, 1, 107, 2, 0, 0, 108, 2, 0, 0, 106, 2, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 55, 202, 1, 109, 2, 0, 0, 110, 2, 0, 0, 106, 2, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 65, 66, 67, 68, 69, 70, 120, 88, 43, 45, 112, 80, 105, 73, 110, 78, 0, 0, 0, 0, 0, 0, 0, 0, 37, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 56, 202, 1, 111, 2, 0, 0, 112, 2, 0, 0, 106, 2, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 57, 202, 1, 113, 2, 0, 0, 114, 2, 0, 0, 106, 2, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 23, 0, 0, 0, 7, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 108, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 57, 202, 1, 115, 2, 0, 0, 116, 2, 0, 0, 106, 2, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 25, 0, 0, 0, 11, 0, 0, 0, 26, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 37, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 58, 202, 1, 117, 2, 0, 0, 118, 2, 0, 0, 106, 2, 0, 0, 73, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 1, 0, 0, 0, 248, 255, 255, 255, 160, 58, 202, 1, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 72, 58, 37, 77, 58, 37, 83, 37, 109, 47, 37, 100, 47, 37, 121, 37, 89, 45, 37, 109, 45, 37, 100, 37, 73, 58, 37, 77, 58, 37, 83, 32, 37, 112, 0, 0, 0, 0, 0, 37, 72, 58, 37, 77, 0, 0, 0, 37, 72, 58, 37, 77, 58, 37, 83, 0, 0, 0, 0, 64, 59, 202, 1, 119, 2, 0, 0, 120, 2, 0, 0, 106, 2, 0, 0, 81, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 2, 0, 0, 0, 248, 255, 255, 255, 64, 59, 202, 1, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 72, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 83, 0, 0, 0, 37, 0, 0, 0, 109, 0, 0, 0, 47, 0, 0, 0, 37, 0, 0, 0, 100, 0, 0, 0, 47, 0, 0, 0, 37, 0, 0, 0, 121, 0, 0, 0, 37, 0, 0, 0, 89, 0, 0, 0, 45, 0, 0, 0, 37, 0, 0, 0, 109, 0, 0, 0, 45, 0, 0, 0, 37, 0, 0, 0, 100, 0, 0, 0, 37, 0, 0, 0, 73, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 83, 0, 0, 0, 32, 0, 0, 0, 37, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 72, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 72, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0, 0, 208, 59, 202, 1, 121, 2, 0, 0, 122, 2, 0, 0, 106, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 60, 202, 1, 123, 2, 0, 0, 124, 2, 0, 0, 106, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 54, 202, 1, 125, 2, 0, 0, 126, 2, 0, 0, 106, 2, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 72, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 91, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 54, 202, 1, 127, 2, 0, 0, 128, 2, 0, 0, 106, 2, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 81, 0, 0, 0, 94, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 54, 202, 1, 129, 2, 0, 0, 130, 2, 0, 0, 106, 2, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 97, 0, 0, 0, 88, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 55, 202, 1, 131, 2, 0, 0, 132, 2, 0, 0, 106, 2, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 100, 0, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 60, 202, 1, 133, 2, 0, 0, 134, 2, 0, 0, 106, 2, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0, 0, 0, 0, 0, 0, 37, 76, 102, 0, 0, 0, 0, 0, 109, 111, 110, 101, 121, 95, 103, 101, 116, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 88, 61, 202, 1, 135, 2, 0, 0, 136, 2, 0, 0, 106, 2, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 61, 202, 1, 137, 2, 0, 0, 138, 2, 0, 0, 106, 2, 0, 0, 1, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 46, 48, 76, 102, 0, 0, 0, 0, 0, 0, 0, 120, 62, 202, 1, 139, 2, 0, 0, 140, 2, 0, 0, 106, 2, 0, 0, 2, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 208, 62, 202, 1, 141, 2, 0, 0, 142, 2, 0, 0, 106, 2, 0, 0, 80, 0, 0, 0, 13, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 63, 202, 1, 143, 2, 0, 0, 144, 2, 0, 0, 106, 2, 0, 0, 81, 0, 0, 0, 14, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 101, 99, 116, 111, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 53, 202, 1, 145, 2, 0, 0, 146, 2, 0, 0, 106, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 50, 202, 1, 147, 2, 0, 0, 148, 2, 0, 0, 106, 2, 0, 0, 96, 0, 0, 0, 82, 0, 0, 0, 97, 0, 0, 0, 83, 0, 0, 0, 98, 0, 0, 0, 26, 0, 0, 0, 84, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 51, 202, 1, 149, 2, 0, 0, 150, 2, 0, 0, 106, 2, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 9, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136, 53, 202, 1, 151, 2, 0, 0, 152, 2, 0, 0, 106, 2, 0, 0, 104, 0, 0, 0, 105, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 176, 53, 202, 1, 153, 2, 0, 0, 154, 2, 0, 0, 106, 2, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 116, 114, 117, 101, 0, 0, 0, 0, 116, 0, 0, 0, 114, 0, 0, 0, 117, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 97, 108, 115, 101, 0, 0, 0, 102, 0, 0, 0, 97, 0, 0, 0, 108, 0, 0, 0, 115, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 109, 47, 37, 100, 47, 37, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 109, 0, 0, 0, 47, 0, 0, 0, 37, 0, 0, 0, 100, 0, 0, 0, 47, 0, 0, 0, 37, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 72, 58, 37, 77, 58, 37, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 72, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 97, 32, 37, 98, 32, 37, 100, 32, 37, 72, 58, 37, 77, 58, 37, 83, 32, 37, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 97, 0, 0, 0, 32, 0, 0, 0, 37, 0, 0, 0, 98, 0, 0, 0, 32, 0, 0, 0, 37, 0, 0, 0, 100, 0, 0, 0, 32, 0, 0, 0, 37, 0, 0, 0, 72, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 83, 0, 0, 0, 32, 0, 0, 0, 37, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 73, 58, 37, 77, 58, 37, 83, 32, 37, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 73, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 83, 0, 0, 0, 32, 0, 0, 0, 37, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 108, 111, 99, 97, 108, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 232, 49, 202, 1, 155, 2, 0, 0, 156, 2, 0, 0, 106, 2, 0, 0, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 54, 108, 111, 99, 97, 108, 101, 53, 102, 97, 99, 101, 116, 69, 0, 0, 0, 32, 82, 202, 1, 208, 49, 202, 1, 104, 34, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 120, 50, 202, 1, 155, 2, 0, 0, 157, 2, 0, 0, 106, 2, 0, 0, 85, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 99, 0, 0, 0, 86, 0, 0, 0, 100, 0, 0, 0, 87, 0, 0, 0, 101, 0, 0, 0, 30, 0, 0, 0, 88, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 53, 99, 116, 121, 112, 101, 73, 119, 69, 69, 0, 0, 0, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 99, 116, 121, 112, 101, 95, 98, 97, 115, 101, 69, 0, 0, 0, 0, 64, 81, 202, 1, 88, 50, 202, 1, 128, 82, 202, 1, 64, 50, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 112, 50, 202, 1, 2, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 53, 99, 116, 121, 112, 101, 73, 99, 69, 69, 0, 0, 0, 0, 0, 0, 0, 128, 82, 202, 1, 152, 50, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 112, 50, 202, 1, 2, 0, 0, 0, 0, 0, 0, 0, 72, 51, 202, 1, 155, 2, 0, 0, 158, 2, 0, 0, 106, 2, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 11, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 12, 0, 0, 0, 110, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 55, 99, 111, 100, 101, 99, 118, 116, 73, 99, 99, 49, 49, 95, 95, 109, 98, 115, 116, 97, 116, 101, 95, 116, 69, 69, 0, 0, 0, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 50, 99, 111, 100, 101, 99, 118, 116, 95, 98, 97, 115, 101, 69, 0, 0, 64, 81, 202, 1, 40, 51, 202, 1, 128, 82, 202, 1, 0, 51, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 64, 51, 202, 1, 2, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 55, 99, 111, 100, 101, 99, 118, 116, 73, 119, 99, 49, 49, 95, 95, 109, 98, 115, 116, 97, 116, 101, 95, 116, 69, 69, 0, 0, 0, 0, 0, 0, 0, 128, 82, 202, 1, 104, 51, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 64, 51, 202, 1, 2, 0, 0, 0, 0, 0, 0, 0, 8, 52, 202, 1, 155, 2, 0, 0, 159, 2, 0, 0, 106, 2, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 13, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 14, 0, 0, 0, 113, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 55, 99, 111, 100, 101, 99, 118, 116, 73, 68, 115, 99, 49, 49, 95, 95, 109, 98, 115, 116, 97, 116, 101, 95, 116, 69, 69, 0, 0, 0, 0, 0, 0, 128, 82, 202, 1, 224, 51, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 64, 51, 202, 1, 2, 0, 0, 0, 0, 0, 0, 0, 128, 52, 202, 1, 155, 2, 0, 0, 160, 2, 0, 0, 106, 2, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 15, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 16, 0, 0, 0, 116, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 55, 99, 111, 100, 101, 99, 118, 116, 73, 68, 105, 99, 49, 49, 95, 95, 109, 98, 115, 116, 97, 116, 101, 95, 116, 69, 69, 0, 0, 0, 0, 0, 0, 128, 82, 202, 1, 88, 52, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 64, 51, 202, 1, 2, 0, 0, 0, 0, 0, 0, 0, 248, 52, 202, 1, 155, 2, 0, 0, 161, 2, 0, 0, 106, 2, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 15, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 16, 0, 0, 0, 116, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 54, 95, 95, 110, 97, 114, 114, 111, 119, 95, 116, 111, 95, 117, 116, 102, 56, 73, 76, 106, 51, 50, 69, 69, 69, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 208, 52, 202, 1, 128, 52, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 96, 53, 202, 1, 155, 2, 0, 0, 162, 2, 0, 0, 106, 2, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 15, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 16, 0, 0, 0, 116, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 55, 95, 95, 119, 105, 100, 101, 110, 95, 102, 114, 111, 109, 95, 117, 116, 102, 56, 73, 76, 106, 51, 50, 69, 69, 69, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 56, 53, 202, 1, 128, 52, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 56, 110, 117, 109, 112, 117, 110, 99, 116, 73, 99, 69, 69, 0, 0, 0, 0, 32, 82, 202, 1, 112, 53, 202, 1, 232, 49, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 56, 110, 117, 109, 112, 117, 110, 99, 116, 73, 119, 69, 69, 0, 0, 0, 0, 32, 82, 202, 1, 152, 53, 202, 1, 232, 49, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 54, 108, 111, 99, 97, 108, 101, 53, 95, 95, 105, 109, 112, 69, 0, 0, 0, 32, 82, 202, 1, 192, 53, 202, 1, 232, 49, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 55, 99, 111, 108, 108, 97, 116, 101, 73, 99, 69, 69, 0, 0, 0, 0, 0, 32, 82, 202, 1, 232, 53, 202, 1, 232, 49, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 55, 99, 111, 108, 108, 97, 116, 101, 73, 119, 69, 69, 0, 0, 0, 0, 0, 32, 82, 202, 1, 16, 54, 202, 1, 232, 49, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 109, 111, 110, 101, 121, 112, 117, 110, 99, 116, 73, 99, 76, 98, 48, 69, 69, 69, 0, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 109, 111, 110, 101, 121, 95, 98, 97, 115, 101, 69, 0, 0, 0, 0, 64, 81, 202, 1, 88, 54, 202, 1, 128, 82, 202, 1, 56, 54, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 112, 54, 202, 1, 2, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 109, 111, 110, 101, 121, 112, 117, 110, 99, 116, 73, 99, 76, 98, 49, 69, 69, 69, 0, 0, 0, 0, 0, 128, 82, 202, 1, 152, 54, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 112, 54, 202, 1, 2, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 109, 111, 110, 101, 121, 112, 117, 110, 99, 116, 73, 119, 76, 98, 48, 69, 69, 69, 0, 0, 0, 0, 0, 128, 82, 202, 1, 216, 54, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 112, 54, 202, 1, 2, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 109, 111, 110, 101, 121, 112, 117, 110, 99, 116, 73, 119, 76, 98, 49, 69, 69, 69, 0, 0, 0, 0, 0, 128, 82, 202, 1, 24, 55, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 112, 54, 202, 1, 2, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 55, 110, 117, 109, 95, 103, 101, 116, 73, 99, 78, 83, 95, 49, 57, 105, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 69, 69, 0, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 57, 95, 95, 110, 117, 109, 95, 103, 101, 116, 73, 99, 69, 69, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 52, 95, 95, 110, 117, 109, 95, 103, 101, 116, 95, 98, 97, 115, 101, 69, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 184, 55, 202, 1, 128, 82, 202, 1, 160, 55, 202, 1, 0, 0, 0, 0, 1, 0, 0, 0, 216, 55, 202, 1, 0, 0, 0, 0, 128, 82, 202, 1, 88, 55, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 224, 55, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 55, 110, 117, 109, 95, 103, 101, 116, 73, 119, 78, 83, 95, 49, 57, 105, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 69, 69, 0, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 57, 95, 95, 110, 117, 109, 95, 103, 101, 116, 73, 119, 69, 69, 0, 0, 0, 128, 82, 202, 1, 96, 56, 202, 1, 0, 0, 0, 0, 1, 0, 0, 0, 216, 55, 202, 1, 0, 0, 0, 0, 128, 82, 202, 1, 24, 56, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 120, 56, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 55, 110, 117, 109, 95, 112, 117, 116, 73, 99, 78, 83, 95, 49, 57, 111, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 69, 69, 0, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 57, 95, 95, 110, 117, 109, 95, 112, 117, 116, 73, 99, 69, 69, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 52, 95, 95, 110, 117, 109, 95, 112, 117, 116, 95, 98, 97, 115, 101, 69, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 16, 57, 202, 1, 128, 82, 202, 1, 248, 56, 202, 1, 0, 0, 0, 0, 1, 0, 0, 0, 48, 57, 202, 1, 0, 0, 0, 0, 128, 82, 202, 1, 176, 56, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 56, 57, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 55, 110, 117, 109, 95, 112, 117, 116, 73, 119, 78, 83, 95, 49, 57, 111, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 69, 69, 0, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 57, 95, 95, 110, 117, 109, 95, 112, 117, 116, 73, 119, 69, 69, 0, 0, 0, 128, 82, 202, 1, 184, 57, 202, 1, 0, 0, 0, 0, 1, 0, 0, 0, 48, 57, 202, 1, 0, 0, 0, 0, 128, 82, 202, 1, 112, 57, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 208, 57, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 56, 116, 105, 109, 101, 95, 103, 101, 116, 73, 99, 78, 83, 95, 49, 57, 105, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 69, 69, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 57, 116, 105, 109, 101, 95, 98, 97, 115, 101, 69, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 80, 58, 202, 1, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 116, 105, 109, 101, 95, 103, 101, 116, 95, 99, 95, 115, 116, 111, 114, 97, 103, 101, 73, 99, 69, 69, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 112, 58, 202, 1, 128, 82, 202, 1, 8, 58, 202, 1, 0, 0, 0, 0, 3, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 104, 58, 202, 1, 2, 0, 0, 0, 152, 58, 202, 1, 0, 8, 0, 0, 78, 83, 116, 51, 95, 95, 49, 56, 116, 105, 109, 101, 95, 103, 101, 116, 73, 119, 78, 83, 95, 49, 57, 105, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 69, 69, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 116, 105, 109, 101, 95, 103, 101, 116, 95, 99, 95, 115, 116, 111, 114, 97, 103, 101, 73, 119, 69, 69, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 16, 59, 202, 1, 128, 82, 202, 1, 200, 58, 202, 1, 0, 0, 0, 0, 3, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 104, 58, 202, 1, 2, 0, 0, 0, 56, 59, 202, 1, 0, 8, 0, 0, 78, 83, 116, 51, 95, 95, 49, 56, 116, 105, 109, 101, 95, 112, 117, 116, 73, 99, 78, 83, 95, 49, 57, 111, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 69, 69, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 116, 105, 109, 101, 95, 112, 117, 116, 69, 0, 0, 0, 0, 64, 81, 202, 1, 176, 59, 202, 1, 128, 82, 202, 1, 104, 59, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 200, 59, 202, 1, 0, 8, 0, 0, 78, 83, 116, 51, 95, 95, 49, 56, 116, 105, 109, 101, 95, 112, 117, 116, 73, 119, 78, 83, 95, 49, 57, 111, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 69, 69, 0, 0, 0, 0, 128, 82, 202, 1, 240, 59, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 200, 59, 202, 1, 0, 8, 0, 0, 78, 83, 116, 51, 95, 95, 49, 57, 109, 111, 110, 101, 121, 95, 103, 101, 116, 73, 99, 78, 83, 95, 49, 57, 105, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 69, 69, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 49, 95, 95, 109, 111, 110, 101, 121, 95, 103, 101, 116, 73, 99, 69, 69, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 160, 60, 202, 1, 128, 82, 202, 1, 88, 60, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 192, 60, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 57, 109, 111, 110, 101, 121, 95, 103, 101, 116, 73, 119, 78, 83, 95, 49, 57, 105, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 69, 69, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 49, 95, 95, 109, 111, 110, 101, 121, 95, 103, 101, 116, 73, 119, 69, 69, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 48, 61, 202, 1, 128, 82, 202, 1, 232, 60, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 80, 61, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 57, 109, 111, 110, 101, 121, 95, 112, 117, 116, 73, 99, 78, 83, 95, 49, 57, 111, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 69, 69, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 49, 95, 95, 109, 111, 110, 101, 121, 95, 112, 117, 116, 73, 99, 69, 69, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 192, 61, 202, 1, 128, 82, 202, 1, 120, 61, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 224, 61, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 57, 109, 111, 110, 101, 121, 95, 112, 117, 116, 73, 119, 78, 83, 95, 49, 57, 111, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 69, 69, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 49, 95, 95, 109, 111, 110, 101, 121, 95, 112, 117, 116, 73, 119, 69, 69, 0, 0, 0, 0, 0, 0, 0, 0, 64, 81, 202, 1, 80, 62, 202, 1, 128, 82, 202, 1, 8, 62, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 112, 62, 202, 1, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 56, 109, 101, 115, 115, 97, 103, 101, 115, 73, 99, 69, 69, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 49, 51, 109, 101, 115, 115, 97, 103, 101, 115, 95, 98, 97, 115, 101, 69, 0, 64, 81, 202, 1, 176, 62, 202, 1, 128, 82, 202, 1, 152, 62, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 200, 62, 202, 1, 2, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 56, 109, 101, 115, 115, 97, 103, 101, 115, 73, 119, 69, 69, 0, 0, 0, 0, 128, 82, 202, 1, 240, 62, 202, 1, 0, 0, 0, 0, 2, 0, 0, 0, 232, 49, 202, 1, 2, 0, 0, 0, 200, 62, 202, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 77, 0, 0, 0, 0, 0, 0, 80, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 97, 0, 0, 0, 110, 0, 0, 0, 117, 0, 0, 0, 97, 0, 0, 0, 114, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 101, 0, 0, 0, 98, 0, 0, 0, 114, 0, 0, 0, 117, 0, 0, 0, 97, 0, 0, 0, 114, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 97, 0, 0, 0, 114, 0, 0, 0, 99, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 112, 0, 0, 0, 114, 0, 0, 0, 105, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 117, 0, 0, 0, 110, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 117, 0, 0, 0, 108, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 117, 0, 0, 0, 103, 0, 0, 0, 117, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 101, 0, 0, 0, 112, 0, 0, 0, 116, 0, 0, 0, 101, 0, 0, 0, 109, 0, 0, 0, 98, 0, 0, 0, 101, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 79, 0, 0, 0, 99, 0, 0, 0, 116, 0, 0, 0, 111, 0, 0, 0, 98, 0, 0, 0, 101, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 111, 0, 0, 0, 118, 0, 0, 0, 101, 0, 0, 0, 109, 0, 0, 0, 98, 0, 0, 0, 101, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 101, 0, 0, 0, 99, 0, 0, 0, 101, 0, 0, 0, 109, 0, 0, 0, 98, 0, 0, 0, 101, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 97, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 101, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 97, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 112, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 117, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 117, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 117, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 101, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 79, 0, 0, 0, 99, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 111, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 101, 0, 0, 0, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 97, 110, 117, 97, 114, 121, 0, 70, 101, 98, 114, 117, 97, 114, 121, 0, 0, 0, 0, 0, 0, 0, 0, 77, 97, 114, 99, 104, 0, 0, 0, 65, 112, 114, 105, 108, 0, 0, 0, 77, 97, 121, 0, 0, 0, 0, 0, 74, 117, 110, 101, 0, 0, 0, 0, 74, 117, 108, 121, 0, 0, 0, 0, 65, 117, 103, 117, 115, 116, 0, 0, 83, 101, 112, 116, 101, 109, 98, 101, 114, 0, 0, 0, 0, 0, 0, 0, 79, 99, 116, 111, 98, 101, 114, 0, 78, 111, 118, 101, 109, 98, 101, 114, 0, 0, 0, 0, 0, 0, 0, 0, 68, 101, 99, 101, 109, 98, 101, 114, 0, 0, 0, 0, 0, 0, 0, 0, 74, 97, 110], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 30023788);
allocate([70, 101, 98, 0, 0, 0, 0, 0, 77, 97, 114, 0, 0, 0, 0, 0, 65, 112, 114, 0, 0, 0, 0, 0, 74, 117, 110, 0, 0, 0, 0, 0, 74, 117, 108, 0, 0, 0, 0, 0, 65, 117, 103, 0, 0, 0, 0, 0, 83, 101, 112, 0, 0, 0, 0, 0, 79, 99, 116, 0, 0, 0, 0, 0, 78, 111, 118, 0, 0, 0, 0, 0, 68, 101, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 117, 0, 0, 0, 110, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 111, 0, 0, 0, 110, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 117, 0, 0, 0, 101, 0, 0, 0, 115, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0, 0, 101, 0, 0, 0, 100, 0, 0, 0, 110, 0, 0, 0, 101, 0, 0, 0, 115, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 104, 0, 0, 0, 117, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 114, 0, 0, 0, 105, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 97, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 114, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 117, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 111, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 117, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0, 0, 101, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 104, 0, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 114, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 97, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 117, 110, 100, 97, 121, 0, 0, 77, 111, 110, 100, 97, 121, 0, 0, 84, 117, 101, 115, 100, 97, 121, 0, 87, 101, 100, 110, 101, 115, 100, 97, 121, 0, 0, 0, 0, 0, 0, 0, 84, 104, 117, 114, 115, 100, 97, 121, 0, 0, 0, 0, 0, 0, 0, 0, 70, 114, 105, 100, 97, 121, 0, 0, 83, 97, 116, 117, 114, 100, 97, 121, 0, 0, 0, 0, 0, 0, 0, 0, 83, 117, 110, 0, 0, 0, 0, 0, 77, 111, 110, 0, 0, 0, 0, 0, 84, 117, 101, 0, 0, 0, 0, 0, 87, 101, 100, 0, 0, 0, 0, 0, 84, 104, 117, 0, 0, 0, 0, 0, 70, 114, 105, 0, 0, 0, 0, 0, 83, 97, 116, 0, 0, 0, 0, 0, 2, 0, 0, 192, 3, 0, 0, 192, 4, 0, 0, 192, 5, 0, 0, 192, 6, 0, 0, 192, 7, 0, 0, 192, 8, 0, 0, 192, 9, 0, 0, 192, 10, 0, 0, 192, 11, 0, 0, 192, 12, 0, 0, 192, 13, 0, 0, 192, 14, 0, 0, 192, 15, 0, 0, 192, 16, 0, 0, 192, 17, 0, 0, 192, 18, 0, 0, 192, 19, 0, 0, 192, 20, 0, 0, 192, 21, 0, 0, 192, 22, 0, 0, 192, 23, 0, 0, 192, 24, 0, 0, 192, 25, 0, 0, 192, 26, 0, 0, 192, 27, 0, 0, 192, 28, 0, 0, 192, 29, 0, 0, 192, 30, 0, 0, 192, 31, 0, 0, 192, 0, 0, 0, 179, 1, 0, 0, 195, 2, 0, 0, 195, 3, 0, 0, 195, 4, 0, 0, 195, 5, 0, 0, 195, 6, 0, 0, 195, 7, 0, 0, 195, 8, 0, 0, 195, 9, 0, 0, 195, 10, 0, 0, 195, 11, 0, 0, 195, 12, 0, 0, 195, 13, 0, 0, 211, 14, 0, 0, 195, 15, 0, 0, 195, 0, 0, 12, 187, 1, 0, 12, 195, 2, 0, 12, 195, 3, 0, 12, 195, 4, 0, 12, 211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 16, 77, 202, 1, 0, 0, 0, 0, 117, 110, 99, 97, 117, 103, 104, 116, 0, 0, 0, 0, 0, 0, 0, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 116, 121, 112, 101, 32, 37, 115, 58, 32, 37, 115, 0, 0, 0, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 116, 121, 112, 101, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 102, 111, 114, 101, 105, 103, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 0, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 116, 104, 114, 101, 97, 100, 95, 111, 110, 99, 101, 32, 102, 97, 105, 108, 117, 114, 101, 32, 105, 110, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 95, 102, 97, 115, 116, 40, 41, 0, 0, 0, 0, 0, 0, 0, 0, 99, 97, 110, 110, 111, 116, 32, 99, 114, 101, 97, 116, 101, 32, 112, 116, 104, 114, 101, 97, 100, 32, 107, 101, 121, 32, 102, 111, 114, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 40, 41, 0, 0, 0, 0, 0, 0, 0, 99, 97, 110, 110, 111, 116, 32, 122, 101, 114, 111, 32, 111, 117, 116, 32, 116, 104, 114, 101, 97, 100, 32, 118, 97, 108, 117, 101, 32, 102, 111, 114, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 40, 41, 0, 0, 0, 0, 0, 0, 0, 0, 168, 78, 202, 1, 163, 2, 0, 0, 164, 2, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 115, 116, 100, 58, 58, 98, 97, 100, 95, 97, 108, 108, 111, 99, 0, 0, 83, 116, 57, 98, 97, 100, 95, 97, 108, 108, 111, 99, 0, 0, 0, 0, 32, 82, 202, 1, 152, 78, 202, 1, 248, 78, 202, 1, 0, 0, 0, 0, 116, 101, 114, 109, 105, 110, 97, 116, 101, 95, 104, 97, 110, 100, 108, 101, 114, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 108, 121, 32, 114, 101, 116, 117, 114, 110, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 116, 57, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 0, 0, 0, 64, 81, 202, 1, 232, 78, 202, 1, 0, 0, 0, 0, 64, 79, 202, 1, 165, 2, 0, 0, 166, 2, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 79, 202, 1, 167, 2, 0, 0, 168, 2, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 83, 116, 49, 49, 108, 111, 103, 105, 99, 95, 101, 114, 114, 111, 114, 0, 32, 82, 202, 1, 48, 79, 202, 1, 248, 78, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 128, 79, 202, 1, 165, 2, 0, 0, 169, 2, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 83, 116, 49, 50, 108, 101, 110, 103, 116, 104, 95, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 104, 79, 202, 1, 64, 79, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 192, 79, 202, 1, 165, 2, 0, 0, 170, 2, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 83, 116, 49, 50, 111, 117, 116, 95, 111, 102, 95, 114, 97, 110, 103, 101, 0, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 168, 79, 202, 1, 64, 79, 202, 1, 0, 0, 0, 0, 83, 116, 49, 51, 114, 117, 110, 116, 105, 109, 101, 95, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 208, 79, 202, 1, 248, 78, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 72, 80, 202, 1, 171, 2, 0, 0, 172, 2, 0, 0, 119, 0, 0, 0, 0, 0, 0, 0, 115, 116, 100, 58, 58, 98, 97, 100, 95, 99, 97, 115, 116, 0, 0, 0, 83, 116, 57, 116, 121, 112, 101, 95, 105, 110, 102, 111, 0, 0, 0, 0, 64, 81, 202, 1, 32, 80, 202, 1, 83, 116, 56, 98, 97, 100, 95, 99, 97, 115, 116, 0, 0, 0, 0, 0, 32, 82, 202, 1, 56, 80, 202, 1, 248, 78, 202, 1, 0, 0, 0, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 54, 95, 95, 115, 104, 105, 109, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 88, 80, 202, 1, 48, 80, 202, 1, 0, 0, 0, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 144, 80, 202, 1, 128, 80, 202, 1, 0, 0, 0, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 57, 95, 95, 112, 111, 105, 110, 116, 101, 114, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 0, 0, 0, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 112, 98, 97, 115, 101, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 0, 0, 0, 0, 0, 0, 32, 82, 202, 1, 240, 80, 202, 1, 128, 80, 202, 1, 0, 0, 0, 0, 32, 82, 202, 1, 200, 80, 202, 1, 24, 81, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 184, 80, 202, 1, 173, 2, 0, 0, 174, 2, 0, 0, 175, 2, 0, 0, 176, 2, 0, 0, 89, 0, 0, 0, 15, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 40, 81, 202, 1, 173, 2, 0, 0, 177, 2, 0, 0, 175, 2, 0, 0, 176, 2, 0, 0, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 81, 202, 1, 173, 2, 0, 0, 178, 2, 0, 0, 175, 2, 0, 0, 176, 2, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 51, 95, 95, 102, 117, 110, 100, 97, 109, 101, 110, 116, 97, 108, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 32, 82, 202, 1, 160, 81, 202, 1, 128, 80, 202, 1, 0, 0, 0, 0, 136, 81, 202, 1, 128, 63, 7, 0, 68, 110, 0, 0, 0, 0, 0, 0, 136, 81, 202, 1, 224, 81, 202, 1, 136, 81, 202, 1, 248, 62, 7, 0, 80, 99, 0, 0, 0, 0, 0, 0, 104, 81, 202, 1, 248, 81, 202, 1, 0, 0, 0, 0, 240, 81, 202, 1, 136, 81, 202, 1, 40, 63, 7, 0, 0, 0, 0, 0, 104, 82, 202, 1, 173, 2, 0, 0, 179, 2, 0, 0, 175, 2, 0, 0, 176, 2, 0, 0, 89, 0, 0, 0, 16, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 48, 95, 95, 115, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 0, 0, 0, 32, 82, 202, 1, 64, 82, 202, 1, 184, 80, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 200, 82, 202, 1, 173, 2, 0, 0, 180, 2, 0, 0, 175, 2, 0, 0, 176, 2, 0, 0, 89, 0, 0, 0, 17, 0, 0, 0, 3, 0, 0, 0, 9, 0, 0, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 49, 95, 95, 118, 109, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 0, 0, 32, 82, 202, 1, 160, 82, 202, 1, 184, 80, 202, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 255, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 7, 3, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0, 105, 110, 102, 105, 110, 105, 116, 121, 0, 0, 0, 0, 0, 0, 0, 0, 95, 112, 137, 0, 255, 9, 47, 15, 10, 0, 0, 0, 100, 0, 0, 0, 232, 3, 0, 0, 16, 39, 0, 0, 160, 134, 1, 0, 64, 66, 15, 0, 128, 150, 152, 0, 0, 225, 245, 5, 93, 61, 127, 102, 158, 160, 230, 63, 0, 0, 0, 0, 0, 136, 57, 61, 68, 23, 117, 250, 82, 176, 230, 63, 0, 0, 0, 0, 0, 0, 216, 60, 254, 217, 11, 117, 18, 192, 230, 63, 0, 0, 0, 0, 0, 120, 40, 189, 191, 118, 212, 221, 220, 207, 230, 63, 0, 0, 0, 0, 0, 192, 30, 61, 41, 26, 101, 60, 178, 223, 230, 63, 0, 0, 0, 0, 0, 0, 216, 188, 227, 58, 89, 152, 146, 239, 230, 63, 0, 0, 0, 0, 0, 0, 188, 188, 134, 147, 81, 249, 125, 255, 230, 63, 0, 0, 0, 0, 0, 216, 47, 189, 163, 45, 244, 102, 116, 15, 231, 63, 0, 0, 0, 0, 0, 136, 44, 189, 195, 95, 236, 232, 117, 31, 231, 63, 0, 0, 0, 0, 0, 192, 19, 61, 5, 207, 234, 134, 130, 47, 231, 63, 0, 0, 0, 0, 0, 48, 56, 189, 82, 129, 165, 72, 154, 63, 231, 63, 0, 0, 0, 0, 0, 192, 0, 189, 252, 204, 215, 53, 189, 79, 231, 63, 0, 0, 0, 0, 0, 136, 47, 61, 241, 103, 66, 86, 235, 95, 231, 63, 0, 0, 0, 0, 0, 224, 3, 61, 72, 109, 171, 177, 36, 112, 231, 63, 0, 0, 0, 0, 0, 208, 39, 189, 56, 93, 222, 79, 105, 128, 231, 63, 0, 0, 0, 0, 0, 0, 221, 188, 0, 29, 172, 56, 185, 144, 231, 63, 0, 0, 0, 0, 0, 0, 227, 60, 120, 1, 235, 115, 20, 161, 231, 63, 0, 0, 0, 0, 0, 0, 237, 188, 96, 208, 118, 9, 123, 177, 231, 63, 0, 0, 0, 0, 0, 64, 32, 61, 51, 193, 48, 1, 237, 193, 231, 63, 0, 0, 0, 0, 0, 0, 160, 60, 54, 134, 255, 98, 106, 210, 231, 63, 0, 0, 0, 0, 0, 144, 38, 189, 59, 78, 207, 54, 243, 226, 231, 63, 0, 0, 0, 0, 0, 224, 2, 189, 232, 195, 145, 132, 135, 243, 231, 63, 0, 0, 0, 0, 0, 88, 36, 189, 78, 27, 62, 84, 39, 4, 232, 63, 0, 0, 0, 0, 0, 0, 51, 61, 26, 7, 209, 173, 210, 20, 232, 63, 0, 0, 0, 0, 0, 0, 15, 61, 126, 205, 76, 153, 137, 37, 232, 63, 0, 0, 0, 0, 0, 192, 33, 189, 208, 66, 185, 30, 76, 54, 232, 63, 0, 0, 0, 0, 0, 208, 41, 61, 181, 202, 35, 70, 26, 71, 232, 63, 0, 0, 0, 0, 0, 16, 71, 61, 188, 91, 159, 23, 244, 87, 232, 63, 0, 0, 0, 0, 0, 96, 34, 61, 175, 145, 68, 155, 217, 104, 232, 63, 0, 0, 0, 0, 0, 196, 50, 189, 149, 163, 49, 217, 202, 121, 232, 63, 0, 0, 0, 0, 0, 0, 35, 189, 184, 101, 138, 217, 199, 138, 232, 63, 0, 0, 0, 0, 0, 128, 42, 189, 0, 88, 120, 164, 208, 155, 232, 63, 0, 0, 0, 0, 0, 0, 237, 188, 35, 162, 42, 66, 229, 172, 232, 63, 0, 0, 0, 0, 0, 40, 51, 61, 250, 25, 214, 186, 5, 190, 232, 63, 0, 0, 0, 0, 0, 180, 66, 61, 131, 67, 181, 22, 50, 207, 232, 63, 0, 0, 0, 0, 0, 208, 46, 189, 76, 102, 8, 94, 106, 224, 232, 63, 0, 0, 0, 0, 0, 80, 32, 189, 7, 120, 21, 153, 174, 241, 232, 63, 0, 0, 0, 0, 0, 40, 40, 61, 14, 44, 40, 208, 254, 2, 233, 63, 0, 0, 0, 0, 0, 176, 28, 189, 150, 255, 145, 11, 91, 20, 233, 63, 0, 0, 0, 0, 0, 224, 5, 189, 249, 47, 170, 83, 195, 37, 233, 63, 0, 0, 0, 0, 0, 64, 245, 60, 74, 198, 205, 176, 55, 55, 233, 63, 0, 0, 0, 0, 0, 32, 23, 61, 174, 152, 95, 43, 184, 72, 233, 63, 0, 0, 0, 0, 0, 0, 9, 189, 203, 82, 200, 203, 68, 90, 233, 63, 0, 0, 0, 0, 0, 104, 37, 61, 33, 111, 118, 154, 221, 107, 233, 63, 0, 0, 0, 0, 0, 208, 54, 189, 42, 78, 222, 159, 130, 125, 233, 63, 0, 0, 0, 0, 0, 0, 1, 189, 163, 35, 122, 228, 51, 143, 233, 63, 0, 0, 0, 0, 0, 0, 45, 61, 4, 6, 202, 112, 241, 160, 233, 63, 0, 0, 0, 0, 0, 164, 56, 189, 137, 255, 83, 77, 187, 178, 233, 63, 0, 0, 0, 0, 0, 92, 53, 61, 91, 241, 163, 130, 145, 196, 233, 63, 0, 0, 0, 0, 0, 184, 38, 61, 197, 184, 75, 25, 116, 214, 233, 63, 0, 0, 0, 0, 0, 0, 236, 188, 142, 35, 227, 25, 99, 232, 233, 63, 0, 0, 0, 0, 0, 208, 23, 61, 2, 243, 7, 141, 94, 250, 233, 63, 0, 0, 0, 0, 0, 64, 22, 61, 77, 229, 93, 123, 102, 12, 234, 63, 0, 0, 0, 0, 0, 0, 245, 188, 246, 184, 142, 237, 122, 30, 234, 63, 0, 0, 0, 0, 0, 224, 9, 61, 39, 46, 74, 236, 155, 48, 234, 63, 0, 0, 0, 0, 0, 216, 42, 61, 93, 10, 70, 128, 201, 66, 234, 63, 0, 0, 0, 0, 0, 240, 26, 189, 155, 37, 62, 178, 3, 85, 234, 63, 0, 0, 0, 0, 0, 96, 11, 61, 19, 98, 244, 138, 74, 103, 234, 63, 0, 0, 0, 0, 0, 136, 56, 61, 167, 179, 48, 19, 158, 121, 234, 63, 0, 0, 0, 0, 0, 32, 17, 61, 141, 46, 193, 83, 254, 139, 234, 63, 0, 0, 0, 0, 0, 192, 6, 61, 210, 252, 121, 85, 107, 158, 234, 63, 0, 0, 0, 0, 0, 184, 41, 189, 184, 111, 53, 33, 229, 176, 234, 63, 0, 0, 0, 0, 0, 112, 43, 61, 129, 243, 211, 191, 107, 195, 234, 63, 0, 0, 0, 0, 0, 0, 217, 60, 128, 39, 60, 58, 255, 213, 234, 63, 0, 0, 0, 0, 0, 0, 228, 60, 163, 210, 90, 153, 159, 232, 234, 63, 0, 0, 0, 0, 0, 144, 44, 189, 103, 243, 34, 230, 76, 251, 234, 63, 0, 0, 0, 0, 0, 80, 22, 61, 144, 183, 141, 41, 7, 14, 235, 63, 0, 0, 0, 0, 0, 212, 47, 61, 169, 137, 154, 108, 206, 32, 235, 63, 0, 0, 0, 0, 0, 112, 18, 61, 75, 26, 79, 184, 162, 51, 235, 63, 0, 0, 0, 0, 0, 71, 77, 61, 231, 71, 183, 21, 132, 70, 235, 63, 0, 0, 0, 0, 0, 56, 56, 189, 58, 89, 229, 141, 114, 89, 235, 63, 0, 0, 0, 0, 0, 0, 152, 60, 106, 197, 241, 41, 110, 108, 235, 63, 0, 0, 0, 0, 0, 208, 10, 61, 80, 94, 251, 242, 118, 127, 235, 63, 0, 0, 0, 0, 0, 128, 222, 60, 178, 73, 39, 242, 140, 146, 235, 63, 0, 0, 0, 0, 0, 192, 4, 189, 3, 6, 161, 48, 176, 165, 235, 63, 0, 0, 0, 0, 0, 112, 13, 189, 102, 111, 154, 183, 224, 184, 235, 63, 0, 0, 0, 0, 0, 144, 13, 61, 255, 193, 75, 144, 30, 204, 235, 63, 0, 0, 0, 0, 0, 160, 2, 61, 111, 161, 243, 195, 105, 223, 235, 63, 0, 0, 0, 0, 0, 120, 31, 189, 184, 29, 215, 91, 194, 242, 235, 63, 0, 0, 0, 0, 0, 160, 16, 189, 233, 178, 65, 97, 40, 6, 236, 63, 0, 0, 0, 0, 0, 64, 17, 189, 224, 82, 133, 221, 155, 25, 236, 63, 0, 0, 0, 0, 0, 224, 11, 61, 238, 100, 250, 217, 28, 45, 236, 63, 0, 0, 0, 0, 0, 64, 9, 189, 47, 208, 255, 95, 171, 64, 236, 63, 0, 0, 0, 0, 0, 208, 14, 189, 21, 253, 250, 120, 71, 84, 236, 63, 0, 0, 0, 0, 0, 102, 57, 61, 203, 208, 87, 46, 241, 103, 236, 63, 0, 0, 0, 0, 0, 16, 26, 189, 182, 193, 136, 137, 168, 123, 236, 63, 0, 0, 0, 0, 128, 69, 88, 189, 51, 231, 6, 148, 109, 143, 236, 63, 0, 0, 0, 0, 0, 72, 26, 189, 223, 196, 81, 87, 64, 163, 236, 63, 0, 0, 0, 0, 0, 0, 203, 60, 148, 144, 239, 220, 32, 183, 236, 63, 0, 0, 0, 0, 0, 64, 1, 61, 137, 22, 109, 46, 15, 203, 236, 63, 0, 0, 0, 0, 0, 32, 240, 60, 18, 196, 93, 85, 11, 223, 236, 63, 0, 0, 0, 0, 0, 96, 243, 60, 59, 171, 91, 91, 21, 243, 236, 63, 0, 0, 0, 0, 0, 144, 6, 189, 188, 137, 7, 74, 45, 7, 237, 63, 0, 0, 0, 0, 0, 160, 9, 61, 250, 200, 8, 43, 83, 27, 237, 63, 0, 0, 0, 0, 0, 224, 21, 189, 133, 138, 13, 8, 135, 47, 237, 63, 0, 0, 0, 0, 0, 40, 29, 61, 3, 162, 202, 234, 200, 67, 237, 63, 0, 0, 0, 0, 0, 160, 1, 61, 145, 164, 251, 220, 24, 88, 237, 63, 0, 0, 0, 0, 0, 0, 223, 60, 161, 230, 98, 232, 118, 108, 237, 63, 0, 0, 0, 0, 0, 160, 3, 189, 78, 131, 201, 22, 227, 128, 237, 63, 0, 0, 0, 0, 0, 216, 12, 189, 144, 96, 255, 113, 93, 149, 237, 63, 0, 0, 0, 0, 0, 192, 244, 60, 174, 50, 219, 3, 230, 169, 237, 63, 0, 0, 0, 0, 0, 144, 255, 60, 37, 131, 58, 214, 124, 190, 237, 63, 0, 0, 0, 0, 0, 128, 233, 60, 69, 180, 1, 243, 33, 211, 237, 63, 0, 0, 0, 0, 0, 32, 245, 188, 191, 5, 28, 100, 213, 231, 237, 63, 0, 0, 0, 0, 0, 112, 29, 189, 236, 154, 123, 51, 151, 252, 237, 63, 0, 0, 0, 0, 0, 20, 22, 189, 94, 125, 25, 107, 103, 17, 238, 63, 0, 0, 0, 0, 0, 72, 11, 61, 231, 163, 245, 20, 70, 38, 238, 63, 0, 0, 0, 0, 0, 206, 64, 61, 92, 238, 22, 59, 51, 59, 238, 63, 0, 0, 0, 0, 0, 104, 12, 61, 180, 63, 139, 231, 46, 80, 238, 63, 0, 0, 0, 0, 0, 48, 9, 189, 104, 109, 103, 36, 57, 101, 238, 63, 0, 0, 0, 0, 0, 0, 229, 188, 68, 76, 199, 251, 81, 122, 238, 63, 0, 0, 0, 0, 0, 248, 7, 189, 38, 183, 205, 119, 121, 143, 238, 63, 0, 0, 0, 0, 0, 112, 243, 188, 232, 144, 164, 162, 175, 164, 238, 63, 0, 0, 0, 0, 0, 208, 229, 60, 228, 202, 124, 134, 244, 185, 238, 63, 0, 0, 0, 0, 0, 26, 22, 61, 13, 104, 142, 45, 72, 207, 238, 63, 0, 0, 0, 0, 0, 80, 245, 60, 20, 133, 24, 162, 170, 228, 238, 63, 0, 0, 0, 0, 0, 64, 198, 60, 19, 90, 97, 238, 27, 250, 238, 63, 0, 0, 0, 0, 0, 128, 238, 188, 6, 65, 182, 28, 156, 15, 239, 63, 0, 0, 0, 0, 0, 136, 250, 188, 99, 185, 107, 55, 43, 37, 239, 63, 0, 0, 0, 0, 0, 144, 44, 189, 117, 114, 221, 72, 201, 58, 239, 63, 0, 0, 0, 0, 0, 0, 170, 60, 36, 69, 110, 91, 118, 80, 239, 63, 0, 0, 0, 0, 0, 240, 244, 188, 253, 68, 136, 121, 50, 102, 239, 63, 0, 0, 0, 0, 0, 128, 202, 60, 56, 190, 156, 173, 253, 123, 239, 63, 0, 0, 0, 0, 0, 188, 250, 60, 130, 60, 36, 2, 216, 145, 239, 63, 0, 0, 0, 0, 0, 96, 212, 188, 142, 144, 158, 129, 193, 167, 239, 63, 0, 0, 0, 0, 0, 12, 11, 189, 17, 213, 146, 54, 186, 189, 239, 63, 0, 0, 0, 0, 0, 224, 192, 188, 148, 113, 143, 43, 194, 211, 239, 63, 0, 0, 0, 0, 128, 222, 16, 189, 238, 35, 42, 107, 217, 233, 239, 63, 0, 0, 0, 0, 0, 67, 238, 60, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 0, 0, 190, 188, 90, 250, 26, 11, 240, 63, 0, 0, 0, 0, 0, 64, 179, 188, 3, 51, 251, 169, 61, 22, 240, 63, 0, 0, 0, 0, 0, 23, 18, 189, 130, 2, 59, 20, 104, 33, 240, 63, 0, 0, 0, 0, 0, 64, 186, 60, 108, 128, 119, 62, 154, 44, 240, 63, 0, 0, 0, 0, 0, 152, 239, 60, 202, 187, 17, 46, 212, 55, 240, 63, 0, 0, 0, 0, 0, 64, 199, 188, 137, 127, 110, 232, 21, 67, 240, 63, 0, 0, 0, 0, 0, 48, 216, 60, 103, 84, 246, 114, 95, 78, 240, 63, 0, 0, 0, 0, 0, 63, 26, 189, 90, 133, 21, 211, 176, 89, 240, 63, 0, 0, 0, 0, 0, 132, 2, 189, 149, 31, 60, 14, 10, 101, 240, 63, 0, 0, 0, 0, 0, 96, 241, 60, 26, 247, 221, 41, 107, 112, 240, 63, 0, 0, 0, 0, 0, 36, 21, 61, 45, 168, 114, 43, 212, 123, 240, 63, 0, 0, 0, 0, 0, 160, 233, 188, 208, 155, 117, 24, 69, 135, 240, 63, 0, 0, 0, 0, 0, 64, 230, 60, 200, 7, 102, 246, 189, 146, 240, 63, 0, 0, 0, 0, 0, 120, 0, 189, 131, 243, 198, 202, 62, 158, 240, 63, 0, 0, 0, 0, 0, 0, 152, 188, 48, 57, 31, 155, 199, 169, 240, 63, 0, 0, 0, 0, 0, 160, 255, 60, 252, 136, 249, 108, 88, 181, 240, 63, 0, 0, 0, 0, 0, 200, 250, 188, 138, 108, 228, 69, 241, 192, 240, 63, 0, 0, 0, 0, 0, 192, 217, 60, 22, 72, 114, 43, 146, 204, 240, 63, 0, 0, 0, 0, 0, 32, 5, 61, 216, 93, 57, 35, 59, 216, 240, 63, 0, 0, 0, 0, 0, 208, 250, 188, 243, 209, 211, 50, 236, 227, 240, 63, 0, 0, 0, 0, 0, 172, 27, 61, 166, 169, 223, 95, 165, 239, 240, 63, 0, 0, 0, 0, 0, 232, 4, 189, 240, 210, 254, 175, 102, 251, 240, 63, 0, 0, 0, 0, 0, 48, 13, 189, 75, 35, 215, 40, 48, 7, 241, 63, 0, 0, 0, 0, 0, 80, 241, 60, 91, 91, 18, 208, 1, 19, 241, 63, 0, 0, 0, 0, 0, 0, 236, 60, 249, 42, 94, 171, 219, 30, 241, 63, 0, 0, 0, 0, 0, 188, 22, 61, 213, 49, 108, 192, 189, 42, 241, 63, 0, 0, 0, 0, 0, 64, 232, 60, 125, 4, 242, 20, 168, 54, 241, 63, 0, 0, 0, 0, 0, 208, 14, 189, 233, 45, 169, 174, 154, 66, 241, 63, 0, 0, 0, 0, 0, 224, 232, 60, 56, 49, 79, 147, 149, 78, 241, 63, 0, 0, 0, 0, 0, 64, 235, 60, 113, 142, 165, 200, 152, 90, 241, 63, 0, 0, 0, 0, 0, 48, 5, 61, 223, 195, 113, 84, 164, 102, 241, 63, 0, 0, 0, 0, 0, 56, 3, 61, 17, 82, 125, 60, 184, 114, 241, 63, 0, 0, 0, 0, 0, 212, 40, 61, 159, 187, 149, 134, 212, 126, 241, 63, 0, 0, 0, 0, 0, 208, 5, 189, 147, 141, 140, 56, 249, 138, 241, 63, 0, 0, 0, 0, 0, 136, 28, 189, 102, 93, 55, 88, 38, 151, 241, 63, 0, 0, 0, 0, 0, 240, 17, 61, 167, 203, 111, 235, 91, 163, 241, 63, 0, 0, 0, 0, 0, 72, 16, 61, 227, 135, 19, 248, 153, 175, 241, 63, 0, 0, 0, 0, 0, 57, 71, 189, 84, 93, 4, 132, 224, 187, 241, 63, 0, 0, 0, 0, 0, 228, 36, 61, 67, 28, 40, 149, 47, 200, 241, 63, 0, 0, 0, 0, 0, 32, 10, 189, 178, 185, 104, 49, 135, 212, 241, 63, 0, 0, 0, 0, 0, 128, 227, 60, 49, 64, 180, 94, 231, 224, 241, 63, 0, 0, 0, 0, 0, 192, 234, 60, 56, 217, 252, 34, 80, 237, 241, 63, 0, 0, 0, 0, 0, 144, 1, 61, 247, 205, 56, 132, 193, 249, 241, 63, 0, 0, 0, 0, 0, 120, 27, 189, 143, 141, 98, 136, 59, 6, 242, 63, 0, 0, 0, 0, 0, 148, 45, 61, 30, 168, 120, 53, 190, 18, 242, 63, 0, 0, 0, 0, 0, 0, 216, 60, 65, 221, 125, 145, 73, 31, 242, 63, 0, 0, 0, 0, 0, 52, 43, 61, 35, 19, 121, 162, 221, 43, 242, 63, 0, 0, 0, 0, 0, 248, 25, 61, 231, 97, 117, 110, 122, 56, 242, 63, 0, 0, 0, 0, 0, 200, 25, 189, 39, 20, 130, 251, 31, 69, 242, 63, 0, 0, 0, 0, 0, 48, 2, 61, 2, 166, 178, 79, 206, 81, 242, 63, 0, 0, 0, 0, 0, 72, 19, 189, 176, 206, 30, 113, 133, 94, 242, 63, 0, 0, 0, 0, 0, 112, 18, 61, 22, 125, 226, 101, 69, 107, 242, 63, 0, 0, 0, 0, 0, 208, 17, 61, 15, 224, 29, 52, 14, 120, 242, 63, 0, 0, 0, 0, 0, 238, 49, 61, 62, 99, 245, 225, 223, 132, 242, 63, 0, 0, 0, 0, 0, 192, 20, 189, 48, 187, 145, 117, 186, 145, 242, 63, 0, 0, 0, 0, 0, 216, 19, 189, 9, 223, 31, 245, 157, 158, 242, 63, 0, 0, 0, 0, 0, 176, 8, 61, 155, 14, 209, 102, 138, 171, 242, 63, 0, 0, 0, 0, 0, 124, 34, 189, 58, 218, 218, 208, 127, 184, 242, 63, 0, 0, 0, 0, 0, 52, 42, 61, 249, 26, 119, 57, 126, 197, 242, 63, 0, 0, 0, 0, 0, 128, 16, 189, 217, 2, 228, 166, 133, 210, 242, 63, 0, 0, 0, 0, 0, 208, 14, 189, 121, 21, 100, 31, 150, 223, 242, 63, 0, 0, 0, 0, 0, 32, 244, 188, 207, 46, 62, 169, 175, 236, 242, 63, 0, 0, 0, 0, 0, 152, 36, 189, 34, 136, 189, 74, 210, 249, 242, 63, 0, 0, 0, 0, 0, 48, 22, 189, 37, 182, 49, 10, 254, 6, 243, 63, 0, 0, 0, 0, 0, 54, 50, 189, 11, 165, 238, 237, 50, 20, 243, 63, 0, 0, 0, 0, 128, 223, 112, 189, 184, 215, 76, 252, 112, 33, 243, 63, 0, 0, 0, 0, 0, 72, 34, 189, 162, 233, 168, 59, 184, 46, 243, 63, 0, 0, 0, 0, 0, 152, 37, 189, 102, 23, 100, 178, 8, 60, 243, 63, 0, 0, 0, 0, 0, 208, 30, 61, 39, 250, 227, 102, 98, 73, 243, 63, 0, 0, 0, 0, 0, 0, 220, 188, 15, 159, 146, 95, 197, 86, 243, 63, 0, 0, 0, 0, 0, 216, 48, 189, 185, 136, 222, 162, 49, 100, 243, 63, 0, 0, 0, 0, 0, 200, 34, 61, 57, 170, 58, 55, 167, 113, 243, 63, 0, 0, 0, 0, 0, 96, 32, 61, 254, 116, 30, 35, 38, 127, 243, 63, 0, 0, 0, 0, 0, 96, 22, 189, 56, 216, 5, 109, 174, 140, 243, 63, 0, 0, 0, 0, 0, 224, 10, 189, 195, 62, 113, 27, 64, 154, 243, 63, 0, 0, 0, 0, 0, 114, 68, 189, 32, 160, 229, 52, 219, 167, 243, 63, 0, 0, 0, 0, 0, 32, 8, 61, 149, 110, 236, 191, 127, 181, 243, 63, 0, 0, 0, 0, 0, 128, 62, 61, 242, 168, 19, 195, 45, 195, 243, 63, 0, 0, 0, 0, 0, 128, 239, 60, 34, 225, 237, 68, 229, 208, 243, 63, 0, 0, 0, 0, 0, 160, 23, 189, 187, 52, 18, 76, 166, 222, 243, 63, 0, 0, 0, 0, 0, 48, 38, 61, 204, 78, 28, 223, 112, 236, 243, 63, 0, 0, 0, 0, 0, 166, 72, 189, 140, 126, 172, 4, 69, 250, 243, 63, 0, 0, 0, 0, 0, 220, 60, 189, 187, 160, 103, 195, 34, 8, 244, 63, 0, 0, 0, 0, 0, 184, 37, 61, 149, 46, 247, 33, 10, 22, 244, 63, 0, 0, 0, 0, 0, 192, 30, 61, 70, 70, 9, 39, 251, 35, 244, 63, 0, 0, 0, 0, 0, 96, 19, 189, 32, 169, 80, 217, 245, 49, 244, 63, 0, 0, 0, 0, 0, 152, 35, 61, 235, 185, 132, 63, 250, 63, 244, 63, 0, 0, 0, 0, 0, 0, 250, 60, 25, 137, 97, 96, 8, 78, 244, 63, 0, 0, 0, 0, 0, 192, 246, 188, 1, 210, 167, 66, 32, 92, 244, 63, 0, 0, 0, 0, 0, 192, 11, 189, 22, 0, 29, 237, 65, 106, 244, 63, 0, 0, 0, 0, 0, 128, 18, 189, 38, 51, 139, 102, 109, 120, 244, 63, 0, 0, 0, 0, 0, 224, 48, 61, 0, 60, 193, 181, 162, 134, 244, 63, 0, 0, 0, 0, 0, 64, 45, 189, 4, 175, 146, 225, 225, 148, 244, 63, 0, 0, 0, 0, 0, 32, 12, 61, 114, 211, 215, 240, 42, 163, 244, 63, 0, 0, 0, 0, 0, 80, 30, 189, 1, 184, 109, 234, 125, 177, 244, 63, 0, 0, 0, 0, 0, 128, 7, 61, 225, 41, 54, 213, 218, 191, 244, 63, 0, 0, 0, 0, 0, 128, 19, 189, 50, 193, 23, 184, 65, 206, 244, 63, 0, 0, 0, 0, 0, 128, 0, 61, 219, 221, 253, 153, 178, 220, 244, 63, 0, 0, 0, 0, 0, 112, 44, 61, 150, 171, 216, 129, 45, 235, 244, 63, 0, 0, 0, 0, 0, 224, 28, 189, 2, 45, 157, 118, 178, 249, 244, 63, 0, 0, 0, 0, 0, 32, 25, 61, 193, 49, 69, 127, 65, 8, 245, 63, 0, 0, 0, 0, 0, 192, 8, 189, 42, 102, 207, 162, 218, 22, 245, 63, 0, 0, 0, 0, 0, 0, 250, 188, 234, 81, 63, 232, 125, 37, 245, 63, 0, 0, 0, 0, 0, 8, 74, 61, 218, 78, 157, 86, 43, 52, 245, 63, 0, 0, 0, 0, 0, 216, 38, 189, 26, 172, 246, 244, 226, 66, 245, 63, 0, 0, 0, 0, 0, 68, 50, 189, 219, 148, 93, 202, 164, 81, 245, 63, 0, 0, 0, 0, 0, 60, 72, 61, 107, 17, 233, 221, 112, 96, 245, 63, 0, 0, 0, 0, 0, 176, 36, 61, 222, 41, 181, 54, 71, 111, 245, 63, 0, 0, 0, 0, 0, 90, 65, 61, 14, 196, 226, 219, 39, 126, 245, 63, 0, 0, 0, 0, 0, 224, 41, 189, 111, 199, 151, 212, 18, 141, 245, 63, 0, 0, 0, 0, 0, 8, 35, 189, 76, 11, 255, 39, 8, 156, 245, 63, 0, 0, 0, 0, 0, 236, 77, 61, 39, 84, 72, 221, 7, 171, 245, 63, 0, 0, 0, 0, 0, 0, 196, 188, 244, 122, 168, 251, 17, 186, 245, 63, 0, 0, 0, 0, 0, 8, 48, 61, 11, 70, 89, 138, 38, 201, 245, 63, 0, 0, 0, 0, 0, 200, 38, 189, 63, 142, 153, 144, 69, 216, 245, 63, 0, 0, 0, 0, 0, 154, 70, 61, 225, 32, 173, 21, 111, 231, 245, 63, 0, 0, 0, 0, 0, 64, 27, 189, 202, 235, 220, 32, 163, 246, 245, 63, 0, 0, 0, 0, 0, 112, 23, 61, 184, 220, 118, 185, 225, 5, 246, 63, 0, 0, 0, 0, 0, 248, 38, 61, 21, 247, 205, 230, 42, 21, 246, 63, 0, 0, 0, 0, 0, 0, 1, 61, 49, 85, 58, 176, 126, 36, 246, 63, 0, 0, 0, 0, 0, 208, 21, 189, 181, 41, 25, 29, 221, 51, 246, 63, 0, 0, 0, 0, 0, 208, 18, 189, 19, 195, 204, 52, 70, 67, 246, 63, 0, 0, 0, 0, 0, 128, 234, 188, 250, 142, 188, 254, 185, 82, 246, 63, 0, 0, 0, 0, 0, 96, 40, 189, 151, 51, 85, 130, 56, 98, 246, 63, 0, 0, 0, 0, 0, 254, 113, 61, 142, 50, 8, 199, 193, 113, 246, 63, 0, 0, 0, 0, 0, 32, 55, 189, 126, 169, 76, 212, 85, 129, 246, 63, 0, 0, 0, 0, 0, 128, 230, 60, 113, 148, 158, 177, 244, 144, 246, 63, 0, 0, 0, 0, 0, 120, 41, 189, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 10, 0, 17, 17, 17, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 15, 10, 17, 17, 17, 3, 10, 7, 0, 1, 19, 9, 11, 11, 0, 0, 9, 6, 11, 0, 0, 11, 0, 6, 17, 0, 0, 0, 17, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 10, 10, 17, 17, 17, 0, 10, 0, 0, 2, 0, 9, 11, 0, 0, 0, 9, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 4, 13, 0, 0, 0, 0, 9, 14, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 15, 0, 0, 0, 0, 9, 16, 0, 0, 0, 0, 0, 16, 0, 0, 16, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 9, 11, 0, 0, 0, 0, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 45, 43, 32, 32, 32, 48, 88, 48, 120, 0, 0, 0, 0, 0, 0, 0, 40, 110, 117, 108, 108, 41, 0, 0, 45, 48, 88, 43, 48, 88, 32, 48, 88, 45, 48, 120, 43, 48, 120, 32, 48, 120, 0, 0, 0, 0, 0, 0, 105, 110, 102, 0, 0, 0, 0, 0, 73, 78, 70, 0, 0, 0, 0, 0, 110, 97, 110, 0, 0, 0, 0, 0, 78, 65, 78, 0, 0, 0, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'i8', ALLOC_NONE, Runtime.GLOBAL_BASE + 30034032);
var tempDoublePtr = Runtime.alignMemory(allocate(12, 'i8', ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 === 0);

function copyTempFloat(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr + 1] = HEAP8[ptr + 1];
  HEAP8[tempDoublePtr + 2] = HEAP8[ptr + 2];
  HEAP8[tempDoublePtr + 3] = HEAP8[ptr + 3];
}

function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr + 1] = HEAP8[ptr + 1];
  HEAP8[tempDoublePtr + 2] = HEAP8[ptr + 2];
  HEAP8[tempDoublePtr + 3] = HEAP8[ptr + 3];
  HEAP8[tempDoublePtr + 4] = HEAP8[ptr + 4];
  HEAP8[tempDoublePtr + 5] = HEAP8[ptr + 5];
  HEAP8[tempDoublePtr + 6] = HEAP8[ptr + 6];
  HEAP8[tempDoublePtr + 7] = HEAP8[ptr + 7];
}
var ERRNO_CODES = {
  EPERM: 1,
  ENOENT: 2,
  ESRCH: 3,
  EINTR: 4,
  EIO: 5,
  ENXIO: 6,
  E2BIG: 7,
  ENOEXEC: 8,
  EBADF: 9,
  ECHILD: 10,
  EAGAIN: 11,
  EWOULDBLOCK: 11,
  ENOMEM: 12,
  EACCES: 13,
  EFAULT: 14,
  ENOTBLK: 15,
  EBUSY: 16,
  EEXIST: 17,
  EXDEV: 18,
  ENODEV: 19,
  ENOTDIR: 20,
  EISDIR: 21,
  EINVAL: 22,
  ENFILE: 23,
  EMFILE: 24,
  ENOTTY: 25,
  ETXTBSY: 26,
  EFBIG: 27,
  ENOSPC: 28,
  ESPIPE: 29,
  EROFS: 30,
  EMLINK: 31,
  EPIPE: 32,
  EDOM: 33,
  ERANGE: 34,
  ENOMSG: 42,
  EIDRM: 43,
  ECHRNG: 44,
  EL2NSYNC: 45,
  EL3HLT: 46,
  EL3RST: 47,
  ELNRNG: 48,
  EUNATCH: 49,
  ENOCSI: 50,
  EL2HLT: 51,
  EDEADLK: 35,
  ENOLCK: 37,
  EBADE: 52,
  EBADR: 53,
  EXFULL: 54,
  ENOANO: 55,
  EBADRQC: 56,
  EBADSLT: 57,
  EDEADLOCK: 35,
  EBFONT: 59,
  ENOSTR: 60,
  ENODATA: 61,
  ETIME: 62,
  ENOSR: 63,
  ENONET: 64,
  ENOPKG: 65,
  EREMOTE: 66,
  ENOLINK: 67,
  EADV: 68,
  ESRMNT: 69,
  ECOMM: 70,
  EPROTO: 71,
  EMULTIHOP: 72,
  EDOTDOT: 73,
  EBADMSG: 74,
  ENOTUNIQ: 76,
  EBADFD: 77,
  EREMCHG: 78,
  ELIBACC: 79,
  ELIBBAD: 80,
  ELIBSCN: 81,
  ELIBMAX: 82,
  ELIBEXEC: 83,
  ENOSYS: 38,
  ENOTEMPTY: 39,
  ENAMETOOLONG: 36,
  ELOOP: 40,
  EOPNOTSUPP: 95,
  EPFNOSUPPORT: 96,
  ECONNRESET: 104,
  ENOBUFS: 105,
  EAFNOSUPPORT: 97,
  EPROTOTYPE: 91,
  ENOTSOCK: 88,
  ENOPROTOOPT: 92,
  ESHUTDOWN: 108,
  ECONNREFUSED: 111,
  EADDRINUSE: 98,
  ECONNABORTED: 103,
  ENETUNREACH: 101,
  ENETDOWN: 100,
  ETIMEDOUT: 110,
  EHOSTDOWN: 112,
  EHOSTUNREACH: 113,
  EINPROGRESS: 115,
  EALREADY: 114,
  EDESTADDRREQ: 89,
  EMSGSIZE: 90,
  EPROTONOSUPPORT: 93,
  ESOCKTNOSUPPORT: 94,
  EADDRNOTAVAIL: 99,
  ENETRESET: 102,
  EISCONN: 106,
  ENOTCONN: 107,
  ETOOMANYREFS: 109,
  EUSERS: 87,
  EDQUOT: 122,
  ESTALE: 116,
  ENOTSUP: 95,
  ENOMEDIUM: 123,
  EILSEQ: 84,
  EOVERFLOW: 75,
  ECANCELED: 125,
  ENOTRECOVERABLE: 131,
  EOWNERDEAD: 130,
  ESTRPIPE: 86
};
var ERRNO_MESSAGES = {
  0: 'Success',
  1: 'Not super-user',
  2: 'No such file or directory',
  3: 'No such process',
  4: 'Interrupted system call',
  5: 'I/O error',
  6: 'No such device or address',
  7: 'Arg list too long',
  8: 'Exec format error',
  9: 'Bad file number',
  10: 'No children',
  11: 'No more processes',
  12: 'Not enough core',
  13: 'Permission denied',
  14: 'Bad address',
  15: 'Block device required',
  16: 'Mount device busy',
  17: 'File exists',
  18: 'Cross-device link',
  19: 'No such device',
  20: 'Not a directory',
  21: 'Is a directory',
  22: 'Invalid argument',
  23: 'Too many open files in system',
  24: 'Too many open files',
  25: 'Not a typewriter',
  26: 'Text file busy',
  27: 'File too large',
  28: 'No space left on device',
  29: 'Illegal seek',
  30: 'Read only file system',
  31: 'Too many links',
  32: 'Broken pipe',
  33: 'Math arg out of domain of func',
  34: 'Math result not representable',
  35: 'File locking deadlock error',
  36: 'File or path name too long',
  37: 'No record locks available',
  38: 'Function not implemented',
  39: 'Directory not empty',
  40: 'Too many symbolic links',
  42: 'No message of desired type',
  43: 'Identifier removed',
  44: 'Channel number out of range',
  45: 'Level 2 not synchronized',
  46: 'Level 3 halted',
  47: 'Level 3 reset',
  48: 'Link number out of range',
  49: 'Protocol driver not attached',
  50: 'No CSI structure available',
  51: 'Level 2 halted',
  52: 'Invalid exchange',
  53: 'Invalid request descriptor',
  54: 'Exchange full',
  55: 'No anode',
  56: 'Invalid request code',
  57: 'Invalid slot',
  59: 'Bad font file fmt',
  60: 'Device not a stream',
  61: 'No data (for no delay io)',
  62: 'Timer expired',
  63: 'Out of streams resources',
  64: 'Machine is not on the network',
  65: 'Package not installed',
  66: 'The object is remote',
  67: 'The link has been severed',
  68: 'Advertise error',
  69: 'Srmount error',
  70: 'Communication error on send',
  71: 'Protocol error',
  72: 'Multihop attempted',
  73: 'Cross mount point (not really error)',
  74: 'Trying to read unreadable message',
  75: 'Value too large for defined data type',
  76: 'Given log. name not unique',
  77: 'f.d. invalid for this operation',
  78: 'Remote address changed',
  79: 'Can   access a needed shared lib',
  80: 'Accessing a corrupted shared lib',
  81: '.lib section in a.out corrupted',
  82: 'Attempting to link in too many libs',
  83: 'Attempting to exec a shared library',
  84: 'Illegal byte sequence',
  86: 'Streams pipe error',
  87: 'Too many users',
  88: 'Socket operation on non-socket',
  89: 'Destination address required',
  90: 'Message too long',
  91: 'Protocol wrong type for socket',
  92: 'Protocol not available',
  93: 'Unknown protocol',
  94: 'Socket type not supported',
  95: 'Not supported',
  96: 'Protocol family not supported',
  97: 'Address family not supported by protocol family',
  98: 'Address already in use',
  99: 'Address not available',
  100: 'Network interface is not configured',
  101: 'Network is unreachable',
  102: 'Connection reset by network',
  103: 'Connection aborted',
  104: 'Connection reset by peer',
  105: 'No buffer space available',
  106: 'Socket is already connected',
  107: 'Socket is not connected',
  108: "Can't send after socket shutdown",
  109: 'Too many references',
  110: 'Connection timed out',
  111: 'Connection refused',
  112: 'Host is down',
  113: 'Host is unreachable',
  114: 'Socket already connected',
  115: 'Connection already in progress',
  116: 'Stale file handle',
  122: 'Quota exceeded',
  123: 'No medium (in tape drive)',
  125: 'Operation canceled',
  130: 'Previous owner died',
  131: 'State not recoverable'
};
var ___errno_state = 0;

function ___setErrNo(value) {
  HEAP32[___errno_state >> 2] = value;
  return value;
}
var PATH = {
  splitPath: (function(filename) {
    var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
    return splitPathRe.exec(filename).slice(1);
  }),
  normalizeArray: (function(parts, allowAboveRoot) {
    var up = 0;
    for (var i = parts.length - 1; i >= 0; i--) {
      var last = parts[i];
      if (last === '.') {
        parts.splice(i, 1);
      } else if (last === '..') {
        parts.splice(i, 1);
        up++;
      } else if (up) {
        parts.splice(i, 1);
        up--;
      }
    }
    if (allowAboveRoot) {
      for (; up--; up) {
        parts.unshift('..');
      }
    }
    return parts;
  }),
  normalize: (function(path) {
    var isAbsolute = path.charAt(0) === '/',
      trailingSlash = path.substr(-1) === '/';
    path = PATH.normalizeArray(path.split('/').filter((function(p) {
      return !!p;
    })), !isAbsolute).join('/');
    if (!path && !isAbsolute) {
      path = ".";
    }
    if (path && trailingSlash) {
      path += "/";
    }
    return (isAbsolute ? '/' : '') + path;
  }),
  dirname: (function(path) {
    var result = PATH.splitPath(path),
      root = result[0],
      dir = result[1];
    if (!root && !dir) {
      return ".";
    }
    if (dir) {
      dir = dir.substr(0, dir.length - 1);
    }
    return root + dir;
  }),
  basename: (function(path) {
    if (path === '/') return '/';
    var lastSlash = path.lastIndexOf('/');
    if (lastSlash === -1) return path;
    return path.substr(lastSlash + 1);
  }),
  extname: (function(path) {
    return PATH.splitPath(path)[3];
  }),
  join: (function() {
    var paths = Array.prototype.slice.call(arguments, 0);
    return PATH.normalize(paths.join('/'));
  }),
  join2: (function(l, r) {
    return PATH.normalize(l + '/' + r);
  }),
  resolve: (function() {
    var resolvedPath = '',
      resolvedAbsolute = false;
    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path = i >= 0 ? arguments[i] : FS.cwd();
      if (typeof path !== 'string') {
        throw new TypeError('Arguments to path.resolve must be strings');
      } else if (!path) {
        return "";
      }
      resolvedPath = path + '/' + resolvedPath;
      resolvedAbsolute = path.charAt(0) === "/";
    }
    resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((function(p) {
      return !!p;
    })), !resolvedAbsolute).join('/');
    return (resolvedAbsolute ? '/' : '') + resolvedPath || ".";
  }),
  relative: (function(from, to) {
    from = PATH.resolve(from).substr(1);
    to = PATH.resolve(to).substr(1);

    function trim(arr) {
      var start = 0;
      for (; start < arr.length; start++) {
        if (arr[start] !== '') break;
      }
      var end = arr.length - 1;
      for (; end >= 0; end--) {
        if (arr[end] !== '') break;
      }
      if (start > end) return [];
      return arr.slice(start, end - start + 1);
    }
    var fromParts = trim(from.split('/'));
    var toParts = trim(to.split('/'));
    var length = Math.min(fromParts.length, toParts.length);
    var samePartsLength = length;
    for (var i = 0; i < length; i++) {
      if (fromParts[i] !== toParts[i]) {
        samePartsLength = i;
        break;
      }
    }
    var outputParts = [];
    for (var i = samePartsLength; i < fromParts.length; i++) {
      outputParts.push('..');
    }
    outputParts = outputParts.concat(toParts.slice(samePartsLength));
    return outputParts.join('/');
  })
};
var TTY = {
  ttys: [],
  init: (function() {}),
  shutdown: (function() {}),
  register: (function(dev, ops) {
    TTY.ttys[dev] = {
      input: [],
      output: [],
      ops: ops
    };
    FS.registerDevice(dev, TTY.stream_ops);
  }),
  stream_ops: {
    open: (function(stream) {
      var tty = TTY.ttys[stream.node.rdev];
      if (!tty) {
        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
      }
      stream.tty = tty;
      stream.seekable = false;
    }),
    close: (function(stream) {
      stream.tty.ops.flush(stream.tty);
    }),
    flush: (function(stream) {
      stream.tty.ops.flush(stream.tty);
    }),
    read: (function(stream, buffer, offset, length, pos) {
      if (!stream.tty || !stream.tty.ops.get_char) {
        throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
      }
      var bytesRead = 0;
      for (var i = 0; i < length; i++) {
        var result;
        try {
          result = stream.tty.ops.get_char(stream.tty);
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        }
        if (result === undefined && bytesRead === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
        }
        if (result === null || result === undefined) break;
        bytesRead++;
        buffer[offset + i] = result;
      }
      if (bytesRead) {
        stream.node.timestamp = Date.now();
      }
      return bytesRead;
    }),
    write: (function(stream, buffer, offset, length, pos) {
      if (!stream.tty || !stream.tty.ops.put_char) {
        throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
      }
      for (var i = 0; i < length; i++) {
        try {
          stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        }
      }
      if (length) {
        stream.node.timestamp = Date.now();
      }
      return i;
    })
  },
  default_tty_ops: {
    get_char: (function(tty) {
      if (!tty.input.length) {
        var result = null;
        if (ENVIRONMENT_IS_NODE) {
          result = process['stdin']['read']();
          if (!result) {
            if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
              return null;
            }
            return undefined;
          }
        } else if (typeof window !== 'undefined' && typeof window.prompt === 'function') {
          result = window.prompt('Input: ');
          if (result !== null) {
            result += "\n";
          }
        } else if (typeof readline === 'function') {
          result = readline();
          if (result !== null) {
            result += "\n";
          }
        }
        if (!result) {
          return null;
        }
        tty.input = intArrayFromString(result, true);
      }
      return tty.input.shift();
    }),
    put_char: (function(tty, val) {
      if (val === null || val === 10) {
        Module['print'](UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      } else {
        if (val !== 0) tty.output.push(val);
      }
    }),
    flush: (function(tty) {
      if (tty.output && tty.output.length > 0) {
        Module['print'](UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      }
    })
  },
  default_tty1_ops: {
    put_char: (function(tty, val) {
      if (val === null || val === 10) {
        Module['printErr'](UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      } else {
        if (val !== 0) tty.output.push(val);
      }
    }),
    flush: (function(tty) {
      if (tty.output && tty.output.length > 0) {
        Module['printErr'](UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      }
    })
  }
};
var MEMFS = {
  ops_table: null,
  mount: (function(mount) {
    return MEMFS.createNode(null, '/', 16384 | 511, 0);
  }),
  createNode: (function(parent, name, mode, dev) {
    if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }
    if (!MEMFS.ops_table) {
      MEMFS.ops_table = {
        dir: {
          node: {
            getattr: MEMFS.node_ops.getattr,
            setattr: MEMFS.node_ops.setattr,
            lookup: MEMFS.node_ops.lookup,
            mknod: MEMFS.node_ops.mknod,
            rename: MEMFS.node_ops.rename,
            unlink: MEMFS.node_ops.unlink,
            rmdir: MEMFS.node_ops.rmdir,
            readdir: MEMFS.node_ops.readdir,
            symlink: MEMFS.node_ops.symlink
          },
          stream: {
            llseek: MEMFS.stream_ops.llseek
          }
        },
        file: {
          node: {
            getattr: MEMFS.node_ops.getattr,
            setattr: MEMFS.node_ops.setattr
          },
          stream: {
            llseek: MEMFS.stream_ops.llseek,
            read: MEMFS.stream_ops.read,
            write: MEMFS.stream_ops.write,
            allocate: MEMFS.stream_ops.allocate,
            mmap: MEMFS.stream_ops.mmap
          }
        },
        link: {
          node: {
            getattr: MEMFS.node_ops.getattr,
            setattr: MEMFS.node_ops.setattr,
            readlink: MEMFS.node_ops.readlink
          },
          stream: {}
        },
        chrdev: {
          node: {
            getattr: MEMFS.node_ops.getattr,
            setattr: MEMFS.node_ops.setattr
          },
          stream: FS.chrdev_stream_ops
        }
      };
    }
    var node = FS.createNode(parent, name, mode, dev);
    if (FS.isDir(node.mode)) {
      node.node_ops = MEMFS.ops_table.dir.node;
      node.stream_ops = MEMFS.ops_table.dir.stream;
      node.contents = {};
    } else if (FS.isFile(node.mode)) {
      node.node_ops = MEMFS.ops_table.file.node;
      node.stream_ops = MEMFS.ops_table.file.stream;
      node.usedBytes = 0;
      node.contents = null;
    } else if (FS.isLink(node.mode)) {
      node.node_ops = MEMFS.ops_table.link.node;
      node.stream_ops = MEMFS.ops_table.link.stream;
    } else if (FS.isChrdev(node.mode)) {
      node.node_ops = MEMFS.ops_table.chrdev.node;
      node.stream_ops = MEMFS.ops_table.chrdev.stream;
    }
    node.timestamp = Date.now();
    if (parent) {
      parent.contents[name] = node;
    }
    return node;
  }),
  getFileDataAsRegularArray: (function(node) {
    if (node.contents && node.contents.subarray) {
      var arr = [];
      for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
      return arr;
    }
    return node.contents;
  }),
  getFileDataAsTypedArray: (function(node) {
    if (!node.contents) return new Uint8Array;
    if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
    return new Uint8Array(node.contents);
  }),
  expandFileStorage: (function(node, newCapacity) {
    if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
      node.contents = MEMFS.getFileDataAsRegularArray(node);
      node.usedBytes = node.contents.length;
    }
    if (!node.contents || node.contents.subarray) {
      var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
      if (prevCapacity >= newCapacity) return;
      var CAPACITY_DOUBLING_MAX = 1024 * 1024;
      newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);
      if (prevCapacity !== 0) newCapacity = Math.max(newCapacity, 256);
      var oldContents = node.contents;
      node.contents = new Uint8Array(newCapacity);
      if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
      return;
    }
    if (!node.contents && newCapacity > 0) node.contents = [];
    while (node.contents.length < newCapacity) node.contents.push(0);
  }),
  resizeFileStorage: (function(node, newSize) {
    if (node.usedBytes === newSize) return;
    if (newSize === 0) {
      node.contents = null;
      node.usedBytes = 0;
      return;
    }
    if (!node.contents || node.contents.subarray) {
      var oldContents = node.contents;
      node.contents = new Uint8Array(new ArrayBuffer(newSize));
      if (oldContents) {
        node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
      }
      node.usedBytes = newSize;
      return;
    }
    if (!node.contents) node.contents = [];
    if (node.contents.length > newSize) node.contents.length = newSize;
    else
      while (node.contents.length < newSize) node.contents.push(0);
    node.usedBytes = newSize;
  }),
  node_ops: {
    getattr: (function(node) {
      var attr = {};
      attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
      attr.ino = node.id;
      attr.mode = node.mode;
      attr.nlink = 1;
      attr.uid = 0;
      attr.gid = 0;
      attr.rdev = node.rdev;
      if (FS.isDir(node.mode)) {
        attr.size = 4096;
      } else if (FS.isFile(node.mode)) {
        attr.size = node.usedBytes;
      } else if (FS.isLink(node.mode)) {
        attr.size = node.link.length;
      } else {
        attr.size = 0;
      }
      attr.atime = new Date(node.timestamp);
      attr.mtime = new Date(node.timestamp);
      attr.ctime = new Date(node.timestamp);
      attr.blksize = 4096;
      attr.blocks = Math.ceil(attr.size / attr.blksize);
      return attr;
    }),
    setattr: (function(node, attr) {
      if (attr.mode !== undefined) {
        node.mode = attr.mode;
      }
      if (attr.timestamp !== undefined) {
        node.timestamp = attr.timestamp;
      }
      if (attr.size !== undefined) {
        MEMFS.resizeFileStorage(node, attr.size);
      }
    }),
    lookup: (function(parent, name) {
      throw FS.genericErrors[ERRNO_CODES.ENOENT];
    }),
    mknod: (function(parent, name, mode, dev) {
      return MEMFS.createNode(parent, name, mode, dev);
    }),
    rename: (function(old_node, new_dir, new_name) {
      if (FS.isDir(old_node.mode)) {
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {}
        if (new_node) {
          for (var i in new_node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
        }
      }
      delete old_node.parent.contents[old_node.name];
      old_node.name = new_name;
      new_dir.contents[new_name] = old_node;
      old_node.parent = new_dir;
    }),
    unlink: (function(parent, name) {
      delete parent.contents[name];
    }),
    rmdir: (function(parent, name) {
      var node = FS.lookupNode(parent, name);
      for (var i in node.contents) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
      }
      delete parent.contents[name];
    }),
    readdir: (function(node) {
      var entries = ['.', '..'];
      for (var key in node.contents) {
        if (!node.contents.hasOwnProperty(key)) {
          continue;
        }
        entries.push(key);
      }
      return entries;
    }),
    symlink: (function(parent, newname, oldpath) {
      var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
      node.link = oldpath;
      return node;
    }),
    readlink: (function(node) {
      if (!FS.isLink(node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      return node.link;
    })
  },
  stream_ops: {
    read: (function(stream, buffer, offset, length, position) {
      var contents = stream.node.contents;
      if (position >= stream.node.usedBytes) return 0;
      var size = Math.min(stream.node.usedBytes - position, length);
      assert(size >= 0);
      if (size > 8 && contents.subarray) {
        buffer.set(contents.subarray(position, position + size), offset);
      } else {
        for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
      }
      return size;
    }),
    write: (function(stream, buffer, offset, length, position, canOwn) {
      if (!length) return 0;
      var node = stream.node;
      node.timestamp = Date.now();
      if (buffer.subarray && (!node.contents || node.contents.subarray)) {
        if (canOwn) {
          node.contents = buffer.subarray(offset, offset + length);
          node.usedBytes = length;
          return length;
        } else if (node.usedBytes === 0 && position === 0) {
          node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
          node.usedBytes = length;
          return length;
        } else if (position + length <= node.usedBytes) {
          node.contents.set(buffer.subarray(offset, offset + length), position);
          return length;
        }
      }
      MEMFS.expandFileStorage(node, position + length);
      if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position);
      else
        for (var i = 0; i < length; i++) {
          node.contents[position + i] = buffer[offset + i];
        }
      node.usedBytes = Math.max(node.usedBytes, position + length);
      return length;
    }),
    llseek: (function(stream, offset, whence) {
      var position = offset;
      if (whence === 1) {
        position += stream.position;
      } else if (whence === 2) {
        if (FS.isFile(stream.node.mode)) {
          position += stream.node.usedBytes;
        }
      }
      if (position < 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      return position;
    }),
    allocate: (function(stream, offset, length) {
      MEMFS.expandFileStorage(stream.node, offset + length);
      stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
    }),
    mmap: (function(stream, buffer, offset, length, position, prot, flags) {
      if (!FS.isFile(stream.node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
      }
      var ptr;
      var allocated;
      var contents = stream.node.contents;
      if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {
        allocated = false;
        ptr = contents.byteOffset;
      } else {
        if (position > 0 || position + length < stream.node.usedBytes) {
          if (contents.subarray) {
            contents = contents.subarray(position, position + length);
          } else {
            contents = Array.prototype.slice.call(contents, position, position + length);
          }
        }
        allocated = true;
        ptr = _malloc(length);
        if (!ptr) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
        }
        buffer.set(contents, ptr);
      }
      return {
        ptr: ptr,
        allocated: allocated
      };
    })
  }
};
var IDBFS = {
  dbs: {},
  indexedDB: (function() {
    if (typeof indexedDB !== 'undefined') return indexedDB;
    var ret = null;
    if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
    assert(ret, 'IDBFS used, but indexedDB not supported');
    return ret;
  }),
  DB_VERSION: 21,
  DB_STORE_NAME: 'FILE_DATA',
  mount: (function(mount) {
    return MEMFS.mount.apply(null, arguments);
  }),
  syncfs: (function(mount, populate, callback) {
    IDBFS.getLocalSet(mount, (function(err, local) {
      if (err) return callback(err);
      IDBFS.getRemoteSet(mount, (function(err, remote) {
        if (err) return callback(err);
        var src = populate ? remote : local;
        var dst = populate ? local : remote;
        IDBFS.reconcile(src, dst, callback);
      }));
    }));
  }),
  getDB: (function(name, callback) {
    var db = IDBFS.dbs[name];
    if (db) {
      return callback(null, db);
    }
    var req;
    try {
      req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
    } catch (e) {
      return callback(e);
    }
    req.onupgradeneeded = (function(e) {
      var db = e.target.result;
      var transaction = e.target.transaction;
      var fileStore;
      if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
        fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
      } else {
        fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
      }
      fileStore.createIndex('timestamp', 'timestamp', {
        unique: false
      });
    });
    req.onsuccess = (function() {
      db = req.result;
      IDBFS.dbs[name] = db;
      callback(null, db);
    });
    req.onerror = (function() {
      callback(this.error);
    });
  }),
  getLocalSet: (function(mount, callback) {
    var entries = {};

    function isRealDir(p) {
      return p !== '.' && p !== "..";
    }

    function toAbsolute(root) {
      return (function(p) {
        return PATH.join2(root, p);
      });
    }
    var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
    while (check.length) {
      var path = check.pop();
      var stat;
      try {
        stat = FS.stat(path);
      } catch (e) {
        return callback(e);
      }
      if (FS.isDir(stat.mode)) {
        check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
      }
      entries[path] = {
        timestamp: stat.mtime
      };
    }
    return callback(null, {
      type: 'local',
      entries: entries
    });
  }),
  getRemoteSet: (function(mount, callback) {
    var entries = {};
    IDBFS.getDB(mount.mountpoint, (function(err, db) {
      if (err) return callback(err);
      var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
      transaction.onerror = (function() {
        callback(this.error);
      });
      var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
      var index = store.index('timestamp');
      index.openKeyCursor().onsuccess = (function(event) {
        var cursor = event.target.result;
        if (!cursor) {
          return callback(null, {
            type: 'remote',
            db: db,
            entries: entries
          });
        }
        entries[cursor.primaryKey] = {
          timestamp: cursor.key
        };
        cursor.continue();
      });
    }));
  }),
  loadLocalEntry: (function(path, callback) {
    var stat, node;
    try {
      var lookup = FS.lookupPath(path);
      node = lookup.node;
      stat = FS.stat(path);
    } catch (e) {
      return callback(e);
    }
    if (FS.isDir(stat.mode)) {
      return callback(null, {
        timestamp: stat.mtime,
        mode: stat.mode
      });
    } else if (FS.isFile(stat.mode)) {
      node.contents = MEMFS.getFileDataAsTypedArray(node);
      return callback(null, {
        timestamp: stat.mtime,
        mode: stat.mode,
        contents: node.contents
      });
    } else {
      return callback(new Error('node type not supported'));
    }
  }),
  storeLocalEntry: (function(path, entry, callback) {
    try {
      if (FS.isDir(entry.mode)) {
        FS.mkdir(path, entry.mode);
      } else if (FS.isFile(entry.mode)) {
        FS.writeFile(path, entry.contents, {
          encoding: 'binary',
          canOwn: true
        });
      } else {
        return callback(new Error('node type not supported'));
      }
      FS.chmod(path, entry.mode);
      FS.utime(path, entry.timestamp, entry.timestamp);
    } catch (e) {
      return callback(e);
    }
    callback(null);
  }),
  removeLocalEntry: (function(path, callback) {
    try {
      var lookup = FS.lookupPath(path);
      var stat = FS.stat(path);
      if (FS.isDir(stat.mode)) {
        FS.rmdir(path);
      } else if (FS.isFile(stat.mode)) {
        FS.unlink(path);
      }
    } catch (e) {
      return callback(e);
    }
    callback(null);
  }),
  loadRemoteEntry: (function(store, path, callback) {
    var req = store.get(path);
    req.onsuccess = (function(event) {
      callback(null, event.target.result);
    });
    req.onerror = (function() {
      callback(this.error);
    });
  }),
  storeRemoteEntry: (function(store, path, entry, callback) {
    var req = store.put(entry, path);
    req.onsuccess = (function() {
      callback(null);
    });
    req.onerror = (function() {
      callback(this.error);
    });
  }),
  removeRemoteEntry: (function(store, path, callback) {
    var req = store.delete(path);
    req.onsuccess = (function() {
      callback(null);
    });
    req.onerror = (function() {
      callback(this.error);
    });
  }),
  reconcile: (function(src, dst, callback) {
    var total = 0;
    var create = [];
    Object.keys(src.entries).forEach((function(key) {
      var e = src.entries[key];
      var e2 = dst.entries[key];
      if (!e2 || e.timestamp > e2.timestamp) {
        create.push(key);
        total++;
      }
    }));
    var remove = [];
    Object.keys(dst.entries).forEach((function(key) {
      var e = dst.entries[key];
      var e2 = src.entries[key];
      if (!e2) {
        remove.push(key);
        total++;
      }
    }));
    if (!total) {
      return callback(null);
    }
    var errored = false;
    var completed = 0;
    var db = src.type === 'remote' ? src.db : dst.db;
    var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
    var store = transaction.objectStore(IDBFS.DB_STORE_NAME);

    function done(err) {
      if (err) {
        if (!done.errored) {
          done.errored = true;
          return callback(err);
        }
        return;
      }
      if (++completed >= total) {
        return callback(null);
      }
    }
    transaction.onerror = (function() {
      done(this.error);
    });
    create.sort().forEach((function(path) {
      if (dst.type === 'local') {
        IDBFS.loadRemoteEntry(store, path, (function(err, entry) {
          if (err) return done(err);
          IDBFS.storeLocalEntry(path, entry, done);
        }));
      } else {
        IDBFS.loadLocalEntry(path, (function(err, entry) {
          if (err) return done(err);
          IDBFS.storeRemoteEntry(store, path, entry, done);
        }));
      }
    }));
    remove.sort().reverse().forEach((function(path) {
      if (dst.type === 'local') {
        IDBFS.removeLocalEntry(path, done);
      } else {
        IDBFS.removeRemoteEntry(store, path, done);
      }
    }));
  })
};
var NODEFS = {
  isWindows: false,
  staticInit: (function() {
    NODEFS.isWindows = !!process.platform.match(/^win/);
  }),
  mount: (function(mount) {
    assert(ENVIRONMENT_IS_NODE);
    return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
  }),
  createNode: (function(parent, name, mode, dev) {
    if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    var node = FS.createNode(parent, name, mode);
    node.node_ops = NODEFS.node_ops;
    node.stream_ops = NODEFS.stream_ops;
    return node;
  }),
  getMode: (function(path) {
    var stat;
    try {
      stat = fs.lstatSync(path);
      if (NODEFS.isWindows) {
        stat.mode = stat.mode | (stat.mode & 146) >> 1;
      }
    } catch (e) {
      if (!e.code) throw e;
      throw new FS.ErrnoError(ERRNO_CODES[e.code]);
    }
    return stat.mode;
  }),
  realPath: (function(node) {
    var parts = [];
    while (node.parent !== node) {
      parts.push(node.name);
      node = node.parent;
    }
    parts.push(node.mount.opts.root);
    parts.reverse();
    return PATH.join.apply(null, parts);
  }),
  flagsToPermissionStringMap: {
    0: 'r',
    1: 'r+',
    2: 'r+',
    64: 'r',
    65: 'r+',
    66: 'r+',
    129: 'rx+',
    193: 'rx+',
    514: 'w+',
    577: 'w',
    578: 'w+',
    705: 'wx',
    706: 'wx+',
    1024: 'a',
    1025: 'a',
    1026: 'a+',
    1089: 'a',
    1090: 'a+',
    1153: 'ax',
    1154: 'ax+',
    1217: 'ax',
    1218: 'ax+',
    4096: 'rs',
    4098: 'rs+'
  },
  flagsToPermissionString: (function(flags) {
    if (flags in NODEFS.flagsToPermissionStringMap) {
      return NODEFS.flagsToPermissionStringMap[flags];
    } else {
      return flags;
    }
  }),
  node_ops: {
    getattr: (function(node) {
      var path = NODEFS.realPath(node);
      var stat;
      try {
        stat = fs.lstatSync(path);
      } catch (e) {
        if (!e.code) throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
      if (NODEFS.isWindows && !stat.blksize) {
        stat.blksize = 4096;
      }
      if (NODEFS.isWindows && !stat.blocks) {
        stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
      }
      return {
        dev: stat.dev,
        ino: stat.ino,
        mode: stat.mode,
        nlink: stat.nlink,
        uid: stat.uid,
        gid: stat.gid,
        rdev: stat.rdev,
        size: stat.size,
        atime: stat.atime,
        mtime: stat.mtime,
        ctime: stat.ctime,
        blksize: stat.blksize,
        blocks: stat.blocks
      };
    }),
    setattr: (function(node, attr) {
      var path = NODEFS.realPath(node);
      try {
        if (attr.mode !== undefined) {
          fs.chmodSync(path, attr.mode);
          node.mode = attr.mode;
        }
        if (attr.timestamp !== undefined) {
          var date = new Date(attr.timestamp);
          fs.utimesSync(path, date, date);
        }
        if (attr.size !== undefined) {
          fs.truncateSync(path, attr.size);
        }
      } catch (e) {
        if (!e.code) throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }),
    lookup: (function(parent, name) {
      var path = PATH.join2(NODEFS.realPath(parent), name);
      var mode = NODEFS.getMode(path);
      return NODEFS.createNode(parent, name, mode);
    }),
    mknod: (function(parent, name, mode, dev) {
      var node = NODEFS.createNode(parent, name, mode, dev);
      var path = NODEFS.realPath(node);
      try {
        if (FS.isDir(node.mode)) {
          fs.mkdirSync(path, node.mode);
        } else {
          fs.writeFileSync(path, '', {
            mode: node.mode
          });
        }
      } catch (e) {
        if (!e.code) throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
      return node;
    }),
    rename: (function(oldNode, newDir, newName) {
      var oldPath = NODEFS.realPath(oldNode);
      var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
      try {
        fs.renameSync(oldPath, newPath);
      } catch (e) {
        if (!e.code) throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }),
    unlink: (function(parent, name) {
      var path = PATH.join2(NODEFS.realPath(parent), name);
      try {
        fs.unlinkSync(path);
      } catch (e) {
        if (!e.code) throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }),
    rmdir: (function(parent, name) {
      var path = PATH.join2(NODEFS.realPath(parent), name);
      try {
        fs.rmdirSync(path);
      } catch (e) {
        if (!e.code) throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }),
    readdir: (function(node) {
      var path = NODEFS.realPath(node);
      try {
        return fs.readdirSync(path);
      } catch (e) {
        if (!e.code) throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }),
    symlink: (function(parent, newName, oldPath) {
      var newPath = PATH.join2(NODEFS.realPath(parent), newName);
      try {
        fs.symlinkSync(oldPath, newPath);
      } catch (e) {
        if (!e.code) throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }),
    readlink: (function(node) {
      var path = NODEFS.realPath(node);
      try {
        return fs.readlinkSync(path);
      } catch (e) {
        if (!e.code) throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    })
  },
  stream_ops: {
    open: (function(stream) {
      var path = NODEFS.realPath(stream.node);
      try {
        if (FS.isFile(stream.node.mode)) {
          stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
        }
      } catch (e) {
        if (!e.code) throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }),
    close: (function(stream) {
      try {
        if (FS.isFile(stream.node.mode) && stream.nfd) {
          fs.closeSync(stream.nfd);
        }
      } catch (e) {
        if (!e.code) throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }),
    read: (function(stream, buffer, offset, length, position) {
      if (length === 0) return 0;
      var nbuffer = new Buffer(length);
      var res;
      try {
        res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
      } catch (e) {
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
      if (res > 0) {
        for (var i = 0; i < res; i++) {
          buffer[offset + i] = nbuffer[i];
        }
      }
      return res;
    }),
    write: (function(stream, buffer, offset, length, position) {
      var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
      var res;
      try {
        res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
      } catch (e) {
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
      return res;
    }),
    llseek: (function(stream, offset, whence) {
      var position = offset;
      if (whence === 1) {
        position += stream.position;
      } else if (whence === 2) {
        if (FS.isFile(stream.node.mode)) {
          try {
            var stat = fs.fstatSync(stream.nfd);
            position += stat.size;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }
      }
      if (position < 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      return position;
    })
  }
};
var _stdin = allocate(1, 'i32*', ALLOC_STATIC);
var _stdout = allocate(1, 'i32*', ALLOC_STATIC);
var _stderr = allocate(1, 'i32*', ALLOC_STATIC);

function _fflush(stream) {}
var FS = {
  root: null,
  mounts: [],
  devices: [null],
  streams: [],
  nextInode: 1,
  nameTable: null,
  currentPath: '/',
  initialized: false,
  ignorePermissions: true,
  trackingDelegate: {},
  tracking: {
    openFlags: {
      READ: 1,
      WRITE: 2
    }
  },
  ErrnoError: null,
  genericErrors: {},
  handleFSError: (function(e) {
    if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
    return ___setErrNo(e.errno);
  }),
  lookupPath: (function(path, opts) {
    path = PATH.resolve(FS.cwd(), path);
    opts = opts || {};
    if (!path) return {
      path: '',
      node: null
    };
    var defaults = {
      follow_mount: true,
      recurse_count: 0
    };
    for (var key in defaults) {
      if (opts[key] === undefined) {
        opts[key] = defaults[key];
      }
    }
    if (opts.recurse_count > 8) {
      throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
    }
    var parts = PATH.normalizeArray(path.split('/').filter((function(p) {
      return !!p;
    })), false);
    var current = FS.root;
    var current_path = '/';
    for (var i = 0; i < parts.length; i++) {
      var islast = i === parts.length - 1;
      if (islast && opts.parent) {
        break;
      }
      current = FS.lookupNode(current, parts[i]);
      current_path = PATH.join2(current_path, parts[i]);
      if (FS.isMountpoint(current)) {
        if (!islast || islast && opts.follow_mount) {
          current = current.mounted.root;
        }
      }
      if (!islast || opts.follow) {
        var count = 0;
        while (FS.isLink(current.mode)) {
          var link = FS.readlink(current_path);
          current_path = PATH.resolve(PATH.dirname(current_path), link);
          var lookup = FS.lookupPath(current_path, {
            recurse_count: opts.recurse_count
          });
          current = lookup.node;
          if (count++ > 40) {
            throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
          }
        }
      }
    }
    return {
      path: current_path,
      node: current
    };
  }),
  getPath: (function(node) {
    var path;
    while (true) {
      if (FS.isRoot(node)) {
        var mount = node.mount.mountpoint;
        if (!path) return mount;
        return mount[mount.length - 1] !== '/' ? mount + '/' + path : mount + path;
      }
      path = path ? node.name + '/' + path : node.name;
      node = node.parent;
    }
  }),
  hashName: (function(parentid, name) {
    var hash = 0;
    for (var i = 0; i < name.length; i++) {
      hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
    }
    return (parentid + hash >>> 0) % FS.nameTable.length;
  }),
  hashAddNode: (function(node) {
    var hash = FS.hashName(node.parent.id, node.name);
    node.name_next = FS.nameTable[hash];
    FS.nameTable[hash] = node;
  }),
  hashRemoveNode: (function(node) {
    var hash = FS.hashName(node.parent.id, node.name);
    if (FS.nameTable[hash] === node) {
      FS.nameTable[hash] = node.name_next;
    } else {
      var current = FS.nameTable[hash];
      while (current) {
        if (current.name_next === node) {
          current.name_next = node.name_next;
          break;
        }
        current = current.name_next;
      }
    }
  }),
  lookupNode: (function(parent, name) {
    var err = FS.mayLookup(parent);
    if (err) {
      throw new FS.ErrnoError(err, parent);
    }
    var hash = FS.hashName(parent.id, name);
    for (var node = FS.nameTable[hash]; node; node = node.name_next) {
      var nodeName = node.name;
      if (node.parent.id === parent.id && nodeName === name) {
        return node;
      }
    }
    return FS.lookup(parent, name);
  }),
  createNode: (function(parent, name, mode, rdev) {
    if (!FS.FSNode) {
      FS.FSNode = (function(parent, name, mode, rdev) {
        if (!parent) {
          parent = this;
        }
        this.parent = parent;
        this.mount = parent.mount;
        this.mounted = null;
        this.id = FS.nextInode++;
        this.name = name;
        this.mode = mode;
        this.node_ops = {};
        this.stream_ops = {};
        this.rdev = rdev;
      });
      FS.FSNode.prototype = {};
      var readMode = 292 | 73;
      var writeMode = 146;
      Object.defineProperties(FS.FSNode.prototype, {
        read: {
          get: (function() {
            return (this.mode & readMode) === readMode;
          }),
          set: (function(val) {
            val ? this.mode |= readMode : this.mode &= ~readMode;
          })
        },
        write: {
          get: (function() {
            return (this.mode & writeMode) === writeMode;
          }),
          set: (function(val) {
            val ? this.mode |= writeMode : this.mode &= ~writeMode;
          })
        },
        isFolder: {
          get: (function() {
            return FS.isDir(this.mode);
          })
        },
        isDevice: {
          get: (function() {
            return FS.isChrdev(this.mode);
          })
        }
      });
    }
    var node = new FS.FSNode(parent, name, mode, rdev);
    FS.hashAddNode(node);
    return node;
  }),
  destroyNode: (function(node) {
    FS.hashRemoveNode(node);
  }),
  isRoot: (function(node) {
    return node === node.parent;
  }),
  isMountpoint: (function(node) {
    return !!node.mounted;
  }),
  isFile: (function(mode) {
    return (mode & 61440) === 32768;
  }),
  isDir: (function(mode) {
    return (mode & 61440) === 16384;
  }),
  isLink: (function(mode) {
    return (mode & 61440) === 40960;
  }),
  isChrdev: (function(mode) {
    return (mode & 61440) === 8192;
  }),
  isBlkdev: (function(mode) {
    return (mode & 61440) === 24576;
  }),
  isFIFO: (function(mode) {
    return (mode & 61440) === 4096;
  }),
  isSocket: (function(mode) {
    return (mode & 49152) === 49152;
  }),
  flagModes: {
    'r': 0,
    'rs': 1052672,
    'r+': 2,
    'w': 577,
    'wx': 705,
    'xw': 705,
    'w+': 578,
    'wx+': 706,
    'xw+': 706,
    'a': 1089,
    'ax': 1217,
    'xa': 1217,
    'a+': 1090,
    'ax+': 1218,
    'xa+': 1218
  },
  modeStringToFlags: (function(str) {
    var flags = FS.flagModes[str];
    if (typeof flags === 'undefined') {
      throw new Error('Unknown file open mode: ' + str);
    }
    return flags;
  }),
  flagsToPermissionString: (function(flag) {
    var accmode = flag & 2097155;
    var perms = ['r', 'w', 'rw'][accmode];
    if (flag & 512) {
      perms += "w";
    }
    return perms;
  }),
  nodePermissions: (function(node, perms) {
    if (FS.ignorePermissions) {
      return 0;
    }
    if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
      return ERRNO_CODES.EACCES;
    } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
      return ERRNO_CODES.EACCES;
    } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
      return ERRNO_CODES.EACCES;
    }
    return 0;
  }),
  mayLookup: (function(dir) {
    var err = FS.nodePermissions(dir, 'x');
    if (err) return err;
    if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
    return 0;
  }),
  mayCreate: (function(dir, name) {
    try {
      var node = FS.lookupNode(dir, name);
      return ERRNO_CODES.EEXIST;
    } catch (e) {}
    return FS.nodePermissions(dir, 'wx');
  }),
  mayDelete: (function(dir, name, isdir) {
    var node;
    try {
      node = FS.lookupNode(dir, name);
    } catch (e) {
      return e.errno;
    }
    var err = FS.nodePermissions(dir, 'wx');
    if (err) {
      return err;
    }
    if (isdir) {
      if (!FS.isDir(node.mode)) {
        return ERRNO_CODES.ENOTDIR;
      }
      if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
        return ERRNO_CODES.EBUSY;
      }
    } else {
      if (FS.isDir(node.mode)) {
        return ERRNO_CODES.EISDIR;
      }
    }
    return 0;
  }),
  mayOpen: (function(node, flags) {
    if (!node) {
      return ERRNO_CODES.ENOENT;
    }
    if (FS.isLink(node.mode)) {
      return ERRNO_CODES.ELOOP;
    } else if (FS.isDir(node.mode)) {
      if ((flags & 2097155) !== 0 || flags & 512) {
        return ERRNO_CODES.EISDIR;
      }
    }
    return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
  }),
  MAX_OPEN_FDS: 4096,
  nextfd: (function(fd_start, fd_end) {
    fd_start = fd_start || 0;
    fd_end = fd_end || FS.MAX_OPEN_FDS;
    for (var fd = fd_start; fd <= fd_end; fd++) {
      if (!FS.streams[fd]) {
        return fd;
      }
    }
    throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
  }),
  getStream: (function(fd) {
    return FS.streams[fd];
  }),
  createStream: (function(stream, fd_start, fd_end) {
    if (!FS.FSStream) {
      FS.FSStream = (function() {});
      FS.FSStream.prototype = {};
      Object.defineProperties(FS.FSStream.prototype, {
        object: {
          get: (function() {
            return this.node;
          }),
          set: (function(val) {
            this.node = val;
          })
        },
        isRead: {
          get: (function() {
            return (this.flags & 2097155) !== 1;
          })
        },
        isWrite: {
          get: (function() {
            return (this.flags & 2097155) !== 0;
          })
        },
        isAppend: {
          get: (function() {
            return this.flags & 1024;
          })
        }
      });
    }
    var newStream = new FS.FSStream;
    for (var p in stream) {
      newStream[p] = stream[p];
    }
    stream = newStream;
    var fd = FS.nextfd(fd_start, fd_end);
    stream.fd = fd;
    FS.streams[fd] = stream;
    return stream;
  }),
  closeStream: (function(fd) {
    FS.streams[fd] = null;
  }),
  getStreamFromPtr: (function(ptr) {
    return FS.streams[ptr - 1];
  }),
  getPtrForStream: (function(stream) {
    return stream ? stream.fd + 1 : 0;
  }),
  chrdev_stream_ops: {
    open: (function(stream) {
      var device = FS.getDevice(stream.node.rdev);
      stream.stream_ops = device.stream_ops;
      if (stream.stream_ops.open) {
        stream.stream_ops.open(stream);
      }
    }),
    llseek: (function() {
      throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
    })
  },
  major: (function(dev) {
    return dev >> 8;
  }),
  minor: (function(dev) {
    return dev & 255;
  }),
  makedev: (function(ma, mi) {
    return ma << 8 | mi;
  }),
  registerDevice: (function(dev, ops) {
    FS.devices[dev] = {
      stream_ops: ops
    };
  }),
  getDevice: (function(dev) {
    return FS.devices[dev];
  }),
  getMounts: (function(mount) {
    var mounts = [];
    var check = [mount];
    while (check.length) {
      var m = check.pop();
      mounts.push(m);
      check.push.apply(check, m.mounts);
    }
    return mounts;
  }),
  syncfs: (function(populate, callback) {
    if (typeof populate === 'function') {
      callback = populate;
      populate = false;
    }
    var mounts = FS.getMounts(FS.root.mount);
    var completed = 0;

    function done(err) {
      if (err) {
        if (!done.errored) {
          done.errored = true;
          return callback(err);
        }
        return;
      }
      if (++completed >= mounts.length) {
        callback(null);
      }
    }
    mounts.forEach((function(mount) {
      if (!mount.type.syncfs) {
        return done(null);
      }
      mount.type.syncfs(mount, populate, done);
    }));
  }),
  mount: (function(type, opts, mountpoint) {
    var root = mountpoint === '/';
    var pseudo = !mountpoint;
    var node;
    if (root && FS.root) {
      throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
    } else if (!root && !pseudo) {
      var lookup = FS.lookupPath(mountpoint, {
        follow_mount: false
      });
      mountpoint = lookup.path;
      node = lookup.node;
      if (FS.isMountpoint(node)) {
        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
      }
      if (!FS.isDir(node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
      }
    }
    var mount = {
      type: type,
      opts: opts,
      mountpoint: mountpoint,
      mounts: []
    };
    var mountRoot = type.mount(mount);
    mountRoot.mount = mount;
    mount.root = mountRoot;
    if (root) {
      FS.root = mountRoot;
    } else if (node) {
      node.mounted = mount;
      if (node.mount) {
        node.mount.mounts.push(mount);
      }
    }
    return mountRoot;
  }),
  unmount: (function(mountpoint) {
    var lookup = FS.lookupPath(mountpoint, {
      follow_mount: false
    });
    if (!FS.isMountpoint(lookup.node)) {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    var node = lookup.node;
    var mount = node.mounted;
    var mounts = FS.getMounts(mount);
    Object.keys(FS.nameTable).forEach((function(hash) {
      var current = FS.nameTable[hash];
      while (current) {
        var next = current.name_next;
        if (mounts.indexOf(current.mount) !== -1) {
          FS.destroyNode(current);
        }
        current = next;
      }
    }));
    node.mounted = null;
    var idx = node.mount.mounts.indexOf(mount);
    assert(idx !== -1);
    node.mount.mounts.splice(idx, 1);
  }),
  lookup: (function(parent, name) {
    return parent.node_ops.lookup(parent, name);
  }),
  mknod: (function(path, mode, dev) {
    var lookup = FS.lookupPath(path, {
      parent: true
    });
    var parent = lookup.node;
    var name = PATH.basename(path);
    if (!name || name === '.' || name === '..') {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    var err = FS.mayCreate(parent, name);
    if (err) {
      throw new FS.ErrnoError(err);
    }
    if (!parent.node_ops.mknod) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }
    return parent.node_ops.mknod(parent, name, mode, dev);
  }),
  create: (function(path, mode) {
    mode = mode !== undefined ? mode : 438;
    mode &= 4095;
    mode |= 32768;
    return FS.mknod(path, mode, 0);
  }),
  mkdir: (function(path, mode) {
    mode = mode !== undefined ? mode : 511;
    mode &= 511 | 512;
    mode |= 16384;
    return FS.mknod(path, mode, 0);
  }),
  mkdev: (function(path, mode, dev) {
    if (typeof dev === 'undefined') {
      dev = mode;
      mode = 438;
    }
    mode |= 8192;
    return FS.mknod(path, mode, dev);
  }),
  symlink: (function(oldpath, newpath) {
    if (!PATH.resolve(oldpath)) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
    }
    var lookup = FS.lookupPath(newpath, {
      parent: true
    });
    var parent = lookup.node;
    if (!parent) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
    }
    var newname = PATH.basename(newpath);
    var err = FS.mayCreate(parent, newname);
    if (err) {
      throw new FS.ErrnoError(err);
    }
    if (!parent.node_ops.symlink) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }
    return parent.node_ops.symlink(parent, newname, oldpath);
  }),
  rename: (function(old_path, new_path) {
    var old_dirname = PATH.dirname(old_path);
    var new_dirname = PATH.dirname(new_path);
    var old_name = PATH.basename(old_path);
    var new_name = PATH.basename(new_path);
    var lookup, old_dir, new_dir;
    try {
      lookup = FS.lookupPath(old_path, {
        parent: true
      });
      old_dir = lookup.node;
      lookup = FS.lookupPath(new_path, {
        parent: true
      });
      new_dir = lookup.node;
    } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
    }
    if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
    if (old_dir.mount !== new_dir.mount) {
      throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
    }
    var old_node = FS.lookupNode(old_dir, old_name);
    var relative = PATH.relative(old_path, new_dirname);
    if (relative.charAt(0) !== '.') {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    relative = PATH.relative(new_path, old_dirname);
    if (relative.charAt(0) !== '.') {
      throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
    }
    var new_node;
    try {
      new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (old_node === new_node) {
      return;
    }
    var isdir = FS.isDir(old_node.mode);
    var err = FS.mayDelete(old_dir, old_name, isdir);
    if (err) {
      throw new FS.ErrnoError(err);
    }
    err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
    if (err) {
      throw new FS.ErrnoError(err);
    }
    if (!old_dir.node_ops.rename) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }
    if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
      throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
    }
    if (new_dir !== old_dir) {
      err = FS.nodePermissions(old_dir, 'w');
      if (err) {
        throw new FS.ErrnoError(err);
      }
    }
    try {
      if (FS.trackingDelegate['willMovePath']) {
        FS.trackingDelegate['willMovePath'](old_path, new_path);
      }
    } catch (e) {
      console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
    }
    FS.hashRemoveNode(old_node);
    try {
      old_dir.node_ops.rename(old_node, new_dir, new_name);
    } catch (e) {
      throw e;
    } finally {
      FS.hashAddNode(old_node);
    }
    try {
      if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
    } catch (e) {
      console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
    }
  }),
  rmdir: (function(path) {
    var lookup = FS.lookupPath(path, {
      parent: true
    });
    var parent = lookup.node;
    var name = PATH.basename(path);
    var node = FS.lookupNode(parent, name);
    var err = FS.mayDelete(parent, name, true);
    if (err) {
      throw new FS.ErrnoError(err);
    }
    if (!parent.node_ops.rmdir) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }
    if (FS.isMountpoint(node)) {
      throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
    }
    try {
      if (FS.trackingDelegate['willDeletePath']) {
        FS.trackingDelegate['willDeletePath'](path);
      }
    } catch (e) {
      console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
    }
    parent.node_ops.rmdir(parent, name);
    FS.destroyNode(node);
    try {
      if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
    } catch (e) {
      console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
    }
  }),
  readdir: (function(path) {
    var lookup = FS.lookupPath(path, {
      follow: true
    });
    var node = lookup.node;
    if (!node.node_ops.readdir) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
    }
    return node.node_ops.readdir(node);
  }),
  unlink: (function(path) {
    var lookup = FS.lookupPath(path, {
      parent: true
    });
    var parent = lookup.node;
    var name = PATH.basename(path);
    var node = FS.lookupNode(parent, name);
    var err = FS.mayDelete(parent, name, false);
    if (err) {
      if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
      throw new FS.ErrnoError(err);
    }
    if (!parent.node_ops.unlink) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }
    if (FS.isMountpoint(node)) {
      throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
    }
    try {
      if (FS.trackingDelegate['willDeletePath']) {
        FS.trackingDelegate['willDeletePath'](path);
      }
    } catch (e) {
      console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
    }
    parent.node_ops.unlink(parent, name);
    FS.destroyNode(node);
    try {
      if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
    } catch (e) {
      console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
    }
  }),
  readlink: (function(path) {
    var lookup = FS.lookupPath(path);
    var link = lookup.node;
    if (!link) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
    }
    if (!link.node_ops.readlink) {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    return link.node_ops.readlink(link);
  }),
  stat: (function(path, dontFollow) {
    var lookup = FS.lookupPath(path, {
      follow: !dontFollow
    });
    var node = lookup.node;
    if (!node) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
    }
    if (!node.node_ops.getattr) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }
    return node.node_ops.getattr(node);
  }),
  lstat: (function(path) {
    return FS.stat(path, true);
  }),
  chmod: (function(path, mode, dontFollow) {
    var node;
    if (typeof path === 'string') {
      var lookup = FS.lookupPath(path, {
        follow: !dontFollow
      });
      node = lookup.node;
    } else {
      node = path;
    }
    if (!node.node_ops.setattr) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }
    node.node_ops.setattr(node, {
      mode: mode & 4095 | node.mode & ~4095,
      timestamp: Date.now()
    });
  }),
  lchmod: (function(path, mode) {
    FS.chmod(path, mode, true);
  }),
  fchmod: (function(fd, mode) {
    var stream = FS.getStream(fd);
    if (!stream) {
      throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    }
    FS.chmod(stream.node, mode);
  }),
  chown: (function(path, uid, gid, dontFollow) {
    var node;
    if (typeof path === 'string') {
      var lookup = FS.lookupPath(path, {
        follow: !dontFollow
      });
      node = lookup.node;
    } else {
      node = path;
    }
    if (!node.node_ops.setattr) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }
    node.node_ops.setattr(node, {
      timestamp: Date.now()
    });
  }),
  lchown: (function(path, uid, gid) {
    FS.chown(path, uid, gid, true);
  }),
  fchown: (function(fd, uid, gid) {
    var stream = FS.getStream(fd);
    if (!stream) {
      throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    }
    FS.chown(stream.node, uid, gid);
  }),
  truncate: (function(path, len) {
    if (len < 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    var node;
    if (typeof path === 'string') {
      var lookup = FS.lookupPath(path, {
        follow: true
      });
      node = lookup.node;
    } else {
      node = path;
    }
    if (!node.node_ops.setattr) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }
    if (FS.isDir(node.mode)) {
      throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
    }
    if (!FS.isFile(node.mode)) {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    var err = FS.nodePermissions(node, 'w');
    if (err) {
      throw new FS.ErrnoError(err);
    }
    node.node_ops.setattr(node, {
      size: len,
      timestamp: Date.now()
    });
  }),
  ftruncate: (function(fd, len) {
    var stream = FS.getStream(fd);
    if (!stream) {
      throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    }
    if ((stream.flags & 2097155) === 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    FS.truncate(stream.node, len);
  }),
  utime: (function(path, atime, mtime) {
    var lookup = FS.lookupPath(path, {
      follow: true
    });
    var node = lookup.node;
    node.node_ops.setattr(node, {
      timestamp: Math.max(atime, mtime)
    });
  }),
  open: (function(path, flags, mode, fd_start, fd_end) {
    if (path === '') {
      throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
    }
    flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
    mode = typeof mode === 'undefined' ? 438 : mode;
    if (flags & 64) {
      mode = mode & 4095 | 32768;
    } else {
      mode = 0;
    }
    var node;
    if (typeof path === 'object') {
      node = path;
    } else {
      path = PATH.normalize(path);
      try {
        var lookup = FS.lookupPath(path, {
          follow: !(flags & 131072)
        });
        node = lookup.node;
      } catch (e) {}
    }
    var created = false;
    if (flags & 64) {
      if (node) {
        if (flags & 128) {
          throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
        }
      } else {
        node = FS.mknod(path, mode, 0);
        created = true;
      }
    }
    if (!node) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
    }
    if (FS.isChrdev(node.mode)) {
      flags &= ~512;
    }
    if (!created) {
      var err = FS.mayOpen(node, flags);
      if (err) {
        throw new FS.ErrnoError(err);
      }
    }
    if (flags & 512) {
      FS.truncate(node, 0);
    }
    flags &= ~(128 | 512);
    var stream = FS.createStream({
      node: node,
      path: FS.getPath(node),
      flags: flags,
      seekable: true,
      position: 0,
      stream_ops: node.stream_ops,
      ungotten: [],
      error: false
    }, fd_start, fd_end);
    if (stream.stream_ops.open) {
      stream.stream_ops.open(stream);
    }
    if (Module['logReadFiles'] && !(flags & 1)) {
      if (!FS.readFiles) FS.readFiles = {};
      if (!(path in FS.readFiles)) {
        FS.readFiles[path] = 1;
        Module['printErr']('read file: ' + path);
      }
    }
    try {
      if (FS.trackingDelegate['onOpenFile']) {
        var trackingFlags = 0;
        if ((flags & 2097155) !== 1) {
          trackingFlags |= FS.tracking.openFlags.READ;
        }
        if ((flags & 2097155) !== 0) {
          trackingFlags |= FS.tracking.openFlags.WRITE;
        }
        FS.trackingDelegate['onOpenFile'](path, trackingFlags);
      }
    } catch (e) {
      console.log("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
    }
    return stream;
  }),
  close: (function(stream) {
    try {
      if (stream.stream_ops.close) {
        stream.stream_ops.close(stream);
      }
    } catch (e) {
      throw e;
    } finally {
      FS.closeStream(stream.fd);
    }
  }),
  llseek: (function(stream, offset, whence) {
    if (!stream.seekable || !stream.stream_ops.llseek) {
      throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
    }
    stream.position = stream.stream_ops.llseek(stream, offset, whence);
    stream.ungotten = [];
    return stream.position;
  }),
  read: (function(stream, buffer, offset, length, position) {
    if (length < 0 || position < 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    if ((stream.flags & 2097155) === 1) {
      throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    }
    if (FS.isDir(stream.node.mode)) {
      throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
    }
    if (!stream.stream_ops.read) {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    var seeking = true;
    if (typeof position === 'undefined') {
      position = stream.position;
      seeking = false;
    } else if (!stream.seekable) {
      throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
    }
    var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
    if (!seeking) stream.position += bytesRead;
    return bytesRead;
  }),
  write: (function(stream, buffer, offset, length, position, canOwn) {
    if (length < 0 || position < 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    if ((stream.flags & 2097155) === 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    }
    if (FS.isDir(stream.node.mode)) {
      throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
    }
    if (!stream.stream_ops.write) {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    if (stream.flags & 1024) {
      FS.llseek(stream, 0, 2);
    }
    var seeking = true;
    if (typeof position === 'undefined') {
      position = stream.position;
      seeking = false;
    } else if (!stream.seekable) {
      throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
    }
    var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
    if (!seeking) stream.position += bytesWritten;
    try {
      if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
    } catch (e) {
      console.log("FS.trackingDelegate['onWriteToFile']('" + path + "') threw an exception: " + e.message);
    }
    return bytesWritten;
  }),
  allocate: (function(stream, offset, length) {
    if (offset < 0 || length <= 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
    }
    if ((stream.flags & 2097155) === 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    }
    if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
      throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
    }
    if (!stream.stream_ops.allocate) {
      throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
    }
    stream.stream_ops.allocate(stream, offset, length);
  }),
  mmap: (function(stream, buffer, offset, length, position, prot, flags) {
    if ((stream.flags & 2097155) === 1) {
      throw new FS.ErrnoError(ERRNO_CODES.EACCES);
    }
    if (!stream.stream_ops.mmap) {
      throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
    }
    return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
  }),
  ioctl: (function(stream, cmd, arg) {
    if (!stream.stream_ops.ioctl) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
    }
    return stream.stream_ops.ioctl(stream, cmd, arg);
  }),
  readFile: (function(path, opts) {
    opts = opts || {};
    opts.flags = opts.flags || 'r';
    opts.encoding = opts.encoding || 'binary';
    if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
      throw new Error('Invalid encoding type "' + opts.encoding + '"');
    }
    var ret;
    var stream = FS.open(path, opts.flags);
    var stat = FS.stat(path);
    var length = stat.size;
    var buf = new Uint8Array(length);
    FS.read(stream, buf, 0, length, 0);
    if (opts.encoding === 'utf8') {
      ret = UTF8ArrayToString(buf, 0);
    } else if (opts.encoding === 'binary') {
      ret = buf;
    }
    FS.close(stream);
    return ret;
  }),
  writeFile: (function(path, data, opts) {
    opts = opts || {};
    opts.flags = opts.flags || 'w';
    opts.encoding = opts.encoding || 'utf8';
    if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
      throw new Error('Invalid encoding type "' + opts.encoding + '"');
    }
    var stream = FS.open(path, opts.flags, opts.mode);
    if (opts.encoding === 'utf8') {
      var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
      var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
      FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
    } else if (opts.encoding === 'binary') {
      FS.write(stream, data, 0, data.length, 0, opts.canOwn);
    }
    FS.close(stream);
  }),
  cwd: (function() {
    return FS.currentPath;
  }),
  chdir: (function(path) {
    var lookup = FS.lookupPath(path, {
      follow: true
    });
    if (!FS.isDir(lookup.node.mode)) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
    }
    var err = FS.nodePermissions(lookup.node, 'x');
    if (err) {
      throw new FS.ErrnoError(err);
    }
    FS.currentPath = lookup.path;
  }),
  createDefaultDirectories: (function() {
    FS.mkdir('/tmp');
    FS.mkdir('/home');
    FS.mkdir('/home/web_user');
  }),
  createDefaultDevices: (function() {
    FS.mkdir('/dev');
    FS.registerDevice(FS.makedev(1, 3), {
      read: (function() {
        return 0;
      }),
      write: (function() {
        return 0;
      })
    });
    FS.mkdev('/dev/null', FS.makedev(1, 3));
    TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
    TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
    FS.mkdev('/dev/tty', FS.makedev(5, 0));
    FS.mkdev('/dev/tty1', FS.makedev(6, 0));
    var random_device;
    if (typeof crypto !== 'undefined') {
      var randomBuffer = new Uint8Array(1);
      random_device = (function() {
        crypto.getRandomValues(randomBuffer);
        return randomBuffer[0];
      });
    } else if (ENVIRONMENT_IS_NODE) {
      random_device = (function() {
        return require('crypto').randomBytes(1)[0];
      });
    } else {
      random_device = (function() {
        return Math.random() * 256 | 0;
      });
    }
    FS.createDevice('/dev', 'random', random_device);
    FS.createDevice('/dev', 'urandom', random_device);
    FS.mkdir('/dev/shm');
    FS.mkdir('/dev/shm/tmp');
  }),
  createStandardStreams: (function() {
    if (Module['stdin']) {
      FS.createDevice('/dev', 'stdin', Module['stdin']);
    } else {
      FS.symlink('/dev/tty', '/dev/stdin');
    }
    if (Module['stdout']) {
      FS.createDevice('/dev', 'stdout', null, Module['stdout']);
    } else {
      FS.symlink('/dev/tty', '/dev/stdout');
    }
    if (Module['stderr']) {
      FS.createDevice('/dev', 'stderr', null, Module['stderr']);
    } else {
      FS.symlink('/dev/tty1', '/dev/stderr');
    }
    var stdin = FS.open('/dev/stdin', 'r');
    HEAP32[_stdin >> 2] = FS.getPtrForStream(stdin);
    assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
    var stdout = FS.open('/dev/stdout', 'w');
    HEAP32[_stdout >> 2] = FS.getPtrForStream(stdout);
    assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
    var stderr = FS.open('/dev/stderr', 'w');
    HEAP32[_stderr >> 2] = FS.getPtrForStream(stderr);
    assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
  }),
  ensureErrnoError: (function() {
    if (FS.ErrnoError) return;
    FS.ErrnoError = function ErrnoError(errno, node) {
      this.node = node;
      this.setErrno = (function(errno) {
        this.errno = errno;
        for (var key in ERRNO_CODES) {
          if (ERRNO_CODES[key] === errno) {
            this.code = key;
            break;
          }
        }
      });
      this.setErrno(errno);
      this.message = ERRNO_MESSAGES[errno];
    };
    FS.ErrnoError.prototype = new Error;
    FS.ErrnoError.prototype.constructor = FS.ErrnoError;
    [ERRNO_CODES.ENOENT].forEach((function(code) {
      FS.genericErrors[code] = new FS.ErrnoError(code);
      FS.genericErrors[code].stack = "<generic error, no stack>";
    }));
  }),
  staticInit: (function() {
    FS.ensureErrnoError();
    FS.nameTable = new Array(4096);
    FS.mount(MEMFS, {}, '/');
    FS.createDefaultDirectories();
    FS.createDefaultDevices();
  }),
  init: (function(input, output, error) {
    assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
    FS.init.initialized = true;
    FS.ensureErrnoError();
    Module['stdin'] = input || Module['stdin'];
    Module['stdout'] = output || Module['stdout'];
    Module['stderr'] = error || Module['stderr'];
    FS.createStandardStreams();
  }),
  quit: (function() {
    FS.init.initialized = false;
    for (var i = 0; i < FS.streams.length; i++) {
      var stream = FS.streams[i];
      if (!stream) {
        continue;
      }
      FS.close(stream);
    }
  }),
  getMode: (function(canRead, canWrite) {
    var mode = 0;
    if (canRead) mode |= 292 | 73;
    if (canWrite) mode |= 146;
    return mode;
  }),
  joinPath: (function(parts, forceRelative) {
    var path = PATH.join.apply(null, parts);
    if (forceRelative && path[0] === '/') path = path.substr(1);
    return path;
  }),
  absolutePath: (function(relative, base) {
    return PATH.resolve(base, relative);
  }),
  standardizePath: (function(path) {
    return PATH.normalize(path);
  }),
  findObject: (function(path, dontResolveLastLink) {
    var ret = FS.analyzePath(path, dontResolveLastLink);
    if (ret.exists) {
      return ret.object;
    } else {
      ___setErrNo(ret.error);
      return null;
    }
  }),
  analyzePath: (function(path, dontResolveLastLink) {
    try {
      var lookup = FS.lookupPath(path, {
        follow: !dontResolveLastLink
      });
      path = lookup.path;
    } catch (e) {}
    var ret = {
      isRoot: false,
      exists: false,
      error: 0,
      name: null,
      path: null,
      object: null,
      parentExists: false,
      parentPath: null,
      parentObject: null
    };
    try {
      var lookup = FS.lookupPath(path, {
        parent: true
      });
      ret.parentExists = true;
      ret.parentPath = lookup.path;
      ret.parentObject = lookup.node;
      ret.name = PATH.basename(path);
      lookup = FS.lookupPath(path, {
        follow: !dontResolveLastLink
      });
      ret.exists = true;
      ret.path = lookup.path;
      ret.object = lookup.node;
      ret.name = lookup.node.name;
      ret.isRoot = lookup.path === "/";
    } catch (e) {
      ret.error = e.errno;
    }
    return ret;
  }),
  createFolder: (function(parent, name, canRead, canWrite) {
    var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
    var mode = FS.getMode(canRead, canWrite);
    return FS.mkdir(path, mode);
  }),
  createPath: (function(parent, path, canRead, canWrite) {
    parent = typeof parent === 'string' ? parent : FS.getPath(parent);
    var parts = path.split('/').reverse();
    while (parts.length) {
      var part = parts.pop();
      if (!part) continue;
      var current = PATH.join2(parent, part);
      try {
        FS.mkdir(current);
      } catch (e) {}
      parent = current;
    }
    return current;
  }),
  createFile: (function(parent, name, properties, canRead, canWrite) {
    var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
    var mode = FS.getMode(canRead, canWrite);
    return FS.create(path, mode);
  }),
  createDataFile: (function(parent, name, data, canRead, canWrite, canOwn) {
    var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
    var mode = FS.getMode(canRead, canWrite);
    var node = FS.create(path, mode);
    if (data) {
      if (typeof data === 'string') {
        var arr = new Array(data.length);
        for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
        data = arr;
      }
      FS.chmod(node, mode | 146);
      var stream = FS.open(node, 'w');
      FS.write(stream, data, 0, data.length, 0, canOwn);
      FS.close(stream);
      FS.chmod(node, mode);
    }
    return node;
  }),
  createDevice: (function(parent, name, input, output) {
    var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
    var mode = FS.getMode(!!input, !!output);
    if (!FS.createDevice.major) FS.createDevice.major = 64;
    var dev = FS.makedev(FS.createDevice.major++, 0);
    FS.registerDevice(dev, {
      open: (function(stream) {
        stream.seekable = false;
      }),
      close: (function(stream) {
        if (output && output.buffer && output.buffer.length) {
          output(10);
        }
      }),
      read: (function(stream, buffer, offset, length, pos) {
        var bytesRead = 0;
        for (var i = 0; i < length; i++) {
          var result;
          try {
            result = input();
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          if (result === undefined && bytesRead === 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
          }
          if (result === null || result === undefined) break;
          bytesRead++;
          buffer[offset + i] = result;
        }
        if (bytesRead) {
          stream.node.timestamp = Date.now();
        }
        return bytesRead;
      }),
      write: (function(stream, buffer, offset, length, pos) {
        for (var i = 0; i < length; i++) {
          try {
            output(buffer[offset + i]);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
        }
        if (length) {
          stream.node.timestamp = Date.now();
        }
        return i;
      })
    });
    return FS.mkdev(path, mode, dev);
  }),
  createLink: (function(parent, name, target, canRead, canWrite) {
    var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
    return FS.symlink(target, path);
  }),
  forceLoadFile: (function(obj) {
    if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
    var success = true;
    if (typeof XMLHttpRequest !== 'undefined') {
      throw new Error('Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.');
    } else if (Module['read']) {
      try {
        obj.contents = intArrayFromString(Module['read'](obj.url), true);
        obj.usedBytes = obj.contents.length;
      } catch (e) {
        success = false;
      }
    } else {
      throw new Error('Cannot load without read() or XMLHttpRequest.');
    }
    if (!success) ___setErrNo(ERRNO_CODES.EIO);
    return success;
  }),
  createLazyFile: (function(parent, name, url, canRead, canWrite) {
    function LazyUint8Array() {
      this.lengthKnown = false;
      this.chunks = [];
    }
    LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
      if (idx > this.length - 1 || idx < 0) {
        return undefined;
      }
      var chunkOffset = idx % this.chunkSize;
      var chunkNum = idx / this.chunkSize | 0;
      return this.getter(chunkNum)[chunkOffset];
    };
    LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
      this.getter = getter;
    };
    LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
      var xhr = new XMLHttpRequest;
      xhr.open('HEAD', url, false);
      xhr.send(null);
      if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + '. Status: ' + xhr.status);
      var datalength = Number(xhr.getResponseHeader('Content-length'));
      var header;
      var hasByteServing = (header = xhr.getResponseHeader('Accept-Ranges')) && header === 'bytes';
      var chunkSize = 1024 * 1024;
      if (!hasByteServing) chunkSize = datalength;
      var doXHR = (function(from, to) {
        if (from > to) throw new Error('invalid range (' + from + ', ' + to + ') or no bytes requested!');
        if (to > datalength - 1) throw new Error('only ' + datalength + ' bytes available! programmer error!');
        var xhr = new XMLHttpRequest;
        xhr.open('GET', url, false);
        if (datalength !== chunkSize) xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);
        if (typeof Uint8Array !== 'undefined') xhr.responseType = 'arraybuffer';
        if (xhr.overrideMimeType) {
          xhr.overrideMimeType('text/plain; charset=x-user-defined');
        }
        xhr.send(null);
        if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + '. Status: ' + xhr.status);
        if (xhr.response !== undefined) {
          return new Uint8Array(xhr.response || []);
        } else {
          return intArrayFromString(xhr.responseText || '', true);
        }
      });
      var lazyArray = this;
      lazyArray.setDataGetter((function(chunkNum) {
        var start = chunkNum * chunkSize;
        var end = (chunkNum + 1) * chunkSize - 1;
        end = Math.min(end, datalength - 1);
        if (typeof lazyArray.chunks[chunkNum] === 'undefined') {
          lazyArray.chunks[chunkNum] = doXHR(start, end);
        }
        if (typeof lazyArray.chunks[chunkNum] === 'undefined') throw new Error('doXHR failed!');
        return lazyArray.chunks[chunkNum];
      }));
      this._length = datalength;
      this._chunkSize = chunkSize;
      this.lengthKnown = true;
    };
    if (typeof XMLHttpRequest !== 'undefined') {
      if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
      var lazyArray = new LazyUint8Array;
      Object.defineProperty(lazyArray, 'length', {
        get: (function() {
          if (!this.lengthKnown) {
            this.cacheLength();
          }
          return this._length;
        })
      });
      Object.defineProperty(lazyArray, 'chunkSize', {
        get: (function() {
          if (!this.lengthKnown) {
            this.cacheLength();
          }
          return this._chunkSize;
        })
      });
      var properties = {
        isDevice: false,
        contents: lazyArray
      };
    } else {
      var properties = {
        isDevice: false,
        url: url
      };
    }
    var node = FS.createFile(parent, name, properties, canRead, canWrite);
    if (properties.contents) {
      node.contents = properties.contents;
    } else if (properties.url) {
      node.contents = null;
      node.url = properties.url;
    }
    Object.defineProperty(node, 'usedBytes', {
      get: (function() {
        return this.contents.length;
      })
    });
    var stream_ops = {};
    var keys = Object.keys(node.stream_ops);
    keys.forEach((function(key) {
      var fn = node.stream_ops[key];
      stream_ops[key] = function forceLoadLazyFile() {
        if (!FS.forceLoadFile(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        }
        return fn.apply(null, arguments);
      };
    }));
    stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
      if (!FS.forceLoadFile(node)) {
        throw new FS.ErrnoError(ERRNO_CODES.EIO);
      }
      var contents = stream.node.contents;
      if (position >= contents.length) return 0;
      var size = Math.min(contents.length - position, length);
      assert(size >= 0);
      if (contents.slice) {
        for (var i = 0; i < size; i++) {
          buffer[offset + i] = contents[position + i];
        }
      } else {
        for (var i = 0; i < size; i++) {
          buffer[offset + i] = contents.get(position + i);
        }
      }
      return size;
    };
    node.stream_ops = stream_ops;
    return node;
  }),
  createPreloadedFile: (function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
    Browser.init();
    var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;

    function processData(byteArray) {
      function finish(byteArray) {
        if (!dontCreateFile) {
          FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
        }
        if (onload) onload();
        removeRunDependency('cp ' + fullname);
      }
      var handled = false;
      Module['preloadPlugins'].forEach((function(plugin) {
        if (handled) return;
        if (plugin['canHandle'](fullname)) {
          plugin['handle'](byteArray, fullname, finish, (function() {
            if (onerror) onerror();
            removeRunDependency('cp ' + fullname);
          }));
          handled = true;
        }
      }));
      if (!handled) finish(byteArray);
    }
    addRunDependency('cp ' + fullname);
    if (typeof url === 'string') {
      Browser.asyncLoad(url, (function(byteArray) {
        processData(byteArray);
      }), onerror);
    } else {
      processData(url);
    }
  }),
  indexedDB: (function() {
    return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
  }),
  DB_NAME: (function() {
    return 'EM_FS_' + window.location.pathname;
  }),
  DB_VERSION: 20,
  DB_STORE_NAME: 'FILE_DATA',
  saveFilesToDB: (function(paths, onload, onerror) {
    onload = onload || (function() {});
    onerror = onerror || (function() {});
    var indexedDB = FS.indexedDB();
    try {
      var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
    } catch (e) {
      return onerror(e);
    }
    openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
      console.log('creating db');
      var db = openRequest.result;
      db.createObjectStore(FS.DB_STORE_NAME);
    };
    openRequest.onsuccess = function openRequest_onsuccess() {
      var db = openRequest.result;
      var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
      var files = transaction.objectStore(FS.DB_STORE_NAME);
      var ok = 0,
        fail = 0,
        total = paths.length;

      function finish() {
        if (fail === 0) onload();
        else onerror();
      }
      paths.forEach((function(path) {
        var putRequest = files.put(FS.analyzePath(path).object.contents, path);
        putRequest.onsuccess = function putRequest_onsuccess() {
          ok++;
          if (ok + fail === total) finish();
        };
        putRequest.onerror = function putRequest_onerror() {
          fail++;
          if (ok + fail === total) finish();
        };
      }));
      transaction.onerror = onerror;
    };
    openRequest.onerror = onerror;
  }),
  loadFilesFromDB: (function(paths, onload, onerror) {
    onload = onload || (function() {});
    onerror = onerror || (function() {});
    var indexedDB = FS.indexedDB();
    try {
      var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
    } catch (e) {
      return onerror(e);
    }
    openRequest.onupgradeneeded = onerror;
    openRequest.onsuccess = function openRequest_onsuccess() {
      var db = openRequest.result;
      try {
        var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
      } catch (e) {
        onerror(e);
        return;
      }
      var files = transaction.objectStore(FS.DB_STORE_NAME);
      var ok = 0,
        fail = 0,
        total = paths.length;

      function finish() {
        if (fail === 0) onload();
        else onerror();
      }
      paths.forEach((function(path) {
        var getRequest = files.get(path);
        getRequest.onsuccess = function getRequest_onsuccess() {
          if (FS.analyzePath(path).exists) {
            FS.unlink(path);
          }
          FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
          ok++;
          if (ok + fail === total) finish();
        };
        getRequest.onerror = function getRequest_onerror() {
          fail++;
          if (ok + fail === total) finish();
        };
      }));
      transaction.onerror = onerror;
    };
    openRequest.onerror = onerror;
  })
};

function _emscripten_set_main_loop_timing(mode, value) {
  Browser.mainLoop.timingMode = mode;
  Browser.mainLoop.timingValue = value;
  if (!Browser.mainLoop.func) {
    return 1;
  }
  if (mode === 0) {
    Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
      setTimeout(Browser.mainLoop.runner, value);
    };
    Browser.mainLoop.method = "timeout";
  } else if (mode === 1) {
    Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
      Browser.requestAnimationFrame(Browser.mainLoop.runner);
    };
    Browser.mainLoop.method = "rAF";
  }
  return 0;
}

function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg) {
  Module['noExitRuntime'] = true;
  assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  Browser.mainLoop.func = func;
  Browser.mainLoop.arg = arg;
  var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  Browser.mainLoop.runner = function Browser_mainLoop_runner() {
    if (ABORT) return;
    if (Browser.mainLoop.queue.length > 0) {
      var start = Date.now();
      var blocker = Browser.mainLoop.queue.shift();
      blocker.func(blocker.arg);
      if (Browser.mainLoop.remainingBlockers) {
        var remaining = Browser.mainLoop.remainingBlockers;
        var next = remaining % 1 === 0 ? remaining - 1 : Math.floor(remaining);
        if (blocker.counted) {
          Browser.mainLoop.remainingBlockers = next;
        } else {
          next = next + .5;
          Browser.mainLoop.remainingBlockers = (8 * remaining + next) / 9;
        }
      }
      console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms');
      Browser.mainLoop.updateStatus();
      setTimeout(Browser.mainLoop.runner, 0);
      return;
    }
    if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
    Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
    if (Browser.mainLoop.timingMode === 1 && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue !== 0) {
      Browser.mainLoop.scheduler();
      return;
    }
    if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
      Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
      Browser.mainLoop.method = "";
    }
    Browser.mainLoop.runIter((function() {
      if (typeof arg !== 'undefined') {
        Runtime.dynCall('vi', func, [arg]);
      } else {
        Runtime.dynCall('v', func);
      }
    }));
    if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
    if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
    Browser.mainLoop.scheduler();
  };
  if (fps && fps > 0) _emscripten_set_main_loop_timing(0, 1e3 / fps);
  else _emscripten_set_main_loop_timing(1, 1);
  Browser.mainLoop.scheduler();
  if (simulateInfiniteLoop) {
    throw "SimulateInfiniteLoop";
  }
}
var Browser = {
  mainLoop: {
    scheduler: null,
    method: '',
    currentlyRunningMainloop: 0,
    func: null,
    arg: 0,
    timingMode: 0,
    timingValue: 0,
    currentFrameNumber: 0,
    queue: [],
    pause: (function() {
      Browser.mainLoop.scheduler = null;
      Browser.mainLoop.currentlyRunningMainloop++;
    }),
    resume: (function() {
      Browser.mainLoop.currentlyRunningMainloop++;
      var timingMode = Browser.mainLoop.timingMode;
      var timingValue = Browser.mainLoop.timingValue;
      var func = Browser.mainLoop.func;
      Browser.mainLoop.func = null;
      _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg);
      _emscripten_set_main_loop_timing(timingMode, timingValue);
    }),
    updateStatus: (function() {
      if (Module['setStatus']) {
        var message = Module['statusMessage'] || 'Please wait...';
        var remaining = Browser.mainLoop.remainingBlockers;
        var expected = Browser.mainLoop.expectedBlockers;
        if (remaining) {
          if (remaining < expected) {
            Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
          } else {
            Module['setStatus'](message);
          }
        } else {
          Module['setStatus']('');
        }
      }
    }),
    runIter: (function(func) {
      if (ABORT) return;
      if (Module['preMainLoop']) {
        var preRet = Module['preMainLoop']();
        if (preRet === false) {
          return;
        }
      }
      try {
        func();
      } catch (e) {
        if (e instanceof ExitStatus) {
          return;
        } else {
          if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
          throw e;
        }
      }
      if (Module['postMainLoop']) Module['postMainLoop']();
    })
  },
  isFullScreen: false,
  pointerLock: false,
  moduleContextCreatedCallbacks: [],
  workers: [],
  init: (function() {
    if (!Module['preloadPlugins']) Module['preloadPlugins'] = [];
    if (Browser.initted) return;
    Browser.initted = true;
    try {
      new Blob;
      Browser.hasBlobConstructor = true;
    } catch (e) {
      Browser.hasBlobConstructor = false;
      console.log('warning: no blob constructor, cannot create blobs with mimetypes');
    }
    Browser.BlobBuilder = typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder : !Browser.hasBlobConstructor ? console.log('warning: no BlobBuilder') : null;
    Browser.URLObject = typeof window !== 'undefined' ? window.URL ? window.URL : window.webkitURL : undefined;
    if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
      console.log('warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.');
      Module.noImageDecoding = true;
    }
    var imagePlugin = {};
    imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
      return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
    };
    imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
      var b = null;
      if (Browser.hasBlobConstructor) {
        try {
          b = new Blob([byteArray], {
            type: Browser.getMimetype(name)
          });
          if (b.size !== byteArray.length) {
            b = new Blob([(new Uint8Array(byteArray)).buffer], {
              type: Browser.getMimetype(name)
            });
          }
        } catch (e) {
          Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
        }
      }
      if (!b) {
        var bb = new Browser.BlobBuilder;
        bb.append((new Uint8Array(byteArray)).buffer);
        b = bb.getBlob();
      }
      var url = Browser.URLObject.createObjectURL(b);
      var img = new Image;
      img.onload = function img_onload() {
        assert(img.complete, 'Image ' + name + ' could not be decoded');
        var canvas = document.createElement('canvas');
        canvas.width = img.width;
        canvas.height = img.height;
        var ctx = canvas.getContext('2d');
        ctx.drawImage(img, 0, 0);
        Module['preloadedImages'][name] = canvas;
        Browser.URLObject.revokeObjectURL(url);
        if (onload) onload(byteArray);
      };
      img.onerror = function img_onerror(event) {
        console.log('Image ' + url + ' could not be decoded');
        if (onerror) onerror();
      };
      img.src = url;
    };
    Module['preloadPlugins'].push(imagePlugin);
    var audioPlugin = {};
    audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
      return !Module.noAudioDecoding && name.substr(-4) in {
        '.ogg': 1,
        '.wav': 1,
        '.mp3': 1
      };
    };
    audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
      var done = false;

      function finish(audio) {
        if (done) return;
        done = true;
        Module['preloadedAudios'][name] = audio;
        if (onload) onload(byteArray);
      }

      function fail() {
        if (done) return;
        done = true;
        Module['preloadedAudios'][name] = new Audio;
        if (onerror) onerror();
      }
      if (Browser.hasBlobConstructor) {
        try {
          var b = new Blob([byteArray], {
            type: Browser.getMimetype(name)
          });
        } catch (e) {
          return fail();
        }
        var url = Browser.URLObject.createObjectURL(b);
        var audio = new Audio;
        audio.addEventListener('canplaythrough', (function() {
          finish(audio);
        }), false);
        audio.onerror = function audio_onerror(event) {
          if (done) return;
          console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');

          function encode64(data) {
            var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
            var PAD = '=';
            var ret = '';
            var leftchar = 0;
            var leftbits = 0;
            for (var i = 0; i < data.length; i++) {
              leftchar = leftchar << 8 | data[i];
              leftbits += 8;
              while (leftbits >= 6) {
                var curr = leftchar >> leftbits - 6 & 63;
                leftbits -= 6;
                ret += BASE[curr];
              }
            }
            if (leftbits === 2) {
              ret += BASE[(leftchar & 3) << 4];
              ret += PAD + PAD;
            } else if (leftbits === 4) {
              ret += BASE[(leftchar & 15) << 2];
              ret += PAD;
            }
            return ret;
          }
          audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
          finish(audio);
        };
        audio.src = url;
        Browser.safeSetTimeout((function() {
          finish(audio);
        }), 1e4);
      } else {
        return fail();
      }
    };
    Module['preloadPlugins'].push(audioPlugin);
    var canvas = Module['canvas'];

    function pointerLockChange() {
      Browser.pointerLock = document['pointerLockElement'] === canvas || document['mozPointerLockElement'] === canvas || document['webkitPointerLockElement'] === canvas || document['msPointerLockElement'] === canvas;
    }
    if (canvas) {
      canvas.requestPointerLock = canvas['requestPointerLock'] || canvas['mozRequestPointerLock'] || canvas['webkitRequestPointerLock'] || canvas['msRequestPointerLock'] || (function() {});
      canvas.exitPointerLock = document['exitPointerLock'] || document['mozExitPointerLock'] || document['webkitExitPointerLock'] || document['msExitPointerLock'] || (function() {});
      canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
      document.addEventListener('pointerlockchange', pointerLockChange, false);
      document.addEventListener('mozpointerlockchange', pointerLockChange, false);
      document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
      document.addEventListener('mspointerlockchange', pointerLockChange, false);
      if (Module['elementPointerLock']) {
        canvas.addEventListener('click', (function(ev) {
          if (!Browser.pointerLock && canvas.requestPointerLock) {
            canvas.requestPointerLock();
            ev.preventDefault();
          }
        }), false);
      }
    }
  }),
  createContext: (function(canvas, useWebGL, setInModule, webGLContextAttributes) {
    if (useWebGL && Module.ctx && canvas === Module.canvas) return Module.ctx;
    var ctx;
    var contextHandle;
    if (useWebGL) {
      var contextAttributes = {
        antialias: false,
        alpha: false
      };
      if (webGLContextAttributes) {
        for (var attribute in webGLContextAttributes) {
          contextAttributes[attribute] = webGLContextAttributes[attribute];
        }
      }
      contextHandle = GL.createContext(canvas, contextAttributes);
      if (contextHandle) {
        ctx = GL.getContext(contextHandle).GLctx;
      }
      canvas.style.backgroundColor = "black";
    } else {
      ctx = canvas.getContext('2d');
    }
    if (!ctx) return null;
    if (setInModule) {
      if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
      Module.ctx = ctx;
      if (useWebGL) GL.makeContextCurrent(contextHandle);
      Module.useWebGL = useWebGL;
      Browser.moduleContextCreatedCallbacks.forEach((function(callback) {
        callback();
      }));
      Browser.init();
    }
    return ctx;
  }),
  destroyContext: (function(canvas, useWebGL, setInModule) {}),
  fullScreenHandlersInstalled: false,
  lockPointer: undefined,
  resizeCanvas: undefined,
  requestFullScreen: (function(lockPointer, resizeCanvas) {
    Browser.lockPointer = lockPointer;
    Browser.resizeCanvas = resizeCanvas;
    if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
    if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
    var canvas = Module['canvas'];

    function fullScreenChange() {
      Browser.isFullScreen = false;
      var canvasContainer = canvas.parentNode;
      if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] || document['mozFullScreenElement'] || document['mozFullscreenElement'] || document['fullScreenElement'] || document['fullscreenElement'] || document['msFullScreenElement'] || document['msFullscreenElement'] || document['webkitCurrentFullScreenElement']) === canvasContainer) {
        canvas.cancelFullScreen = document['cancelFullScreen'] || document['mozCancelFullScreen'] || document['webkitCancelFullScreen'] || document['msExitFullscreen'] || document['exitFullscreen'] || (function() {});
        canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
        if (Browser.lockPointer) canvas.requestPointerLock();
        Browser.isFullScreen = true;
        if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
      } else {
        canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
        canvasContainer.parentNode.removeChild(canvasContainer);
        if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
      }
      if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
      Browser.updateCanvasDimensions(canvas);
    }
    if (!Browser.fullScreenHandlersInstalled) {
      Browser.fullScreenHandlersInstalled = true;
      document.addEventListener('fullscreenchange', fullScreenChange, false);
      document.addEventListener('mozfullscreenchange', fullScreenChange, false);
      document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
      document.addEventListener('MSFullscreenChange', fullScreenChange, false);
    }
    var canvasContainer = document.createElement('div');
    canvas.parentNode.insertBefore(canvasContainer, canvas);
    canvasContainer.appendChild(canvas);
    canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] || canvasContainer['mozRequestFullScreen'] || canvasContainer['msRequestFullscreen'] || (canvasContainer['webkitRequestFullScreen'] ? (function() {
      canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']);
    }) : null);
    canvasContainer.requestFullScreen();
  }),
  nextRAF: 0,
  fakeRequestAnimationFrame: (function(func) {
    var now = Date.now();
    if (Browser.nextRAF === 0) {
      Browser.nextRAF = now + 1e3 / 60;
    } else {
      while (now + 2 >= Browser.nextRAF) {
        Browser.nextRAF += 1e3 / 60;
      }
    }
    var delay = Math.max(Browser.nextRAF - now, 0);
    setTimeout(func, delay);
  }),
  requestAnimationFrame: function requestAnimationFrame(func) {
    if (typeof window === 'undefined') {
      Browser.fakeRequestAnimationFrame(func);
    } else {
      if (!window.requestAnimationFrame) {
        window.requestAnimationFrame = window['requestAnimationFrame'] || window['mozRequestAnimationFrame'] || window['webkitRequestAnimationFrame'] || window['msRequestAnimationFrame'] || window['oRequestAnimationFrame'] || Browser.fakeRequestAnimationFrame;
      }
      window.requestAnimationFrame(func);
    }
  },
  safeCallback: (function(func) {
    return (function() {
      if (!ABORT) return func.apply(null, arguments);
    });
  }),
  safeRequestAnimationFrame: (function(func) {
    return Browser.requestAnimationFrame((function() {
      if (!ABORT) func();
    }));
  }),
  safeSetTimeout: (function(func, timeout) {
    Module['noExitRuntime'] = true;
    return setTimeout((function() {
      if (!ABORT) func();
    }), timeout);
  }),
  safeSetInterval: (function(func, timeout) {
    Module['noExitRuntime'] = true;
    return setInterval((function() {
      if (!ABORT) func();
    }), timeout);
  }),
  getMimetype: (function(name) {
    return {
      'jpg': 'image/jpeg',
      'jpeg': 'image/jpeg',
      'png': 'image/png',
      'bmp': 'image/bmp',
      'ogg': 'audio/ogg',
      'wav': 'audio/wav',
      'mp3': 'audio/mpeg'
    }[name.substr(name.lastIndexOf('.') + 1)];
  }),
  getUserMedia: (function(func) {
    if (!window.getUserMedia) {
      window.getUserMedia = navigator['getUserMedia'] || navigator['mozGetUserMedia'];
    }
    window.getUserMedia(func);
  }),
  getMovementX: (function(event) {
    return event['movementX'] || event['mozMovementX'] || event['webkitMovementX'] || 0;
  }),
  getMovementY: (function(event) {
    return event['movementY'] || event['mozMovementY'] || event['webkitMovementY'] || 0;
  }),
  getMouseWheelDelta: (function(event) {
    var delta = 0;
    switch (event.type) {
      case 'DOMMouseScroll':
        delta = event.detail;
        break;
      case 'mousewheel':
        delta = event.wheelDelta;
        break;
      case 'wheel':
        delta = event['deltaY'];
        break;
      default:
        throw 'unrecognized mouse wheel event: ' + event.type;
    }
    return delta;
  }),
  mouseX: 0,
  mouseY: 0,
  mouseMovementX: 0,
  mouseMovementY: 0,
  touches: {},
  lastTouches: {},
  calculateMouseEvent: (function(event) {
    if (Browser.pointerLock) {
      if (event.type !== 'mousemove' && 'mozMovementX' in event) {
        Browser.mouseMovementX = Browser.mouseMovementY = 0;
      } else {
        Browser.mouseMovementX = Browser.getMovementX(event);
        Browser.mouseMovementY = Browser.getMovementY(event);
      }
      // FIXED NaN error
      if (typeof SDL !== 'undefined' && SDL.mouseX !== undefined && SDL.mouseX !== undefined) {
        Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
        Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
      } else {
        Browser.mouseX += Browser.mouseMovementX;
        Browser.mouseY += Browser.mouseMovementY;
      }
    } else {
      var rect = Module['canvas'].getBoundingClientRect();
      var cw = Module['canvas'].width;
      var ch = Module['canvas'].height;
      var scrollX = typeof window.scrollX !== 'undefined' ? window.scrollX : window.pageXOffset;
      var scrollY = typeof window.scrollY !== 'undefined' ? window.scrollY : window.pageYOffset;
      if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
        var touch = event.touch;
        if (touch === undefined) {
          return;
        }
        var adjustedX = touch.pageX - (scrollX + rect.left);
        var adjustedY = touch.pageY - (scrollY + rect.top);
        adjustedX = adjustedX * (cw / rect.width);
        adjustedY = adjustedY * (ch / rect.height);
        var coords = {
          x: adjustedX,
          y: adjustedY
        };
        if (event.type === 'touchstart') {
          Browser.lastTouches[touch.identifier] = coords;
          Browser.touches[touch.identifier] = coords;
        } else if (event.type === 'touchend' || event.type === 'touchmove') {
          Browser.lastTouches[touch.identifier] = Browser.touches[touch.identifier];
          Browser.touches[touch.identifier] = {
            x: adjustedX,
            y: adjustedY
          };
        }
        return;
      }
      var x = event.pageX - (scrollX + rect.left);
      var y = event.pageY - (scrollY + rect.top);
      x = x * (cw / rect.width);
      y = y * (ch / rect.height);
      Browser.mouseMovementX = x - Browser.mouseX;
      Browser.mouseMovementY = y - Browser.mouseY;
      Browser.mouseX = x;
      Browser.mouseY = y;
    }
  }),
  xhrLoad: (function(url, onload, onerror) {
    var xhr = new XMLHttpRequest;
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status === 200 || xhr.status === 0 && xhr.response) {
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  }),
  asyncLoad: (function(url, onload, onerror, noRunDep) {
    Browser.xhrLoad(url, (function(arrayBuffer) {
      assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
      onload(new Uint8Array(arrayBuffer));
      if (!noRunDep) removeRunDependency('al ' + url);
    }), (function(event) {
      if (onerror) {
        onerror();
      } else {
        throw 'Loading data file "' + url + '" failed.';
      }
    }));
    if (!noRunDep) addRunDependency('al ' + url);
  }),
  resizeListeners: [],
  updateResizeListeners: (function() {
    var canvas = Module['canvas'];
    Browser.resizeListeners.forEach((function(listener) {
      listener(canvas.width, canvas.height);
    }));
  }),
  setCanvasSize: (function(width, height, noUpdates) {
    var canvas = Module['canvas'];
    Browser.updateCanvasDimensions(canvas, width, height);
    if (!noUpdates) Browser.updateResizeListeners();
  }),
  windowedWidth: 0,
  windowedHeight: 0,
  setFullScreenCanvasSize: (function() {
    if (typeof SDL !== 'undefined') {
      var flags = HEAPU32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2];
      flags = flags | 8388608;
      HEAP32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2] = flags;
    }
    Browser.updateResizeListeners();
  }),
  setWindowedCanvasSize: (function() {
    if (typeof SDL !== 'undefined') {
      var flags = HEAPU32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2];
      flags = flags & ~8388608;
      HEAP32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2] = flags;
    }
    Browser.updateResizeListeners();
  }),
  updateCanvasDimensions: (function(canvas, wNative, hNative) {
    if (wNative && hNative) {
      canvas.widthNative = wNative;
      canvas.heightNative = hNative;
    } else {
      wNative = canvas.widthNative;
      hNative = canvas.heightNative;
    }
    var w = wNative;
    var h = hNative;
    if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
      if (w / h < Module['forcedAspectRatio']) {
        w = Math.round(h * Module['forcedAspectRatio']);
      } else {
        h = Math.round(w / Module['forcedAspectRatio']);
      }
    }
    if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] || document['mozFullScreenElement'] || document['mozFullscreenElement'] || document['fullScreenElement'] || document['fullscreenElement'] || document['msFullScreenElement'] || document['msFullscreenElement'] || document['webkitCurrentFullScreenElement']) === canvas.parentNode && typeof screen !== 'undefined') {
      var factor = Math.min(screen.width / w, screen.height / h);
      w = Math.round(w * factor);
      h = Math.round(h * factor);
    }
    if (Browser.resizeCanvas) {
      if (canvas.width !== w) canvas.width = w;
      if (canvas.height !== h) canvas.height = h;
      if (typeof canvas.style !== 'undefined') {
        canvas.style.removeProperty('width');
        canvas.style.removeProperty('height');
      }
    } else {
      if (canvas.width !== wNative) canvas.width = wNative;
      if (canvas.height !== hNative) canvas.height = hNative;
      if (typeof canvas.style !== 'undefined') {
        if (w !== wNative || h !== hNative) {
          canvas.style.setProperty('width', w + 'px', 'important');
          canvas.style.setProperty('height', h + 'px', 'important');
        } else {
          canvas.style.removeProperty('width');
          canvas.style.removeProperty('height');
        }
      }
    }

    Module['dimensionsUpdate'] && Module['dimensionsUpdate'](w, h);
  }),
  wgetRequests: {},
  nextWgetRequestHandle: 0,
  getNextWgetRequestHandle: (function() {
    var handle = Browser.nextWgetRequestHandle;
    Browser.nextWgetRequestHandle++;
    return handle;
  })
};

function _malloc(bytes) {
  var ptr = Runtime.dynamicAlloc(bytes + 8);
  return ptr + 8 & 4294967288;
}
Module['_malloc'] = _malloc;

function _free() {}
Module['_free'] = _free;
var _environ = allocate(1, 'i32*', ALLOC_STATIC);
var ___environ = _environ;

function ___buildEnvironment(env) {
  var MAX_ENV_VALUES = 64;
  var TOTAL_ENV_SIZE = 1024;
  var poolPtr;
  var envPtr;
  if (!___buildEnvironment.called) {
    ___buildEnvironment.called = true;
    ENV['USER'] = 'web_user';
    ENV['PATH'] = '/';
    ENV['PWD'] = '/';
    ENV['HOME'] = '/home/web_user';
    ENV['LANG'] = 'C';
    ENV['_'] = Module['thisProgram'];
    poolPtr = allocate(TOTAL_ENV_SIZE, 'i8', ALLOC_STATIC);
    envPtr = allocate(MAX_ENV_VALUES * 4, 'i8*', ALLOC_STATIC);
    HEAP32[envPtr >> 2] = poolPtr;
    HEAP32[_environ >> 2] = envPtr;
  } else {
    envPtr = HEAP32[_environ >> 2];
    poolPtr = HEAP32[envPtr >> 2];
  }
  var strings = [];
  var totalSize = 0;
  for (var key in env) {
    if (typeof env[key] === 'string') {
      var line = key + '=' + env[key];
      strings.push(line);
      totalSize += line.length;
    }
  }
  if (totalSize > TOTAL_ENV_SIZE) {
    throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
  }
  var ptrSize = 4;
  for (var i = 0; i < strings.length; i++) {
    var line = strings[i];
    writeAsciiToMemory(line, poolPtr);
    HEAP32[envPtr + i * ptrSize >> 2] = poolPtr;
    poolPtr += line.length + 1;
  }
  HEAP32[envPtr + strings.length * ptrSize >> 2] = 0;
}
var ENV = {};

function _getenv(name) {
  if (name === 0) return 0;
  name = Pointer_stringify(name);
  if (!ENV.hasOwnProperty(name)) return 0;
  if (_getenv.ret) _free(_getenv.ret);
  _getenv.ret = allocate(intArrayFromString(ENV[name]), 'i8', ALLOC_NORMAL);
  return _getenv.ret;
}

function _putenv(string) {
  if (string === 0) {
    ___setErrNo(ERRNO_CODES.EINVAL);
    return -1;
  }
  string = Pointer_stringify(string);
  var splitPoint = string.indexOf('=');
  if (string === '' || string.indexOf('=') === -1) {
    ___setErrNo(ERRNO_CODES.EINVAL);
    return -1;
  }
  var name = string.slice(0, splitPoint);
  var value = string.slice(splitPoint + 1);
  if (!(name in ENV) || ENV[name] !== value) {
    ENV[name] = value;
    ___buildEnvironment(ENV);
  }
  return 0;
}

function _SDL_RWFromConstMem(mem, size) {
  var id = SDL.rwops.length;
  SDL.rwops.push({
    bytes: mem,
    count: size
  });
  return id;
}

function _TTF_FontHeight(font) {
  var fontData = SDL.fonts[font];
  return fontData.size;
}

function _TTF_SizeText(font, text, w, h) {
  var fontData = SDL.fonts[font];
  if (w) {
    HEAP32[w >> 2] = SDL.estimateTextWidth(fontData, Pointer_stringify(text));
  }
  if (h) {
    HEAP32[h >> 2] = fontData.size;
  }
  return 0;
}

function _TTF_RenderText_Solid(font, text, color) {
  text = Pointer_stringify(text) || ' ';
  var fontData = SDL.fonts[font];
  var w = SDL.estimateTextWidth(fontData, text);
  var h = fontData.size;
  var color = SDL.loadColorToCSSRGB(color);
  var fontString = h + 'px ' + fontData.name;
  var surf = SDL.makeSurface(w, h, 0, false, 'text:' + text);
  var surfData = SDL.surfaces[surf];
  surfData.ctx.save();
  surfData.ctx.fillStyle = color;
  surfData.ctx.font = fontString;
  surfData.ctx.textBaseline = 'top';
  surfData.ctx.fillText(text, 0, 0);
  surfData.ctx.restore();
  return surf;
}

function _Mix_HaltMusic() {
  var audio = SDL.music.audio;
  if (audio) {
    audio.src = audio.src;
    audio.currentPosition = 0;
    audio.pause();
  }
  SDL.music.audio = null;
  if (SDL.hookMusicFinished) {
    Runtime.dynCall('v', SDL.hookMusicFinished);
  }
  return 0;
}

function _Mix_PlayMusic(id, loops) {
  if (SDL.music.audio) {
    if (!SDL.music.audio.paused) Module.printErr('Music is already playing. ' + SDL.music.source);
    SDL.music.audio.pause();
  }
  var info = SDL.audios[id];
  var audio;
  if (info.webAudio) {
    audio = {};
    audio.resource = info;
    audio.paused = false;
    audio.currentPosition = 0;
    audio.play = (function() {
      SDL.playWebAudio(this);
    });
    audio.pause = (function() {
      SDL.pauseWebAudio(this);
    });
  } else if (info.audio) {
    audio = info.audio;
  }
  audio['onended'] = (function() {
    if (SDL.music.audio === this) _Mix_HaltMusic();
  });
  audio.loop = loops !== 0;
  audio.volume = SDL.music.volume;
  SDL.music.audio = audio;
  audio.play();
  return 0;
}

function _Mix_FreeChunk(id) {
  SDL.audios[id] = null;
}

function _Mix_LoadWAV_RW(rwopsID, freesrc) {
  var rwops = SDL.rwops[rwopsID];
  if (rwops === undefined) return 0;
  var filename = '';
  var audio;
  var webAudio;
  var bytes;
  if (rwops.filename !== undefined) {
    filename = PATH.resolve(rwops.filename);
    var raw = Module['preloadedAudios'][filename];
    if (!raw) {
      if (raw === null) Module.printErr('Trying to reuse preloaded audio, but freePreloadedMediaOnUse is set!');
      if (!Module.noAudioDecoding) Runtime.warnOnce('Cannot find preloaded audio ' + filename);
      try {
        bytes = FS.readFile(filename);
      } catch (e) {
        Module.printErr("Couldn't find file for: " + filename);
        return 0;
      }
    }
    if (Module['freePreloadedMediaOnUse']) {
      Module['preloadedAudios'][filename] = null;
    }
    audio = raw;
  } else if (rwops.bytes !== undefined) {
    if (SDL.webAudioAvailable()) bytes = HEAPU8.buffer.slice(rwops.bytes, rwops.bytes + rwops.count);
    else bytes = HEAPU8.subarray(rwops.bytes, rwops.bytes + rwops.count);
  } else {
    return 0;
  }
  var arrayBuffer = bytes ? bytes.buffer || bytes : bytes;
  var canPlayWithWebAudio = Module['SDL_canPlayWithWebAudio'] === undefined || Module['SDL_canPlayWithWebAudio'](filename, arrayBuffer);
  if (bytes !== undefined && SDL.webAudioAvailable() && canPlayWithWebAudio) {
    audio = undefined;
    webAudio = {};
    webAudio.onDecodeComplete = [];

    function onDecodeComplete(data) {
      webAudio.decodedBuffer = data;
      webAudio.onDecodeComplete.forEach((function(e) {
        e();
      }));
      webAudio.onDecodeComplete = undefined;
    }
    SDL.audioContext['decodeAudioData'](arrayBuffer, onDecodeComplete);
  } else if (audio === undefined && bytes) {
    var blob = new Blob([bytes], {
      type: rwops.mimetype
    });
    var url = URL.createObjectURL(blob);
    audio = new Audio;
    audio.src = url;
    audio.mozAudioChannelType = "content";
  }
  var id = SDL.audios.length;
  SDL.audios.push({
    source: filename,
    audio: audio,
    webAudio: webAudio
  });
  return id;
}

function _Mix_PlayChannel(channel, id, loops) {
  var info = SDL.audios[id];
  if (!info) return -1;
  if (!info.audio && !info.webAudio) return -1;
  if (channel === -1) {
    for (var i = SDL.channelMinimumNumber; i < SDL.numChannels; i++) {
      if (!SDL.channels[i].audio) {
        channel = i;
        break;
      }
    }
    if (channel === -1) {
      Module.printErr('All ' + SDL.numChannels + ' channels in use!');
      return -1;
    }
  }
  var channelInfo = SDL.channels[channel];
  var audio;
  if (info.webAudio) {
    audio = {};
    audio.resource = info;
    audio.paused = false;
    audio.currentPosition = 0;
    audio.play = (function() {
      SDL.playWebAudio(this);
    });
    audio.pause = (function() {
      SDL.pauseWebAudio(this);
    });
  } else {
    audio = info.audio.cloneNode(true);
    audio.numChannels = info.audio.numChannels;
    audio.frequency = info.audio.frequency;
  }
  audio['onended'] = function SDL_audio_onended() {
    if (channelInfo.audio === this) {
      channelInfo.audio.paused = true;
      channelInfo.audio = null;
    }
    if (SDL.channelFinished) Runtime.getFuncWrapper(SDL.channelFinished, 'vi')(channel);
  };
  channelInfo.audio = audio;
  audio.loop = loops !== 0;
  audio.volume = channelInfo.volume;
  audio.play();
  return channel;
}

function _SDL_PauseAudio(pauseOn) {
  if (!SDL.audio) {
    return;
  }
  if (pauseOn) {
    if (SDL.audio.timer !== undefined) {
      clearTimeout(SDL.audio.timer);
      SDL.audio.numAudioTimersPending = 0;
      SDL.audio.timer = undefined;
    }
  } else if (!SDL.audio.timer) {
    SDL.audio.numAudioTimersPending = 1;
    SDL.audio.timer = Browser.safeSetTimeout(SDL.audio.caller, 1);
  }
  SDL.audio.paused = pauseOn;
}

function _SDL_CloseAudio() {
  if (SDL.audio) {
    _SDL_PauseAudio(1);
    _free(SDL.audio.buffer);
    SDL.audio = null;
    SDL.allocateChannels(0);
  }
}

function _SDL_LockSurface(surf) {
  var surfData = SDL.surfaces[surf];
  surfData.locked++;
  if (surfData.locked > 1) return 0;
  if (!surfData.buffer) {
    surfData.buffer = _malloc(surfData.width * surfData.height * 4);
    HEAP32[surf + 20 >> 2] = surfData.buffer;
  }
  HEAP32[surf + 20 >> 2] = surfData.buffer;
  if (surf === SDL.screen && Module.screenIsReadOnly && surfData.image) return 0;
  if (SDL.defaults.discardOnLock) {
    if (!surfData.image) {
      surfData.image = surfData.ctx.createImageData(surfData.width, surfData.height);
    }
    if (!SDL.defaults.opaqueFrontBuffer) return;
  } else {
    surfData.image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
  }
  if (surf === SDL.screen && SDL.defaults.opaqueFrontBuffer) {
    var data = surfData.image.data;
    var num = data.length;
    for (var i = 0; i < num / 4; i++) {
      data[i * 4 + 3] = 255;
    }
  }
  if (SDL.defaults.copyOnLock && !SDL.defaults.discardOnLock) {
    if (surfData.isFlagSet(2097152)) {
      throw 'CopyOnLock is not supported for SDL_LockSurface with SDL_HWPALETTE flag set' + (new Error).stack;
    } else {
      HEAPU8.set(surfData.image.data, surfData.buffer);
    }
  }
  return 0;
}

function _SDL_FreeRW(rwopsID) {
  SDL.rwops[rwopsID] = null;
  while (SDL.rwops.length > 0 && SDL.rwops[SDL.rwops.length - 1] === null) {
    SDL.rwops.pop();
  }
}

function _IMG_Load_RW(rwopsID, freeSrc) {
  try {
    function cleanup() {
      if (rwops && freeSrc) _SDL_FreeRW(rwopsID);
    }

    function addCleanup(func) {
      var old = cleanup;
      cleanup = function added_cleanup() {
        old();
        func();
      };
    }

    function callStbImage(func, params) {
      var x = Module['_malloc'](4);
      var y = Module['_malloc'](4);
      var comp = Module['_malloc'](4);
      addCleanup((function() {
        Module['_free'](x);
        Module['_free'](y);
        Module['_free'](comp);
        if (data) Module['_stbi_image_free'](data);
      }));
      var data = Module['_' + func].apply(null, params.concat([x, y, comp, 0]));
      if (!data) return null;
      return {
        rawData: true,
        data: data,
        width: HEAP32[x >> 2],
        height: HEAP32[y >> 2],
        size: HEAP32[x >> 2] * HEAP32[y >> 2] * HEAP32[comp >> 2],
        bpp: HEAP32[comp >> 2]
      };
    }
    var rwops = SDL.rwops[rwopsID];
    if (rwops === undefined) {
      return 0;
    }
    var filename = rwops.filename;
    if (filename === undefined) {
      Runtime.warnOnce('Only file names that have been preloaded are supported for IMG_Load_RW. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js)');
      return 0;
    }
    if (!raw) {
      filename = PATH.resolve(filename);
      var raw = Module['preloadedImages'][filename];
      if (!raw) {
        if (raw === null) Module.printErr('Trying to reuse preloaded image, but freePreloadedMediaOnUse is set!');
        Runtime.warnOnce('Cannot find preloaded image ' + filename);
        Runtime.warnOnce('Cannot find preloaded image ' + filename + '. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js)');
        return 0;
      } else if (Module['freePreloadedMediaOnUse']) {
        Module['preloadedImages'][filename] = null;
      }
    }
    var surf = SDL.makeSurface(raw.width, raw.height, 0, false, 'load:' + filename);
    var surfData = SDL.surfaces[surf];
    surfData.ctx.globalCompositeOperation = 'copy';
    if (!raw.rawData) {
      surfData.ctx.drawImage(raw, 0, 0, raw.width, raw.height, 0, 0, raw.width, raw.height);
    } else {
      var imageData = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
      if (raw.bpp === 4) {
        imageData.data.set(HEAPU8.subarray(raw.data, raw.data + raw.size));
      } else if (raw.bpp === 3) {
        var pixels = raw.size / 3;
        var data = imageData.data;
        var sourcePtr = raw.data;
        var destPtr = 0;
        for (var i = 0; i < pixels; i++) {
          data[destPtr++] = HEAPU8[sourcePtr++ >> 0];
          data[destPtr++] = HEAPU8[sourcePtr++ >> 0];
          data[destPtr++] = HEAPU8[sourcePtr++ >> 0];
          data[destPtr++] = 255;
        }
      } else if (raw.bpp === 1) {
        var pixels = raw.size;
        var data = imageData.data;
        var sourcePtr = raw.data;
        var destPtr = 0;
        for (var i = 0; i < pixels; i++) {
          var value = HEAPU8[sourcePtr++ >> 0];
          data[destPtr++] = value;
          data[destPtr++] = value;
          data[destPtr++] = value;
          data[destPtr++] = 255;
        }
      } else {
        Module.printErr('cannot handle bpp ' + raw.bpp);
        return 0;
      }
      surfData.ctx.putImageData(imageData, 0, 0);
    }
    surfData.ctx.globalCompositeOperation = 'source-over';
    _SDL_LockSurface(surf);
    surfData.locked--;
    if (SDL.GL) {
      surfData.canvas = surfData.ctx = null;
    }
    return surf;
  } finally {
    cleanup();
  }
}

function _SDL_RWFromFile(_name, mode) {
  var id = SDL.rwops.length;
  var name = Pointer_stringify(_name);
  SDL.rwops.push({
    filename: name,
    mimetype: Browser.getMimetype(name)
  });
  return id;
}

function _IMG_Load(filename) {
  var rwops = _SDL_RWFromFile(filename);
  var result = _IMG_Load_RW(rwops, 1);
  return result;
}

function _SDL_UpperBlitScaled(src, srcrect, dst, dstrect) {
  return SDL.blitSurface(src, srcrect, dst, dstrect, true);
}

function _SDL_UpperBlit(src, srcrect, dst, dstrect) {
  return SDL.blitSurface(src, srcrect, dst, dstrect, false);
}

function _SDL_GetTicks() {
  return Date.now() - SDL.startTime | 0;
}
var SDL = {
  defaults: {
    width: 320,
    height: 200,
    copyOnLock: true,
    discardOnLock: false,
    opaqueFrontBuffer: true
  },
  version: null,
  surfaces: {},
  canvasPool: [],
  events: [],
  fonts: [null],
  audios: [null],
  rwops: [null],
  music: {
    audio: null,
    volume: 1
  },
  mixerFrequency: 22050,
  mixerFormat: 32784,
  mixerNumChannels: 2,
  mixerChunkSize: 1024,
  channelMinimumNumber: 0,
  GL: false,
  glAttributes: {
    0: 3,
    1: 3,
    2: 2,
    3: 0,
    4: 0,
    5: 1,
    6: 16,
    7: 0,
    8: 0,
    9: 0,
    10: 0,
    11: 0,
    12: 0,
    13: 0,
    14: 0,
    15: 1,
    16: 0,
    17: 0,
    18: 0
  },
  keyboardState: null,
  keyboardMap: {},
  canRequestFullscreen: false,
  isRequestingFullscreen: false,
  textInput: false,
  startTime: null,
  initFlags: 0,
  buttonState: 0,
  modState: 0,
  DOMButtons: [0, 0, 0],
  DOMEventToSDLEvent: {},
  TOUCH_DEFAULT_ID: 0,
  eventHandler: null,
  eventHandlerContext: null,
  keyCodes: {
    16: 1249,
    17: 1248,
    18: 1250,
    20: 1081,
    33: 1099,
    34: 1102,
    35: 1101,
    36: 1098,
    37: 1104,
    38: 1106,
    39: 1103,
    40: 1105,
    44: 316,
    45: 1097,
    46: 127,
    91: 1251,
    93: 1125,
    96: 1122,
    97: 1113,
    98: 1114,
    99: 1115,
    100: 1116,
    101: 1117,
    102: 1118,
    103: 1119,
    104: 1120,
    105: 1121,
    106: 1109,
    107: 1111,
    109: 1110,
    110: 1123,
    111: 1108,
    112: 1082,
    113: 1083,
    114: 1084,
    115: 1085,
    116: 1086,
    117: 1087,
    118: 1088,
    119: 1089,
    120: 1090,
    121: 1091,
    122: 1092,
    123: 1093,
    124: 1128,
    125: 1129,
    126: 1130,
    127: 1131,
    128: 1132,
    129: 1133,
    130: 1134,
    131: 1135,
    132: 1136,
    133: 1137,
    134: 1138,
    135: 1139,
    144: 1107,
    160: 94,
    161: 33,
    162: 34,
    163: 35,
    164: 36,
    165: 37,
    166: 38,
    167: 95,
    168: 40,
    169: 41,
    170: 42,
    171: 43,
    172: 124,
    173: 45,
    174: 123,
    175: 125,
    176: 126,
    181: 127,
    182: 129,
    183: 128,
    188: 44,
    190: 46,
    191: 47,
    192: 96,
    219: 91,
    220: 92,
    221: 93,
    222: 39
  },
  scanCodes: {
    8: 42,
    9: 43,
    13: 40,
    27: 41,
    32: 44,
    35: 204,
    39: 53,
    44: 54,
    46: 55,
    47: 56,
    48: 39,
    49: 30,
    50: 31,
    51: 32,
    52: 33,
    53: 34,
    54: 35,
    55: 36,
    56: 37,
    57: 38,
    58: 203,
    59: 51,
    61: 46,
    91: 47,
    92: 49,
    93: 48,
    96: 52,
    97: 4,
    98: 5,
    99: 6,
    100: 7,
    101: 8,
    102: 9,
    103: 10,
    104: 11,
    105: 12,
    106: 13,
    107: 14,
    108: 15,
    109: 16,
    110: 17,
    111: 18,
    112: 19,
    113: 20,
    114: 21,
    115: 22,
    116: 23,
    117: 24,
    118: 25,
    119: 26,
    120: 27,
    121: 28,
    122: 29,
    127: 76,
    305: 224,
    308: 226,
    316: 70
  },
  loadRect: (function(rect) {
    return {
      x: HEAP32[rect + 0 >> 2],
      y: HEAP32[rect + 4 >> 2],
      w: HEAP32[rect + 8 >> 2],
      h: HEAP32[rect + 12 >> 2]
    };
  }),
  updateRect: (function(rect, r) {
    HEAP32[rect >> 2] = r.x;
    HEAP32[rect + 4 >> 2] = r.y;
    HEAP32[rect + 8 >> 2] = r.w;
    HEAP32[rect + 12 >> 2] = r.h;
  }),
  intersectionOfRects: (function(first, second) {
    var leftX = Math.max(first.x, second.x);
    var leftY = Math.max(first.y, second.y);
    var rightX = Math.min(first.x + first.w, second.x + second.w);
    var rightY = Math.min(first.y + first.h, second.y + second.h);
    return {
      x: leftX,
      y: leftY,
      w: Math.max(leftX, rightX) - leftX,
      h: Math.max(leftY, rightY) - leftY
    };
  }),
  checkPixelFormat: (function(fmt) {}),
  loadColorToCSSRGB: (function(color) {
    var rgba = HEAP32[color >> 2];
    return 'rgb(' + (rgba & 255) + ',' + (rgba >> 8 & 255) + ',' + (rgba >> 16 & 255) + ")";
  }),
  loadColorToCSSRGBA: (function(color) {
    var rgba = HEAP32[color >> 2];
    return 'rgba(' + (rgba & 255) + ',' + (rgba >> 8 & 255) + ',' + (rgba >> 16 & 255) + ',' + (rgba >> 24 & 255) / 255 + ")";
  }),
  translateColorToCSSRGBA: (function(rgba) {
    return 'rgba(' + (rgba & 255) + ',' + (rgba >> 8 & 255) + ',' + (rgba >> 16 & 255) + ',' + (rgba >>> 24) / 255 + ")";
  }),
  translateRGBAToCSSRGBA: (function(r, g, b, a) {
    return 'rgba(' + (r & 255) + ',' + (g & 255) + ',' + (b & 255) + ',' + (a & 255) / 255 + ")";
  }),
  translateRGBAToColor: (function(r, g, b, a) {
    return r | g << 8 | b << 16 | a << 24;
  }),
  makeSurface: (function(width, height, flags, usePageCanvas, source, rmask, gmask, bmask, amask) {
    flags = flags || 0;
    var is_SDL_HWSURFACE = flags & 1;
    var is_SDL_HWPALETTE = flags & 2097152;
    var is_SDL_OPENGL = flags & 67108864;
    var surf = _malloc(60);
    var pixelFormat = _malloc(44);
    var bpp = is_SDL_HWPALETTE ? 1 : 4;
    var buffer = 0;
    if (!is_SDL_HWSURFACE && !is_SDL_OPENGL) {
      buffer = _malloc(width * height * 4);
    }
    HEAP32[surf >> 2] = flags;
    HEAP32[surf + 4 >> 2] = pixelFormat;
    HEAP32[surf + 8 >> 2] = width;
    HEAP32[surf + 12 >> 2] = height;
    HEAP32[surf + 16 >> 2] = width * bpp;
    HEAP32[surf + 20 >> 2] = buffer;
    HEAP32[surf + 36 >> 2] = 0;
    HEAP32[surf + 40 >> 2] = 0;
    HEAP32[surf + 44 >> 2] = Module['canvas'].width;
    HEAP32[surf + 48 >> 2] = Module['canvas'].height;
    HEAP32[surf + 56 >> 2] = 1;
    HEAP32[pixelFormat >> 2] = -2042224636;
    HEAP32[pixelFormat + 4 >> 2] = 0;
    HEAP8[pixelFormat + 8 >> 0] = bpp * 8;
    HEAP8[pixelFormat + 9 >> 0] = bpp;
    HEAP32[pixelFormat + 12 >> 2] = rmask || 255;
    HEAP32[pixelFormat + 16 >> 2] = gmask || 65280;
    HEAP32[pixelFormat + 20 >> 2] = bmask || 16711680;
    HEAP32[pixelFormat + 24 >> 2] = amask || 4278190080;
    SDL.GL = SDL.GL || is_SDL_OPENGL;
    var canvas;
    if (!usePageCanvas) {
      if (SDL.canvasPool.length > 0) {
        canvas = SDL.canvasPool.pop();
      } else {
        canvas = document.createElement('canvas');
      }
      var err = new Error('+');
      console.log('setting width to', width, height, err.stack);
      canvas.width = width;
      canvas.height = height;
    } else {
      canvas = Module['canvas'];
    }
    var webGLContextAttributes = {
      antialias: SDL.glAttributes[13] !== 0 && SDL.glAttributes[14] > 1,
      depth: SDL.glAttributes[6] > 0,
      stencil: SDL.glAttributes[7] > 0
    };
    var ctx = Browser.createContext(canvas, is_SDL_OPENGL, usePageCanvas, webGLContextAttributes);
    SDL.surfaces[surf] = {
      width: width,
      height: height,
      canvas: canvas,
      ctx: ctx,
      surf: surf,
      buffer: buffer,
      pixelFormat: pixelFormat,
      alpha: 255,
      flags: flags,
      locked: 0,
      usePageCanvas: usePageCanvas,
      source: source,
      isFlagSet: (function(flag) {
        return flags & flag;
      })
    };
    return surf;
  }),
  copyIndexedColorData: (function(surfData, rX, rY, rW, rH) {
    if (!surfData.colors) {
      return;
    }
    var fullWidth = Module['canvas'].width;
    var fullHeight = Module['canvas'].height;
    var startX = rX || 0;
    var startY = rY || 0;
    var endX = (rW || fullWidth - startX) + startX;
    var endY = (rH || fullHeight - startY) + startY;
    var buffer = surfData.buffer;
    if (!surfData.image.data32) {
      surfData.image.data32 = new Uint32Array(surfData.image.data.buffer);
    }
    var data32 = surfData.image.data32;
    var colors32 = surfData.colors32;
    for (var y = startY; y < endY; ++y) {
      var base = y * fullWidth;
      for (var x = startX; x < endX; ++x) {
        data32[base + x] = colors32[HEAPU8[buffer + base + x >> 0]];
      }
    }
  }),
  freeSurface: (function(surf) {
    var refcountPointer = surf + 56;
    var refcount = HEAP32[refcountPointer >> 2];
    if (refcount > 1) {
      HEAP32[refcountPointer >> 2] = refcount - 1;
      return;
    }
    var info = SDL.surfaces[surf];
    if (!info.usePageCanvas && info.canvas) SDL.canvasPool.push(info.canvas);
    if (info.buffer) _free(info.buffer);
    _free(info.pixelFormat);
    _free(surf);
    SDL.surfaces[surf] = null;
    if (surf === SDL.screen) {
      SDL.screen = null;
    }
  }),
  blitSurface__deps: ['SDL_LockSurface'],
  blitSurface: (function(src, srcrect, dst, dstrect, scale) {
    var srcData = SDL.surfaces[src];
    var dstData = SDL.surfaces[dst];
    var sr, dr;
    if (srcrect) {
      sr = SDL.loadRect(srcrect);
    } else {
      sr = {
        x: 0,
        y: 0,
        w: srcData.width,
        h: srcData.height
      };
    }
    if (dstrect) {
      dr = SDL.loadRect(dstrect);
    } else {
      dr = {
        x: 0,
        y: 0,
        w: srcData.width,
        h: srcData.height
      };
    }
    if (dstData.clipRect) {
      var widthScale = !scale || sr.w === 0 ? 1 : sr.w / dr.w;
      var heightScale = !scale || sr.h === 0 ? 1 : sr.h / dr.h;
      dr = SDL.intersectionOfRects(dstData.clipRect, dr);
      sr.w = dr.w * widthScale;
      sr.h = dr.h * heightScale;
      if (dstrect) {
        SDL.updateRect(dstrect, dr);
      }
    }
    var blitw, blith;
    if (scale) {
      blitw = dr.w;
      blith = dr.h;
    } else {
      blitw = sr.w;
      blith = sr.h;
    }
    if (sr.w === 0 || sr.h === 0 || blitw === 0 || blith === 0) {
      return 0;
    }
    var oldAlpha = dstData.ctx.globalAlpha;
    dstData.ctx.globalAlpha = srcData.alpha / 255;
    dstData.ctx.drawImage(srcData.canvas, sr.x, sr.y, sr.w, sr.h, dr.x, dr.y, blitw, blith);
    dstData.ctx.globalAlpha = oldAlpha;
    if (dst !== SDL.screen) {
      Runtime.warnOnce('WARNING: copying canvas data to memory for compatibility');
      _SDL_LockSurface(dst);
      dstData.locked--;
    }
    return 0;
  }),
  downFingers: {},
  savedKeydown: null,
  receiveEvent: (function(event) {
    function unpressAllPressedKeys() {
      for (var code in SDL.keyboardMap) {
        SDL.events.push({
          type: 'keyup',
          keyCode: SDL.keyboardMap[code]
        });
      }
    }
    switch (event.type) {
      case 'touchstart':
      case 'touchmove':
        {
          event.preventDefault();
          var touches = [];
          if (event.type === 'touchstart') {
            for (var i = 0; i < event.touches.length; i++) {
              var touch = event.touches[i];
              if (SDL.downFingers[touch.identifier] !== true) {
                SDL.downFingers[touch.identifier] = true;
                touches.push(touch);
              }
            }
          } else {
            touches = event.touches;
          }
          var firstTouch = touches[0];
          if (event.type === 'touchstart') {
            SDL.DOMButtons[0] = 1;
          }
          var mouseEventType;
          switch (event.type) {
            case 'touchstart':
              mouseEventType = 'mousedown';
              break;
            case 'touchmove':
              mouseEventType = 'mousemove';
              break;
          }
          var mouseEvent = {
            type: mouseEventType,
            button: 0,
            pageX: firstTouch.clientX,
            pageY: firstTouch.clientY
          };SDL.events.push(mouseEvent);
          for (var i = 0; i < touches.length; i++) {
            var touch = touches[i];
            SDL.events.push({
              type: event.type,
              touch: touch
            });
          }
          break;
        }
      case 'touchend':
        {
          event.preventDefault();
          for (var i = 0; i < event.changedTouches.length; i++) {
            var touch = event.changedTouches[i];
            if (SDL.downFingers[touch.identifier] === true) {
              delete SDL.downFingers[touch.identifier];
            }
          }
          var mouseEvent = {
            type: 'mouseup',
            button: 0,
            pageX: event.changedTouches[0].clientX,
            pageY: event.changedTouches[0].clientY
          };SDL.DOMButtons[0] = 0;SDL.events.push(mouseEvent);
          for (var i = 0; i < event.changedTouches.length; i++) {
            var touch = event.changedTouches[i];
            SDL.events.push({
              type: 'touchend',
              touch: touch
            });
          }
          break;
        }
      case 'DOMMouseScroll':
      case 'mousewheel':
      case 'wheel':
        var delta = -Browser.getMouseWheelDelta(event);
        delta = delta === 0 ? 0 : delta > 0 ? Math.max(delta, 1) : Math.min(delta, -1);
        var button = delta > 0 ? 3 : 4;
        SDL.events.push({
          type: 'mousedown',
          button: button,
          pageX: event.pageX,
          pageY: event.pageY
        });
        SDL.events.push({
          type: 'mouseup',
          button: button,
          pageX: event.pageX,
          pageY: event.pageY
        });
        SDL.events.push({
          type: 'wheel',
          deltaX: 0,
          deltaY: delta
        });
        event.preventDefault();
        break;
      case 'mousemove':
        if (SDL.DOMButtons[0] === 1) {
          SDL.events.push({
            type: 'touchmove',
            touch: {
              identifier: 0,
              deviceID: -1,
              pageX: event.pageX,
              pageY: event.pageY
            }
          });
        }
        if (Browser.pointerLock) {
          if ('mozMovementX' in event) {
            event['movementX'] = event['mozMovementX'];
            event['movementY'] = event['mozMovementY'];
          }
          if (event['movementX'] === 0 && event['movementY'] === 0) {
            event.preventDefault();
            return;
          }
        }
      case 'keydown':
      case 'keyup':
      case 'keypress':
      case 'mousedown':
      case 'mouseup':
        // CHANGED event stop for global menu
        if (event.type !== 'keydown'
          && !event.metaKey
          && (!SDL.unicode && !SDL.textInput)
          || event.keyCode === 8
          || event.keyCode === 9) {
          event.preventDefault();
        }
        if (event.type === 'mousedown') {
          SDL.DOMButtons[event.button] = 1;
          SDL.events.push({
            type: 'touchstart',
            touch: {
              identifier: 0,
              deviceID: -1,
              pageX: event.pageX,
              pageY: event.pageY
            }
          });
        } else if (event.type === 'mouseup') {
          if (!SDL.DOMButtons[event.button]) {
            return;
          }
          SDL.events.push({
            type: 'touchend',
            touch: {
              identifier: 0,
              deviceID: -1,
              pageX: event.pageX,
              pageY: event.pageY
            }
          });
          SDL.DOMButtons[event.button] = 0;
        }
        if (event.type === 'keydown' || event.type === 'mousedown') {
          SDL.canRequestFullscreen = true;
        } else if (event.type === 'keyup' || event.type === 'mouseup') {
          if (SDL.isRequestingFullscreen) {
            Module['requestFullScreen'](true, true);
            SDL.isRequestingFullscreen = false;
          }
          SDL.canRequestFullscreen = false;
        }
        if (event.type === 'keypress' && SDL.savedKeydown) {
          SDL.savedKeydown.keypressCharCode = event.charCode;
          SDL.savedKeydown = null;
        } else if (event.type === 'keydown') {
          SDL.savedKeydown = event;
        }
        if (event.type !== 'keypress' || SDL.textInput) {
          SDL.events.push(event);
        }
        break;
      case 'mouseout':
        for (var i = 0; i < 3; i++) {
          if (SDL.DOMButtons[i]) {
            SDL.events.push({
              type: 'mouseup',
              button: i,
              pageX: event.pageX,
              pageY: event.pageY
            });
            SDL.DOMButtons[i] = 0;
          }
        }
        event.preventDefault();
        break;
      case 'focus':
        SDL.events.push(event);
        event.preventDefault();
        break;
      case 'blur':
        SDL.events.push(event);
        unpressAllPressedKeys();
        event.preventDefault();
        break;
      case 'visibilitychange':
        SDL.events.push({
          type: 'visibilitychange',
          visible: !document.hidden
        });
        unpressAllPressedKeys();
        event.preventDefault();
        break;
      case 'unload':
        if (Browser.mainLoop.runner) {
          SDL.events.push(event);
          Browser.mainLoop.runner();
        }
        return;
      case 'resize':
        SDL.events.push(event);
        if (event.preventDefault) {
          event.preventDefault();
        }
        break;
    }
    if (SDL.events.length >= 1e4) {
      Module.printErr('SDL event queue full, dropping events');
      SDL.events = SDL.events.slice(0, 1e4);
    }
    SDL.flushEventsToHandler();
    return;
  }),
  lookupKeyCodeForEvent: (function(event) {
    var code = event.keyCode;
    if (code >= 65 && code <= 90) {
      code += 32;
    } else {
      code = SDL.keyCodes[event.keyCode] || event.keyCode;
      if (event.location === KeyboardEvent.DOM_KEY_LOCATION_RIGHT && code >= (224 | 1 << 10) && code <= (227 | 1 << 10)) {
        code += 4;
      }
    }
    return code;
  }),
  handleEvent: (function(event) {
    if (event.handled) return;
    event.handled = true;
    switch (event.type) {
      case 'touchstart':
      case 'touchend':
      case 'touchmove':
        {
          Browser.calculateMouseEvent(event);
          break;
        }
      case 'keydown':
      case 'keyup':
        {
          var down = event.type === 'keydown';
          var code = SDL.lookupKeyCodeForEvent(event);HEAP8[SDL.keyboardState + code >> 0] = down;SDL.modState = (HEAP8[SDL.keyboardState + 1248 >> 0] ? 64 : 0) | (HEAP8[SDL.keyboardState + 1249 >> 0] ? 1 : 0) | (HEAP8[SDL.keyboardState + 1250 >> 0] ? 256 : 0) | (HEAP8[SDL.keyboardState + 1252 >> 0] ? 128 : 0) | (HEAP8[SDL.keyboardState + 1253 >> 0] ? 2 : 0) | (HEAP8[SDL.keyboardState + 1254 >> 0] ? 512 : 0);
          if (down) {
            SDL.keyboardMap[code] = event.keyCode;
          } else {
            delete SDL.keyboardMap[code];
          }
          break;
        }
      case 'mousedown':
      case 'mouseup':
        if (event.type === 'mousedown') {
          SDL.buttonState |= 1 << event.button;
        } else if (event.type === 'mouseup') {
          SDL.buttonState &= ~(1 << event.button);
        }
      case 'mousemove':
        {
          Browser.calculateMouseEvent(event);
          break;
        }
    }
  }),
  flushEventsToHandler: (function() {
    if (!SDL.eventHandler) return;
    var sdlEventPtr = allocate(28, 'i8', ALLOC_STACK);
    while (SDL.pollEvent(sdlEventPtr)) {
      Runtime.dynCall('iii', SDL.eventHandler, [SDL.eventHandlerContext, sdlEventPtr]);
    }
  }),
  pollEvent: (function(ptr) {
    if (SDL.initFlags & 512 && SDL.joystickEventState) {
      SDL.queryJoysticks();
    }
    if (ptr) {
      while (SDL.events.length > 0) {
        if (SDL.makeCEvent(SDL.events.shift(), ptr) !== false) return 1;
      }
      return 0;
    } else {
      return SDL.events.length > 0;
    }
  }),
  makeCEvent: (function(event, ptr) {
    if (typeof event === 'number') {
      _memcpy(ptr, event, 28);
      _free(event);
      return;
    }
    SDL.handleEvent(event);
    switch (event.type) {
      case 'keydown':
      case 'keyup':
        {
          var down = event.type === 'keydown';
          var key = SDL.lookupKeyCodeForEvent(event);
          var scan;
          if (key >= 1024) {
            scan = key - 1024;
          } else {
            scan = SDL.scanCodes[key] || key;
          }
          HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];HEAP8[ptr + 8 >> 0] = down ? 1 : 0;HEAP8[ptr + 9 >> 0] = 0;HEAP32[ptr + 12 >> 2] = scan;HEAP32[ptr + 16 >> 2] = key;HEAP16[ptr + 20 >> 1] = SDL.modState;HEAP32[ptr + 24 >> 2] = event.keypressCharCode || key;
          break;
        }
      case 'keypress':
        {
          HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
          var cStr = intArrayFromString(String.fromCharCode(event.charCode));
          for (var i = 0; i < cStr.length; ++i) {
            HEAP8[ptr + (8 + i) >> 0] = cStr[i];
          }
          break;
        }
      case 'mousedown':
      case 'mouseup':
      case 'mousemove':
        {
          if (event.type !== 'mousemove') {
            var down = event.type === 'mousedown';
            HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
            HEAP32[ptr + 4 >> 2] = 0;
            HEAP32[ptr + 8 >> 2] = 0;
            HEAP32[ptr + 12 >> 2] = 0;
            HEAP8[ptr + 16 >> 0] = event.button + 1;
            HEAP8[ptr + 17 >> 0] = down ? 1 : 0;
            HEAP32[ptr + 20 >> 2] = Browser.mouseX;
            HEAP32[ptr + 24 >> 2] = Browser.mouseY;
          } else {
            HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
            HEAP32[ptr + 4 >> 2] = 0;
            HEAP32[ptr + 8 >> 2] = 0;
            HEAP32[ptr + 12 >> 2] = 0;
            HEAP32[ptr + 16 >> 2] = SDL.buttonState;
            HEAP32[ptr + 20 >> 2] = Browser.mouseX;
            HEAP32[ptr + 24 >> 2] = Browser.mouseY;
            HEAP32[ptr + 28 >> 2] = Browser.mouseMovementX;
            HEAP32[ptr + 32 >> 2] = Browser.mouseMovementY;
          }
          break;
        }
      case 'wheel':
        {
          HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];HEAP32[ptr + 16 >> 2] = event.deltaX;HEAP32[ptr + 20 >> 2] = event.deltaY;
          break;
        }
      case 'touchstart':
      case 'touchend':
      case 'touchmove':
        {
          var touch = event.touch;
          if (!Browser.touches[touch.identifier]) break;
          var w = Module['canvas'].width;
          var h = Module['canvas'].height;
          var x = Browser.touches[touch.identifier].x / w;
          var y = Browser.touches[touch.identifier].y / h;
          var lx = Browser.lastTouches[touch.identifier].x / w;
          var ly = Browser.lastTouches[touch.identifier].y / h;
          var dx = x - lx;
          var dy = y - ly;
          if (touch['deviceID'] === undefined) touch.deviceID = SDL.TOUCH_DEFAULT_ID;
          if (dx === 0 && dy === 0 && event.type === 'touchmove') return false;HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];HEAP32[ptr + 4 >> 2] = _SDL_GetTicks();tempI64 = [touch.deviceID >>> 0, (tempDouble = touch.deviceID, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0)],
          HEAP32[ptr + 8 >> 2] = tempI64[0],
          HEAP32[ptr + 12 >> 2] = tempI64[1];tempI64 = [touch.identifier >>> 0, (tempDouble = touch.identifier, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0)],
          HEAP32[ptr + 16 >> 2] = tempI64[0],
          HEAP32[ptr + 20 >> 2] = tempI64[1];HEAPF32[ptr + 24 >> 2] = x;HEAPF32[ptr + 28 >> 2] = y;HEAPF32[ptr + 32 >> 2] = dx;HEAPF32[ptr + 36 >> 2] = dy;
          if (touch.force !== undefined) {
            HEAPF32[ptr + 40 >> 2] = touch.force;
          } else {
            HEAPF32[ptr + 40 >> 2] = event.type === 'touchend' ? 0 : 1;
          }
          break;
        }
      case 'unload':
        {
          HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
          break;
        }
      case 'resize':
        {
          HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];HEAP32[ptr + 4 >> 2] = event.w;HEAP32[ptr + 8 >> 2] = event.h;
          break;
        }
      case 'joystick_button_up':
      case 'joystick_button_down':
        {
          var state = event.type === 'joystick_button_up' ? 0 : 1;HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];HEAP8[ptr + 4 >> 0] = event.index;HEAP8[ptr + 5 >> 0] = event.button;HEAP8[ptr + 6 >> 0] = state;
          break;
        }
      case 'joystick_axis_motion':
        {
          HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];HEAP8[ptr + 4 >> 0] = event.index;HEAP8[ptr + 5 >> 0] = event.axis;HEAP32[ptr + 8 >> 2] = SDL.joystickAxisValueConversion(event.value);
          break;
        }
      case 'focus':
        {
          var SDL_WINDOWEVENT_FOCUS_GAINED = 12;HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];HEAP32[ptr + 4 >> 2] = 0;HEAP8[ptr + 8 >> 0] = SDL_WINDOWEVENT_FOCUS_GAINED;
          break;
        }
      case 'blur':
        {
          var SDL_WINDOWEVENT_FOCUS_LOST = 13;HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];HEAP32[ptr + 4 >> 2] = 0;HEAP8[ptr + 8 >> 0] = SDL_WINDOWEVENT_FOCUS_LOST;
          break;
        }
      case 'visibilitychange':
        {
          var SDL_WINDOWEVENT_SHOWN = 1;
          var SDL_WINDOWEVENT_HIDDEN = 2;
          var visibilityEventID = event.visible ? SDL_WINDOWEVENT_SHOWN : SDL_WINDOWEVENT_HIDDEN;HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];HEAP32[ptr + 4 >> 2] = 0;HEAP8[ptr + 8 >> 0] = visibilityEventID;
          break;
        }
      default:
        throw 'Unhandled SDL event: ' + event.type;
    }
  }),
  estimateTextWidth: (function(fontData, text) {
    var h = fontData.size;
    var fontString = h + 'px ' + fontData.name;
    var tempCtx = SDL.ttfContext;
    tempCtx.save();
    tempCtx.font = fontString;
    var ret = tempCtx.measureText(text).width | 0;
    tempCtx.restore();
    return ret;
  }),
  allocateChannels: (function(num) {
    if (SDL.numChannels && SDL.numChannels >= num && num !== 0) return;
    SDL.numChannels = num;
    SDL.channels = [];
    for (var i = 0; i < num; i++) {
      SDL.channels[i] = {
        audio: null,
        volume: 1
      };
    }
  }),
  setGetVolume: (function(info, volume) {
    if (!info) return 0;
    var ret = info.volume * 128;
    if (volume !== -1) {
      info.volume = Math.min(Math.max(volume, 0), 128) / 128;
      if (info.audio) {
        try {
          info.audio.volume = info.volume;
          if (info.audio.webAudioGainNode) info.audio.webAudioGainNode['gain']['value'] = info.volume;
        } catch (e) {
          Module.printErr('setGetVolume failed to set audio volume: ' + e);
        }
      }
    }
    return ret;
  }),
  setPannerPosition: (function(info, x, y, z) {
    if (!info) return;
    if (info.audio) {
      if (info.audio.webAudioPannerNode) {
        info.audio.webAudioPannerNode['setPosition'](x, y, z);
      }
    }
  }),
  playWebAudio: (function(audio) {
    if (!audio) return;
    if (audio.webAudioNode) return;
    if (!SDL.webAudioAvailable()) return;
    try {
      var webAudio = audio.resource.webAudio;
      audio.paused = false;
      if (!webAudio.decodedBuffer) {
        if (webAudio.onDecodeComplete === undefined) abort('Cannot play back audio object that was not loaded');
        webAudio.onDecodeComplete.push((function() {
          if (!audio.paused) SDL.playWebAudio(audio);
        }));
        return;
      }
      audio.webAudioNode = SDL.audioContext['createBufferSource']();
      audio.webAudioNode['buffer'] = webAudio.decodedBuffer;
      audio.webAudioNode['loop'] = audio.loop;
      audio.webAudioNode['onended'] = (function() {
        audio['onended']();
      });
      audio.webAudioPannerNode = SDL.audioContext['createPanner']();
      audio.webAudioPannerNode['panningModel'] = 'equalpower';
      audio.webAudioGainNode = SDL.audioContext['createGain']();
      audio.webAudioGainNode['gain']['value'] = audio.volume;
      audio.webAudioNode['connect'](audio.webAudioPannerNode);
      audio.webAudioPannerNode['connect'](audio.webAudioGainNode);
      audio.webAudioGainNode['connect'](SDL.audioContext['destination']);
      audio.webAudioNode['start'](0, audio.currentPosition);
      audio.startTime = SDL.audioContext['currentTime'] - audio.currentPosition;
    } catch (e) {
      Module.printErr('playWebAudio failed: ' + e);
    }
  }),
  pauseWebAudio: (function(audio) {
    if (!audio) return;
    if (audio.webAudioNode) {
      try {
        audio.currentPosition = (SDL.audioContext['currentTime'] - audio.startTime) % audio.resource.webAudio.decodedBuffer.duration;
        audio.webAudioNode['onended'] = undefined;
        audio.webAudioNode.stop();
        audio.webAudioNode = undefined;
      } catch (e) {
        Module.printErr('pauseWebAudio failed: ' + e);
      }
    }
    audio.paused = true;
  }),
  openAudioContext: (function() {
    if (!SDL.audioContext) {
      if (typeof AudioContext !== 'undefined') SDL.audioContext = new AudioContext;
      else if (typeof webkitAudioContext !== 'undefined') SDL.audioContext = new webkitAudioContext;
    }
  }),
  webAudioAvailable: (function() {
    return !!SDL.audioContext;
  }),
  fillWebAudioBufferFromHeap: (function(heapPtr, sizeSamplesPerChannel, dstAudioBuffer) {
    var numChannels = SDL.audio.channels;
    for (var c = 0; c < numChannels; ++c) {
      var channelData = dstAudioBuffer['getChannelData'](c);
      if (channelData.length !== sizeSamplesPerChannel) {
        throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + sizeSamplesPerChannel + " samples!";
      }
      if (SDL.audio.format === 32784) {
        for (var j = 0; j < sizeSamplesPerChannel; ++j) {
          channelData[j] = HEAP16[heapPtr + (j * numChannels + c) * 2 >> 1] / 32768;
        }
      } else if (SDL.audio.format === 8) {
        for (var j = 0; j < sizeSamplesPerChannel; ++j) {
          var v = HEAP8[heapPtr + (j * numChannels + c) >> 0];
          channelData[j] = (v >= 0 ? v - 128 : v + 128) / 128;
        }
      }
    }
  }),
  debugSurface: (function(surfData) {
    console.log('dumping surface ' + [surfData.surf, surfData.source, surfData.width, surfData.height]);
    var image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
    var data = image.data;
    var num = Math.min(surfData.width, surfData.height);
    for (var i = 0; i < num; i++) {
      console.log('   diagonal ' + i + ':' + [data[i * surfData.width * 4 + i * 4 + 0], data[i * surfData.width * 4 + i * 4 + 1], data[i * surfData.width * 4 + i * 4 + 2], data[i * surfData.width * 4 + i * 4 + 3]]);
    }
  }),
  joystickEventState: 1,
  lastJoystickState: {},
  joystickNamePool: {},
  recordJoystickState: (function(joystick, state) {
    var buttons = new Array(state.buttons.length);
    for (var i = 0; i < state.buttons.length; i++) {
      buttons[i] = SDL.getJoystickButtonState(state.buttons[i]);
    }
    SDL.lastJoystickState[joystick] = {
      buttons: buttons,
      axes: state.axes.slice(0),
      timestamp: state.timestamp,
      index: state.index,
      id: state.id
    };
  }),
  getJoystickButtonState: (function(button) {
    if (typeof button === 'object') {
      return button.pressed;
    } else {
      return button > 0;
    }
  }),
  queryJoysticks: (function() {
    for (var joystick in SDL.lastJoystickState) {
      var state = SDL.getGamepad(joystick - 1);
      var prevState = SDL.lastJoystickState[joystick];
      if (typeof state.timestamp !== 'number' || state.timestamp !== prevState.timestamp) {
        var i;
        for (i = 0; i < state.buttons.length; i++) {
          var buttonState = SDL.getJoystickButtonState(state.buttons[i]);
          if (buttonState !== prevState.buttons[i]) {
            SDL.events.push({
              type: buttonState ? 'joystick_button_down' : 'joystick_button_up',
              joystick: joystick,
              index: joystick - 1,
              button: i
            });
          }
        }
        for (i = 0; i < state.axes.length; i++) {
          if (state.axes[i] !== prevState.axes[i]) {
            SDL.events.push({
              type: 'joystick_axis_motion',
              joystick: joystick,
              index: joystick - 1,
              axis: i,
              value: state.axes[i]
            });
          }
        }
        SDL.recordJoystickState(joystick, state);
      }
    }
  }),
  joystickAxisValueConversion: (function(value) {
    return Math.ceil((value + 1) * 32767.5 - 32768);
  }),
  getGamepads: (function() {
    var fcn = navigator.getGamepads || navigator.webkitGamepads || navigator.mozGamepads || navigator.gamepads || navigator.webkitGetGamepads;
    if (fcn !== undefined) {
      return fcn.apply(navigator);
    } else {
      return [];
    }
  }),
  getGamepad: (function(deviceIndex) {
    var gamepads = SDL.getGamepads();
    if (gamepads.length > deviceIndex && deviceIndex >= 0) {
      return gamepads[deviceIndex];
    }
    return null;
  })
};

function _SDL_JoystickGetAxis(joystick, axis) {
  var gamepad = SDL.getGamepad(joystick - 1);
  if (gamepad && gamepad.axes.length > axis) {
    return SDL.joystickAxisValueConversion(gamepad.axes[axis]);
  }
  return 0;
}

function _SDL_WaitEvent() {
  Module['printErr']('missing function: SDL_WaitEvent');
  abort(-1);
}

function _lseek(fildes, offset, whence) {
  var stream = FS.getStream(fildes);
  if (!stream) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return -1;
  }
  try {
    return FS.llseek(stream, offset, whence);
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _fileno(stream) {
  stream = FS.getStreamFromPtr(stream);
  if (!stream) return -1;
  return stream.fd;
}

function _fseek(stream, offset, whence) {
  var fd = _fileno(stream);
  var ret = _lseek(fd, offset, whence);
  if (ret === -1) {
    return -1;
  }
  stream = FS.getStreamFromPtr(stream);
  stream.eof = false;
  return 0;
}
var _DtoILow = true;
var _UItoD = true;

function _SDL_JoystickNumHats(joystick) {
  return 0;
}

function _close(fildes) {
  var stream = FS.getStream(fildes);
  if (!stream) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return -1;
  }
  try {
    FS.close(stream);
    return 0;
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _fsync(fildes) {
  var stream = FS.getStream(fildes);
  if (stream) {
    return 0;
  } else {
    ___setErrNo(ERRNO_CODES.EBADF);
    return -1;
  }
}

function _fclose(stream) {
  var fd = _fileno(stream);
  _fsync(fd);
  return _close(fd);
}

function _pthread_mutex_lock() {}

function _SDL_JoystickGetButton(joystick, button) {
  var gamepad = SDL.getGamepad(joystick - 1);
  if (gamepad && gamepad.buttons.length > button) {
    return SDL.getJoystickButtonState(gamepad.buttons[button]) ? 1 : 0;
  }
  return 0;
}

function _SDL_JoystickOpen(deviceIndex) {
  var gamepad = SDL.getGamepad(deviceIndex);
  if (gamepad) {
    var joystick = deviceIndex + 1;
    SDL.recordJoystickState(joystick, gamepad);
    return joystick;
  }
  return 0;
}

function _execl() {
  ___setErrNo(ERRNO_CODES.ENOEXEC);
  return -1;
}

function _execlp() {
  return _execl.apply(null, arguments);
}

function _mkport() {
  throw "TODO";
}
var SOCKFS = {
  mount: (function(mount) {
    Module['websocket'] = Module['websocket'] && 'object' === typeof Module['websocket'] ? Module['websocket'] : {};
    Module['websocket']._callbacks = {};
    Module['websocket']['on'] = (function(event, callback) {
      if ('function' === typeof callback) {
        this._callbacks[event] = callback;
      }
      return this;
    });
    Module['websocket'].emit = (function(event, param) {
      if ('function' === typeof this._callbacks[event]) {
        this._callbacks[event].call(this, param);
      }
    });
    return FS.createNode(null, '/', 16384 | 511, 0);
  }),
  createSocket: (function(family, type, protocol) {
    var streaming = type === 1;
    if (protocol) {
      assert(streaming === (protocol === 6));
    }
    var sock = {
      family: family,
      type: type,
      protocol: protocol,
      server: null,
      error: null,
      peers: {},
      pending: [],
      recv_queue: [],
      sock_ops: SOCKFS.websocket_sock_ops
    };
    var name = SOCKFS.nextname();
    var node = FS.createNode(SOCKFS.root, name, 49152, 0);
    node.sock = sock;
    var stream = FS.createStream({
      path: name,
      node: node,
      flags: FS.modeStringToFlags('r+'),
      seekable: false,
      stream_ops: SOCKFS.stream_ops
    });
    sock.stream = stream;
    return sock;
  }),
  getSocket: (function(fd) {
    var stream = FS.getStream(fd);
    if (!stream || !FS.isSocket(stream.node.mode)) {
      return null;
    }
    return stream.node.sock;
  }),
  stream_ops: {
    poll: (function(stream) {
      var sock = stream.node.sock;
      return sock.sock_ops.poll(sock);
    }),
    ioctl: (function(stream, request, varargs) {
      var sock = stream.node.sock;
      return sock.sock_ops.ioctl(sock, request, varargs);
    }),
    read: (function(stream, buffer, offset, length, position) {
      var sock = stream.node.sock;
      var msg = sock.sock_ops.recvmsg(sock, length);
      if (!msg) {
        return 0;
      }
      buffer.set(msg.buffer, offset);
      return msg.buffer.length;
    }),
    write: (function(stream, buffer, offset, length, position) {
      var sock = stream.node.sock;
      return sock.sock_ops.sendmsg(sock, buffer, offset, length);
    }),
    close: (function(stream) {
      var sock = stream.node.sock;
      sock.sock_ops.close(sock);
    })
  },
  nextname: (function() {
    if (!SOCKFS.nextname.current) {
      SOCKFS.nextname.current = 0;
    }
    return 'socket[' + SOCKFS.nextname.current++ + "]";
  }),
  websocket_sock_ops: {
    createPeer: (function(sock, addr, port) {
      var ws;
      if (typeof addr === 'object') {
        ws = addr;
        addr = null;
        port = null;
      }
      if (ws) {
        if (ws._socket) {
          addr = ws._socket.remoteAddress;
          port = ws._socket.remotePort;
        } else {
          var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
          if (!result) {
            throw new Error('WebSocket URL must be in the format ws(s)://address:port');
          }
          addr = result[1];
          port = parseInt(result[2], 10);
        }
      } else {
        try {
          var runtimeConfig = Module['websocket'] && 'object' === typeof Module['websocket'];
          var url = 'ws:#'.replace('#', '//');
          if (runtimeConfig) {
            if ('string' === typeof Module['websocket']['url']) {
              url = Module['websocket']['url'];
            }
          }
          if (url === 'ws://' || url === 'wss://') {
            var parts = addr.split('/');
            url = url + parts[0] + ':' + port + '/' + parts.slice(1).join('/');
          }
          var subProtocols = 'binary';
          if (runtimeConfig) {
            if ('string' === typeof Module['websocket']['subprotocol']) {
              subProtocols = Module['websocket']['subprotocol'];
            }
          }
          subProtocols = subProtocols.replace(/^ +| +$/g, '').split(/ *, */);
          var opts = ENVIRONMENT_IS_NODE ? {
            'protocol': subProtocols.toString()
          } : subProtocols;
          var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
          ws = new WebSocket(url, opts);
          ws.binaryType = "arraybuffer";
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
        }
      }
      var peer = {
        addr: addr,
        port: port,
        socket: ws,
        dgram_send_queue: []
      };
      SOCKFS.websocket_sock_ops.addPeer(sock, peer);
      SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
      if (sock.type === 2 && typeof sock.sport !== 'undefined') {
        peer.dgram_send_queue.push(new Uint8Array([255, 255, 255, 255, 'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0), (sock.sport & 65280) >> 8, sock.sport & 255]));
      }
      return peer;
    }),
    getPeer: (function(sock, addr, port) {
      return sock.peers[addr + ':' + port];
    }),
    addPeer: (function(sock, peer) {
      sock.peers[peer.addr + ':' + peer.port] = peer;
    }),
    removePeer: (function(sock, peer) {
      delete sock.peers[peer.addr + ':' + peer.port];
    }),
    handlePeerEvents: (function(sock, peer) {
      var first = true;
      var handleOpen = (function() {
        Module['websocket'].emit('open', sock.stream.fd);
        try {
          var queued = peer.dgram_send_queue.shift();
          while (queued) {
            peer.socket.send(queued);
            queued = peer.dgram_send_queue.shift();
          }
        } catch (e) {
          peer.socket.close();
        }
      });

      function handleMessage(data) {
        assert(typeof data !== 'string' && data.byteLength !== undefined);
        data = new Uint8Array(data);
        var wasfirst = first;
        first = false;
        if (wasfirst && data.length === 10 && data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 && data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
          var newport = data[8] << 8 | data[9];
          SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          peer.port = newport;
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          return;
        }
        sock.recv_queue.push({
          addr: peer.addr,
          port: peer.port,
          data: data
        });
        Module['websocket'].emit('message', sock.stream.fd);
      }
      if (ENVIRONMENT_IS_NODE) {
        peer.socket.on('open', handleOpen);
        peer.socket.on('message', (function(data, flags) {
          if (!flags.binary) {
            return;
          }
          handleMessage((new Uint8Array(data)).buffer);
        }));
        peer.socket.on('close', (function() {
          Module['websocket'].emit('close', sock.stream.fd);
        }));
        peer.socket.on('error', (function(error) {
          sock.error = ERRNO_CODES.ECONNREFUSED;
          Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
        }));
      } else {
        peer.socket.onopen = handleOpen;
        peer.socket.onclose = (function() {
          Module['websocket'].emit('close', sock.stream.fd);
        });
        peer.socket.onmessage = function peer_socket_onmessage(event) {
          handleMessage(event.data);
        };
        peer.socket.onerror = (function(error) {
          sock.error = ERRNO_CODES.ECONNREFUSED;
          Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
        });
      }
    }),
    poll: (function(sock) {
      if (sock.type === 1 && sock.server) {
        return sock.pending.length ? 64 | 1 : 0;
      }
      var mask = 0;
      var dest = sock.type === 1 ? SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) : null;
      if (sock.recv_queue.length || !dest || dest && dest.socket.readyState === dest.socket.CLOSING || dest && dest.socket.readyState === dest.socket.CLOSED) {
        mask |= 64 | 1;
      }
      if (!dest || dest && dest.socket.readyState === dest.socket.OPEN) {
        mask |= 4;
      }
      if (dest && dest.socket.readyState === dest.socket.CLOSING || dest && dest.socket.readyState === dest.socket.CLOSED) {
        mask |= 16;
      }
      return mask;
    }),
    ioctl: (function(sock, request, arg) {
      switch (request) {
        case 21531:
          var bytes = 0;
          if (sock.recv_queue.length) {
            bytes = sock.recv_queue[0].data.length;
          }
          HEAP32[arg >> 2] = bytes;
          return 0;
        default:
          return ERRNO_CODES.EINVAL;
      }
    }),
    close: (function(sock) {
      if (sock.server) {
        try {
          sock.server.close();
        } catch (e) {}
        sock.server = null;
      }
      var peers = Object.keys(sock.peers);
      for (var i = 0; i < peers.length; i++) {
        var peer = sock.peers[peers[i]];
        try {
          peer.socket.close();
        } catch (e) {}
        SOCKFS.websocket_sock_ops.removePeer(sock, peer);
      }
      return 0;
    }),
    bind: (function(sock, addr, port) {
      if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      sock.saddr = addr;
      sock.sport = port || _mkport();
      if (sock.type === 2) {
        if (sock.server) {
          sock.server.close();
          sock.server = null;
        }
        try {
          sock.sock_ops.listen(sock, 0);
        } catch (e) {
          if (!(e instanceof FS.ErrnoError)) throw e;
          if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
        }
      }
    }),
    connect: (function(sock, addr, port) {
      if (sock.server) {
        throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
      }
      if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
        var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
        if (dest) {
          if (dest.socket.readyState === dest.socket.CONNECTING) {
            throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
          } else {
            throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
          }
        }
      }
      var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
      sock.daddr = peer.addr;
      sock.dport = peer.port;
      throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
    }),
    listen: (function(sock, backlog) {
      if (!ENVIRONMENT_IS_NODE) {
        throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
      }
      if (sock.server) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var WebSocketServer = require('ws').Server;
      var host = sock.saddr;
      sock.server = new WebSocketServer({
        host: host,
        port: sock.sport
      });
      Module['websocket'].emit('listen', sock.stream.fd);
      sock.server.on('connection', (function(ws) {
        if (sock.type === 1) {
          var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
          var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
          newsock.daddr = peer.addr;
          newsock.dport = peer.port;
          sock.pending.push(newsock);
          Module['websocket'].emit('connection', newsock.stream.fd);
        } else {
          SOCKFS.websocket_sock_ops.createPeer(sock, ws);
          Module['websocket'].emit('connection', sock.stream.fd);
        }
      }));
      sock.server.on('closed', (function() {
        Module['websocket'].emit('close', sock.stream.fd);
        sock.server = null;
      }));
      sock.server.on('error', (function(error) {
        sock.error = ERRNO_CODES.EHOSTUNREACH;
        Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'EHOSTUNREACH: Host is unreachable']);
      }));
    }),
    accept: (function(listensock) {
      if (!listensock.server) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var newsock = listensock.pending.shift();
      newsock.stream.flags = listensock.stream.flags;
      return newsock;
    }),
    getname: (function(sock, peer) {
      var addr, port;
      if (peer) {
        if (sock.daddr === undefined || sock.dport === undefined) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
        }
        addr = sock.daddr;
        port = sock.dport;
      } else {
        addr = sock.saddr || 0;
        port = sock.sport || 0;
      }
      return {
        addr: addr,
        port: port
      };
    }),
    sendmsg: (function(sock, buffer, offset, length, addr, port) {
      if (sock.type === 2) {
        if (addr === undefined || port === undefined) {
          addr = sock.daddr;
          port = sock.dport;
        }
        if (addr === undefined || port === undefined) {
          throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
        }
      } else {
        addr = sock.daddr;
        port = sock.dport;
      }
      var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
      if (sock.type === 1) {
        if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
        } else if (dest.socket.readyState === dest.socket.CONNECTING) {
          throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
        }
      }
      var data;
      if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
        data = buffer.slice(offset, offset + length);
      } else {
        data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
      }
      if (sock.type === 2) {
        if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
          if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
            dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          }
          dest.dgram_send_queue.push(data);
          return length;
        }
      }
      try {
        dest.socket.send(data);
        return length;
      } catch (e) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
    }),
    recvmsg: (function(sock, length) {
      if (sock.type === 1 && sock.server) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
      }
      var queued = sock.recv_queue.shift();
      if (!queued) {
        if (sock.type === 1) {
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
          if (!dest) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          } else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
            return null;
          } else {
            throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
          }
        } else {
          throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
        }
      }
      var queuedLength = queued.data.byteLength || queued.data.length;
      var queuedOffset = queued.data.byteOffset || 0;
      var queuedBuffer = queued.data.buffer || queued.data;
      var bytesRead = Math.min(length, queuedLength);
      var res = {
        buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
        addr: queued.addr,
        port: queued.port
      };
      if (sock.type === 1 && bytesRead < queuedLength) {
        var bytesRemaining = queuedLength - bytesRead;
        queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
        sock.recv_queue.unshift(queued);
      }
      return res;
    })
  }
};

function _send(fd, buf, len, flags) {
  var sock = SOCKFS.getSocket(fd);
  if (!sock) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return -1;
  }
  return _write(fd, buf, len);
}

function _pwrite(fildes, buf, nbyte, offset) {
  var stream = FS.getStream(fildes);
  if (!stream) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return -1;
  }
  try {
    var slab = HEAP8;
    return FS.write(stream, slab, buf, nbyte, offset);
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _write(fildes, buf, nbyte) {
  var stream = FS.getStream(fildes);
  if (!stream) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return -1;
  }
  try {
    var slab = HEAP8;
    return FS.write(stream, slab, buf, nbyte);
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _fputc(c, stream) {
  var chr = unSign(c & 255);
  HEAP8[_fputc.ret >> 0] = chr;
  var fd = _fileno(stream);
  var ret = _write(fd, _fputc.ret, 1);
  if (ret === -1) {
    var streamObj = FS.getStreamFromPtr(stream);
    if (streamObj) streamObj.error = true;
    return -1;
  } else {
    return chr;
  }
}

function _fwrite(ptr, size, nitems, stream) {
  var bytesToWrite = nitems * size;
  if (bytesToWrite === 0) return 0;
  var fd = _fileno(stream);
  var bytesWritten = _write(fd, ptr, bytesToWrite);
  if (bytesWritten === -1) {
    var streamObj = FS.getStreamFromPtr(stream);
    if (streamObj) streamObj.error = true;
    return 0;
  } else {
    return bytesWritten / size | 0;
  }
}
Module['_strlen'] = _strlen;

function __reallyNegative(x) {
  return x < 0 || x === 0 && 1 / x === -Infinity;
}

function __formatString(format, varargs) {
  var textIndex = format;
  var argIndex = 0;

  function getNextArg(type) {
    var ret;
    if (type === 'double') {
      ret = (HEAP32[tempDoublePtr >> 2] = HEAP32[varargs + argIndex >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[varargs + (argIndex + 4) >> 2], +HEAPF64[tempDoublePtr >> 3]);
    } else if (type === 'i64') {
      ret = [HEAP32[varargs + argIndex >> 2], HEAP32[varargs + (argIndex + 4) >> 2]];
    } else {
      type = 'i32';
      ret = HEAP32[varargs + argIndex >> 2];
    }
    argIndex += Runtime.getNativeFieldSize(type);
    return ret;
  }
  var ret = [];
  var curr, next, currArg;
  while (1) {
    var startTextIndex = textIndex;
    curr = HEAP8[textIndex >> 0];
    if (curr === 0) break;
    next = HEAP8[textIndex + 1 >> 0];
    if (curr === 37) {
      var flagAlwaysSigned = false;
      var flagLeftAlign = false;
      var flagAlternative = false;
      var flagZeroPad = false;
      var flagPadSign = false;
      flagsLoop: while (1) {
        switch (next) {
          case 43:
            flagAlwaysSigned = true;
            break;
          case 45:
            flagLeftAlign = true;
            break;
          case 35:
            flagAlternative = true;
            break;
          case 48:
            if (flagZeroPad) {
              break flagsLoop;
            } else {
              flagZeroPad = true;
              break;
            }
          case 32:
            flagPadSign = true;
            break;
          default:
            break flagsLoop;
        }
        textIndex++;
        next = HEAP8[textIndex + 1 >> 0];
      }
      var width = 0;
      if (next === 42) {
        width = getNextArg('i32');
        textIndex++;
        next = HEAP8[textIndex + 1 >> 0];
      } else {
        while (next >= 48 && next <= 57) {
          width = width * 10 + (next - 48);
          textIndex++;
          next = HEAP8[textIndex + 1 >> 0];
        }
      }
      var precisionSet = false,
        precision = -1;
      if (next === 46) {
        precision = 0;
        precisionSet = true;
        textIndex++;
        next = HEAP8[textIndex + 1 >> 0];
        if (next === 42) {
          precision = getNextArg('i32');
          textIndex++;
        } else {
          while (1) {
            var precisionChr = HEAP8[textIndex + 1 >> 0];
            if (precisionChr < 48 || precisionChr > 57) break;
            precision = precision * 10 + (precisionChr - 48);
            textIndex++;
          }
        }
        next = HEAP8[textIndex + 1 >> 0];
      }
      if (precision < 0) {
        precision = 6;
        precisionSet = false;
      }
      var argSize;
      switch (String.fromCharCode(next)) {
        case 'h':
          var nextNext = HEAP8[textIndex + 2 >> 0];
          if (nextNext === 104) {
            textIndex++;
            argSize = 1;
          } else {
            argSize = 2;
          }
          break;
        case 'l':
          var nextNext = HEAP8[textIndex + 2 >> 0];
          if (nextNext === 108) {
            textIndex++;
            argSize = 8;
          } else {
            argSize = 4;
          }
          break;
        case 'L':
        case 'q':
        case 'j':
          argSize = 8;
          break;
        case 'z':
        case 't':
        case 'I':
          argSize = 4;
          break;
        default:
          argSize = null;
      }
      if (argSize) textIndex++;
      next = HEAP8[textIndex + 1 >> 0];
      switch (String.fromCharCode(next)) {
        case 'd':
        case 'i':
        case 'u':
        case 'o':
        case 'x':
        case 'X':
        case 'p':
          {
            var signed = next === 100 || next === 105;argSize = argSize || 4;
            var currArg = getNextArg('i' + argSize * 8);
            var origArg = currArg;
            var argText;
            if (argSize === 8) {
              currArg = Runtime.makeBigInt(currArg[0], currArg[1], next === 117);
            }
            if (argSize <= 4) {
              var limit = Math.pow(256, argSize) - 1;
              currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
            }
            var currAbsArg = Math.abs(currArg);
            var prefix = '';
            if (next === 100 || next === 105) {
              if (argSize === 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null);
              else argText = reSign(currArg, 8 * argSize, 1).toString(10);
            } else if (next === 117) {
              if (argSize === 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true);
              else argText = unSign(currArg, 8 * argSize, 1).toString(10);
              currArg = Math.abs(currArg);
            } else if (next === 111) {
              argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
            } else if (next === 120 || next === 88) {
              prefix = flagAlternative && currArg !== 0 ? '0x' : '';
              if (argSize === 8 && i64Math) {
                if (origArg[1]) {
                  argText = (origArg[1] >>> 0).toString(16);
                  var lower = (origArg[0] >>> 0).toString(16);
                  while (lower.length < 8) lower = '0' + lower;
                  argText += lower;
                } else {
                  argText = (origArg[0] >>> 0).toString(16);
                }
              } else if (currArg < 0) {
                currArg = -currArg;
                argText = (currAbsArg - 1).toString(16);
                var buffer = [];
                for (var i = 0; i < argText.length; i++) {
                  buffer.push((15 - parseInt(argText[i], 16)).toString(16));
                }
                argText = buffer.join('');
                while (argText.length < argSize * 2) argText = 'f' + argText;
              } else {
                argText = currAbsArg.toString(16);
              }
              if (next === 88) {
                prefix = prefix.toUpperCase();
                argText = argText.toUpperCase();
              }
            } else if (next === 112) {
              if (currAbsArg === 0) {
                argText = "(nil)";
              } else {
                prefix = '0x';
                argText = currAbsArg.toString(16);
              }
            }
            if (precisionSet) {
              while (argText.length < precision) {
                argText = '0' + argText;
              }
            }
            if (currArg >= 0) {
              if (flagAlwaysSigned) {
                prefix = '+' + prefix;
              } else if (flagPadSign) {
                prefix = ' ' + prefix;
              }
            }
            if (argText.charAt(0) === '-') {
              prefix = '-' + prefix;
              argText = argText.substr(1);
            }
            while (prefix.length + argText.length < width) {
              if (flagLeftAlign) {
                argText += " ";
              } else {
                if (flagZeroPad) {
                  argText = '0' + argText;
                } else {
                  prefix = ' ' + prefix;
                }
              }
            }
            argText = prefix + argText;argText.split('').forEach((function(chr) {
              ret.push(chr.charCodeAt(0));
            }));
            break;
          }
        case 'f':
        case 'F':
        case 'e':
        case 'E':
        case 'g':
        case 'G':
          {
            var currArg = getNextArg('double');
            var argText;
            if (isNaN(currArg)) {
              argText = 'nan';
              flagZeroPad = false;
            } else if (!isFinite(currArg)) {
              argText = (currArg < 0 ? '-' : '') + 'inf';
              flagZeroPad = false;
            } else {
              var isGeneral = false;
              var effectivePrecision = Math.min(precision, 20);
              if (next === 103 || next === 71) {
                isGeneral = true;
                precision = precision || 1;
                var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                if (precision > exponent && exponent >= -4) {
                  next = (next === 103 ? 'f' : 'F').charCodeAt(0);
                  precision -= exponent + 1;
                } else {
                  next = (next === 103 ? 'e' : 'E').charCodeAt(0);
                  precision--;
                }
                effectivePrecision = Math.min(precision, 20);
              }
              if (next === 101 || next === 69) {
                argText = currArg.toExponential(effectivePrecision);
                if (/[eE][-+]\d$/.test(argText)) {
                  argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                }
              } else if (next === 102 || next === 70) {
                argText = currArg.toFixed(effectivePrecision);
                if (currArg === 0 && __reallyNegative(currArg)) {
                  argText = '-' + argText;
                }
              }
              var parts = argText.split('e');
              if (isGeneral && !flagAlternative) {
                while (parts[0].length > 1 && parts[0].indexOf('.') !== -1 && (parts[0].slice(-1) === '0' || parts[0].slice(-1) === '.')) {
                  parts[0] = parts[0].slice(0, -1);
                }
              } else {
                if (flagAlternative && argText.indexOf('.') === -1) parts[0] += '.';
                while (precision > effectivePrecision++) parts[0] += "0";
              }
              argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
              if (next === 69) argText = argText.toUpperCase();
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  argText = '+' + argText;
                } else if (flagPadSign) {
                  argText = ' ' + argText;
                }
              }
            }
            while (argText.length < width) {
              if (flagLeftAlign) {
                argText += " ";
              } else {
                if (flagZeroPad && (argText[0] === '-' || argText[0] === '+')) {
                  argText = argText[0] + '0' + argText.slice(1);
                } else {
                  argText = (flagZeroPad ? '0' : ' ') + argText;
                }
              }
            }
            if (next < 97) argText = argText.toUpperCase();argText.split('').forEach((function(chr) {
              ret.push(chr.charCodeAt(0));
            }));
            break;
          }
        case 's':
          {
            var arg = getNextArg('i8*');
            var argLength = arg ? _strlen(arg) : '(null)'.length;
            if (precisionSet) argLength = Math.min(argLength, precision);
            if (!flagLeftAlign) {
              while (argLength < width--) {
                ret.push(32);
              }
            }
            if (arg) {
              for (var i = 0; i < argLength; i++) {
                ret.push(HEAPU8[arg++ >> 0]);
              }
            } else {
              ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
            }
            if (flagLeftAlign) {
              while (argLength < width--) {
                ret.push(32);
              }
            }
            break;
          }
        case 'c':
          {
            if (flagLeftAlign) ret.push(getNextArg('i8'));
            while (--width > 0) {
              ret.push(32);
            }
            if (!flagLeftAlign) ret.push(getNextArg('i8'));
            break;
          }
        case 'n':
          {
            var ptr = getNextArg('i32*');HEAP32[ptr >> 2] = ret.length;
            break;
          }
        case '%':
          {
            ret.push(curr);
            break;
          }
        default:
          {
            for (var i = startTextIndex; i < textIndex + 2; i++) {
              ret.push(HEAP8[i >> 0]);
            }
          }
      }
      textIndex += 2;
    } else {
      ret.push(curr);
      textIndex += 1;
    }
  }
  return ret;
}

function _fprintf(stream, format, varargs) {
  var result = __formatString(format, varargs);
  var stack = Runtime.stackSave();
  var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
  Runtime.stackRestore(stack);
  return ret;
}

function _umask(newMask) {
  if (_umask.cmask === undefined) _umask.cmask = 511;
  var oldMask = _umask.cmask;
  _umask.cmask = newMask;
  return oldMask;
}

function _SDL_GetModState() {
  return SDL.modState;
}
var _llvm_pow_f32 = Math_pow;

function _fputs(s, stream) {
  var fd = _fileno(stream);
  return _write(fd, s, _strlen(s));
}

function _SDL_Delay(delay) {
  if (!ENVIRONMENT_IS_WORKER) abort('SDL_Delay called on the main thread! Potential infinite loop, quitting.');
  var now = Date.now();
  while (Date.now() - now < delay) {}
}

function __exit(status) {
  Module['exit'](status);
}

function _exit(status) {
  __exit(status);
}

function _stat(path, buf, dontResolveLastLink) {
  path = typeof path !== 'string' ? Pointer_stringify(path) : path;
  try {
    var stat = dontResolveLastLink ? FS.lstat(path) : FS.stat(path);
    HEAP32[buf >> 2] = stat.dev;
    HEAP32[buf + 4 >> 2] = 0;
    HEAP32[buf + 8 >> 2] = stat.ino;
    HEAP32[buf + 12 >> 2] = stat.mode;
    HEAP32[buf + 16 >> 2] = stat.nlink;
    HEAP32[buf + 20 >> 2] = stat.uid;
    HEAP32[buf + 24 >> 2] = stat.gid;
    HEAP32[buf + 28 >> 2] = stat.rdev;
    HEAP32[buf + 32 >> 2] = 0;
    HEAP32[buf + 36 >> 2] = stat.size;
    HEAP32[buf + 40 >> 2] = 4096;
    HEAP32[buf + 44 >> 2] = stat.blocks;
    HEAP32[buf + 48 >> 2] = stat.atime.getTime() / 1e3 | 0;
    HEAP32[buf + 52 >> 2] = 0;
    HEAP32[buf + 56 >> 2] = stat.mtime.getTime() / 1e3 | 0;
    HEAP32[buf + 60 >> 2] = 0;
    HEAP32[buf + 64 >> 2] = stat.ctime.getTime() / 1e3 | 0;
    HEAP32[buf + 68 >> 2] = 0;
    HEAP32[buf + 72 >> 2] = stat.ino;
    return 0;
  } catch (e) {
    if (e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
      e.setErrno(ERRNO_CODES.ENOTDIR);
    }
    FS.handleFSError(e);
    return -1;
  }
}

function _fstat(fildes, buf) {
  var stream = FS.getStream(fildes);
  if (!stream) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return -1;
  }
  return _stat(stream.path, buf);
}
var ___tm_current = allocate(44, 'i8', ALLOC_STATIC);
var ___tm_timezone = allocate(intArrayFromString('GMT'), 'i8', ALLOC_STATIC);
var _tzname = allocate(8, 'i32*', ALLOC_STATIC);
var _daylight = allocate(1, 'i32*', ALLOC_STATIC);
var _timezone = allocate(1, 'i32*', ALLOC_STATIC);

function _tzset() {
  if (_tzset.called) return;
  _tzset.called = true;
  HEAP32[_timezone >> 2] = -(new Date).getTimezoneOffset() * 60;
  var winter = new Date(2e3, 0, 1);
  var summer = new Date(2e3, 6, 1);
  HEAP32[_daylight >> 2] = Number(winter.getTimezoneOffset() !== summer.getTimezoneOffset());

  function extractZone(date) {
    var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
    return match ? match[1] : "GMT";
  }
  var winterName = extractZone(winter);
  var summerName = extractZone(summer);
  var winterNamePtr = allocate(intArrayFromString(winterName), 'i8', ALLOC_NORMAL);
  var summerNamePtr = allocate(intArrayFromString(summerName), 'i8', ALLOC_NORMAL);
  if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
    HEAP32[_tzname >> 2] = winterNamePtr;
    HEAP32[_tzname + 4 >> 2] = summerNamePtr;
  } else {
    HEAP32[_tzname >> 2] = summerNamePtr;
    HEAP32[_tzname + 4 >> 2] = winterNamePtr;
  }
}

function _localtime_r(time, tmPtr) {
  _tzset();
  var date = new Date(HEAP32[time >> 2] * 1e3);
  HEAP32[tmPtr >> 2] = date.getSeconds();
  HEAP32[tmPtr + 4 >> 2] = date.getMinutes();
  HEAP32[tmPtr + 8 >> 2] = date.getHours();
  HEAP32[tmPtr + 12 >> 2] = date.getDate();
  HEAP32[tmPtr + 16 >> 2] = date.getMonth();
  HEAP32[tmPtr + 20 >> 2] = date.getFullYear() - 1900;
  HEAP32[tmPtr + 24 >> 2] = date.getDay();
  var start = new Date(date.getFullYear(), 0, 1);
  var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;
  HEAP32[tmPtr + 28 >> 2] = yday;
  HEAP32[tmPtr + 36 >> 2] = -(date.getTimezoneOffset() * 60);
  var summerOffset = (new Date(2e3, 6, 1)).getTimezoneOffset();
  var winterOffset = start.getTimezoneOffset();
  var dst = date.getTimezoneOffset() === Math.min(winterOffset, summerOffset) | 0;
  HEAP32[tmPtr + 32 >> 2] = dst;
  var zonePtr = HEAP32[_tzname + (dst ? Runtime.QUANTUM_SIZE : 0) >> 2];
  HEAP32[tmPtr + 40 >> 2] = zonePtr;
  return tmPtr;
}

function _localtime(time) {
  return _localtime_r(time, ___tm_current);
}
Module['_bitshift64Ashr'] = _bitshift64Ashr;

function _SDL_NumJoysticks() {
  var count = 0;
  var gamepads = SDL.getGamepads();
  for (var i = 0; i < gamepads.length; i++) {
    if (gamepads[i] !== undefined) count++;
  }
  return count;
}
var _ceil = Math_ceil;

function _getpwnam() {
  throw "getpwnam: TODO";
}

function _emscripten_memcpy_big(dest, src, num) {
  HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
  return dest;
}
Module['_memcpy'] = _memcpy;

function _puts(s) {
  var stdout = HEAP32[_stdout >> 2];
  var ret = _fputs(s, stdout);
  if (ret < 0) {
    return ret;
  } else {
    var newlineRet = _fputc(10, stdout);
    return newlineRet < 0 ? -1 : ret + 1;
  }
}

function _strerror_r(errnum, strerrbuf, buflen) {
  if (errnum in ERRNO_MESSAGES) {
    if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
      return ___setErrNo(ERRNO_CODES.ERANGE);
    } else {
      var msg = ERRNO_MESSAGES[errnum];
      writeAsciiToMemory(msg, strerrbuf);
      return 0;
    }
  } else {
    return ___setErrNo(ERRNO_CODES.EINVAL);
  }
}

function _strerror(errnum) {
  if (!_strerror.buffer) _strerror.buffer = _malloc(256);
  _strerror_r(errnum, _strerror.buffer, 256);
  return _strerror.buffer;
}

function ___errno_location() {
  return ___errno_state;
}

function _perror(s) {
  var stdout = HEAP32[_stdout >> 2];
  if (s) {
    _fputs(s, stdout);
    _fputc(58, stdout);
    _fputc(32, stdout);
  }
  var errnum = HEAP32[___errno_location() >> 2];
  _puts(_strerror(errnum));
}
Module['_memmove'] = _memmove;
var LOCALE = {
  curr: 0,
  check: (function(locale) {
    if (locale) locale = Pointer_stringify(locale);
    return locale === 'C' || locale === 'POSIX' || !locale;
  })
};

function _calloc(n, s) {
  var ret = _malloc(n * s);
  _memset(ret, 0, n * s);
  return ret;
}
Module['_calloc'] = _calloc;

function _newlocale(mask, locale, base) {
  if (!LOCALE.check(locale)) {
    ___setErrNo(ERRNO_CODES.ENOENT);
    return 0;
  }
  if (!base) base = _calloc(1, 4);
  return base;
}

function _unlink(path) {
  path = Pointer_stringify(path);
  try {
    FS.unlink(path);
    return 0;
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _rmdir(path) {
  path = Pointer_stringify(path);
  try {
    FS.rmdir(path);
    return 0;
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _remove(path) {
  var ret = _unlink(path);
  if (ret === -1) ret = _rmdir(path);
  return ret;
}

function _pthread_cond_wait() {
  return 0;
}

function ___cxa_free_exception(ptr) {
  try {
    return _free(ptr);
  } catch (e) {}
}
var EXCEPTIONS = {
  last: 0,
  caught: [],
  infos: {},
  deAdjust: (function(adjusted) {
    if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
    for (var ptr in EXCEPTIONS.infos) {
      var info = EXCEPTIONS.infos[ptr];
      if (info.adjusted === adjusted) {
        return ptr;
      }
    }
    return adjusted;
  }),
  addRef: (function(ptr) {
    if (!ptr) return;
    var info = EXCEPTIONS.infos[ptr];
    info.refcount++;
  }),
  decRef: (function(ptr) {
    if (!ptr) return;
    var info = EXCEPTIONS.infos[ptr];
    assert(info.refcount > 0);
    info.refcount--;
    if (info.refcount === 0) {
      if (info.destructor) {
        Runtime.dynCall('vi', info.destructor, [ptr]);
      }
      delete EXCEPTIONS.infos[ptr];
      ___cxa_free_exception(ptr);
    }
  }),
  clearRef: (function(ptr) {
    if (!ptr) return;
    var info = EXCEPTIONS.infos[ptr];
    info.refcount = 0;
  })
};

function ___cxa_end_catch() {
  if (___cxa_end_catch.rethrown) {
    ___cxa_end_catch.rethrown = false;
    return;
  }
  asm['setThrew'](0);
  var ptr = EXCEPTIONS.caught.pop();
  if (ptr) {
    EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
    EXCEPTIONS.last = 0;
  }
}

function ___cxa_rethrow() {
  ___cxa_end_catch.rethrown = true;
  var ptr = EXCEPTIONS.caught.pop();
  EXCEPTIONS.last = ptr;
  throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
}

function _open(path, oflag, varargs) {
  var mode = HEAP32[varargs >> 2];
  path = Pointer_stringify(path);
  try {
    var stream = FS.open(path, oflag, mode);
    return stream.fd;
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _opendir(dirname) {
  var path = Pointer_stringify(dirname);
  if (!path) {
    ___setErrNo(ERRNO_CODES.ENOENT);
    return 0;
  }
  var node;
  try {
    var lookup = FS.lookupPath(path, {
      follow: true
    });
    node = lookup.node;
  } catch (e) {
    FS.handleFSError(e);
    return 0;
  }
  if (!FS.isDir(node.mode)) {
    ___setErrNo(ERRNO_CODES.ENOTDIR);
    return 0;
  }
  var fd = _open(dirname, 0, allocate([0, 0, 0, 0], 'i32', ALLOC_STACK));
  return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
}

function _SDL_JoystickName(deviceIndex) {
  var gamepad = SDL.getGamepad(deviceIndex);
  if (gamepad) {
    var name = gamepad.id;
    if (SDL.joystickNamePool.hasOwnProperty(name)) {
      return SDL.joystickNamePool[name];
    }
    return SDL.joystickNamePool[name] = allocate(intArrayFromString(name), 'i8', ALLOC_NORMAL);
  }
  return 0;
}

function _SDL_SetColors(surf, colors, firstColor, nColors) {
  var surfData = SDL.surfaces[surf];
  if (!surfData.colors) {
    var buffer = new ArrayBuffer(256 * 4);
    surfData.colors = new Uint8Array(buffer);
    surfData.colors32 = new Uint32Array(buffer);
  }
  for (var i = 0; i < nColors; ++i) {
    var index = (firstColor + i) * 4;
    surfData.colors[index] = HEAPU8[colors + i * 4 >> 0];
    surfData.colors[index + 1] = HEAPU8[colors + (i * 4 + 1) >> 0];
    surfData.colors[index + 2] = HEAPU8[colors + (i * 4 + 2) >> 0];
    surfData.colors[index + 3] = 255;
  }
  return 1;
}

function _SDL_SetPalette(surf, flags, colors, firstColor, nColors) {
  return _SDL_SetColors(surf, colors, firstColor, nColors);
}
Module['_memset'] = _memset;
var _BDtoILow = true;
Module['_strcat'] = _strcat;

function _readdir_r(dirp, entry, result) {
  var stream = FS.getStreamFromPtr(dirp);
  if (!stream) {
    return ___setErrNo(ERRNO_CODES.EBADF);
  }
  if (!stream.currReading) {
    try {
      stream.currReading = FS.readdir(stream.path);
    } catch (e) {
      return FS.handleFSError(e);
    }
  }
  if (stream.position < 0 || stream.position >= stream.currReading.length) {
    HEAP32[result >> 2] = 0;
    return 0;
  }
  var id;
  var type;
  var name = stream.currReading[stream.position++];
  if (!name.indexOf('.')) {
    id = 1;
    type = 4;
  } else {
    try {
      var child = FS.lookupNode(stream.node, name);
    } catch (e) {
      return _readdir_r(dirp, entry, result);
    }
    id = child.id;
    type = FS.isChrdev(child.mode) ? 2 : FS.isDir(child.mode) ? 4 : FS.isLink(child.mode) ? 10 : 8;
  }
  HEAP32[entry >> 2] = id;
  HEAP32[entry + 4 >> 2] = stream.position;
  HEAP32[entry + 8 >> 2] = name.length + 1;
  for (var i = 0; i < name.length; i++) {
    HEAP8[entry + 11 + i >> 0] = name.charCodeAt(i);
  }
  HEAP8[entry + 11 + i >> 0] = 0;
  HEAP8[entry + 10 >> 0] = type;
  HEAP32[result >> 2] = entry;
  return 0;
}

function _readdir(dirp) {
  var stream = FS.getStreamFromPtr(dirp);
  if (!stream) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return 0;
  }
  if (!_readdir.entry) _readdir.entry = _malloc(268);
  if (!_readdir.result) _readdir.result = _malloc(4);
  var err = _readdir_r(dirp, _readdir.entry, _readdir.result);
  if (err) {
    ___setErrNo(err);
    return 0;
  }
  return HEAP32[_readdir.result >> 2];
}
var _BItoD = true;

function _SDL_JoystickClose(joystick) {
  delete SDL.lastJoystickState[joystick];
}

function _SDL_LockAudio() {}

function _recv(fd, buf, len, flags) {
  var sock = SOCKFS.getSocket(fd);
  if (!sock) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return -1;
  }
  return _read(fd, buf, len);
}

function _pread(fildes, buf, nbyte, offset) {
  var stream = FS.getStream(fildes);
  if (!stream) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return -1;
  }
  try {
    var slab = HEAP8;
    return FS.read(stream, slab, buf, nbyte, offset);
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _read(fildes, buf, nbyte) {
  var stream = FS.getStream(fildes);
  if (!stream) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return -1;
  }
  try {
    var slab = HEAP8;
    return FS.read(stream, slab, buf, nbyte);
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _fread(ptr, size, nitems, stream) {
  var bytesToRead = nitems * size;
  if (bytesToRead === 0) {
    return 0;
  }
  var bytesRead = 0;
  var streamObj = FS.getStreamFromPtr(stream);
  if (!streamObj) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return 0;
  }
  while (streamObj.ungotten.length && bytesToRead > 0) {
    HEAP8[ptr++ >> 0] = streamObj.ungotten.pop();
    bytesToRead--;
    bytesRead++;
  }
  var err = _read(streamObj.fd, ptr, bytesToRead);
  if (err === -1) {
    if (streamObj) streamObj.error = true;
    return 0;
  }
  bytesRead += err;
  if (bytesRead < bytesToRead) streamObj.eof = true;
  return bytesRead / size | 0;
}

function _fgetc(stream) {
  var streamObj = FS.getStreamFromPtr(stream);
  if (!streamObj) return -1;
  if (streamObj.eof || streamObj.error) return -1;
  var ret = _fread(_fgetc.ret, 1, 1, stream);
  if (ret === 0) {
    return -1;
  } else if (ret === -1) {
    streamObj.error = true;
    return -1;
  } else {
    return HEAPU8[_fgetc.ret >> 0];
  }
}

function _fgets(s, n, stream) {
  var streamObj = FS.getStreamFromPtr(stream);
  if (!streamObj) return 0;
  if (streamObj.error || streamObj.eof) return 0;
  var byte_;
  for (var i = 0; i < n - 1 && byte_ !== 10; i++) {
    byte_ = _fgetc(stream);
    if (byte_ === -1) {
      if (streamObj.error || streamObj.eof && i === 0) return 0;
      else if (streamObj.eof) break;
    }
    HEAP8[s + i >> 0] = byte_;
  }
  HEAP8[s + i >> 0] = 0;
  return s;
}

function _SDL_FillRect(surf, rect, color) {
  var surfData = SDL.surfaces[surf];
  assert(!surfData.locked);
  if (surfData.isFlagSet(2097152)) {
    color = surfData.colors32[color];
  }
  var r = rect ? SDL.loadRect(rect) : {
    x: 0,
    y: 0,
    w: surfData.width,
    h: surfData.height
  };
  if (surfData.clipRect) {
    r = SDL.intersectionOfRects(surfData.clipRect, r);
    if (rect) {
      SDL.updateRect(rect, r);
    }
  }
  surfData.ctx.save();
  surfData.ctx.fillStyle = SDL.translateColorToCSSRGBA(color);
  surfData.ctx.fillRect(r.x, r.y, r.w, r.h);
  surfData.ctx.restore();
  return 0;
}

function _emscripten_force_exit(status) {
  Module['noExitRuntime'] = false;
  Module['exit'](status);
}

function _fopen(filename, mode) {
  var flags;
  mode = Pointer_stringify(mode);
  if (mode[0] === 'r') {
    if (mode.indexOf('+') !== -1) {
      flags = 2;
    } else {
      flags = 0;
    }
  } else if (mode[0] === 'w') {
    if (mode.indexOf('+') !== -1) {
      flags = 2;
    } else {
      flags = 1;
    }
    flags |= 64;
    flags |= 512;
  } else if (mode[0] === 'a') {
    if (mode.indexOf('+') !== -1) {
      flags = 2;
    } else {
      flags = 1;
    }
    flags |= 64;
    flags |= 1024;
  } else {
    ___setErrNo(ERRNO_CODES.EINVAL);
    return 0;
  }
  var fd = _open(filename, flags, allocate([511, 0, 0, 0], 'i32', ALLOC_STACK));
  return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
}

function _access(path, amode) {
  path = Pointer_stringify(path);
  if (amode & ~7) {
    ___setErrNo(ERRNO_CODES.EINVAL);
    return -1;
  }
  var node;
  try {
    var lookup = FS.lookupPath(path, {
      follow: true
    });
    node = lookup.node;
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
  var perms = '';
  if (amode & 4) perms += 'r';
  if (amode & 2) perms += 'w';
  if (amode & 1) perms += 'x';
  if (perms && FS.nodePermissions(node, perms)) {
    ___setErrNo(ERRNO_CODES.EACCES);
    return -1;
  }
  return 0;
}

function _ftell(stream) {
  stream = FS.getStreamFromPtr(stream);
  if (!stream) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return -1;
  }
  if (FS.isChrdev(stream.node.mode)) {
    ___setErrNo(ERRNO_CODES.ESPIPE);
    return -1;
  } else {
    return stream.position;
  }
}
var PTHREAD_SPECIFIC = {};

function _pthread_setspecific(key, value) {
  if (!(key in PTHREAD_SPECIFIC)) {
    return ERRNO_CODES.EINVAL;
  }
  PTHREAD_SPECIFIC[key] = value;
  return 0;
}

function ___ctype_b_loc() {
  var me = ___ctype_b_loc;
  if (!me.ret) {
    var values = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8195, 8194, 8194, 8194, 8194, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 24577, 49156, 49156, 49156, 49156, 49156, 49156, 49156, 49156, 49156, 49156, 49156, 49156, 49156, 49156, 49156, 55304, 55304, 55304, 55304, 55304, 55304, 55304, 55304, 55304, 55304, 49156, 49156, 49156, 49156, 49156, 49156, 49156, 54536, 54536, 54536, 54536, 54536, 54536, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 50440, 49156, 49156, 49156, 49156, 49156, 49156, 54792, 54792, 54792, 54792, 54792, 54792, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 50696, 49156, 49156, 49156, 49156, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    var i16size = 2;
    var arr = _malloc(values.length * i16size);
    for (var i = 0; i < values.length; i++) {
      HEAP16[arr + i * i16size >> 1] = values[i];
    }
    me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
  }
  return me.ret;
}

function _freelocale(locale) {
  _free(locale);
}

function _catgets(catd, set_id, msg_id, s) {
  return s;
}

function _SDL_ShowCursor(toggle) {
  switch (toggle) {
    case 0:
      if (Browser.isFullScreen) {
        Module['canvas'].requestPointerLock();
        return 0;
      } else {
        return 1;
      }
      break;
    case 1:
      Module['canvas'].exitPointerLock();
      return 1;
      break;
    case -1:
      return !Browser.pointerLock;
      break;
    default:
      console.log('SDL_ShowCursor called with unknown toggle parameter value: ' + toggle + '.');
      break;
  }
}

function _ferror(stream) {
  stream = FS.getStreamFromPtr(stream);
  return Number(stream && stream.error);
}

function ___cxa_allocate_exception(size) {
  return _malloc(size);
}

function _getcwd(buf, size) {
  if (size === 0) {
    ___setErrNo(ERRNO_CODES.EINVAL);
    return 0;
  }
  var cwd = FS.cwd();
  if (size < cwd.length + 1) {
    ___setErrNo(ERRNO_CODES.ERANGE);
    return 0;
  } else {
    writeAsciiToMemory(cwd, buf);
    return buf;
  }
}

function ___cxa_guard_acquire(variable) {
  if (!HEAP8[variable >> 0]) {
    HEAP8[variable >> 0] = 1;
    return 1;
  }
  return 0;
}

function _SDL_WM_GrabInput() {}

function __ZSt18uncaught_exceptionv() {
  return !!__ZSt18uncaught_exceptionv.uncaught_exception;
}

function ___cxa_begin_catch(ptr) {
  __ZSt18uncaught_exceptionv.uncaught_exception--;
  EXCEPTIONS.caught.push(ptr);
  EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
  return ptr;
}
var _cos = Math_cos;

function _fseeko() {
  return _fseek.apply(null, arguments);
}

function _SDL_UnlockSurface(surf) {
  assert(!SDL.GL);
  var surfData = SDL.surfaces[surf];
  if (!surfData.locked || --surfData.locked > 0) {
    return;
  }
  if (surfData.isFlagSet(2097152)) {
    SDL.copyIndexedColorData(surfData);
  } else if (!surfData.colors) {
    var data = surfData.image.data;
    var buffer = surfData.buffer;
    assert(buffer % 4 === 0, 'Invalid buffer offset: ' + buffer);
    var src = buffer >> 2;
    var dst = 0;
    var isScreen = surf === SDL.screen;
    var num;
    if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) {
      num = data.length;
      while (dst < num) {
        var val = HEAP32[src];
        data[dst] = val & 255;
        data[dst + 1] = val >> 8 & 255;
        data[dst + 2] = val >> 16 & 255;
        data[dst + 3] = isScreen ? 255 : val >> 24 & 255;
        src++;
        dst += 4;
      }
    } else {
      var data32 = new Uint32Array(data.buffer);
      if (isScreen && SDL.defaults.opaqueFrontBuffer) {
        num = data32.length;
        data32.set(HEAP32.subarray(src, src + num));
        var data8 = new Uint8Array(data.buffer);
        var i = 3;
        var j = i + 4 * num;
        if (num % 8 === 0) {
          while (i < j) {
            data8[i] = 255;
            i = i + 4 | 0;
            data8[i] = 255;
            i = i + 4 | 0;
            data8[i] = 255;
            i = i + 4 | 0;
            data8[i] = 255;
            i = i + 4 | 0;
            data8[i] = 255;
            i = i + 4 | 0;
            data8[i] = 255;
            i = i + 4 | 0;
            data8[i] = 255;
            i = i + 4 | 0;
            data8[i] = 255;
            i = i + 4 | 0;
          }
        } else {
          while (i < j) {
            data8[i] = 255;
            i = i + 4 | 0;
          }
        }
      } else {
        data32.set(HEAP32.subarray(src, src + data32.length));
      }
    }
  } else {
    var width = Module['canvas'].width;
    var height = Module['canvas'].height;
    var s = surfData.buffer;
    var data = surfData.image.data;
    var colors = surfData.colors;
    for (var y = 0; y < height; y++) {
      var base = y * width * 4;
      for (var x = 0; x < width; x++) {
        var val = HEAPU8[s++ >> 0] * 4;
        var start = base + x * 4;
        data[start] = colors[val];
        data[start + 1] = colors[val + 1];
        data[start + 2] = colors[val + 2];
      }
      s += width * 3;
    }
  }
  surfData.ctx.putImageData(surfData.image, 0, 0);
}

function _SDL_Init(initFlags) {
  SDL.startTime = Date.now();
  SDL.initFlags = initFlags;
  if (!Module['doNotCaptureKeyboard']) {
    var keyboardListeningElement = Module['keyboardListeningElement'] || document;
    keyboardListeningElement.addEventListener('keydown', SDL.receiveEvent);
    keyboardListeningElement.addEventListener('keyup', SDL.receiveEvent);
    keyboardListeningElement.addEventListener('keypress', SDL.receiveEvent);
    window.addEventListener('focus', SDL.receiveEvent);
    window.addEventListener('blur', SDL.receiveEvent);
    document.addEventListener('visibilitychange', SDL.receiveEvent);
  }
  if (initFlags & 512) {
    addEventListener('gamepadconnected', (function() {}));
  }
  window.addEventListener('unload', SDL.receiveEvent);
  SDL.keyboardState = _malloc(65536);
  _memset(SDL.keyboardState, 0, 65536);
  SDL.DOMEventToSDLEvent['keydown'] = 768;
  SDL.DOMEventToSDLEvent['keyup'] = 769;
  SDL.DOMEventToSDLEvent['keypress'] = 771;
  SDL.DOMEventToSDLEvent['mousedown'] = 1025;
  SDL.DOMEventToSDLEvent['mouseup'] = 1026;
  SDL.DOMEventToSDLEvent['mousemove'] = 1024;
  SDL.DOMEventToSDLEvent['wheel'] = 1027;
  SDL.DOMEventToSDLEvent['touchstart'] = 1792;
  SDL.DOMEventToSDLEvent['touchend'] = 1793;
  SDL.DOMEventToSDLEvent['touchmove'] = 1794;
  SDL.DOMEventToSDLEvent['unload'] = 256;
  SDL.DOMEventToSDLEvent['resize'] = 28673;
  SDL.DOMEventToSDLEvent['visibilitychange'] = 512;
  SDL.DOMEventToSDLEvent['focus'] = 512;
  SDL.DOMEventToSDLEvent['blur'] = 512;
  SDL.DOMEventToSDLEvent['joystick_axis_motion'] = 1536;
  SDL.DOMEventToSDLEvent['joystick_button_down'] = 1539;
  SDL.DOMEventToSDLEvent['joystick_button_up'] = 1540;
  return 0;
}
Module['_strcpy'] = _strcpy;

function _atexit(func, arg) {
  __ATEXIT__.unshift({
    func: func,
    arg: arg
  });
}

function ___cxa_atexit() {
  return _atexit.apply(null, arguments);
}
Module['_i64Subtract'] = _i64Subtract;
var _fabsf = Math_abs;
Module['_i64Add'] = _i64Add;

function ___resumeException(ptr) {
  if (!EXCEPTIONS.last) {
    EXCEPTIONS.last = ptr;
  }
  EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr));
  throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
}

function ___cxa_find_matching_catch() {
  var thrown = EXCEPTIONS.last;
  if (!thrown) {
    return (asm['setTempRet0'](0), 0) | 0;
  }
  var info = EXCEPTIONS.infos[thrown];
  var throwntype = info.type;
  if (!throwntype) {
    return (asm['setTempRet0'](0), thrown) | 0;
  }
  var typeArray = Array.prototype.slice.call(arguments);
  var pointer = Module['___cxa_is_pointer_type'](throwntype);
  if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
  HEAP32[___cxa_find_matching_catch.buffer >> 2] = thrown;
  thrown = ___cxa_find_matching_catch.buffer;
  for (var i = 0; i < typeArray.length; i++) {
    if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
      thrown = HEAP32[thrown >> 2];
      info.adjusted = thrown;
      return (asm['setTempRet0'](typeArray[i]), thrown) | 0;
    }
  }
  thrown = HEAP32[thrown >> 2];
  return (asm['setTempRet0'](throwntype), thrown) | 0;
}

function ___cxa_throw(ptr, type, destructor) {
  EXCEPTIONS.infos[ptr] = {
    ptr: ptr,
    adjusted: ptr,
    type: type,
    destructor: destructor,
    refcount: 0
  };
  EXCEPTIONS.last = ptr;
  if (!('uncaught_exception' in __ZSt18uncaught_exceptionv)) {
    __ZSt18uncaught_exceptionv.uncaught_exception = 1;
  } else {
    __ZSt18uncaught_exceptionv.uncaught_exception++;
  }
  throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
}

function _SDL_JoystickNumButtons(joystick) {
  var gamepad = SDL.getGamepad(joystick - 1);
  if (gamepad) {
    return gamepad.buttons.length;
  }
  return 0;
}

function _chmod(path, mode, dontResolveLastLink) {
  path = typeof path !== 'string' ? Pointer_stringify(path) : path;
  try {
    FS.chmod(path, mode);
    return 0;
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _printf(format, varargs) {
  var stdout = HEAP32[_stdout >> 2];
  return _fprintf(stdout, format, varargs);
}
var GL = {
  counter: 1,
  lastError: 0,
  buffers: [],
  mappedBuffers: {},
  programs: [],
  framebuffers: [],
  renderbuffers: [],
  textures: [],
  uniforms: [],
  shaders: [],
  vaos: [],
  contexts: [],
  byteSizeByTypeRoot: 5120,
  byteSizeByType: [1, 1, 2, 2, 4, 4, 4, 2, 3, 4, 8],
  programInfos: {},
  stringCache: {},
  packAlignment: 4,
  unpackAlignment: 4,
  init: (function() {
    GL.miniTempBuffer = new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);
    for (var i = 0; i < GL.MINI_TEMP_BUFFER_SIZE; i++) {
      GL.miniTempBufferViews[i] = GL.miniTempBuffer.subarray(0, i + 1);
    }
  }),
  recordError: function recordError(errorCode) {
    if (!GL.lastError) {
      GL.lastError = errorCode;
    }
  },
  getNewId: (function(table) {
    var ret = GL.counter++;
    for (var i = table.length; i < ret; i++) {
      table[i] = null;
    }
    return ret;
  }),
  MINI_TEMP_BUFFER_SIZE: 16,
  miniTempBuffer: null,
  miniTempBufferViews: [0],
  getSource: (function(shader, count, string, length) {
    var source = '';
    for (var i = 0; i < count; ++i) {
      var frag;
      if (length) {
        var len = HEAP32[length + i * 4 >> 2];
        if (len < 0) {
          frag = Pointer_stringify(HEAP32[string + i * 4 >> 2]);
        } else {
          frag = Pointer_stringify(HEAP32[string + i * 4 >> 2], len);
        }
      } else {
        frag = Pointer_stringify(HEAP32[string + i * 4 >> 2]);
      }
      source += frag;
    }
    return source;
  }),
  computeImageSize: (function(width, height, sizePerPixel, alignment) {
    function roundedToNextMultipleOf(x, y) {
      return Math.floor((x + y - 1) / y) * y;
    }
    var plainRowSize = width * sizePerPixel;
    var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);
    return height <= 0 ? 0 : (height - 1) * alignedRowSize + plainRowSize;
  }),
  get: (function(name_, p, type) {
    if (!p) {
      GL.recordError(1281);
      return;
    }
    var ret = undefined;
    switch (name_) {
      case 36346:
        ret = 1;
        break;
      case 36344:
        if (type !== 'Integer') {
          GL.recordError(1280);
        }
        return;
      case 36345:
        ret = 0;
        break;
      case 34466:
        var formats = GLctx.getParameter(34467);
        ret = formats.length;
        break;
      case 35738:
        ret = 5121;
        break;
      case 35739:
        ret = 6408;
        break;
    }
    if (ret === undefined) {
      var result = GLctx.getParameter(name_);
      switch (typeof result) {
        case 'number':
          ret = result;
          break;
        case 'boolean':
          ret = result ? 1 : 0;
          break;
        case 'string':
          GL.recordError(1280);
          return;
        case 'object':
          if (result === null) {
            switch (name_) {
              case 34964:
              case 35725:
              case 34965:
              case 36006:
              case 36007:
              case 32873:
              case 34068:
                {
                  ret = 0;
                  break;
                }
              default:
                {
                  GL.recordError(1280);
                  return;
                }
            }
          } else if (result instanceof Float32Array || result instanceof Uint32Array || result instanceof Int32Array || result instanceof Array) {
            for (var i = 0; i < result.length; ++i) {
              switch (type) {
                case 'Integer':
                  HEAP32[p + i * 4 >> 2] = result[i];
                  break;
                case 'Float':
                  HEAPF32[p + i * 4 >> 2] = result[i];
                  break;
                case 'Boolean':
                  HEAP8[p + i >> 0] = result[i] ? 1 : 0;
                  break;
                default:
                  throw 'internal glGet error, bad type: ' + type;
              }
            }
            return;
          } else if (result instanceof WebGLBuffer || result instanceof WebGLProgram || result instanceof WebGLFramebuffer || result instanceof WebGLRenderbuffer || result instanceof WebGLTexture) {
            ret = result.name | 0;
          } else {
            GL.recordError(1280);
            return;
          }
          break;
        default:
          GL.recordError(1280);
          return;
      }
    }
    switch (type) {
      case 'Integer':
        HEAP32[p >> 2] = ret;
        break;
      case 'Float':
        HEAPF32[p >> 2] = ret;
        break;
      case 'Boolean':
        HEAP8[p >> 0] = ret ? 1 : 0;
        break;
      default:
        throw 'internal glGet error, bad type: ' + type;
    }
  }),
  getTexPixelData: (function(type, format, width, height, pixels, internalFormat) {
    var sizePerPixel;
    var numChannels;
    switch (format) {
      case 6406:
      case 6409:
      case 6402:
        numChannels = 1;
        break;
      case 6410:
      case 33319:
        numChannels = 2;
        break;
      case 6407:
        numChannels = 3;
        break;
      case 6408:
        numChannels = 4;
        break;
      default:
        GL.recordError(1280);
        return {
          pixels: null,
          internalFormat: 0
        };
    }
    switch (type) {
      case 5121:
        sizePerPixel = numChannels * 1;
        break;
      case 5123:
      case 36193:
        sizePerPixel = numChannels * 2;
        break;
      case 5125:
      case 5126:
        sizePerPixel = numChannels * 4;
        break;
      case 34042:
        sizePerPixel = 4;
        break;
      case 33635:
      case 32819:
      case 32820:
        sizePerPixel = 2;
        break;
      default:
        GL.recordError(1280);
        return {
          pixels: null,
          internalFormat: 0
        };
    }
    var bytes = GL.computeImageSize(width, height, sizePerPixel, GL.unpackAlignment);
    if (type === 5121) {
      pixels = HEAPU8.subarray(pixels, pixels + bytes);
    } else if (type === 5126) {
      pixels = HEAPF32.subarray(pixels >> 2, pixels + bytes >> 2);
    } else if (type === 5125 || type === 34042) {
      pixels = HEAPU32.subarray(pixels >> 2, pixels + bytes >> 2);
    } else {
      pixels = HEAPU16.subarray(pixels >> 1, pixels + bytes >> 1);
    }
    return {
      pixels: pixels,
      internalFormat: internalFormat
    };
  }),
  validateBufferTarget: (function(target) {
    switch (target) {
      case 34962:
      case 34963:
      case 36662:
      case 36663:
      case 35051:
      case 35052:
      case 35882:
      case 35982:
      case 35345:
        return true;
      default:
        return false;
    }
  }),
  createContext: (function(canvas, webGLContextAttributes) {
    if (typeof webGLContextAttributes.majorVersion === 'undefined' && typeof webGLContextAttributes.minorVersion === 'undefined') {
      webGLContextAttributes.majorVersion = 1;
      webGLContextAttributes.minorVersion = 0;
    }
    var ctx;
    var errorInfo = '?';

    function onContextCreationError(event) {
      errorInfo = event.statusMessage || errorInfo;
    }
    try {
      canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
      try {
        if (webGLContextAttributes.majorVersion === 1 && webGLContextAttributes.minorVersion === 0) {
          ctx = canvas.getContext('webgl', webGLContextAttributes) || canvas.getContext('experimental-webgl', webGLContextAttributes);
        } else if (webGLContextAttributes.majorVersion === 2 && webGLContextAttributes.minorVersion === 0) {
          ctx = canvas.getContext('webgl2', webGLContextAttributes) || canvas.getContext('experimental-webgl2', webGLContextAttributes);
        } else {
          throw 'Unsupported WebGL context version ' + majorVersion + '.' + minorVersion + "!";
        }
      } finally {
        canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
      }
      if (!ctx) throw ":(";
    } catch (e) {
      Module.print('Could not create canvas: ' + [errorInfo, e, JSON.stringify(webGLContextAttributes)]);
      return 0;
    }
    if (!ctx) return 0;
    return GL.registerContext(ctx, webGLContextAttributes);
  }),
  registerContext: (function(ctx, webGLContextAttributes) {
    var handle = GL.getNewId(GL.contexts);
    var context = {
      handle: handle,
      version: webGLContextAttributes.majorVersion,
      GLctx: ctx
    };
    if (ctx.canvas) ctx.canvas.GLctxObject = context;
    GL.contexts[handle] = context;
    if (typeof webGLContextAttributes['enableExtensionsByDefault'] === 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {
      GL.initExtensions(context);
    }
    return handle;
  }),
  makeContextCurrent: (function(contextHandle) {
    var context = GL.contexts[contextHandle];
    if (!context) return false;
    GLctx = Module.ctx = context.GLctx;
    GL.currentContext = context;
    return true;
  }),
  getContext: (function(contextHandle) {
    return GL.contexts[contextHandle];
  }),
  deleteContext: (function(contextHandle) {
    if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = 0;
    if (typeof JSEvents === 'object') JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].canvas);
    if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined;
    GL.contexts[contextHandle] = null;
  }),
  initExtensions: (function(context) {
    if (!context) context = GL.currentContext;
    if (context.initExtensionsDone) return;
    context.initExtensionsDone = true;
    var GLctx = context.GLctx;
    context.maxVertexAttribs = GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);
    context.compressionExt = GLctx.getExtension('WEBGL_compressed_texture_s3tc') || GLctx.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || GLctx.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');
    context.anisotropicExt = GLctx.getExtension('EXT_texture_filter_anisotropic') || GLctx.getExtension('MOZ_EXT_texture_filter_anisotropic') || GLctx.getExtension('WEBKIT_EXT_texture_filter_anisotropic');
    context.floatExt = GLctx.getExtension('OES_texture_float');
    context.instancedArraysExt = GLctx.getExtension('ANGLE_instanced_arrays');
    context.vaoExt = GLctx.getExtension('OES_vertex_array_object');
    if (context.version === 2) {
      context.drawBuffersExt = (function(n, bufs) {
        GLctx.drawBuffers(n, bufs);
      });
    } else {
      var ext = GLctx.getExtension('WEBGL_draw_buffers');
      if (ext) {
        context.drawBuffersExt = (function(n, bufs) {
          ext.drawBuffersWEBGL(n, bufs);
        });
      }
    }
    var automaticallyEnabledExtensions = ['OES_texture_float', 'OES_texture_half_float', 'OES_standard_derivatives', 'OES_vertex_array_object', 'WEBGL_compressed_texture_s3tc', 'WEBGL_depth_texture', 'OES_element_index_uint', 'EXT_texture_filter_anisotropic', 'ANGLE_instanced_arrays', 'OES_texture_float_linear', 'OES_texture_half_float_linear', 'WEBGL_compressed_texture_atc', 'WEBGL_compressed_texture_pvrtc', 'EXT_color_buffer_half_float', 'WEBGL_color_buffer_float', 'EXT_frag_depth', 'EXT_sRGB', 'WEBGL_draw_buffers', 'WEBGL_shared_resources', 'EXT_shader_texture_lod'];

    function shouldEnableAutomatically(extension) {
      var ret = false;
      automaticallyEnabledExtensions.forEach((function(include) {
        if (ext.indexOf(include) !== -1) {
          ret = true;
        }
      }));
      return ret;
    }
    GLctx.getSupportedExtensions().forEach((function(ext) {
      ext = ext.replace('MOZ_', '').replace('WEBKIT_', '');
      if (automaticallyEnabledExtensions.indexOf(ext) !== -1) {
        GLctx.getExtension(ext);
      }
    }));
  }),
  populateUniformTable: (function(program) {
    var p = GL.programs[program];
    GL.programInfos[program] = {
      uniforms: {},
      maxUniformLength: 0,
      maxAttributeLength: -1
    };
    var ptable = GL.programInfos[program];
    var utable = ptable.uniforms;
    var numUniforms = GLctx.getProgramParameter(p, GLctx.ACTIVE_UNIFORMS);
    for (var i = 0; i < numUniforms; ++i) {
      var u = GLctx.getActiveUniform(p, i);
      var name = u.name;
      ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name.length + 1);
      if (name.indexOf(']', name.length - 1) !== -1) {
        var ls = name.lastIndexOf('[');
        name = name.slice(0, ls);
      }
      var loc = GLctx.getUniformLocation(p, name);
      var id = GL.getNewId(GL.uniforms);
      utable[name] = [u.size, id];
      GL.uniforms[id] = loc;
      for (var j = 1; j < u.size; ++j) {
        var n = name + '[' + j + ']';
        loc = GLctx.getUniformLocation(p, n);
        id = GL.getNewId(GL.uniforms);
        GL.uniforms[id] = loc;
      }
    }
  })
};

function _SDL_SetVideoMode(width, height, depth, flags) {
  ['touchstart', 'touchend', 'touchmove', 'mousedown', 'mouseup', 'mousemove', 'DOMMouseScroll', 'mousewheel', 'wheel', 'mouseout'].forEach((function(event) {
    Module['canvas'].addEventListener(event, SDL.receiveEvent, true);
  }));
  var canvas = Module['canvas'];
  if (width === 0 && height === 0) {
    width = canvas.width;
    height = canvas.height;
  }
  if (!SDL.addedResizeListener) {
    SDL.addedResizeListener = true;
    Browser.resizeListeners.push((function(w, h) {
      if (!SDL.settingVideoMode) {
        SDL.receiveEvent({
          type: 'resize',
          w: w,
          h: h
        });
      }
    }));
  }
  if (width !== canvas.width || height !== canvas.height) {
    SDL.settingVideoMode = true;
    Browser.setCanvasSize(width, height);
    SDL.settingVideoMode = false;
  }
  if (SDL.screen) {
    SDL.freeSurface(SDL.screen);
    assert(!SDL.screen);
  }
  if (SDL.GL) flags = flags | 67108864;
  SDL.screen = SDL.makeSurface(width, height, flags, true, 'screen');
  return SDL.screen;
}
Module['_strncpy'] = _strncpy;
var _log = Math_log;

function _mktime(tmPtr) {
  _tzset();
  var date = new Date(HEAP32[tmPtr + 20 >> 2] + 1900, HEAP32[tmPtr + 16 >> 2], HEAP32[tmPtr + 12 >> 2], HEAP32[tmPtr + 8 >> 2], HEAP32[tmPtr + 4 >> 2], HEAP32[tmPtr >> 2], 0);
  var dst = HEAP32[tmPtr + 32 >> 2];
  var guessedOffset = date.getTimezoneOffset();
  var start = new Date(date.getFullYear(), 0, 1);
  var summerOffset = (new Date(2e3, 6, 1)).getTimezoneOffset();
  var winterOffset = start.getTimezoneOffset();
  var dstOffset = Math.min(winterOffset, summerOffset);
  if (dst < 0) {
    HEAP32[tmPtr + 32 >> 2] = Number(winterOffset !== guessedOffset);
  } else if (dst > 0 !== (winterOffset !== guessedOffset)) {
    var summerOffset = (new Date(date.getFullYear(), 6, 1)).getTimezoneOffset();
    var trueOffset = dst > 0 ? summerOffset : winterOffset;
    date.setTime(date.getTime() + (trueOffset - guessedOffset) * 6e4);
  }
  HEAP32[tmPtr + 24 >> 2] = date.getDay();
  var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;
  HEAP32[tmPtr + 28 >> 2] = yday;
  return date.getTime() / 1e3 | 0;
}

function _fdopen(fildes, mode) {
  mode = Pointer_stringify(mode);
  var stream = FS.getStream(fildes);
  if (!stream) {
    ___setErrNo(ERRNO_CODES.EBADF);
    return 0;
  }
  if (mode.indexOf('w') !== -1 && !stream.isWrite || mode.indexOf('r') !== -1 && !stream.isRead || mode.indexOf('a') !== -1 && !stream.isAppend || mode.indexOf('+') !== -1 && (!stream.isRead || !stream.isWrite)) {
    ___setErrNo(ERRNO_CODES.EINVAL);
    return 0;
  } else {
    stream.error = false;
    stream.eof = false;
    return FS.getPtrForStream(stream);
  }
}
var PTHREAD_SPECIFIC_NEXT_KEY = 1;

function _pthread_key_create(key, destructor) {
  if (key === 0) {
    return ERRNO_CODES.EINVAL;
  }
  HEAP32[key >> 2] = PTHREAD_SPECIFIC_NEXT_KEY;
  PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
  PTHREAD_SPECIFIC_NEXT_KEY++;
  return 0;
}

function _SDL_Flip(surf) {}

function _mknod(path, mode, dev) {
  path = Pointer_stringify(path);
  switch (mode & 61440) {
    case 32768:
    case 8192:
    case 24576:
    case 4096:
    case 49152:
      break;
    default:
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
  }
  try {
    FS.mknod(path, mode, dev);
    return 0;
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _mkdir(path, mode) {
  path = Pointer_stringify(path);
  path = PATH.normalize(path);
  if (path[path.length - 1] === '/') path = path.substr(0, path.length - 1);
  try {
    FS.mkdir(path, mode, 0);
    return 0;
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _putc() {
  return _fputc.apply(null, arguments);
}

function _SDL_InitSubSystem(flags) {
  return 0;
}

function _SDL_GetError() {
  if (!SDL.errorMessage) {
    SDL.errorMessage = allocate(intArrayFromString('unknown SDL-emscripten error'), 'i8', ALLOC_NORMAL);
  }
  return SDL.errorMessage;
}
Module['_bitshift64Lshr'] = _bitshift64Lshr;
var _BDtoIHigh = true;

function _pthread_cond_broadcast() {
  return 0;
}

function _vfprintf(s, f, va_arg) {
  return _fprintf(s, f, HEAP32[va_arg >> 2]);
}

function _pthread_mutex_unlock() {}

function _SDL_WM_SetCaption(title, icon) {
  title = title && Pointer_stringify(title);
  icon = icon && Pointer_stringify(icon);
}

function _SDL_JoystickGetHat(joystick, hat) {
  return 0;
}
var _llvm_pow_f64 = Math_pow;

function _sbrk(bytes) {
  var self = _sbrk;
  if (!self.called) {
    DYNAMICTOP = alignMemoryPage(DYNAMICTOP);
    self.called = true;
    assert(Runtime.dynamicAlloc);
    self.alloc = Runtime.dynamicAlloc;
    Runtime.dynamicAlloc = (function() {
      abort('cannot dynamically allocate, sbrk now has control');
    });
  }
  var ret = DYNAMICTOP;
  if (bytes !== 0) self.alloc(bytes);
  return ret;
}
Module['_bitshift64Shl'] = _bitshift64Shl;

function _emscripten_cancel_main_loop() {
  Browser.mainLoop.pause();
  Browser.mainLoop.func = null;
}

function _catclose(catd) {
  return 0;
}

function _SDL_AudioQuit() {
  for (var i = 0; i < SDL.numChannels; ++i) {
    if (SDL.channels[i].audio) {
      SDL.channels[i].audio.pause();
      SDL.channels[i].audio = undefined;
    }
  }
  if (SDL.music.audio) SDL.music.audio.pause();
  SDL.music.audio = undefined;
}

function _SDL_Quit() {
  _SDL_AudioQuit();
  Module.print('SDL_Quit called (and ignored)');
}
Module['_llvm_bswap_i32'] = _llvm_bswap_i32;

function ___cxa_guard_release() {}

function _ungetc(c, stream) {
  stream = FS.getStreamFromPtr(stream);
  if (!stream) {
    return -1;
  }
  if (c === -1) {
    return c;
  }
  c = unSign(c & 255);
  stream.ungotten.push(c);
  stream.eof = false;
  return c;
}

function _SDL_OpenAudio(desired, obtained) {
  try {
    SDL.audio = {
      freq: HEAPU32[desired >> 2],
      format: HEAPU16[desired + 4 >> 1],
      channels: HEAPU8[desired + 6 >> 0],
      samples: HEAPU16[desired + 8 >> 1],
      callback: HEAPU32[desired + 16 >> 2],
      userdata: HEAPU32[desired + 20 >> 2],
      paused: true,
      timer: null
    };
    if (SDL.audio.format === 8) {
      SDL.audio.silence = 128;
    } else if (SDL.audio.format === 32784) {
      SDL.audio.silence = 0;
    } else {
      throw 'Invalid SDL audio format ' + SDL.audio.format + "!";
    }
    if (SDL.audio.freq <= 0) {
      throw 'Unsupported sound frequency ' + SDL.audio.freq + "!";
    } else if (SDL.audio.freq <= 22050) {
      SDL.audio.freq = 22050;
    } else if (SDL.audio.freq <= 32e3) {
      SDL.audio.freq = 32e3;
    } else if (SDL.audio.freq <= 44100) {
      SDL.audio.freq = 44100;
    } else if (SDL.audio.freq <= 48e3) {
      SDL.audio.freq = 48e3;
    } else if (SDL.audio.freq <= 96e3) {
      SDL.audio.freq = 96e3;
    } else {
      throw 'Unsupported sound frequency ' + SDL.audio.freq + "!";
    }
    if (SDL.audio.channels === 0) {
      SDL.audio.channels = 1;
    } else if (SDL.audio.channels < 0 || SDL.audio.channels > 32) {
      throw 'Unsupported number of audio channels for SDL audio: ' + SDL.audio.channels + "!";
    } else if (SDL.audio.channels !== 1 && SDL.audio.channels !== 2) {
      console.log('Warning: Using untested number of audio channels ' + SDL.audio.channels);
    }
    if (SDL.audio.samples < 128 || SDL.audio.samples > 524288) {
      throw 'Unsupported audio callback buffer size ' + SDL.audio.samples + "!";
    } else if ((SDL.audio.samples & SDL.audio.samples - 1) !== 0) {
      throw 'Audio callback buffer size ' + SDL.audio.samples + " must be a power-of-two!";
    }
    var totalSamples = SDL.audio.samples * SDL.audio.channels;
    SDL.audio.bytesPerSample = SDL.audio.format === 8 || SDL.audio.format === 32776 ? 1 : 2;
    SDL.audio.bufferSize = totalSamples * SDL.audio.bytesPerSample;
    SDL.audio.bufferDurationSecs = SDL.audio.bufferSize / SDL.audio.bytesPerSample / SDL.audio.channels / SDL.audio.freq;
    SDL.audio.bufferingDelay = 50 / 1e3;
    SDL.audio.buffer = _malloc(SDL.audio.bufferSize);
    SDL.audio.numSimultaneouslyQueuedBuffers = Module['SDL_numSimultaneouslyQueuedBuffers'] || 5;
    SDL.audio.queueNewAudioData = function SDL_queueNewAudioData() {
      if (!SDL.audio) return;
      for (var i = 0; i < SDL.audio.numSimultaneouslyQueuedBuffers; ++i) {
        var secsUntilNextPlayStart = SDL.audio.nextPlayTime - SDL.audioContext['currentTime'];
        if (secsUntilNextPlayStart >= SDL.audio.bufferingDelay + SDL.audio.bufferDurationSecs * SDL.audio.numSimultaneouslyQueuedBuffers) return;
        Runtime.dynCall('viii', SDL.audio.callback, [SDL.audio.userdata, SDL.audio.buffer, SDL.audio.bufferSize]);
        SDL.audio.pushAudio(SDL.audio.buffer, SDL.audio.bufferSize);
      }
    };
    SDL.audio.caller = function SDL_audioCaller() {
      if (!SDL.audio) return;
      --SDL.audio.numAudioTimersPending;
      SDL.audio.queueNewAudioData();
      var secsUntilNextPlayStart = SDL.audio.nextPlayTime - SDL.audioContext['currentTime'];
      var preemptBufferFeedSecs = SDL.audio.bufferDurationSecs / 2;
      if (SDL.audio.numAudioTimersPending < SDL.audio.numSimultaneouslyQueuedBuffers) {
        ++SDL.audio.numAudioTimersPending;
        SDL.audio.timer = Browser.safeSetTimeout(SDL.audio.caller, Math.max(0, 1e3 * (secsUntilNextPlayStart - preemptBufferFeedSecs)));
        if (SDL.audio.numAudioTimersPending < SDL.audio.numSimultaneouslyQueuedBuffers) {
          ++SDL.audio.numAudioTimersPending;
          Browser.safeSetTimeout(SDL.audio.caller, 1);
        }
      }
    };
    SDL.audio.audioOutput = new Audio;
    SDL.openAudioContext();
    if (!SDL.audioContext) throw 'Web Audio API is not available!';
    SDL.audio.nextPlayTime = 0;
    SDL.audio.pushAudio = (function(ptr, sizeBytes) {
      try {
        if (SDL.audio.paused) return;
        var sizeSamples = sizeBytes / SDL.audio.bytesPerSample;
        var sizeSamplesPerChannel = sizeSamples / SDL.audio.channels;
        if (sizeSamplesPerChannel !== SDL.audio.samples) {
          throw "Received mismatching audio buffer size!";
        }
        var source = SDL.audioContext['createBufferSource']();
        var soundBuffer = SDL.audioContext['createBuffer'](SDL.audio.channels, sizeSamplesPerChannel, SDL.audio.freq);
        source['connect'](SDL.audioContext['destination']);
        SDL.fillWebAudioBufferFromHeap(ptr, sizeSamplesPerChannel, soundBuffer);
        source['buffer'] = soundBuffer;
        var curtime = SDL.audioContext['currentTime'];
        var playtime = Math.max(curtime + SDL.audio.bufferingDelay, SDL.audio.nextPlayTime);
        if (typeof source['start'] !== 'undefined') {
          source['start'](playtime);
        } else if (typeof source['noteOn'] !== 'undefined') {
          source['noteOn'](playtime);
        }
        SDL.audio.nextPlayTime = playtime + SDL.audio.bufferDurationSecs;
      } catch (e) {
        console.log('Web Audio API error playing back audio: ' + e.toString());
      }
    });
    if (obtained) {
      HEAP32[obtained >> 2] = SDL.audio.freq;
      HEAP16[obtained + 4 >> 1] = SDL.audio.format;
      HEAP8[obtained + 6 >> 0] = SDL.audio.channels;
      HEAP8[obtained + 7 >> 0] = SDL.audio.silence;
      HEAP16[obtained + 8 >> 1] = SDL.audio.samples;
      HEAP32[obtained + 16 >> 2] = SDL.audio.callback;
      HEAP32[obtained + 20 >> 2] = SDL.audio.userdata;
    }
    SDL.allocateChannels(32);
  } catch (e) {
    console.log('Initializing SDL audio threw an exception: "' + e.toString() + '"! Continuing without audio.');
    SDL.audio = null;
    SDL.allocateChannels(0);
    if (obtained) {
      HEAP32[obtained >> 2] = 0;
      HEAP16[obtained + 4 >> 1] = 0;
      HEAP8[obtained + 6 >> 0] = 0;
      HEAP8[obtained + 7 >> 0] = 0;
      HEAP16[obtained + 8 >> 1] = 0;
      HEAP32[obtained + 16 >> 2] = 0;
      HEAP32[obtained + 20 >> 2] = 0;
    }
  }
  if (!SDL.audio) {
    return -1;
  }
  return 0;
}

function _SDL_UnlockAudio() {}

function _uselocale(locale) {
  var old = LOCALE.curr;
  if (locale) LOCALE.curr = locale;
  return old;
}

function _rename(old_path, new_path) {
  old_path = Pointer_stringify(old_path);
  new_path = Pointer_stringify(new_path);
  try {
    FS.rename(old_path, new_path);
    return 0;
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _sysconf(name) {
  switch (name) {
    case 30:
      return PAGE_SIZE;
    case 132:
    case 133:
    case 12:
    case 137:
    case 138:
    case 15:
    case 235:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 149:
    case 13:
    case 10:
    case 236:
    case 153:
    case 9:
    case 21:
    case 22:
    case 159:
    case 154:
    case 14:
    case 77:
    case 78:
    case 139:
    case 80:
    case 81:
    case 79:
    case 82:
    case 68:
    case 67:
    case 164:
    case 11:
    case 29:
    case 47:
    case 48:
    case 95:
    case 52:
    case 51:
    case 46:
      return 200809;
    case 27:
    case 246:
    case 127:
    case 128:
    case 23:
    case 24:
    case 160:
    case 161:
    case 181:
    case 182:
    case 242:
    case 183:
    case 184:
    case 243:
    case 244:
    case 245:
    case 165:
    case 178:
    case 179:
    case 49:
    case 50:
    case 168:
    case 169:
    case 175:
    case 170:
    case 171:
    case 172:
    case 97:
    case 76:
    case 32:
    case 173:
    case 35:
      return -1;
    case 176:
    case 177:
    case 7:
    case 155:
    case 8:
    case 157:
    case 125:
    case 126:
    case 92:
    case 93:
    case 129:
    case 130:
    case 131:
    case 94:
    case 91:
      return 1;
    case 74:
    case 60:
    case 69:
    case 70:
    case 4:
      return 1024;
    case 31:
    case 42:
    case 72:
      return 32;
    case 87:
    case 26:
    case 33:
      return 2147483647;
    case 34:
    case 1:
      return 47839;
    case 38:
    case 36:
      return 99;
    case 43:
    case 37:
      return 2048;
    case 0:
      return 2097152;
    case 3:
      return 65536;
    case 28:
      return 32768;
    case 44:
      return 32767;
    case 75:
      return 16384;
    case 39:
      return 1e3;
    case 89:
      return 700;
    case 71:
      return 256;
    case 40:
      return 255;
    case 2:
      return 100;
    case 180:
      return 64;
    case 25:
      return 20;
    case 5:
      return 16;
    case 6:
      return 6;
    case 73:
      return 4;
    case 84:
      {
        if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
        return 1;
      }
  }
  ___setErrNo(ERRNO_CODES.EINVAL);
  return -1;
}

function _SDL_MapRGB(fmt, r, g, b) {
  SDL.checkPixelFormat(fmt);
  return r & 255 | (g & 255) << 8 | (b & 255) << 16 | 4278190080;
}
var _SItoD = true;

function _ftello() {
  return _ftell.apply(null, arguments);
}

function _pthread_getspecific(key) {
  return PTHREAD_SPECIFIC[key] || 0;
}
var _DtoIHigh = true;

function __isLeapYear(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}

function __arraySum(array, index) {
  var sum = 0;
  for (var i = 0; i <= index; sum += array[i++]);
  return sum;
}
var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

function __addDays(date, days) {
  var newDate = new Date(date.getTime());
  while (days > 0) {
    var leap = __isLeapYear(newDate.getFullYear());
    var currentMonth = newDate.getMonth();
    var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
    if (days > daysInCurrentMonth - newDate.getDate()) {
      days -= daysInCurrentMonth - newDate.getDate() + 1;
      newDate.setDate(1);
      if (currentMonth < 11) {
        newDate.setMonth(currentMonth + 1);
      } else {
        newDate.setMonth(0);
        newDate.setFullYear(newDate.getFullYear() + 1);
      }
    } else {
      newDate.setDate(newDate.getDate() + days);
      return newDate;
    }
  }
  return newDate;
}

function _strftime(s, maxsize, format, tm) {
  var tm_zone = HEAP32[tm + 40 >> 2];
  var date = {
    tm_sec: HEAP32[tm >> 2],
    tm_min: HEAP32[tm + 4 >> 2],
    tm_hour: HEAP32[tm + 8 >> 2],
    tm_mday: HEAP32[tm + 12 >> 2],
    tm_mon: HEAP32[tm + 16 >> 2],
    tm_year: HEAP32[tm + 20 >> 2],
    tm_wday: HEAP32[tm + 24 >> 2],
    tm_yday: HEAP32[tm + 28 >> 2],
    tm_isdst: HEAP32[tm + 32 >> 2],
    tm_gmtoff: HEAP32[tm + 36 >> 2],
    tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
  };
  var pattern = Pointer_stringify(format);
  var EXPANSION_RULES_1 = {
    '%c': '%a %b %d %H:%M:%S %Y',
    '%D': '%m/%d/%y',
    '%F': '%Y-%m-%d',
    '%h': '%b',
    '%r': '%I:%M:%S %p',
    '%R': '%H:%M',
    '%T': '%H:%M:%S',
    '%x': '%m/%d/%y',
    '%X': '%H:%M:%S'
  };
  for (var rule in EXPANSION_RULES_1) {
    pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
  }
  var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
  var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

  function leadingSomething(value, digits, character) {
    var str = typeof value === 'number' ? value.toString() : value || '';
    while (str.length < digits) {
      str = character[0] + str;
    }
    return str;
  }

  function leadingNulls(value, digits) {
    return leadingSomething(value, digits, '0');
  }

  function compareByDay(date1, date2) {
    function sgn(value) {
      return value < 0 ? -1 : value > 0 ? 1 : 0;
    }
    var compare;
    if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
      if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
        compare = sgn(date1.getDate() - date2.getDate());
      }
    }
    return compare;
  }

  function getFirstWeekStartDate(janFourth) {
    switch (janFourth.getDay()) {
      case 0:
        return new Date(janFourth.getFullYear() - 1, 11, 29);
      case 1:
        return janFourth;
      case 2:
        return new Date(janFourth.getFullYear(), 0, 3);
      case 3:
        return new Date(janFourth.getFullYear(), 0, 2);
      case 4:
        return new Date(janFourth.getFullYear(), 0, 1);
      case 5:
        return new Date(janFourth.getFullYear() - 1, 11, 31);
      case 6:
        return new Date(janFourth.getFullYear() - 1, 11, 30);
    }
  }

  function getWeekBasedYear(date) {
    var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
    var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
    var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
    var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
    var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
    if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
      if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
        return thisDate.getFullYear() + 1;
      } else {
        return thisDate.getFullYear();
      }
    } else {
      return thisDate.getFullYear() - 1;
    }
  }
  var EXPANSION_RULES_2 = {
    '%a': (function(date) {
      return WEEKDAYS[date.tm_wday].substring(0, 3);
    }),
    '%A': (function(date) {
      return WEEKDAYS[date.tm_wday];
    }),
    '%b': (function(date) {
      return MONTHS[date.tm_mon].substring(0, 3);
    }),
    '%B': (function(date) {
      return MONTHS[date.tm_mon];
    }),
    '%C': (function(date) {
      var year = date.tm_year + 1900;
      return leadingNulls(year / 100 | 0, 2);
    }),
    '%d': (function(date) {
      return leadingNulls(date.tm_mday, 2);
    }),
    '%e': (function(date) {
      return leadingSomething(date.tm_mday, 2, ' ');
    }),
    '%g': (function(date) {
      return getWeekBasedYear(date).toString().substring(2);
    }),
    '%G': (function(date) {
      return getWeekBasedYear(date);
    }),
    '%H': (function(date) {
      return leadingNulls(date.tm_hour, 2);
    }),
    '%I': (function(date) {
      return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour - 12, 2);
    }),
    '%j': (function(date) {
      return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
    }),
    '%m': (function(date) {
      return leadingNulls(date.tm_mon + 1, 2);
    }),
    '%M': (function(date) {
      return leadingNulls(date.tm_min, 2);
    }),
    '%n': (function() {
      return "\n";
    }),
    '%p': (function(date) {
      if (date.tm_hour > 0 && date.tm_hour < 13) {
        return "AM";
      } else {
        return "PM";
      }
    }),
    '%S': (function(date) {
      return leadingNulls(date.tm_sec, 2);
    }),
    '%t': (function() {
      return "\t";
    }),
    '%u': (function(date) {
      var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
      return day.getDay() || 7;
    }),
    '%U': (function(date) {
      var janFirst = new Date(date.tm_year + 1900, 0, 1);
      var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());
      var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
      if (compareByDay(firstSunday, endDate) < 0) {
        var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
        var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();
        var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
        return leadingNulls(Math.ceil(days / 7), 2);
      }
      return compareByDay(firstSunday, janFirst) === 0 ? '01' : "00";
    }),
    '%V': (function(date) {
      var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);
      var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);
      var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
      var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
      var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
      if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
        return "53";
      }
      if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
        return "01";
      }
      var daysDifference;
      if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {
        daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();
      } else {
        daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();
      }
      return leadingNulls(Math.ceil(daysDifference / 7), 2);
    }),
    '%w': (function(date) {
      var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
      return day.getDay();
    }),
    '%W': (function(date) {
      var janFirst = new Date(date.tm_year, 0, 1);
      var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);
      var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
      if (compareByDay(firstMonday, endDate) < 0) {
        var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
        var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();
        var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
        return leadingNulls(Math.ceil(days / 7), 2);
      }
      return compareByDay(firstMonday, janFirst) === 0 ? '01' : "00";
    }),
    '%y': (function(date) {
      return (date.tm_year + 1900).toString().substring(2);
    }),
    '%Y': (function(date) {
      return date.tm_year + 1900;
    }),
    '%z': (function(date) {
      var off = date.tm_gmtoff;
      var ahead = off >= 0;
      off = Math.abs(off) / 60;
      off = off / 60 * 100 + off % 60;
      return (ahead ? '+' : '-') + String('0000' + off).slice(-4);
    }),
    '%Z': (function(date) {
      return date.tm_zone;
    }),
    '%%': (function() {
      return "%";
    })
  };
  for (var rule in EXPANSION_RULES_2) {
    if (pattern.indexOf(rule) >= 0) {
      pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
    }
  }
  var bytes = intArrayFromString(pattern, false);
  if (bytes.length > maxsize) {
    return 0;
  }
  writeArrayToMemory(bytes, s);
  return bytes.length - 1;
}

function _strftime_l(s, maxsize, format, tm) {
  return _strftime(s, maxsize, format, tm);
}

function _abort() {
  Module['abort']();
}

function _SDL_GetKeyName(key) {
  if (!SDL.keyName) {
    SDL.keyName = allocate(intArrayFromString('unknown key'), 'i8', ALLOC_NORMAL);
  }
  return SDL.keyName;
}

function _pthread_once(ptr, func) {
  if (!_pthread_once.seen) _pthread_once.seen = {};
  if (ptr in _pthread_once.seen) return;
  Runtime.dynCall('v', func);
  _pthread_once.seen[ptr] = 1;
}
var _tan = Math_tan;

function _emscripten_asm_const(code) {
  Runtime.getAsmConst(code, 0)();
}

function _clearerr(stream) {
  stream = FS.getStreamFromPtr(stream);
  if (!stream) {
    return;
  }
  stream.eof = false;
  stream.error = false;
}
var _fabs = Math_abs;
var _floor = Math_floor;

function _getc() {
  return _fgetc.apply(null, arguments);
}
var _sqrt = Math_sqrt;

function _SDL_PollEvent(ptr) {
  return SDL.pollEvent(ptr);
}

function _creat(path, mode) {
  return _open(path, 1 | 64 | 512, allocate([mode, 0, 0, 0], 'i32', ALLOC_STACK));
}

function _mktemp(template) {
  if (!_mktemp.counter) _mktemp.counter = 0;
  var c = (_mktemp.counter++).toString();
  var rep = 'XXXXXX';
  while (c.length < rep.length) c = '0' + c;
  writeArrayToMemory(intArrayFromString(c), template + Pointer_stringify(template).indexOf(rep));
  return template;
}

function _mkstemp(template) {
  return _creat(_mktemp(template), 384);
}

function _SDL_CreateRGBSurface(flags, width, height, depth, rmask, gmask, bmask, amask) {
  return SDL.makeSurface(width, height, flags, false, 'CreateRGBSurface', rmask, gmask, bmask, amask);
}
var _sin = Math_sin;

function _truncate(path, length) {
  if (typeof path !== 'string') path = Pointer_stringify(path);
  try {
    FS.truncate(path, length);
    return 0;
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function _ftruncate(fildes, length) {
  try {
    FS.ftruncate(fildes, length);
    return 0;
  } catch (e) {
    FS.handleFSError(e);
    return -1;
  }
}

function ___cxa_pure_virtual() {
  ABORT = true;
  throw "Pure virtual function called!";
}

function _llvm_trap() {
  abort('trap!');
}

function _SDL_JoystickNumAxes(joystick) {
  var gamepad = SDL.getGamepad(joystick - 1);
  if (gamepad) {
    return gamepad.axes.length;
  }
  return 0;
}

function _catopen(name, oflag) {
  return -1;
}

function ___ctype_toupper_loc() {
  var me = ___ctype_toupper_loc;
  if (!me.ret) {
    var values = [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255];
    var i32size = 4;
    var arr = _malloc(values.length * i32size);
    for (var i = 0; i < values.length; i++) {
      HEAP32[arr + i * i32size >> 2] = values[i];
    }
    me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
  }
  return me.ret;
}

function _closedir(dirp) {
  var fd = _fileno(dirp);
  var stream = FS.getStream(fd);
  if (stream.currReading) stream.currReading = null;
  return _close(fd);
}

function _SDL_JoystickEventState(state) {
  if (state < 0) {
    return SDL.joystickEventState;
  }
  return SDL.joystickEventState = state;
}

function ___ctype_tolower_loc() {
  var me = ___ctype_tolower_loc;
  if (!me.ret) {
    var values = [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255];
    var i32size = 4;
    var arr = _malloc(values.length * i32size);
    for (var i = 0; i < values.length; i++) {
      HEAP32[arr + i * i32size >> 2] = values[i];
    }
    me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
  }
  return me.ret;
}

function _SDL_VideoModeOK(width, height, depth, flags) {
  return depth;
}
var _atan2 = Math_atan2;

function _SDL_FreeSurface(surf) {
  if (surf) SDL.freeSurface(surf);
}

function _time(ptr) {
  var ret = Date.now() / 1e3 | 0;
  if (ptr) {
    HEAP32[ptr >> 2] = ret;
  }
  return ret;
}

function _SDL_JoystickUpdate() {
  SDL.queryJoysticks();
}
var ___dso_handle = allocate(1, 'i32*', ALLOC_STATIC);
FS.staticInit();
__ATINIT__.unshift({
  func: (function() {
    if (!Module['noFSInit'] && !FS.init.initialized) FS.init();
  })
});
__ATMAIN__.push({
  func: (function() {
    FS.ignorePermissions = false;
  })
});
__ATEXIT__.push({
  func: (function() {
    FS.quit();
  })
});
Module['FS_createFolder'] = FS.createFolder;
Module['FS_createPath'] = FS.createPath;
Module['FS_createDataFile'] = FS.createDataFile;
Module['FS_createPreloadedFile'] = FS.createPreloadedFile;
Module['FS_createLazyFile'] = FS.createLazyFile;
Module['FS_createLink'] = FS.createLink;
Module['FS_createDevice'] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4);
HEAP32[___errno_state >> 2] = 0;
__ATINIT__.unshift({
  func: (function() {
    TTY.init();
  })
});
__ATEXIT__.push({
  func: (function() {
    TTY.shutdown();
  })
});
if (ENVIRONMENT_IS_NODE) {
  var fs = require('fs');
  NODEFS.staticInit();
}
Module['requestFullScreen'] = function Module_requestFullScreen(lockPointer, resizeCanvas) {
  Browser.requestFullScreen(lockPointer, resizeCanvas);
};
Module['requestAnimationFrame'] = function Module_requestAnimationFrame(func) {
  Browser.requestAnimationFrame(func);
};
Module['setCanvasSize'] = function Module_setCanvasSize(width, height, noUpdates) {
  Browser.setCanvasSize(width, height, noUpdates);
};
Module['pauseMainLoop'] = function Module_pauseMainLoop() {
  Browser.mainLoop.pause();
};
Module['resumeMainLoop'] = function Module_resumeMainLoop() {
  Browser.mainLoop.resume();
};
Module['getUserMedia'] = function Module_getUserMedia() {
  Browser.getUserMedia();
};
___buildEnvironment(ENV);
_fputc.ret = allocate([0], 'i8', ALLOC_STATIC);
__ATINIT__.push({
  func: (function() {
    SOCKFS.root = FS.mount(SOCKFS, {}, null);
  })
});
_fgetc.ret = allocate([0], 'i8', ALLOC_STATIC);
var GLctx;
GL.init();
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true;
STACK_MAX = STACK_BASE + TOTAL_STACK;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY, 'TOTAL_MEMORY not big enough for stack');
var cttz_i8 = allocate([8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0], 'i8', ALLOC_DYNAMIC);

function invoke_iiii(index, a1, a2, a3) {
  try {
    return Module['dynCall_iiii'](index, a1, a2, a3);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
  try {
    Module['dynCall_viiiiiii'](index, a1, a2, a3, a4, a5, a6, a7);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_viiiii(index, a1, a2, a3, a4, a5) {
  try {
    Module['dynCall_viiiii'](index, a1, a2, a3, a4, a5);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module['dynCall_i'](index);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_vi(index, a1) {
  try {
    Module['dynCall_vi'](index, a1);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_vii(index, a1, a2) {
  try {
    Module['dynCall_vii'](index, a1, a2);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
  try {
    return Module['dynCall_iiiiiii'](index, a1, a2, a3, a4, a5, a6);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
  try {
    Module['dynCall_viiiiiiiii'](index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_ii(index, a1) {
  try {
    return Module['dynCall_ii'](index, a1);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_viiiiiid(index, a1, a2, a3, a4, a5, a6, a7) {
  try {
    Module['dynCall_viiiiiid'](index, a1, a2, a3, a4, a5, a6, a7);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_viii(index, a1, a2, a3) {
  try {
    Module['dynCall_viii'](index, a1, a2, a3);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_viiiiid(index, a1, a2, a3, a4, a5, a6) {
  try {
    Module['dynCall_viiiiid'](index, a1, a2, a3, a4, a5, a6);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module['dynCall_v'](index);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
  try {
    return Module['dynCall_iiiiiiiii'](index, a1, a2, a3, a4, a5, a6, a7, a8);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_iiiii(index, a1, a2, a3, a4) {
  try {
    return Module['dynCall_iiiii'](index, a1, a2, a3, a4);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
  try {
    Module['dynCall_viiiiiiii'](index, a1, a2, a3, a4, a5, a6, a7, a8);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
  try {
    Module['dynCall_viiiiii'](index, a1, a2, a3, a4, a5, a6);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_iii(index, a1, a2) {
  try {
    return Module['dynCall_iii'](index, a1, a2);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
  try {
    return Module['dynCall_iiiiii'](index, a1, a2, a3, a4, a5);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}

function invoke_viiii(index, a1, a2, a3, a4) {
  try {
    Module['dynCall_viiii'](index, a1, a2, a3, a4);
  } catch (e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm['setThrew'](1, 0);
  }
}
Module.asmGlobalArg = {
  'Math': Math,
  'Int8Array': Int8Array,
  'Int16Array': Int16Array,
  'Int32Array': Int32Array,
  'Uint8Array': Uint8Array,
  'Uint16Array': Uint16Array,
  'Uint32Array': Uint32Array,
  'Float32Array': Float32Array,
  'Float64Array': Float64Array,
  'NaN': NaN,
  'Infinity': Infinity
};
Module.asmLibraryArg = {
  'abort': abort,
  'assert': assert,
  'invoke_iiii': invoke_iiii,
  'invoke_viiiiiii': invoke_viiiiiii,
  'invoke_viiiii': invoke_viiiii,
  'invoke_i': invoke_i,
  'invoke_vi': invoke_vi,
  'invoke_vii': invoke_vii,
  'invoke_iiiiiii': invoke_iiiiiii,
  'invoke_viiiiiiiii': invoke_viiiiiiiii,
  'invoke_ii': invoke_ii,
  'invoke_viiiiiid': invoke_viiiiiid,
  'invoke_viii': invoke_viii,
  'invoke_viiiiid': invoke_viiiiid,
  'invoke_v': invoke_v,
  'invoke_iiiiiiiii': invoke_iiiiiiiii,
  'invoke_iiiii': invoke_iiiii,
  'invoke_viiiiiiii': invoke_viiiiiiii,
  'invoke_viiiiii': invoke_viiiiii,
  'invoke_iii': invoke_iii,
  'invoke_iiiiii': invoke_iiiiii,
  'invoke_viiii': invoke_viiii,
  '_fabs': _fabs,
  '_log': _log,
  '_fread': _fread,
  '___cxa_guard_acquire': ___cxa_guard_acquire,
  '_SDL_RWFromFile': _SDL_RWFromFile,
  '_fstat': _fstat,
  '_truncate': _truncate,
  '__ZSt18uncaught_exceptionv': __ZSt18uncaught_exceptionv,
  '___ctype_toupper_loc': ___ctype_toupper_loc,
  '__addDays': __addDays,
  '_ftell': _ftell,
  '_SDL_GetError': _SDL_GetError,
  '_llvm_pow_f64': _llvm_pow_f64,
  '_emscripten_set_main_loop_timing': _emscripten_set_main_loop_timing,
  '_sbrk': _sbrk,
  '_SDL_OpenAudio': _SDL_OpenAudio,
  '_SDL_FreeSurface': _SDL_FreeSurface,
  '_Mix_PlayChannel': _Mix_PlayChannel,
  '_TTF_RenderText_Solid': _TTF_RenderText_Solid,
  '_SDL_JoystickClose': _SDL_JoystickClose,
  '_sysconf': _sysconf,
  '_execl': _execl,
  '_close': _close,
  '_ferror': _ferror,
  '_SDL_InitSubSystem': _SDL_InitSubSystem,
  '_Mix_PlayMusic': _Mix_PlayMusic,
  '_cos': _cos,
  '_readdir': _readdir,
  '_recv': _recv,
  '_SDL_WaitEvent': _SDL_WaitEvent,
  '_IMG_Load': _IMG_Load,
  '_umask': _umask,
  '_unlink': _unlink,
  '_write': _write,
  '__isLeapYear': __isLeapYear,
  '_fsync': _fsync,
  '_SDL_GetModState': _SDL_GetModState,
  '___cxa_atexit': ___cxa_atexit,
  '__exit': __exit,
  '_SDL_JoystickOpen': _SDL_JoystickOpen,
  '___cxa_rethrow': ___cxa_rethrow,
  '_catclose': _catclose,
  '_Mix_HaltMusic': _Mix_HaltMusic,
  '_TTF_FontHeight': _TTF_FontHeight,
  '_mknod': _mknod,
  '_mkdir': _mkdir,
  '_closedir': _closedir,
  '_llvm_trap': _llvm_trap,
  '__formatString': __formatString,
  '_TTF_SizeText': _TTF_SizeText,
  '_send': _send,
  '_atan2': _atan2,
  '_SDL_GetTicks': _SDL_GetTicks,
  '_chmod': _chmod,
  '___cxa_free_exception': ___cxa_free_exception,
  '___cxa_find_matching_catch': ___cxa_find_matching_catch,
  '_SDL_LockAudio': _SDL_LockAudio,
  '_Mix_LoadWAV_RW': _Mix_LoadWAV_RW,
  '___cxa_guard_release': ___cxa_guard_release,
  '_opendir': _opendir,
  '_SDL_LockSurface': _SDL_LockSurface,
  '_strerror_r': _strerror_r,
  '__reallyNegative': __reallyNegative,
  '___setErrNo': ___setErrNo,
  '_creat': _creat,
  '_llvm_pow_f32': _llvm_pow_f32,
  '_newlocale': _newlocale,
  '___resumeException': ___resumeException,
  '_freelocale': _freelocale,
  '_mktime': _mktime,
  '_emscripten_force_exit': _emscripten_force_exit,
  '_SDL_SetPalette': _SDL_SetPalette,
  '_pthread_once': _pthread_once,
  '_SDL_SetColors': _SDL_SetColors,
  '_printf': _printf,
  '_SDL_JoystickGetButton': _SDL_JoystickGetButton,
  '_mktemp': _mktemp,
  '_localtime': _localtime,
  '_execlp': _execlp,
  '_stat': _stat,
  '_SDL_MapRGB': _SDL_MapRGB,
  '_SDL_CreateRGBSurface': _SDL_CreateRGBSurface,
  '_getpwnam': _getpwnam,
  '_read': _read,
  '_SDL_SetVideoMode': _SDL_SetVideoMode,
  '_fwrite': _fwrite,
  '_time': _time,
  '_pthread_mutex_lock': _pthread_mutex_lock,
  '_SDL_GetKeyName': _SDL_GetKeyName,
  '_SDL_UpperBlitScaled': _SDL_UpperBlitScaled,
  '_catopen': _catopen,
  '_exit': _exit,
  '_readdir_r': _readdir_r,
  '_putenv': _putenv,
  '_SDL_ShowCursor': _SDL_ShowCursor,
  '_fgetc': _fgetc,
  '_getcwd': _getcwd,
  '___ctype_b_loc': ___ctype_b_loc,
  '_lseek': _lseek,
  '_rename': _rename,
  '_access': _access,
  '_vfprintf': _vfprintf,
  '_SDL_Delay': _SDL_Delay,
  '_rmdir': _rmdir,
  '___cxa_allocate_exception': ___cxa_allocate_exception,
  '___buildEnvironment': ___buildEnvironment,
  '_pwrite': _pwrite,
  '_localtime_r': _localtime_r,
  '_tzset': _tzset,
  '_open': _open,
  '_fabsf': _fabsf,
  '_remove': _remove,
  '_uselocale': _uselocale,
  '_SDL_Init': _SDL_Init,
  '_SDL_WM_GrabInput': _SDL_WM_GrabInput,
  '___cxa_end_catch': ___cxa_end_catch,
  '_SDL_Quit': _SDL_Quit,
  '_perror': _perror,
  '_SDL_JoystickNumHats': _SDL_JoystickNumHats,
  '___cxa_begin_catch': ___cxa_begin_catch,
  '_pthread_getspecific': _pthread_getspecific,
  '_ftruncate': _ftruncate,
  '_emscripten_memcpy_big': _emscripten_memcpy_big,
  '_fdopen': _fdopen,
  '_putc': _putc,
  '_fseek': _fseek,
  '_SDL_JoystickName': _SDL_JoystickName,
  '_getenv': _getenv,
  '_fclose': _fclose,
  '_SDL_UpperBlit': _SDL_UpperBlit,
  '_pthread_key_create': _pthread_key_create,
  '_pthread_cond_broadcast': _pthread_cond_broadcast,
  '_SDL_NumJoysticks': _SDL_NumJoysticks,
  '_SDL_JoystickNumAxes': _SDL_JoystickNumAxes,
  '_tan': _tan,
  '_ftello': _ftello,
  '_SDL_UnlockSurface': _SDL_UnlockSurface,
  '_abort': _abort,
  '_SDL_Flip': _SDL_Flip,
  '_fopen': _fopen,
  '_SDL_JoystickGetAxis': _SDL_JoystickGetAxis,
  '_floor': _floor,
  '_SDL_JoystickEventState': _SDL_JoystickEventState,
  '_strftime': _strftime,
  '_pthread_cond_wait': _pthread_cond_wait,
  '_sin': _sin,
  '_SDL_JoystickNumButtons': _SDL_JoystickNumButtons,
  '_emscripten_asm_const': _emscripten_asm_const,
  '_SDL_UnlockAudio': _SDL_UnlockAudio,
  '___cxa_pure_virtual': ___cxa_pure_virtual,
  '_SDL_CloseAudio': _SDL_CloseAudio,
  '_ceil': _ceil,
  '_ungetc': _ungetc,
  '_calloc': _calloc,
  '_mkstemp': _mkstemp,
  '_SDL_FreeRW': _SDL_FreeRW,
  '_strftime_l': _strftime_l,
  '_fprintf': _fprintf,
  '_SDL_PauseAudio': _SDL_PauseAudio,
  '_SDL_PollEvent': _SDL_PollEvent,
  '_catgets': _catgets,
  '_strerror': _strerror,
  '_fileno': _fileno,
  '_Mix_FreeChunk': _Mix_FreeChunk,
  '_SDL_WM_SetCaption': _SDL_WM_SetCaption,
  '_IMG_Load_RW': _IMG_Load_RW,
  '__arraySum': __arraySum,
  '_fseeko': _fseeko,
  '_SDL_JoystickUpdate': _SDL_JoystickUpdate,
  '___ctype_tolower_loc': ___ctype_tolower_loc,
  '_SDL_FillRect': _SDL_FillRect,
  '_fputs': _fputs,
  '_pthread_mutex_unlock': _pthread_mutex_unlock,
  '_pread': _pread,
  '_mkport': _mkport,
  '_getc': _getc,
  '_SDL_AudioQuit': _SDL_AudioQuit,
  '_fflush': _fflush,
  '_emscripten_set_main_loop': _emscripten_set_main_loop,
  '___errno_location': ___errno_location,
  '_puts': _puts,
  '_SDL_RWFromConstMem': _SDL_RWFromConstMem,
  '_pthread_setspecific': _pthread_setspecific,
  '_clearerr': _clearerr,
  '_fputc': _fputc,
  '___cxa_throw': ___cxa_throw,
  '_SDL_VideoModeOK': _SDL_VideoModeOK,
  '_emscripten_cancel_main_loop': _emscripten_cancel_main_loop,
  '_fgets': _fgets,
  '_atexit': _atexit,
  '_sqrt': _sqrt,
  '_SDL_JoystickGetHat': _SDL_JoystickGetHat,
  'STACKTOP': STACKTOP,
  'STACK_MAX': STACK_MAX,
  'tempDoublePtr': tempDoublePtr,
  'ABORT': ABORT,
  'cttz_i8': cttz_i8,
  '___dso_handle': ___dso_handle,
  '_environ': _environ,
  '_stderr': _stderr,
  '_stdin': _stdin,
  '_stdout': _stdout
};

// EMSCRIPTEN_START_ASM
var asm = require('./asm');

// EMSCRIPTEN_END_ASM
var ___cxa_can_catch = Module['___cxa_can_catch'] = asm['___cxa_can_catch'];
var _strcat = Module['_strcat'] = asm['_strcat'];
var _free = Module['_free'] = asm['_free'];
var _dosbox_main = Module['_dosbox_main'] = asm['_dosbox_main'];
var ___cxa_is_pointer_type = Module['___cxa_is_pointer_type'] = asm['___cxa_is_pointer_type'];
var _i64Add = Module['_i64Add'] = asm['_i64Add'];
var _memmove = Module['_memmove'] = asm['_memmove'];
var _realloc = Module['_realloc'] = asm['_realloc'];
var _strlen = Module['_strlen'] = asm['_strlen'];
var _memset = Module['_memset'] = asm['_memset'];
var _malloc = Module['_malloc'] = asm['_malloc'];
var _bitshift64Ashr = Module['_bitshift64Ashr'] = asm['_bitshift64Ashr'];
var _extract_zip = Module['_extract_zip'] = asm['_extract_zip'];
var _memcpy = Module['_memcpy'] = asm['_memcpy'];
var _strncpy = Module['_strncpy'] = asm['_strncpy'];
var _bitshift64Lshr = Module['_bitshift64Lshr'] = asm['_bitshift64Lshr'];
var _i64Subtract = Module['_i64Subtract'] = asm['_i64Subtract'];
var _strcpy = Module['_strcpy'] = asm['_strcpy'];
var _llvm_bswap_i32 = Module['_llvm_bswap_i32'] = asm['_llvm_bswap_i32'];
var _bitshift64Shl = Module['_bitshift64Shl'] = asm['_bitshift64Shl'];
var __GLOBAL__sub_I_drives_cpp = Module['__GLOBAL__sub_I_drives_cpp'] = asm['__GLOBAL__sub_I_drives_cpp'];
var __GLOBAL__sub_I_dos_memory_cpp = Module['__GLOBAL__sub_I_dos_memory_cpp'] = asm['__GLOBAL__sub_I_dos_memory_cpp'];
var __GLOBAL__sub_I_dos_misc_cpp = Module['__GLOBAL__sub_I_dos_misc_cpp'] = asm['__GLOBAL__sub_I_dos_misc_cpp'];
var __GLOBAL__sub_I_shell_misc_cpp = Module['__GLOBAL__sub_I_shell_misc_cpp'] = asm['__GLOBAL__sub_I_shell_misc_cpp'];
var __GLOBAL__sub_I_shell_cpp = Module['__GLOBAL__sub_I_shell_cpp'] = asm['__GLOBAL__sub_I_shell_cpp'];
var __GLOBAL__sub_I_programs_cpp = Module['__GLOBAL__sub_I_programs_cpp'] = asm['__GLOBAL__sub_I_programs_cpp'];
var __GLOBAL__sub_I_messages_cpp = Module['__GLOBAL__sub_I_messages_cpp'] = asm['__GLOBAL__sub_I_messages_cpp'];
var __GLOBAL__sub_I_setup_cpp = Module['__GLOBAL__sub_I_setup_cpp'] = asm['__GLOBAL__sub_I_setup_cpp'];
var __GLOBAL__sub_I_sdl_mapper_cpp = Module['__GLOBAL__sub_I_sdl_mapper_cpp'] = asm['__GLOBAL__sub_I_sdl_mapper_cpp'];
var __GLOBAL__sub_I_cpu_cpp = Module['__GLOBAL__sub_I_cpu_cpp'] = asm['__GLOBAL__sub_I_cpu_cpp'];
var __GLOBAL__sub_I_vga_memory_cpp = Module['__GLOBAL__sub_I_vga_memory_cpp'] = asm['__GLOBAL__sub_I_vga_memory_cpp'];
var __GLOBAL__sub_I_hardware_cpp = Module['__GLOBAL__sub_I_hardware_cpp'] = asm['__GLOBAL__sub_I_hardware_cpp'];
var __GLOBAL__sub_I_iostream_cpp = Module['__GLOBAL__sub_I_iostream_cpp'] = asm['__GLOBAL__sub_I_iostream_cpp'];
var runPostSets = Module['runPostSets'] = asm['runPostSets'];
var dynCall_iiii = Module['dynCall_iiii'] = asm['dynCall_iiii'];
var dynCall_viiiiiii = Module['dynCall_viiiiiii'] = asm['dynCall_viiiiiii'];
var dynCall_viiiii = Module['dynCall_viiiii'] = asm['dynCall_viiiii'];
var dynCall_i = Module['dynCall_i'] = asm['dynCall_i'];
var dynCall_vi = Module['dynCall_vi'] = asm['dynCall_vi'];
var dynCall_vii = Module['dynCall_vii'] = asm['dynCall_vii'];
var dynCall_iiiiiii = Module['dynCall_iiiiiii'] = asm['dynCall_iiiiiii'];
var dynCall_viiiiiiiii = Module['dynCall_viiiiiiiii'] = asm['dynCall_viiiiiiiii'];
var dynCall_ii = Module['dynCall_ii'] = asm['dynCall_ii'];
var dynCall_viiiiiid = Module['dynCall_viiiiiid'] = asm['dynCall_viiiiiid'];
var dynCall_viii = Module['dynCall_viii'] = asm['dynCall_viii'];
var dynCall_viiiiid = Module['dynCall_viiiiid'] = asm['dynCall_viiiiid'];
var dynCall_v = Module['dynCall_v'] = asm['dynCall_v'];
var dynCall_iiiiiiiii = Module['dynCall_iiiiiiiii'] = asm['dynCall_iiiiiiiii'];
var dynCall_iiiii = Module['dynCall_iiiii'] = asm['dynCall_iiiii'];
var dynCall_viiiiiiii = Module['dynCall_viiiiiiii'] = asm['dynCall_viiiiiiii'];
var dynCall_viiiiii = Module['dynCall_viiiiii'] = asm['dynCall_viiiiii'];
var dynCall_iii = Module['dynCall_iii'] = asm['dynCall_iii'];
var dynCall_iiiiii = Module['dynCall_iiiiii'] = asm['dynCall_iiiiii'];
var dynCall_viiii = Module['dynCall_viiii'] = asm['dynCall_viiii'];
Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];
var i64Math = (function() {
  var goog = {
    math: {}
  };
  goog.math.Long = (function(low, high) {
    this.low_ = low | 0;
    this.high_ = high | 0;
  });
  goog.math.Long.IntCache_ = {};
  goog.math.Long.fromInt = (function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  });
  goog.math.Long.fromNumber = (function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
    }
  });
  goog.math.Long.fromBits = (function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  });
  goog.math.Long.fromString = (function(str, opt_radix) {
    if (str.length === 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) === '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  });
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  goog.math.Long.TWO_PWR_31_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ / 2;
  goog.math.Long.TWO_PWR_48_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  goog.math.Long.MAX_VALUE = goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 2147483648 | 0);
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  goog.math.Long.prototype.toInt = (function() {
    return this.low_;
  });
  goog.math.Long.prototype.toNumber = (function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
  });
  goog.math.Long.prototype.toString = (function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return "0";
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  });
  goog.math.Long.prototype.getHighBits = (function() {
    return this.high_;
  });
  goog.math.Long.prototype.getLowBits = (function() {
    return this.low_;
  });
  goog.math.Long.prototype.getLowBitsUnsigned = (function() {
    return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  });
  goog.math.Long.prototype.getNumBitsAbs = (function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ !== 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & 1 << bit) !== 0) {
          break;
        }
      }
      return this.high_ !== 0 ? bit + 33 : bit + 1;
    }
  });
  goog.math.Long.prototype.isZero = (function() {
    return this.high_ === 0 && this.low_ === 0;
  });
  goog.math.Long.prototype.isNegative = (function() {
    return this.high_ < 0;
  });
  goog.math.Long.prototype.isOdd = (function() {
    return (this.low_ & 1) === 1;
  });
  goog.math.Long.prototype.equals = (function(other) {
    return this.high_ === other.high_ && this.low_ === other.low_;
  });
  goog.math.Long.prototype.notEquals = (function(other) {
    return this.high_ !== other.high_ || this.low_ !== other.low_;
  });
  goog.math.Long.prototype.lessThan = (function(other) {
    return this.compare(other) < 0;
  });
  goog.math.Long.prototype.lessThanOrEqual = (function(other) {
    return this.compare(other) <= 0;
  });
  goog.math.Long.prototype.greaterThan = (function(other) {
    return this.compare(other) > 0;
  });
  goog.math.Long.prototype.greaterThanOrEqual = (function(other) {
    return this.compare(other) >= 0;
  });
  goog.math.Long.prototype.compare = (function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  });
  goog.math.Long.prototype.negate = (function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  });
  goog.math.Long.prototype.add = (function(other) {
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 65535;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 65535;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 65535;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 65535;
    var c48 = 0,
      c32 = 0,
      c16 = 0,
      c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 65535;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 65535;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 65535;
    c48 += a48 + b48;
    c48 &= 65535;
    return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
  });
  goog.math.Long.prototype.subtract = (function(other) {
    return this.add(other.negate());
  });
  goog.math.Long.prototype.multiply = (function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) && other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 65535;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 65535;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 65535;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 65535;
    var c48 = 0,
      c32 = 0,
      c16 = 0,
      c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 65535;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 65535;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 65535;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 65535;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 65535;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 65535;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 65535;
    return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
  });
  goog.math.Long.prototype.div = (function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) || other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  });
  goog.math.Long.prototype.modulo = (function(other) {
    return this.subtract(this.div(other).multiply(other));
  });
  goog.math.Long.prototype.not = (function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  });
  goog.math.Long.prototype.and = (function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
  });
  goog.math.Long.prototype.or = (function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
  });
  goog.math.Long.prototype.xor = (function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
  });
  goog.math.Long.prototype.shiftLeft = (function(numBits) {
    numBits &= 63;
    if (numBits === 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
      } else {
        return goog.math.Long.fromBits(0, low << numBits - 32);
      }
    }
  });
  goog.math.Long.prototype.shiftRight = (function(numBits) {
    numBits &= 63;
    if (numBits === 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
      } else {
        return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
      }
    }
  });
  goog.math.Long.prototype.shiftRightUnsigned = (function(numBits) {
    numBits &= 63;
    if (numBits === 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
      } else if (numBits === 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  });
  var navigator = {
    appName: 'Modern Browser'
  };
  var dbits;
  var canary = 0xdeadbeefcafe;
  var j_lm = (canary & 16777215) === 15715070;

  function BigInteger(a, b, c) {
    if (a != null)
      if ('number' === typeof a) this.fromNumber(a, b, c);
      else if (b == null && 'string' !== typeof a) this.fromString(a, 256);
    else this.fromString(a, b);
  }

  function nbi() {
    return new BigInteger(null);
  }

  function am1(i, x, w, j, c, n) {
    while (--n >= 0) {
      var v = x * this[i++] + w[j] + c;
      c = Math.floor(v / 67108864);
      w[j++] = v & 67108863;
    }
    return c;
  }

  function am2(i, x, w, j, c, n) {
    var xl = x & 32767,
      xh = x >> 15;
    while (--n >= 0) {
      var l = this[i] & 32767;
      var h = this[i++] >> 15;
      var m = xh * l + h * xl;
      l = xl * l + ((m & 32767) << 15) + w[j] + (c & 1073741823);
      c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);
      w[j++] = l & 1073741823;
    }
    return c;
  }

  function am3(i, x, w, j, c, n) {
    var xl = x & 16383,
      xh = x >> 14;
    while (--n >= 0) {
      var l = this[i] & 16383;
      var h = this[i++] >> 14;
      var m = xh * l + h * xl;
      l = xl * l + ((m & 16383) << 14) + w[j] + c;
      c = (l >> 28) + (m >> 14) + xh * h;
      w[j++] = l & 268435455;
    }
    return c;
  }
  if (j_lm && navigator.appName === 'Microsoft Internet Explorer') {
    BigInteger.prototype.am = am2;
    dbits = 30;
  } else if (j_lm && navigator.appName !== 'Netscape') {
    BigInteger.prototype.am = am1;
    dbits = 26;
  } else {
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = (1 << dbits) - 1;
  BigInteger.prototype.DV = 1 << dbits;
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2, BI_FP);
  BigInteger.prototype.F1 = BI_FP - dbits;
  BigInteger.prototype.F2 = 2 * dbits - BI_FP;
  var BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';
  var BI_RC = new Array;
  var rr, vv;
  rr = '0'.charCodeAt(0);
  for (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = 'a'.charCodeAt(0);
  for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = 'A'.charCodeAt(0);
  for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) {
    return BI_RM.charAt(n);
  }

  function intAt(s, i) {
    var c = BI_RC[s.charCodeAt(i)];
    return c == null ? -1 : c;
  }

  function bnpCopyTo(r) {
    for (var i = this.t - 1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  function bnpFromInt(x) {
    this.t = 1;
    this.s = x < 0 ? -1 : 0;
    if (x > 0) this[0] = x;
    else if (x < -1) this[0] = x + DV;
    else this.t = 0;
  }

  function nbv(i) {
    var r = nbi();
    r.fromInt(i);
    return r;
  }

  function bnpFromString(s, b) {
    var k;
    if (b === 16) k = 4;
    else if (b === 8) k = 3;
    else if (b === 256) k = 8;
    else if (b === 2) k = 1;
    else if (b === 32) k = 5;
    else if (b === 4) k = 2;
    else {
      this.fromRadix(s, b);
      return;
    }
    this.t = 0;
    this.s = 0;
    var i = s.length,
      mi = false,
      sh = 0;
    while (--i >= 0) {
      var x = k === 8 ? s[i] & 255 : intAt(s, i);
      if (x < 0) {
        if (s.charAt(i) === '-') mi = true;
        continue;
      }
      mi = false;
      if (sh === 0) this[this.t++] = x;
      else if (sh + k > this.DB) {
        this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;
        this[this.t++] = x >> this.DB - sh;
      } else this[this.t - 1] |= x << sh;
      sh += k;
      if (sh >= this.DB) sh -= this.DB;
    }
    if (k === 8 && (s[0] & 128) !== 0) {
      this.s = -1;
      if (sh > 0) this[this.t - 1] |= (1 << this.DB - sh) - 1 << sh;
    }
    this.clamp();
    if (mi) BigInteger.ZERO.subTo(this, this);
  }

  function bnpClamp() {
    var c = this.s & this.DM;
    while (this.t > 0 && this[this.t - 1] === c) --this.t;
  }

  function bnToString(b) {
    if (this.s < 0) return '-' + this.negate().toString(b);
    var k;
    if (b === 16) k = 4;
    else if (b === 8) k = 3;
    else if (b === 2) k = 1;
    else if (b === 32) k = 5;
    else if (b === 4) k = 2;
    else return this.toRadix(b);
    var km = (1 << k) - 1,
      d, m = false,
      r = '',
      i = this.t;
    var p = this.DB - i * this.DB % k;
    if (i-- > 0) {
      if (p < this.DB && (d = this[i] >> p) > 0) {
        m = true;
        r = int2char(d);
      }
      while (i >= 0) {
        if (p < k) {
          d = (this[i] & (1 << p) - 1) << k - p;
          d |= this[--i] >> (p += this.DB - k);
        } else {
          d = this[i] >> (p -= k) & km;
          if (p <= 0) {
            p += this.DB;
            --i;
          }
        }
        if (d > 0) m = true;
        if (m) r += int2char(d);
      }
    }
    return m ? r : "0";
  }

  function bnNegate() {
    var r = nbi();
    BigInteger.ZERO.subTo(this, r);
    return r;
  }

  function bnAbs() {
    return this.s < 0 ? this.negate() : this;
  }

  function bnCompareTo(a) {
    var r = this.s - a.s;
    if (r !== 0) return r;
    var i = this.t;
    r = i - a.t;
    if (r !== 0) return this.s < 0 ? -r : r;
    while (--i >= 0)
      if ((r = this[i] - a[i]) !== 0) return r;
    return 0;
  }

  function nbits(x) {
    var r = 1,
      t;
    if ((t = x >>> 16) !== 0) {
      x = t;
      r += 16;
    }
    if ((t = x >> 8) !== 0) {
      x = t;
      r += 8;
    }
    if ((t = x >> 4) !== 0) {
      x = t;
      r += 4;
    }
    if ((t = x >> 2) !== 0) {
      x = t;
      r += 2;
    }
    if ((t = x >> 1) !== 0) {
      x = t;
      r += 1;
    }
    return r;
  }

  function bnBitLength() {
    if (this.t <= 0) return 0;
    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);
  }

  function bnpDLShiftTo(n, r) {
    var i;
    for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i];
    for (i = n - 1; i >= 0; --i) r[i] = 0;
    r.t = this.t + n;
    r.s = this.s;
  }

  function bnpDRShiftTo(n, r) {
    for (var i = n; i < this.t; ++i) r[i - n] = this[i];
    r.t = Math.max(this.t - n, 0);
    r.s = this.s;
  }

  function bnpLShiftTo(n, r) {
    var bs = n % this.DB;
    var cbs = this.DB - bs;
    var bm = (1 << cbs) - 1;
    var ds = Math.floor(n / this.DB),
      c = this.s << bs & this.DM,
      i;
    for (i = this.t - 1; i >= 0; --i) {
      r[i + ds + 1] = this[i] >> cbs | c;
      c = (this[i] & bm) << bs;
    }
    for (i = ds - 1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t + ds + 1;
    r.s = this.s;
    r.clamp();
  }

  function bnpRShiftTo(n, r) {
    r.s = this.s;
    var ds = Math.floor(n / this.DB);
    if (ds >= this.t) {
      r.t = 0;
      return;
    }
    var bs = n % this.DB;
    var cbs = this.DB - bs;
    var bm = (1 << bs) - 1;
    r[0] = this[ds] >> bs;
    for (var i = ds + 1; i < this.t; ++i) {
      r[i - ds - 1] |= (this[i] & bm) << cbs;
      r[i - ds] = this[i] >> bs;
    }
    if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;
    r.t = this.t - ds;
    r.clamp();
  }

  function bnpSubTo(a, r) {
    var i = 0,
      c = 0,
      m = Math.min(a.t, this.t);
    while (i < m) {
      c += this[i] - a[i];
      r[i++] = c & this.DM;
      c >>= this.DB;
    }
    if (a.t < this.t) {
      c -= a.s;
      while (i < this.t) {
        c += this[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      c += this.s;
    } else {
      c += this.s;
      while (i < a.t) {
        c -= a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = c < 0 ? -1 : 0;
    if (c < -1) r[i++] = this.DV + c;
    else if (c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  function bnpMultiplyTo(a, r) {
    var x = this.abs(),
      y = a.abs();
    var i = x.t;
    r.t = i + y.t;
    while (--i >= 0) r[i] = 0;
    for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);
    r.s = 0;
    r.clamp();
    if (this.s !== a.s) BigInteger.ZERO.subTo(r, r);
  }

  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2 * x.t;
    while (--i >= 0) r[i] = 0;
    for (i = 0; i < x.t - 1; ++i) {
      var c = x.am(i, x[i], r, 2 * i, 0, 1);
      if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {
        r[i + x.t] -= x.DV;
        r[i + x.t + 1] = 1;
      }
    }
    if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);
    r.s = 0;
    r.clamp();
  }

  function bnpDivRemTo(m, q, r) {
    var pm = m.abs();
    if (pm.t <= 0) return;
    var pt = this.abs();
    if (pt.t < pm.t) {
      if (q != null) q.fromInt(0);
      if (r != null) this.copyTo(r);
      return;
    }
    if (r == null) r = nbi();
    var y = nbi(),
      ts = this.s,
      ms = m.s;
    var nsh = this.DB - nbits(pm[pm.t - 1]);
    if (nsh > 0) {
      pm.lShiftTo(nsh, y);
      pt.lShiftTo(nsh, r);
    } else {
      pm.copyTo(y);
      pt.copyTo(r);
    }
    var ys = y.t;
    var y0 = y[ys - 1];
    if (y0 === 0) return;
    var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);
    var d1 = this.FV / yt,
      d2 = (1 << this.F1) / yt,
      e = 1 << this.F2;
    var i = r.t,
      j = i - ys,
      t = q == null ? nbi() : q;
    y.dlShiftTo(j, t);
    if (r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t, r);
    }
    BigInteger.ONE.dlShiftTo(ys, t);
    t.subTo(y, y);
    while (y.t < ys) y[y.t++] = 0;
    while (--j >= 0) {
      var qd = r[--i] === y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);
      if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {
        y.dlShiftTo(j, t);
        r.subTo(t, r);
        while (r[i] < --qd) r.subTo(t, r);
      }
    }
    if (q != null) {
      r.drShiftTo(ys, q);
      if (ts !== ms) BigInteger.ZERO.subTo(q, q);
    }
    r.t = ys;
    r.clamp();
    if (nsh > 0) r.rShiftTo(nsh, r);
    if (ts < 0) BigInteger.ZERO.subTo(r, r);
  }

  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a, null, r);
    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);
    return r;
  }

  function Classic(m) {
    this.m = m;
  }

  function cConvert(x) {
    if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }

  function cRevert(x) {
    return x;
  }

  function cReduce(x) {
    x.divRemTo(this.m, null, x);
  }

  function cMulTo(x, y, r) {
    x.multiplyTo(y, r);
    this.reduce(r);
  }

  function cSqrTo(x, r) {
    x.squareTo(r);
    this.reduce(r);
  }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  function bnpInvDigit() {
    if (this.t < 1) return 0;
    var x = this[0];
    if ((x & 1) === 0) return 0;
    var y = x & 3;
    y = y * (2 - (x & 15) * y) & 15;
    y = y * (2 - (x & 255) * y) & 255;
    y = y * (2 - ((x & 65535) * y & 65535)) & 65535;
    y = y * (2 - x * y % this.DV) % this.DV;
    return y > 0 ? this.DV - y : -y;
  }

  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp & 32767;
    this.mph = this.mp >> 15;
    this.um = (1 << m.DB - 15) - 1;
    this.mt2 = 2 * m.t;
  }

  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t, r);
    r.divRemTo(this.m, null, r);
    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);
    return r;
  }

  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  function montReduce(x) {
    while (x.t <= this.mt2) x[x.t++] = 0;
    for (var i = 0; i < this.m.t; ++i) {
      var j = x[i] & 32767;
      var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;
      j = i + this.m.t;
      x[j] += this.m.am(0, u0, x, i, 0, this.m.t);
      while (x[j] >= x.DV) {
        x[j] -= x.DV;
        x[++j]++;
      }
    }
    x.clamp();
    x.drShiftTo(this.m.t, x);
    if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);
  }

  function montSqrTo(x, r) {
    x.squareTo(r);
    this.reduce(r);
  }

  function montMulTo(x, y, r) {
    x.multiplyTo(y, r);
    this.reduce(r);
  }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  function bnpIsEven() {
    return (this.t > 0 ? this[0] & 1 : this.s) === 0;
  }

  function bnpExp(e, z) {
    if (e > 4294967295 || e < 1) return BigInteger.ONE;
    var r = nbi(),
      r2 = nbi(),
      g = z.convert(this),
      i = nbits(e) - 1;
    g.copyTo(r);
    while (--i >= 0) {
      z.sqrTo(r, r2);
      if ((e & 1 << i) > 0) z.mulTo(r2, g, r);
      else {
        var t = r;
        r = r2;
        r2 = t;
      }
    }
    return z.revert(r);
  }

  function bnModPowInt(e, m) {
    var z;
    if (e < 256 || m.isEven()) z = new Classic(m);
    else z = new Montgomery(m);
    return this.exp(e, z);
  }
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  function bnpFromRadix(s, b) {
    this.fromInt(0);
    if (b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b, cs),
      mi = false,
      j = 0,
      w = 0;
    for (var i = 0; i < s.length; ++i) {
      var x = intAt(s, i);
      if (x < 0) {
        if (s.charAt(i) === '-' && this.signum() === 0) mi = true;
        continue;
      }
      w = b * w + x;
      if (++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w, 0);
        j = 0;
        w = 0;
      }
    }
    if (j > 0) {
      this.dMultiply(Math.pow(b, j));
      this.dAddOffset(w, 0);
    }
    if (mi) BigInteger.ZERO.subTo(this, this);
  }

  function bnpChunkSize(r) {
    return Math.floor(Math.LN2 * this.DB / Math.log(r));
  }

  function bnSigNum() {
    if (this.s < 0) return -1;
    else if (this.t <= 0 || this.t === 1 && this[0] <= 0) return 0;
    else return 1;
  }

  function bnpDMultiply(n) {
    this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);
    ++this.t;
    this.clamp();
  }

  function bnpDAddOffset(n, w) {
    if (n === 0) return;
    while (this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while (this[w] >= this.DV) {
      this[w] -= this.DV;
      if (++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  function bnpToRadix(b) {
    if (b == null) b = 10;
    if (this.signum() === 0 || b < 2 || b > 36) return '0';
    var cs = this.chunkSize(b);
    var a = Math.pow(b, cs);
    var d = nbv(a),
      y = nbi(),
      z = nbi(),
      r = '';
    this.divRemTo(d, y, z);
    while (y.signum() > 0) {
      r = (a + z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d, y, z);
    }
    return z.intValue().toString(b) + r;
  }

  function bnIntValue() {
    if (this.s < 0) {
      if (this.t === 1) return this[0] - this.DV;
      else if (this.t === 0) return -1;
    } else if (this.t === 1) return this[0];
    else if (this.t === 0) return 0;
    return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];
  }

  function bnpAddTo(a, r) {
    var i = 0,
      c = 0,
      m = Math.min(a.t, this.t);
    while (i < m) {
      c += this[i] + a[i];
      r[i++] = c & this.DM;
      c >>= this.DB;
    }
    if (a.t < this.t) {
      c += a.s;
      while (i < this.t) {
        c += this[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      c += this.s;
    } else {
      c += this.s;
      while (i < a.t) {
        c += a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = c < 0 ? -1 : 0;
    if (c > 0) r[i++] = c;
    else if (c < -1) r[i++] = this.DV + c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  var Wrapper = {
    abs: (function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr >> 2] = ret.low_;
      HEAP32[tempDoublePtr + 4 >> 2] = ret.high_;
    }),
    ensureTemps: (function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger;
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger;
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger;
      Wrapper.temp2 = new BigInteger;
    }),
    lh2bignum: (function(l, h) {
      var a = new BigInteger;
      a.fromString(h.toString(), 10);
      var b = new BigInteger;
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger;
      c.fromString(l.toString(), 10);
      var d = new BigInteger;
      c.addTo(b, d);
      return d;
    }),
    stringify: (function(l, h, unsigned) {
      var ret = (new goog.math.Long(l, h)).toString();
      if (unsigned && ret[0] === '-') {
        Wrapper.ensureTemps();
        var bignum = new BigInteger;
        bignum.fromString(ret, 10);
        ret = new BigInteger;
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    }),
    fromString: (function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger;
      bignum.fromString(str, base);
      var bigmin = new BigInteger;
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger;
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger;
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString());
      HEAP32[tempDoublePtr >> 2] = ret.low_;
      HEAP32[tempDoublePtr + 4 >> 2] = ret.high_;
      if (error) throw "range error";
    })
  };
  return Wrapper;
})();
if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, (function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }), (function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    }));
  }
}

function ExitStatus(status) {
  this.name = 'ExitStatus';
  this.message = 'Program terminated with exit(' + status + ')';
  this.status = status;
}
ExitStatus.prototype = new Error;
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller;
};
Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies === 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length === 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  ensureInitRuntime();
  var argc = args.length + 1;

  function pad() {
    for (var i = 0; i < 4 - 1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL)];
  pad();
  for (var i = 0; i < argc - 1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  initialStackTop = STACKTOP;
  try {
    var ret = Module['_main'](argc, argv, 0);
    exit(ret);
  } catch (e) {
    if (e instanceof ExitStatus) {
      return;
    } else if (e === 'SimulateInfiniteLoop') {
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
};

function run(args) {
  args = args || Module['arguments'];
  if (preloadStartTime === null) preloadStartTime = Date.now();
  if (runDependencies > 0) {
    return;
  }
  preRun();
  if (runDependencies > 0) return;
  if (Module['calledRun']) return;

  function doRun() {
    if (Module['calledRun']) return;
    Module['calledRun'] = true;
    if (ABORT) return;
    ensureInitRuntime();
    preMain();
    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }
    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();
    if (Module['_main'] && shouldRunNow) Module['callMain'](args);
    postRun();
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout((function() {
      setTimeout((function() {
        Module['setStatus']('');
      }), 1);
      doRun();
    }), 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  if (Module['noExitRuntime']) {
    return;
  }
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  exitRuntime();
  if (ENVIRONMENT_IS_NODE) {
    process['stdout']['once']('drain', (function() {
      process['exit'](status);
    }));
    console.log(' ');
    setTimeout((function() {
      process['exit'](status);
    }), 500);
  } else if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }
  ABORT = true;
  EXITSTATUS = 1;
  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';
  throw 'abort() at ' + stackTrace() + extra;
}
Module['abort'] = Module.abort = abort;
if (Module['preInit']) {
  if (typeof Module['preInit'] === 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

run();

module.exports = Module;
